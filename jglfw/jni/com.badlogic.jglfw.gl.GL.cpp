#include <com.badlogic.jglfw.gl.GL.h>

//@line:4878

	#include <GL/glfw3.h>
	#include "GL/glext.h"
	
//@line:4883

	PFNGLBLENDCOLORPROC ext_glBlendColor = (PFNGLBLENDCOLORPROC)0xdeadbeef;
	PFNGLBLENDEQUATIONPROC ext_glBlendEquation = (PFNGLBLENDEQUATIONPROC)0xdeadbeef;
	PFNGLDRAWRANGEELEMENTSPROC ext_glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC)0xdeadbeef;
	PFNGLTEXIMAGE3DPROC ext_glTexImage3D = (PFNGLTEXIMAGE3DPROC)0xdeadbeef;
	PFNGLTEXSUBIMAGE3DPROC ext_glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)0xdeadbeef;
	PFNGLCOPYTEXSUBIMAGE3DPROC ext_glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC)0xdeadbeef;
	PFNGLCOLORTABLEPROC ext_glColorTable = (PFNGLCOLORTABLEPROC)0xdeadbeef;
	PFNGLCOLORTABLEPARAMETERFVPROC ext_glColorTableParameterfv = (PFNGLCOLORTABLEPARAMETERFVPROC)0xdeadbeef;
	PFNGLCOLORTABLEPARAMETERIVPROC ext_glColorTableParameteriv = (PFNGLCOLORTABLEPARAMETERIVPROC)0xdeadbeef;
	PFNGLCOPYCOLORTABLEPROC ext_glCopyColorTable = (PFNGLCOPYCOLORTABLEPROC)0xdeadbeef;
	PFNGLGETCOLORTABLEPROC ext_glGetColorTable = (PFNGLGETCOLORTABLEPROC)0xdeadbeef;
	PFNGLGETCOLORTABLEPARAMETERFVPROC ext_glGetColorTableParameterfv = (PFNGLGETCOLORTABLEPARAMETERFVPROC)0xdeadbeef;
	PFNGLGETCOLORTABLEPARAMETERIVPROC ext_glGetColorTableParameteriv = (PFNGLGETCOLORTABLEPARAMETERIVPROC)0xdeadbeef;
	PFNGLCOLORSUBTABLEPROC ext_glColorSubTable = (PFNGLCOLORSUBTABLEPROC)0xdeadbeef;
	PFNGLCOPYCOLORSUBTABLEPROC ext_glCopyColorSubTable = (PFNGLCOPYCOLORSUBTABLEPROC)0xdeadbeef;
	PFNGLCONVOLUTIONFILTER1DPROC ext_glConvolutionFilter1D = (PFNGLCONVOLUTIONFILTER1DPROC)0xdeadbeef;
	PFNGLCONVOLUTIONFILTER2DPROC ext_glConvolutionFilter2D = (PFNGLCONVOLUTIONFILTER2DPROC)0xdeadbeef;
	PFNGLCONVOLUTIONPARAMETERFPROC ext_glConvolutionParameterf = (PFNGLCONVOLUTIONPARAMETERFPROC)0xdeadbeef;
	PFNGLCONVOLUTIONPARAMETERFVPROC ext_glConvolutionParameterfv = (PFNGLCONVOLUTIONPARAMETERFVPROC)0xdeadbeef;
	PFNGLCONVOLUTIONPARAMETERIPROC ext_glConvolutionParameteri = (PFNGLCONVOLUTIONPARAMETERIPROC)0xdeadbeef;
	PFNGLCONVOLUTIONPARAMETERIVPROC ext_glConvolutionParameteriv = (PFNGLCONVOLUTIONPARAMETERIVPROC)0xdeadbeef;
	PFNGLCOPYCONVOLUTIONFILTER1DPROC ext_glCopyConvolutionFilter1D = (PFNGLCOPYCONVOLUTIONFILTER1DPROC)0xdeadbeef;
	PFNGLCOPYCONVOLUTIONFILTER2DPROC ext_glCopyConvolutionFilter2D = (PFNGLCOPYCONVOLUTIONFILTER2DPROC)0xdeadbeef;
	PFNGLGETCONVOLUTIONFILTERPROC ext_glGetConvolutionFilter = (PFNGLGETCONVOLUTIONFILTERPROC)0xdeadbeef;
	PFNGLGETCONVOLUTIONPARAMETERFVPROC ext_glGetConvolutionParameterfv = (PFNGLGETCONVOLUTIONPARAMETERFVPROC)0xdeadbeef;
	PFNGLGETCONVOLUTIONPARAMETERIVPROC ext_glGetConvolutionParameteriv = (PFNGLGETCONVOLUTIONPARAMETERIVPROC)0xdeadbeef;
	PFNGLGETSEPARABLEFILTERPROC ext_glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC)0xdeadbeef;
	PFNGLSEPARABLEFILTER2DPROC ext_glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC)0xdeadbeef;
	PFNGLGETHISTOGRAMPROC ext_glGetHistogram = (PFNGLGETHISTOGRAMPROC)0xdeadbeef;
	PFNGLGETHISTOGRAMPARAMETERFVPROC ext_glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC)0xdeadbeef;
	PFNGLGETHISTOGRAMPARAMETERIVPROC ext_glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC)0xdeadbeef;
	PFNGLGETMINMAXPROC ext_glGetMinmax = (PFNGLGETMINMAXPROC)0xdeadbeef;
	PFNGLGETMINMAXPARAMETERFVPROC ext_glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC)0xdeadbeef;
	PFNGLGETMINMAXPARAMETERIVPROC ext_glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC)0xdeadbeef;
	PFNGLHISTOGRAMPROC ext_glHistogram = (PFNGLHISTOGRAMPROC)0xdeadbeef;
	PFNGLMINMAXPROC ext_glMinmax = (PFNGLMINMAXPROC)0xdeadbeef;
	PFNGLRESETHISTOGRAMPROC ext_glResetHistogram = (PFNGLRESETHISTOGRAMPROC)0xdeadbeef;
	PFNGLRESETMINMAXPROC ext_glResetMinmax = (PFNGLRESETMINMAXPROC)0xdeadbeef;
	PFNGLACTIVETEXTUREPROC ext_glActiveTexture = (PFNGLACTIVETEXTUREPROC)0xdeadbeef;
	PFNGLSAMPLECOVERAGEPROC ext_glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXIMAGE3DPROC ext_glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXIMAGE2DPROC ext_glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXIMAGE1DPROC ext_glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC ext_glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC ext_glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC ext_glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)0xdeadbeef;
	PFNGLGETCOMPRESSEDTEXIMAGEPROC ext_glGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC)0xdeadbeef;
	PFNGLCLIENTACTIVETEXTUREPROC ext_glClientActiveTexture = (PFNGLCLIENTACTIVETEXTUREPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1DPROC ext_glMultiTexCoord1d = (PFNGLMULTITEXCOORD1DPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1DVPROC ext_glMultiTexCoord1dv = (PFNGLMULTITEXCOORD1DVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1FPROC ext_glMultiTexCoord1f = (PFNGLMULTITEXCOORD1FPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1FVPROC ext_glMultiTexCoord1fv = (PFNGLMULTITEXCOORD1FVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1IPROC ext_glMultiTexCoord1i = (PFNGLMULTITEXCOORD1IPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1IVPROC ext_glMultiTexCoord1iv = (PFNGLMULTITEXCOORD1IVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1SPROC ext_glMultiTexCoord1s = (PFNGLMULTITEXCOORD1SPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1SVPROC ext_glMultiTexCoord1sv = (PFNGLMULTITEXCOORD1SVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2DPROC ext_glMultiTexCoord2d = (PFNGLMULTITEXCOORD2DPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2DVPROC ext_glMultiTexCoord2dv = (PFNGLMULTITEXCOORD2DVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2FPROC ext_glMultiTexCoord2f = (PFNGLMULTITEXCOORD2FPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2FVPROC ext_glMultiTexCoord2fv = (PFNGLMULTITEXCOORD2FVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2IPROC ext_glMultiTexCoord2i = (PFNGLMULTITEXCOORD2IPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2IVPROC ext_glMultiTexCoord2iv = (PFNGLMULTITEXCOORD2IVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2SPROC ext_glMultiTexCoord2s = (PFNGLMULTITEXCOORD2SPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2SVPROC ext_glMultiTexCoord2sv = (PFNGLMULTITEXCOORD2SVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3DPROC ext_glMultiTexCoord3d = (PFNGLMULTITEXCOORD3DPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3DVPROC ext_glMultiTexCoord3dv = (PFNGLMULTITEXCOORD3DVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3FPROC ext_glMultiTexCoord3f = (PFNGLMULTITEXCOORD3FPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3FVPROC ext_glMultiTexCoord3fv = (PFNGLMULTITEXCOORD3FVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3IPROC ext_glMultiTexCoord3i = (PFNGLMULTITEXCOORD3IPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3IVPROC ext_glMultiTexCoord3iv = (PFNGLMULTITEXCOORD3IVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3SPROC ext_glMultiTexCoord3s = (PFNGLMULTITEXCOORD3SPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3SVPROC ext_glMultiTexCoord3sv = (PFNGLMULTITEXCOORD3SVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4DPROC ext_glMultiTexCoord4d = (PFNGLMULTITEXCOORD4DPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4DVPROC ext_glMultiTexCoord4dv = (PFNGLMULTITEXCOORD4DVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4FPROC ext_glMultiTexCoord4f = (PFNGLMULTITEXCOORD4FPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4FVPROC ext_glMultiTexCoord4fv = (PFNGLMULTITEXCOORD4FVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4IPROC ext_glMultiTexCoord4i = (PFNGLMULTITEXCOORD4IPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4IVPROC ext_glMultiTexCoord4iv = (PFNGLMULTITEXCOORD4IVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4SPROC ext_glMultiTexCoord4s = (PFNGLMULTITEXCOORD4SPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4SVPROC ext_glMultiTexCoord4sv = (PFNGLMULTITEXCOORD4SVPROC)0xdeadbeef;
	PFNGLLOADTRANSPOSEMATRIXFPROC ext_glLoadTransposeMatrixf = (PFNGLLOADTRANSPOSEMATRIXFPROC)0xdeadbeef;
	PFNGLLOADTRANSPOSEMATRIXDPROC ext_glLoadTransposeMatrixd = (PFNGLLOADTRANSPOSEMATRIXDPROC)0xdeadbeef;
	PFNGLMULTTRANSPOSEMATRIXFPROC ext_glMultTransposeMatrixf = (PFNGLMULTTRANSPOSEMATRIXFPROC)0xdeadbeef;
	PFNGLMULTTRANSPOSEMATRIXDPROC ext_glMultTransposeMatrixd = (PFNGLMULTTRANSPOSEMATRIXDPROC)0xdeadbeef;
	PFNGLBLENDFUNCSEPARATEPROC ext_glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC)0xdeadbeef;
	PFNGLMULTIDRAWARRAYSPROC ext_glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)0xdeadbeef;
	PFNGLMULTIDRAWELEMENTSPROC ext_glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERFPROC ext_glPointParameterf = (PFNGLPOINTPARAMETERFPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERFVPROC ext_glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERIPROC ext_glPointParameteri = (PFNGLPOINTPARAMETERIPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERIVPROC ext_glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC)0xdeadbeef;
	PFNGLFOGCOORDFPROC ext_glFogCoordf = (PFNGLFOGCOORDFPROC)0xdeadbeef;
	PFNGLFOGCOORDFVPROC ext_glFogCoordfv = (PFNGLFOGCOORDFVPROC)0xdeadbeef;
	PFNGLFOGCOORDDPROC ext_glFogCoordd = (PFNGLFOGCOORDDPROC)0xdeadbeef;
	PFNGLFOGCOORDDVPROC ext_glFogCoorddv = (PFNGLFOGCOORDDVPROC)0xdeadbeef;
	PFNGLFOGCOORDPOINTERPROC ext_glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3BPROC ext_glSecondaryColor3b = (PFNGLSECONDARYCOLOR3BPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3BVPROC ext_glSecondaryColor3bv = (PFNGLSECONDARYCOLOR3BVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3DPROC ext_glSecondaryColor3d = (PFNGLSECONDARYCOLOR3DPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3DVPROC ext_glSecondaryColor3dv = (PFNGLSECONDARYCOLOR3DVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3FPROC ext_glSecondaryColor3f = (PFNGLSECONDARYCOLOR3FPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3FVPROC ext_glSecondaryColor3fv = (PFNGLSECONDARYCOLOR3FVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3IPROC ext_glSecondaryColor3i = (PFNGLSECONDARYCOLOR3IPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3IVPROC ext_glSecondaryColor3iv = (PFNGLSECONDARYCOLOR3IVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3SPROC ext_glSecondaryColor3s = (PFNGLSECONDARYCOLOR3SPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3SVPROC ext_glSecondaryColor3sv = (PFNGLSECONDARYCOLOR3SVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3UBPROC ext_glSecondaryColor3ub = (PFNGLSECONDARYCOLOR3UBPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3UBVPROC ext_glSecondaryColor3ubv = (PFNGLSECONDARYCOLOR3UBVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3UIPROC ext_glSecondaryColor3ui = (PFNGLSECONDARYCOLOR3UIPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3UIVPROC ext_glSecondaryColor3uiv = (PFNGLSECONDARYCOLOR3UIVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3USPROC ext_glSecondaryColor3us = (PFNGLSECONDARYCOLOR3USPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3USVPROC ext_glSecondaryColor3usv = (PFNGLSECONDARYCOLOR3USVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLORPOINTERPROC ext_glSecondaryColorPointer = (PFNGLSECONDARYCOLORPOINTERPROC)0xdeadbeef;
	PFNGLWINDOWPOS2DPROC ext_glWindowPos2d = (PFNGLWINDOWPOS2DPROC)0xdeadbeef;
	PFNGLWINDOWPOS2DVPROC ext_glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC)0xdeadbeef;
	PFNGLWINDOWPOS2FPROC ext_glWindowPos2f = (PFNGLWINDOWPOS2FPROC)0xdeadbeef;
	PFNGLWINDOWPOS2FVPROC ext_glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC)0xdeadbeef;
	PFNGLWINDOWPOS2IPROC ext_glWindowPos2i = (PFNGLWINDOWPOS2IPROC)0xdeadbeef;
	PFNGLWINDOWPOS2IVPROC ext_glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC)0xdeadbeef;
	PFNGLWINDOWPOS2SPROC ext_glWindowPos2s = (PFNGLWINDOWPOS2SPROC)0xdeadbeef;
	PFNGLWINDOWPOS2SVPROC ext_glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC)0xdeadbeef;
	PFNGLWINDOWPOS3DPROC ext_glWindowPos3d = (PFNGLWINDOWPOS3DPROC)0xdeadbeef;
	PFNGLWINDOWPOS3DVPROC ext_glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC)0xdeadbeef;
	PFNGLWINDOWPOS3FPROC ext_glWindowPos3f = (PFNGLWINDOWPOS3FPROC)0xdeadbeef;
	PFNGLWINDOWPOS3FVPROC ext_glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC)0xdeadbeef;
	PFNGLWINDOWPOS3IPROC ext_glWindowPos3i = (PFNGLWINDOWPOS3IPROC)0xdeadbeef;
	PFNGLWINDOWPOS3IVPROC ext_glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC)0xdeadbeef;
	PFNGLWINDOWPOS3SPROC ext_glWindowPos3s = (PFNGLWINDOWPOS3SPROC)0xdeadbeef;
	PFNGLWINDOWPOS3SVPROC ext_glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC)0xdeadbeef;
	PFNGLGENQUERIESPROC ext_glGenQueries = (PFNGLGENQUERIESPROC)0xdeadbeef;
	PFNGLDELETEQUERIESPROC ext_glDeleteQueries = (PFNGLDELETEQUERIESPROC)0xdeadbeef;
	PFNGLISQUERYPROC ext_glIsQuery = (PFNGLISQUERYPROC)0xdeadbeef;
	PFNGLBEGINQUERYPROC ext_glBeginQuery = (PFNGLBEGINQUERYPROC)0xdeadbeef;
	PFNGLENDQUERYPROC ext_glEndQuery = (PFNGLENDQUERYPROC)0xdeadbeef;
	PFNGLGETQUERYIVPROC ext_glGetQueryiv = (PFNGLGETQUERYIVPROC)0xdeadbeef;
	PFNGLGETQUERYOBJECTIVPROC ext_glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC)0xdeadbeef;
	PFNGLGETQUERYOBJECTUIVPROC ext_glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC)0xdeadbeef;
	PFNGLBINDBUFFERPROC ext_glBindBuffer = (PFNGLBINDBUFFERPROC)0xdeadbeef;
	PFNGLDELETEBUFFERSPROC ext_glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)0xdeadbeef;
	PFNGLGENBUFFERSPROC ext_glGenBuffers = (PFNGLGENBUFFERSPROC)0xdeadbeef;
	PFNGLISBUFFERPROC ext_glIsBuffer = (PFNGLISBUFFERPROC)0xdeadbeef;
	PFNGLBUFFERDATAPROC ext_glBufferData = (PFNGLBUFFERDATAPROC)0xdeadbeef;
	PFNGLBUFFERSUBDATAPROC ext_glBufferSubData = (PFNGLBUFFERSUBDATAPROC)0xdeadbeef;
	PFNGLGETBUFFERSUBDATAPROC ext_glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC)0xdeadbeef;
	PFNGLMAPBUFFERPROC ext_glMapBuffer = (PFNGLMAPBUFFERPROC)0xdeadbeef;
	PFNGLUNMAPBUFFERPROC ext_glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)0xdeadbeef;
	PFNGLGETBUFFERPARAMETERIVPROC ext_glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC)0xdeadbeef;
	PFNGLGETBUFFERPOINTERVPROC ext_glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC)0xdeadbeef;
	PFNGLBLENDEQUATIONSEPARATEPROC ext_glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC)0xdeadbeef;
	PFNGLDRAWBUFFERSPROC ext_glDrawBuffers = (PFNGLDRAWBUFFERSPROC)0xdeadbeef;
	PFNGLSTENCILOPSEPARATEPROC ext_glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC)0xdeadbeef;
	PFNGLSTENCILFUNCSEPARATEPROC ext_glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC)0xdeadbeef;
	PFNGLSTENCILMASKSEPARATEPROC ext_glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC)0xdeadbeef;
	PFNGLATTACHSHADERPROC ext_glAttachShader = (PFNGLATTACHSHADERPROC)0xdeadbeef;
	PFNGLBINDATTRIBLOCATIONPROC ext_glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC)0xdeadbeef;
	PFNGLCOMPILESHADERPROC ext_glCompileShader = (PFNGLCOMPILESHADERPROC)0xdeadbeef;
	PFNGLCREATEPROGRAMPROC ext_glCreateProgram = (PFNGLCREATEPROGRAMPROC)0xdeadbeef;
	PFNGLCREATESHADERPROC ext_glCreateShader = (PFNGLCREATESHADERPROC)0xdeadbeef;
	PFNGLDELETEPROGRAMPROC ext_glDeleteProgram = (PFNGLDELETEPROGRAMPROC)0xdeadbeef;
	PFNGLDELETESHADERPROC ext_glDeleteShader = (PFNGLDELETESHADERPROC)0xdeadbeef;
	PFNGLDETACHSHADERPROC ext_glDetachShader = (PFNGLDETACHSHADERPROC)0xdeadbeef;
	PFNGLDISABLEVERTEXATTRIBARRAYPROC ext_glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)0xdeadbeef;
	PFNGLENABLEVERTEXATTRIBARRAYPROC ext_glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC)0xdeadbeef;
	PFNGLGETACTIVEATTRIBPROC ext_glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)0xdeadbeef;
	PFNGLGETACTIVEUNIFORMPROC ext_glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC)0xdeadbeef;
	PFNGLGETATTACHEDSHADERSPROC ext_glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)0xdeadbeef;
	PFNGLGETATTRIBLOCATIONPROC ext_glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)0xdeadbeef;
	PFNGLGETPROGRAMIVPROC ext_glGetProgramiv = (PFNGLGETPROGRAMIVPROC)0xdeadbeef;
	PFNGLGETPROGRAMINFOLOGPROC ext_glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)0xdeadbeef;
	PFNGLGETSHADERIVPROC ext_glGetShaderiv = (PFNGLGETSHADERIVPROC)0xdeadbeef;
	PFNGLGETSHADERINFOLOGPROC ext_glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)0xdeadbeef;
	PFNGLGETSHADERSOURCEPROC ext_glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)0xdeadbeef;
	PFNGLGETUNIFORMLOCATIONPROC ext_glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC)0xdeadbeef;
	PFNGLGETUNIFORMFVPROC ext_glGetUniformfv = (PFNGLGETUNIFORMFVPROC)0xdeadbeef;
	PFNGLGETUNIFORMIVPROC ext_glGetUniformiv = (PFNGLGETUNIFORMIVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBDVPROC ext_glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBFVPROC ext_glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBIVPROC ext_glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBPOINTERVPROC ext_glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC)0xdeadbeef;
	PFNGLISPROGRAMPROC ext_glIsProgram = (PFNGLISPROGRAMPROC)0xdeadbeef;
	PFNGLISSHADERPROC ext_glIsShader = (PFNGLISSHADERPROC)0xdeadbeef;
	PFNGLLINKPROGRAMPROC ext_glLinkProgram = (PFNGLLINKPROGRAMPROC)0xdeadbeef;
	PFNGLSHADERSOURCEPROC ext_glShaderSource = (PFNGLSHADERSOURCEPROC)0xdeadbeef;
	PFNGLUSEPROGRAMPROC ext_glUseProgram = (PFNGLUSEPROGRAMPROC)0xdeadbeef;
	PFNGLUNIFORM1FPROC ext_glUniform1f = (PFNGLUNIFORM1FPROC)0xdeadbeef;
	PFNGLUNIFORM2FPROC ext_glUniform2f = (PFNGLUNIFORM2FPROC)0xdeadbeef;
	PFNGLUNIFORM3FPROC ext_glUniform3f = (PFNGLUNIFORM3FPROC)0xdeadbeef;
	PFNGLUNIFORM4FPROC ext_glUniform4f = (PFNGLUNIFORM4FPROC)0xdeadbeef;
	PFNGLUNIFORM1IPROC ext_glUniform1i = (PFNGLUNIFORM1IPROC)0xdeadbeef;
	PFNGLUNIFORM2IPROC ext_glUniform2i = (PFNGLUNIFORM2IPROC)0xdeadbeef;
	PFNGLUNIFORM3IPROC ext_glUniform3i = (PFNGLUNIFORM3IPROC)0xdeadbeef;
	PFNGLUNIFORM4IPROC ext_glUniform4i = (PFNGLUNIFORM4IPROC)0xdeadbeef;
	PFNGLUNIFORM1FVPROC ext_glUniform1fv = (PFNGLUNIFORM1FVPROC)0xdeadbeef;
	PFNGLUNIFORM2FVPROC ext_glUniform2fv = (PFNGLUNIFORM2FVPROC)0xdeadbeef;
	PFNGLUNIFORM3FVPROC ext_glUniform3fv = (PFNGLUNIFORM3FVPROC)0xdeadbeef;
	PFNGLUNIFORM4FVPROC ext_glUniform4fv = (PFNGLUNIFORM4FVPROC)0xdeadbeef;
	PFNGLUNIFORM1IVPROC ext_glUniform1iv = (PFNGLUNIFORM1IVPROC)0xdeadbeef;
	PFNGLUNIFORM2IVPROC ext_glUniform2iv = (PFNGLUNIFORM2IVPROC)0xdeadbeef;
	PFNGLUNIFORM3IVPROC ext_glUniform3iv = (PFNGLUNIFORM3IVPROC)0xdeadbeef;
	PFNGLUNIFORM4IVPROC ext_glUniform4iv = (PFNGLUNIFORM4IVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX2FVPROC ext_glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX3FVPROC ext_glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX4FVPROC ext_glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)0xdeadbeef;
	PFNGLVALIDATEPROGRAMPROC ext_glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1DPROC ext_glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1DVPROC ext_glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1FPROC ext_glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1FVPROC ext_glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1SPROC ext_glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1SVPROC ext_glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2DPROC ext_glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2DVPROC ext_glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2FPROC ext_glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2FVPROC ext_glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2SPROC ext_glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2SVPROC ext_glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3DPROC ext_glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3DVPROC ext_glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3FPROC ext_glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3FVPROC ext_glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3SPROC ext_glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3SVPROC ext_glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NBVPROC ext_glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NIVPROC ext_glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NSVPROC ext_glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NUBPROC ext_glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NUBVPROC ext_glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NUIVPROC ext_glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NUSVPROC ext_glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4BVPROC ext_glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4DPROC ext_glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4DVPROC ext_glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4FPROC ext_glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4FVPROC ext_glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4IVPROC ext_glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4SPROC ext_glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4SVPROC ext_glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4UBVPROC ext_glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4UIVPROC ext_glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4USVPROC ext_glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBPOINTERPROC ext_glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX2X3FVPROC ext_glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX3X2FVPROC ext_glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX2X4FVPROC ext_glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX4X2FVPROC ext_glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX3X4FVPROC ext_glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX4X3FVPROC ext_glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC)0xdeadbeef;
	PFNGLCOLORMASKIPROC ext_glColorMaski = (PFNGLCOLORMASKIPROC)0xdeadbeef;
	PFNGLENABLEIPROC ext_glEnablei = (PFNGLENABLEIPROC)0xdeadbeef;
	PFNGLDISABLEIPROC ext_glDisablei = (PFNGLDISABLEIPROC)0xdeadbeef;
	PFNGLISENABLEDIPROC ext_glIsEnabledi = (PFNGLISENABLEDIPROC)0xdeadbeef;
	PFNGLBEGINTRANSFORMFEEDBACKPROC ext_glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC)0xdeadbeef;
	PFNGLENDTRANSFORMFEEDBACKPROC ext_glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC)0xdeadbeef;
	PFNGLBINDBUFFERRANGEPROC ext_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)0xdeadbeef;
	PFNGLBINDBUFFERBASEPROC ext_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)0xdeadbeef;
	PFNGLTRANSFORMFEEDBACKVARYINGSPROC ext_glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)0xdeadbeef;
	PFNGLGETTRANSFORMFEEDBACKVARYINGPROC ext_glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)0xdeadbeef;
	PFNGLCLAMPCOLORPROC ext_glClampColor = (PFNGLCLAMPCOLORPROC)0xdeadbeef;
	PFNGLBEGINCONDITIONALRENDERPROC ext_glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC)0xdeadbeef;
	PFNGLENDCONDITIONALRENDERPROC ext_glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBIPOINTERPROC ext_glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBIIVPROC ext_glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBIUIVPROC ext_glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI1IPROC ext_glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI2IPROC ext_glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI3IPROC ext_glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4IPROC ext_glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI1UIPROC ext_glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI2UIPROC ext_glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI3UIPROC ext_glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4UIPROC ext_glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI1IVPROC ext_glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI2IVPROC ext_glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI3IVPROC ext_glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4IVPROC ext_glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI1UIVPROC ext_glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI2UIVPROC ext_glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI3UIVPROC ext_glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4UIVPROC ext_glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4BVPROC ext_glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4SVPROC ext_glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4UBVPROC ext_glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4USVPROC ext_glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC)0xdeadbeef;
	PFNGLGETUNIFORMUIVPROC ext_glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)0xdeadbeef;
	PFNGLBINDFRAGDATALOCATIONPROC ext_glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC)0xdeadbeef;
	PFNGLGETFRAGDATALOCATIONPROC ext_glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC)0xdeadbeef;
	PFNGLUNIFORM1UIPROC ext_glUniform1ui = (PFNGLUNIFORM1UIPROC)0xdeadbeef;
	PFNGLUNIFORM2UIPROC ext_glUniform2ui = (PFNGLUNIFORM2UIPROC)0xdeadbeef;
	PFNGLUNIFORM3UIPROC ext_glUniform3ui = (PFNGLUNIFORM3UIPROC)0xdeadbeef;
	PFNGLUNIFORM4UIPROC ext_glUniform4ui = (PFNGLUNIFORM4UIPROC)0xdeadbeef;
	PFNGLUNIFORM1UIVPROC ext_glUniform1uiv = (PFNGLUNIFORM1UIVPROC)0xdeadbeef;
	PFNGLUNIFORM2UIVPROC ext_glUniform2uiv = (PFNGLUNIFORM2UIVPROC)0xdeadbeef;
	PFNGLUNIFORM3UIVPROC ext_glUniform3uiv = (PFNGLUNIFORM3UIVPROC)0xdeadbeef;
	PFNGLUNIFORM4UIVPROC ext_glUniform4uiv = (PFNGLUNIFORM4UIVPROC)0xdeadbeef;
	PFNGLTEXPARAMETERIIVPROC ext_glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)0xdeadbeef;
	PFNGLTEXPARAMETERIUIVPROC ext_glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC)0xdeadbeef;
	PFNGLGETTEXPARAMETERIIVPROC ext_glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC)0xdeadbeef;
	PFNGLGETTEXPARAMETERIUIVPROC ext_glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC)0xdeadbeef;
	PFNGLCLEARBUFFERIVPROC ext_glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)0xdeadbeef;
	PFNGLCLEARBUFFERUIVPROC ext_glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)0xdeadbeef;
	PFNGLCLEARBUFFERFVPROC ext_glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)0xdeadbeef;
	PFNGLCLEARBUFFERFIPROC ext_glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)0xdeadbeef;
	PFNGLGETSTRINGIPROC ext_glGetStringi = (PFNGLGETSTRINGIPROC)0xdeadbeef;
	PFNGLDRAWARRAYSINSTANCEDPROC ext_glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC)0xdeadbeef;
	PFNGLDRAWELEMENTSINSTANCEDPROC ext_glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC)0xdeadbeef;
	PFNGLTEXBUFFERPROC ext_glTexBuffer = (PFNGLTEXBUFFERPROC)0xdeadbeef;
	PFNGLPRIMITIVERESTARTINDEXPROC ext_glPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC)0xdeadbeef;
	PFNGLGETBUFFERPARAMETERI64VPROC ext_glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTUREPROC ext_glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBDIVISORPROC ext_glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC)0xdeadbeef;
	PFNGLMINSAMPLESHADINGPROC ext_glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)0xdeadbeef;
	PFNGLBLENDEQUATIONIPROC ext_glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)0xdeadbeef;
	PFNGLBLENDEQUATIONSEPARATEIPROC ext_glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC)0xdeadbeef;
	PFNGLBLENDFUNCIPROC ext_glBlendFunci = (PFNGLBLENDFUNCIPROC)0xdeadbeef;
	PFNGLBLENDFUNCSEPARATEIPROC ext_glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)0xdeadbeef;
	PFNGLACTIVETEXTUREARBPROC ext_glActiveTextureARB = (PFNGLACTIVETEXTUREARBPROC)0xdeadbeef;
	PFNGLCLIENTACTIVETEXTUREARBPROC ext_glClientActiveTextureARB = (PFNGLCLIENTACTIVETEXTUREARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1DARBPROC ext_glMultiTexCoord1dARB = (PFNGLMULTITEXCOORD1DARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1DVARBPROC ext_glMultiTexCoord1dvARB = (PFNGLMULTITEXCOORD1DVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1FARBPROC ext_glMultiTexCoord1fARB = (PFNGLMULTITEXCOORD1FARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1FVARBPROC ext_glMultiTexCoord1fvARB = (PFNGLMULTITEXCOORD1FVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1IARBPROC ext_glMultiTexCoord1iARB = (PFNGLMULTITEXCOORD1IARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1IVARBPROC ext_glMultiTexCoord1ivARB = (PFNGLMULTITEXCOORD1IVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1SARBPROC ext_glMultiTexCoord1sARB = (PFNGLMULTITEXCOORD1SARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1SVARBPROC ext_glMultiTexCoord1svARB = (PFNGLMULTITEXCOORD1SVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2DARBPROC ext_glMultiTexCoord2dARB = (PFNGLMULTITEXCOORD2DARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2DVARBPROC ext_glMultiTexCoord2dvARB = (PFNGLMULTITEXCOORD2DVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2FARBPROC ext_glMultiTexCoord2fARB = (PFNGLMULTITEXCOORD2FARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2FVARBPROC ext_glMultiTexCoord2fvARB = (PFNGLMULTITEXCOORD2FVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2IARBPROC ext_glMultiTexCoord2iARB = (PFNGLMULTITEXCOORD2IARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2IVARBPROC ext_glMultiTexCoord2ivARB = (PFNGLMULTITEXCOORD2IVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2SARBPROC ext_glMultiTexCoord2sARB = (PFNGLMULTITEXCOORD2SARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2SVARBPROC ext_glMultiTexCoord2svARB = (PFNGLMULTITEXCOORD2SVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3DARBPROC ext_glMultiTexCoord3dARB = (PFNGLMULTITEXCOORD3DARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3DVARBPROC ext_glMultiTexCoord3dvARB = (PFNGLMULTITEXCOORD3DVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3FARBPROC ext_glMultiTexCoord3fARB = (PFNGLMULTITEXCOORD3FARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3FVARBPROC ext_glMultiTexCoord3fvARB = (PFNGLMULTITEXCOORD3FVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3IARBPROC ext_glMultiTexCoord3iARB = (PFNGLMULTITEXCOORD3IARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3IVARBPROC ext_glMultiTexCoord3ivARB = (PFNGLMULTITEXCOORD3IVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3SARBPROC ext_glMultiTexCoord3sARB = (PFNGLMULTITEXCOORD3SARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3SVARBPROC ext_glMultiTexCoord3svARB = (PFNGLMULTITEXCOORD3SVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4DARBPROC ext_glMultiTexCoord4dARB = (PFNGLMULTITEXCOORD4DARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4DVARBPROC ext_glMultiTexCoord4dvARB = (PFNGLMULTITEXCOORD4DVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4FARBPROC ext_glMultiTexCoord4fARB = (PFNGLMULTITEXCOORD4FARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4FVARBPROC ext_glMultiTexCoord4fvARB = (PFNGLMULTITEXCOORD4FVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4IARBPROC ext_glMultiTexCoord4iARB = (PFNGLMULTITEXCOORD4IARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4IVARBPROC ext_glMultiTexCoord4ivARB = (PFNGLMULTITEXCOORD4IVARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4SARBPROC ext_glMultiTexCoord4sARB = (PFNGLMULTITEXCOORD4SARBPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4SVARBPROC ext_glMultiTexCoord4svARB = (PFNGLMULTITEXCOORD4SVARBPROC)0xdeadbeef;
	PFNGLLOADTRANSPOSEMATRIXFARBPROC ext_glLoadTransposeMatrixfARB = (PFNGLLOADTRANSPOSEMATRIXFARBPROC)0xdeadbeef;
	PFNGLLOADTRANSPOSEMATRIXDARBPROC ext_glLoadTransposeMatrixdARB = (PFNGLLOADTRANSPOSEMATRIXDARBPROC)0xdeadbeef;
	PFNGLMULTTRANSPOSEMATRIXFARBPROC ext_glMultTransposeMatrixfARB = (PFNGLMULTTRANSPOSEMATRIXFARBPROC)0xdeadbeef;
	PFNGLMULTTRANSPOSEMATRIXDARBPROC ext_glMultTransposeMatrixdARB = (PFNGLMULTTRANSPOSEMATRIXDARBPROC)0xdeadbeef;
	PFNGLSAMPLECOVERAGEARBPROC ext_glSampleCoverageARB = (PFNGLSAMPLECOVERAGEARBPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXIMAGE3DARBPROC ext_glCompressedTexImage3DARB = (PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXIMAGE2DARBPROC ext_glCompressedTexImage2DARB = (PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXIMAGE1DARBPROC ext_glCompressedTexImage1DARB = (PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC ext_glCompressedTexSubImage3DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC ext_glCompressedTexSubImage2DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC ext_glCompressedTexSubImage1DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)0xdeadbeef;
	PFNGLGETCOMPRESSEDTEXIMAGEARBPROC ext_glGetCompressedTexImageARB = (PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERFARBPROC ext_glPointParameterfARB = (PFNGLPOINTPARAMETERFARBPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERFVARBPROC ext_glPointParameterfvARB = (PFNGLPOINTPARAMETERFVARBPROC)0xdeadbeef;
	PFNGLWEIGHTBVARBPROC ext_glWeightbvARB = (PFNGLWEIGHTBVARBPROC)0xdeadbeef;
	PFNGLWEIGHTSVARBPROC ext_glWeightsvARB = (PFNGLWEIGHTSVARBPROC)0xdeadbeef;
	PFNGLWEIGHTIVARBPROC ext_glWeightivARB = (PFNGLWEIGHTIVARBPROC)0xdeadbeef;
	PFNGLWEIGHTFVARBPROC ext_glWeightfvARB = (PFNGLWEIGHTFVARBPROC)0xdeadbeef;
	PFNGLWEIGHTDVARBPROC ext_glWeightdvARB = (PFNGLWEIGHTDVARBPROC)0xdeadbeef;
	PFNGLWEIGHTUBVARBPROC ext_glWeightubvARB = (PFNGLWEIGHTUBVARBPROC)0xdeadbeef;
	PFNGLWEIGHTUSVARBPROC ext_glWeightusvARB = (PFNGLWEIGHTUSVARBPROC)0xdeadbeef;
	PFNGLWEIGHTUIVARBPROC ext_glWeightuivARB = (PFNGLWEIGHTUIVARBPROC)0xdeadbeef;
	PFNGLWEIGHTPOINTERARBPROC ext_glWeightPointerARB = (PFNGLWEIGHTPOINTERARBPROC)0xdeadbeef;
	PFNGLVERTEXBLENDARBPROC ext_glVertexBlendARB = (PFNGLVERTEXBLENDARBPROC)0xdeadbeef;
	PFNGLCURRENTPALETTEMATRIXARBPROC ext_glCurrentPaletteMatrixARB = (PFNGLCURRENTPALETTEMATRIXARBPROC)0xdeadbeef;
	PFNGLMATRIXINDEXUBVARBPROC ext_glMatrixIndexubvARB = (PFNGLMATRIXINDEXUBVARBPROC)0xdeadbeef;
	PFNGLMATRIXINDEXUSVARBPROC ext_glMatrixIndexusvARB = (PFNGLMATRIXINDEXUSVARBPROC)0xdeadbeef;
	PFNGLMATRIXINDEXUIVARBPROC ext_glMatrixIndexuivARB = (PFNGLMATRIXINDEXUIVARBPROC)0xdeadbeef;
	PFNGLMATRIXINDEXPOINTERARBPROC ext_glMatrixIndexPointerARB = (PFNGLMATRIXINDEXPOINTERARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS2DARBPROC ext_glWindowPos2dARB = (PFNGLWINDOWPOS2DARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS2DVARBPROC ext_glWindowPos2dvARB = (PFNGLWINDOWPOS2DVARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS2FARBPROC ext_glWindowPos2fARB = (PFNGLWINDOWPOS2FARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS2FVARBPROC ext_glWindowPos2fvARB = (PFNGLWINDOWPOS2FVARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS2IARBPROC ext_glWindowPos2iARB = (PFNGLWINDOWPOS2IARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS2IVARBPROC ext_glWindowPos2ivARB = (PFNGLWINDOWPOS2IVARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS2SARBPROC ext_glWindowPos2sARB = (PFNGLWINDOWPOS2SARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS2SVARBPROC ext_glWindowPos2svARB = (PFNGLWINDOWPOS2SVARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS3DARBPROC ext_glWindowPos3dARB = (PFNGLWINDOWPOS3DARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS3DVARBPROC ext_glWindowPos3dvARB = (PFNGLWINDOWPOS3DVARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS3FARBPROC ext_glWindowPos3fARB = (PFNGLWINDOWPOS3FARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS3FVARBPROC ext_glWindowPos3fvARB = (PFNGLWINDOWPOS3FVARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS3IARBPROC ext_glWindowPos3iARB = (PFNGLWINDOWPOS3IARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS3IVARBPROC ext_glWindowPos3ivARB = (PFNGLWINDOWPOS3IVARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS3SARBPROC ext_glWindowPos3sARB = (PFNGLWINDOWPOS3SARBPROC)0xdeadbeef;
	PFNGLWINDOWPOS3SVARBPROC ext_glWindowPos3svARB = (PFNGLWINDOWPOS3SVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1DARBPROC ext_glVertexAttrib1dARB = (PFNGLVERTEXATTRIB1DARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1DVARBPROC ext_glVertexAttrib1dvARB = (PFNGLVERTEXATTRIB1DVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1FARBPROC ext_glVertexAttrib1fARB = (PFNGLVERTEXATTRIB1FARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1FVARBPROC ext_glVertexAttrib1fvARB = (PFNGLVERTEXATTRIB1FVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1SARBPROC ext_glVertexAttrib1sARB = (PFNGLVERTEXATTRIB1SARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1SVARBPROC ext_glVertexAttrib1svARB = (PFNGLVERTEXATTRIB1SVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2DARBPROC ext_glVertexAttrib2dARB = (PFNGLVERTEXATTRIB2DARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2DVARBPROC ext_glVertexAttrib2dvARB = (PFNGLVERTEXATTRIB2DVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2FARBPROC ext_glVertexAttrib2fARB = (PFNGLVERTEXATTRIB2FARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2FVARBPROC ext_glVertexAttrib2fvARB = (PFNGLVERTEXATTRIB2FVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2SARBPROC ext_glVertexAttrib2sARB = (PFNGLVERTEXATTRIB2SARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2SVARBPROC ext_glVertexAttrib2svARB = (PFNGLVERTEXATTRIB2SVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3DARBPROC ext_glVertexAttrib3dARB = (PFNGLVERTEXATTRIB3DARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3DVARBPROC ext_glVertexAttrib3dvARB = (PFNGLVERTEXATTRIB3DVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3FARBPROC ext_glVertexAttrib3fARB = (PFNGLVERTEXATTRIB3FARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3FVARBPROC ext_glVertexAttrib3fvARB = (PFNGLVERTEXATTRIB3FVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3SARBPROC ext_glVertexAttrib3sARB = (PFNGLVERTEXATTRIB3SARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3SVARBPROC ext_glVertexAttrib3svARB = (PFNGLVERTEXATTRIB3SVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NBVARBPROC ext_glVertexAttrib4NbvARB = (PFNGLVERTEXATTRIB4NBVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NIVARBPROC ext_glVertexAttrib4NivARB = (PFNGLVERTEXATTRIB4NIVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NSVARBPROC ext_glVertexAttrib4NsvARB = (PFNGLVERTEXATTRIB4NSVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NUBARBPROC ext_glVertexAttrib4NubARB = (PFNGLVERTEXATTRIB4NUBARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NUBVARBPROC ext_glVertexAttrib4NubvARB = (PFNGLVERTEXATTRIB4NUBVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NUIVARBPROC ext_glVertexAttrib4NuivARB = (PFNGLVERTEXATTRIB4NUIVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4NUSVARBPROC ext_glVertexAttrib4NusvARB = (PFNGLVERTEXATTRIB4NUSVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4BVARBPROC ext_glVertexAttrib4bvARB = (PFNGLVERTEXATTRIB4BVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4DARBPROC ext_glVertexAttrib4dARB = (PFNGLVERTEXATTRIB4DARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4DVARBPROC ext_glVertexAttrib4dvARB = (PFNGLVERTEXATTRIB4DVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4FARBPROC ext_glVertexAttrib4fARB = (PFNGLVERTEXATTRIB4FARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4FVARBPROC ext_glVertexAttrib4fvARB = (PFNGLVERTEXATTRIB4FVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4IVARBPROC ext_glVertexAttrib4ivARB = (PFNGLVERTEXATTRIB4IVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4SARBPROC ext_glVertexAttrib4sARB = (PFNGLVERTEXATTRIB4SARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4SVARBPROC ext_glVertexAttrib4svARB = (PFNGLVERTEXATTRIB4SVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4UBVARBPROC ext_glVertexAttrib4ubvARB = (PFNGLVERTEXATTRIB4UBVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4UIVARBPROC ext_glVertexAttrib4uivARB = (PFNGLVERTEXATTRIB4UIVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4USVARBPROC ext_glVertexAttrib4usvARB = (PFNGLVERTEXATTRIB4USVARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBPOINTERARBPROC ext_glVertexAttribPointerARB = (PFNGLVERTEXATTRIBPOINTERARBPROC)0xdeadbeef;
	PFNGLENABLEVERTEXATTRIBARRAYARBPROC ext_glEnableVertexAttribArrayARB = (PFNGLENABLEVERTEXATTRIBARRAYARBPROC)0xdeadbeef;
	PFNGLDISABLEVERTEXATTRIBARRAYARBPROC ext_glDisableVertexAttribArrayARB = (PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)0xdeadbeef;
	PFNGLPROGRAMSTRINGARBPROC ext_glProgramStringARB = (PFNGLPROGRAMSTRINGARBPROC)0xdeadbeef;
	PFNGLBINDPROGRAMARBPROC ext_glBindProgramARB = (PFNGLBINDPROGRAMARBPROC)0xdeadbeef;
	PFNGLDELETEPROGRAMSARBPROC ext_glDeleteProgramsARB = (PFNGLDELETEPROGRAMSARBPROC)0xdeadbeef;
	PFNGLGENPROGRAMSARBPROC ext_glGenProgramsARB = (PFNGLGENPROGRAMSARBPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETER4DARBPROC ext_glProgramEnvParameter4dARB = (PFNGLPROGRAMENVPARAMETER4DARBPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETER4DVARBPROC ext_glProgramEnvParameter4dvARB = (PFNGLPROGRAMENVPARAMETER4DVARBPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETER4FARBPROC ext_glProgramEnvParameter4fARB = (PFNGLPROGRAMENVPARAMETER4FARBPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETER4FVARBPROC ext_glProgramEnvParameter4fvARB = (PFNGLPROGRAMENVPARAMETER4FVARBPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETER4DARBPROC ext_glProgramLocalParameter4dARB = (PFNGLPROGRAMLOCALPARAMETER4DARBPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETER4DVARBPROC ext_glProgramLocalParameter4dvARB = (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETER4FARBPROC ext_glProgramLocalParameter4fARB = (PFNGLPROGRAMLOCALPARAMETER4FARBPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETER4FVARBPROC ext_glProgramLocalParameter4fvARB = (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)0xdeadbeef;
	PFNGLGETPROGRAMENVPARAMETERDVARBPROC ext_glGetProgramEnvParameterdvARB = (PFNGLGETPROGRAMENVPARAMETERDVARBPROC)0xdeadbeef;
	PFNGLGETPROGRAMENVPARAMETERFVARBPROC ext_glGetProgramEnvParameterfvARB = (PFNGLGETPROGRAMENVPARAMETERFVARBPROC)0xdeadbeef;
	PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC ext_glGetProgramLocalParameterdvARB = (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)0xdeadbeef;
	PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC ext_glGetProgramLocalParameterfvARB = (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)0xdeadbeef;
	PFNGLGETPROGRAMIVARBPROC ext_glGetProgramivARB = (PFNGLGETPROGRAMIVARBPROC)0xdeadbeef;
	PFNGLGETPROGRAMSTRINGARBPROC ext_glGetProgramStringARB = (PFNGLGETPROGRAMSTRINGARBPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBDVARBPROC ext_glGetVertexAttribdvARB = (PFNGLGETVERTEXATTRIBDVARBPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBFVARBPROC ext_glGetVertexAttribfvARB = (PFNGLGETVERTEXATTRIBFVARBPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBIVARBPROC ext_glGetVertexAttribivARB = (PFNGLGETVERTEXATTRIBIVARBPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBPOINTERVARBPROC ext_glGetVertexAttribPointervARB = (PFNGLGETVERTEXATTRIBPOINTERVARBPROC)0xdeadbeef;
	PFNGLISPROGRAMARBPROC ext_glIsProgramARB = (PFNGLISPROGRAMARBPROC)0xdeadbeef;
	PFNGLBINDBUFFERARBPROC ext_glBindBufferARB = (PFNGLBINDBUFFERARBPROC)0xdeadbeef;
	PFNGLDELETEBUFFERSARBPROC ext_glDeleteBuffersARB = (PFNGLDELETEBUFFERSARBPROC)0xdeadbeef;
	PFNGLGENBUFFERSARBPROC ext_glGenBuffersARB = (PFNGLGENBUFFERSARBPROC)0xdeadbeef;
	PFNGLISBUFFERARBPROC ext_glIsBufferARB = (PFNGLISBUFFERARBPROC)0xdeadbeef;
	PFNGLBUFFERDATAARBPROC ext_glBufferDataARB = (PFNGLBUFFERDATAARBPROC)0xdeadbeef;
	PFNGLBUFFERSUBDATAARBPROC ext_glBufferSubDataARB = (PFNGLBUFFERSUBDATAARBPROC)0xdeadbeef;
	PFNGLGETBUFFERSUBDATAARBPROC ext_glGetBufferSubDataARB = (PFNGLGETBUFFERSUBDATAARBPROC)0xdeadbeef;
	PFNGLMAPBUFFERARBPROC ext_glMapBufferARB = (PFNGLMAPBUFFERARBPROC)0xdeadbeef;
	PFNGLUNMAPBUFFERARBPROC ext_glUnmapBufferARB = (PFNGLUNMAPBUFFERARBPROC)0xdeadbeef;
	PFNGLGETBUFFERPARAMETERIVARBPROC ext_glGetBufferParameterivARB = (PFNGLGETBUFFERPARAMETERIVARBPROC)0xdeadbeef;
	PFNGLGETBUFFERPOINTERVARBPROC ext_glGetBufferPointervARB = (PFNGLGETBUFFERPOINTERVARBPROC)0xdeadbeef;
	PFNGLGENQUERIESARBPROC ext_glGenQueriesARB = (PFNGLGENQUERIESARBPROC)0xdeadbeef;
	PFNGLDELETEQUERIESARBPROC ext_glDeleteQueriesARB = (PFNGLDELETEQUERIESARBPROC)0xdeadbeef;
	PFNGLISQUERYARBPROC ext_glIsQueryARB = (PFNGLISQUERYARBPROC)0xdeadbeef;
	PFNGLBEGINQUERYARBPROC ext_glBeginQueryARB = (PFNGLBEGINQUERYARBPROC)0xdeadbeef;
	PFNGLENDQUERYARBPROC ext_glEndQueryARB = (PFNGLENDQUERYARBPROC)0xdeadbeef;
	PFNGLGETQUERYIVARBPROC ext_glGetQueryivARB = (PFNGLGETQUERYIVARBPROC)0xdeadbeef;
	PFNGLGETQUERYOBJECTIVARBPROC ext_glGetQueryObjectivARB = (PFNGLGETQUERYOBJECTIVARBPROC)0xdeadbeef;
	PFNGLGETQUERYOBJECTUIVARBPROC ext_glGetQueryObjectuivARB = (PFNGLGETQUERYOBJECTUIVARBPROC)0xdeadbeef;
	PFNGLDELETEOBJECTARBPROC ext_glDeleteObjectARB = (PFNGLDELETEOBJECTARBPROC)0xdeadbeef;
	PFNGLGETHANDLEARBPROC ext_glGetHandleARB = (PFNGLGETHANDLEARBPROC)0xdeadbeef;
	PFNGLDETACHOBJECTARBPROC ext_glDetachObjectARB = (PFNGLDETACHOBJECTARBPROC)0xdeadbeef;
	PFNGLCREATESHADEROBJECTARBPROC ext_glCreateShaderObjectARB = (PFNGLCREATESHADEROBJECTARBPROC)0xdeadbeef;
	PFNGLSHADERSOURCEARBPROC ext_glShaderSourceARB = (PFNGLSHADERSOURCEARBPROC)0xdeadbeef;
	PFNGLCOMPILESHADERARBPROC ext_glCompileShaderARB = (PFNGLCOMPILESHADERARBPROC)0xdeadbeef;
	PFNGLCREATEPROGRAMOBJECTARBPROC ext_glCreateProgramObjectARB = (PFNGLCREATEPROGRAMOBJECTARBPROC)0xdeadbeef;
	PFNGLATTACHOBJECTARBPROC ext_glAttachObjectARB = (PFNGLATTACHOBJECTARBPROC)0xdeadbeef;
	PFNGLLINKPROGRAMARBPROC ext_glLinkProgramARB = (PFNGLLINKPROGRAMARBPROC)0xdeadbeef;
	PFNGLUSEPROGRAMOBJECTARBPROC ext_glUseProgramObjectARB = (PFNGLUSEPROGRAMOBJECTARBPROC)0xdeadbeef;
	PFNGLVALIDATEPROGRAMARBPROC ext_glValidateProgramARB = (PFNGLVALIDATEPROGRAMARBPROC)0xdeadbeef;
	PFNGLUNIFORM1FARBPROC ext_glUniform1fARB = (PFNGLUNIFORM1FARBPROC)0xdeadbeef;
	PFNGLUNIFORM2FARBPROC ext_glUniform2fARB = (PFNGLUNIFORM2FARBPROC)0xdeadbeef;
	PFNGLUNIFORM3FARBPROC ext_glUniform3fARB = (PFNGLUNIFORM3FARBPROC)0xdeadbeef;
	PFNGLUNIFORM4FARBPROC ext_glUniform4fARB = (PFNGLUNIFORM4FARBPROC)0xdeadbeef;
	PFNGLUNIFORM1IARBPROC ext_glUniform1iARB = (PFNGLUNIFORM1IARBPROC)0xdeadbeef;
	PFNGLUNIFORM2IARBPROC ext_glUniform2iARB = (PFNGLUNIFORM2IARBPROC)0xdeadbeef;
	PFNGLUNIFORM3IARBPROC ext_glUniform3iARB = (PFNGLUNIFORM3IARBPROC)0xdeadbeef;
	PFNGLUNIFORM4IARBPROC ext_glUniform4iARB = (PFNGLUNIFORM4IARBPROC)0xdeadbeef;
	PFNGLUNIFORM1FVARBPROC ext_glUniform1fvARB = (PFNGLUNIFORM1FVARBPROC)0xdeadbeef;
	PFNGLUNIFORM2FVARBPROC ext_glUniform2fvARB = (PFNGLUNIFORM2FVARBPROC)0xdeadbeef;
	PFNGLUNIFORM3FVARBPROC ext_glUniform3fvARB = (PFNGLUNIFORM3FVARBPROC)0xdeadbeef;
	PFNGLUNIFORM4FVARBPROC ext_glUniform4fvARB = (PFNGLUNIFORM4FVARBPROC)0xdeadbeef;
	PFNGLUNIFORM1IVARBPROC ext_glUniform1ivARB = (PFNGLUNIFORM1IVARBPROC)0xdeadbeef;
	PFNGLUNIFORM2IVARBPROC ext_glUniform2ivARB = (PFNGLUNIFORM2IVARBPROC)0xdeadbeef;
	PFNGLUNIFORM3IVARBPROC ext_glUniform3ivARB = (PFNGLUNIFORM3IVARBPROC)0xdeadbeef;
	PFNGLUNIFORM4IVARBPROC ext_glUniform4ivARB = (PFNGLUNIFORM4IVARBPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX2FVARBPROC ext_glUniformMatrix2fvARB = (PFNGLUNIFORMMATRIX2FVARBPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX3FVARBPROC ext_glUniformMatrix3fvARB = (PFNGLUNIFORMMATRIX3FVARBPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX4FVARBPROC ext_glUniformMatrix4fvARB = (PFNGLUNIFORMMATRIX4FVARBPROC)0xdeadbeef;
	PFNGLGETOBJECTPARAMETERFVARBPROC ext_glGetObjectParameterfvARB = (PFNGLGETOBJECTPARAMETERFVARBPROC)0xdeadbeef;
	PFNGLGETOBJECTPARAMETERIVARBPROC ext_glGetObjectParameterivARB = (PFNGLGETOBJECTPARAMETERIVARBPROC)0xdeadbeef;
	PFNGLGETINFOLOGARBPROC ext_glGetInfoLogARB = (PFNGLGETINFOLOGARBPROC)0xdeadbeef;
	PFNGLGETATTACHEDOBJECTSARBPROC ext_glGetAttachedObjectsARB = (PFNGLGETATTACHEDOBJECTSARBPROC)0xdeadbeef;
	PFNGLGETUNIFORMLOCATIONARBPROC ext_glGetUniformLocationARB = (PFNGLGETUNIFORMLOCATIONARBPROC)0xdeadbeef;
	PFNGLGETACTIVEUNIFORMARBPROC ext_glGetActiveUniformARB = (PFNGLGETACTIVEUNIFORMARBPROC)0xdeadbeef;
	PFNGLGETUNIFORMFVARBPROC ext_glGetUniformfvARB = (PFNGLGETUNIFORMFVARBPROC)0xdeadbeef;
	PFNGLGETUNIFORMIVARBPROC ext_glGetUniformivARB = (PFNGLGETUNIFORMIVARBPROC)0xdeadbeef;
	PFNGLGETSHADERSOURCEARBPROC ext_glGetShaderSourceARB = (PFNGLGETSHADERSOURCEARBPROC)0xdeadbeef;
	PFNGLBINDATTRIBLOCATIONARBPROC ext_glBindAttribLocationARB = (PFNGLBINDATTRIBLOCATIONARBPROC)0xdeadbeef;
	PFNGLGETACTIVEATTRIBARBPROC ext_glGetActiveAttribARB = (PFNGLGETACTIVEATTRIBARBPROC)0xdeadbeef;
	PFNGLGETATTRIBLOCATIONARBPROC ext_glGetAttribLocationARB = (PFNGLGETATTRIBLOCATIONARBPROC)0xdeadbeef;
	PFNGLDRAWBUFFERSARBPROC ext_glDrawBuffersARB = (PFNGLDRAWBUFFERSARBPROC)0xdeadbeef;
	PFNGLCLAMPCOLORARBPROC ext_glClampColorARB = (PFNGLCLAMPCOLORARBPROC)0xdeadbeef;
	PFNGLDRAWARRAYSINSTANCEDARBPROC ext_glDrawArraysInstancedARB = (PFNGLDRAWARRAYSINSTANCEDARBPROC)0xdeadbeef;
	PFNGLDRAWELEMENTSINSTANCEDARBPROC ext_glDrawElementsInstancedARB = (PFNGLDRAWELEMENTSINSTANCEDARBPROC)0xdeadbeef;
	PFNGLISRENDERBUFFERPROC ext_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)0xdeadbeef;
	PFNGLBINDRENDERBUFFERPROC ext_glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)0xdeadbeef;
	PFNGLDELETERENDERBUFFERSPROC ext_glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)0xdeadbeef;
	PFNGLGENRENDERBUFFERSPROC ext_glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)0xdeadbeef;
	PFNGLRENDERBUFFERSTORAGEPROC ext_glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)0xdeadbeef;
	PFNGLGETRENDERBUFFERPARAMETERIVPROC ext_glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)0xdeadbeef;
	PFNGLISFRAMEBUFFERPROC ext_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)0xdeadbeef;
	PFNGLBINDFRAMEBUFFERPROC ext_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)0xdeadbeef;
	PFNGLDELETEFRAMEBUFFERSPROC ext_glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)0xdeadbeef;
	PFNGLGENFRAMEBUFFERSPROC ext_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)0xdeadbeef;
	PFNGLCHECKFRAMEBUFFERSTATUSPROC ext_glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTURE1DPROC ext_glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTURE2DPROC ext_glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTURE3DPROC ext_glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERRENDERBUFFERPROC ext_glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)0xdeadbeef;
	PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC ext_glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)0xdeadbeef;
	PFNGLGENERATEMIPMAPPROC ext_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)0xdeadbeef;
	PFNGLBLITFRAMEBUFFERPROC ext_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)0xdeadbeef;
	PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC ext_glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTURELAYERPROC ext_glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)0xdeadbeef;
	PFNGLPROGRAMPARAMETERIARBPROC ext_glProgramParameteriARB = (PFNGLPROGRAMPARAMETERIARBPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTUREARBPROC ext_glFramebufferTextureARB = (PFNGLFRAMEBUFFERTEXTUREARBPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTURELAYERARBPROC ext_glFramebufferTextureLayerARB = (PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTUREFACEARBPROC ext_glFramebufferTextureFaceARB = (PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBDIVISORARBPROC ext_glVertexAttribDivisorARB = (PFNGLVERTEXATTRIBDIVISORARBPROC)0xdeadbeef;
	PFNGLMAPBUFFERRANGEPROC ext_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)0xdeadbeef;
	PFNGLFLUSHMAPPEDBUFFERRANGEPROC ext_glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)0xdeadbeef;
	PFNGLTEXBUFFERARBPROC ext_glTexBufferARB = (PFNGLTEXBUFFERARBPROC)0xdeadbeef;
	PFNGLBINDVERTEXARRAYPROC ext_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)0xdeadbeef;
	PFNGLDELETEVERTEXARRAYSPROC ext_glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)0xdeadbeef;
	PFNGLGENVERTEXARRAYSPROC ext_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)0xdeadbeef;
	PFNGLISVERTEXARRAYPROC ext_glIsVertexArray = (PFNGLISVERTEXARRAYPROC)0xdeadbeef;
	PFNGLGETUNIFORMINDICESPROC ext_glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)0xdeadbeef;
	PFNGLGETACTIVEUNIFORMSIVPROC ext_glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC)0xdeadbeef;
	PFNGLGETACTIVEUNIFORMNAMEPROC ext_glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC)0xdeadbeef;
	PFNGLGETUNIFORMBLOCKINDEXPROC ext_glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)0xdeadbeef;
	PFNGLGETACTIVEUNIFORMBLOCKIVPROC ext_glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)0xdeadbeef;
	PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC ext_glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)0xdeadbeef;
	PFNGLUNIFORMBLOCKBINDINGPROC ext_glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)0xdeadbeef;
	PFNGLCOPYBUFFERSUBDATAPROC ext_glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC)0xdeadbeef;
	PFNGLDRAWELEMENTSBASEVERTEXPROC ext_glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)0xdeadbeef;
	PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC ext_glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)0xdeadbeef;
	PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC ext_glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)0xdeadbeef;
	PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC ext_glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)0xdeadbeef;
	PFNGLPROVOKINGVERTEXPROC ext_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)0xdeadbeef;
	PFNGLFENCESYNCPROC ext_glFenceSync = (PFNGLFENCESYNCPROC)0xdeadbeef;
	PFNGLISSYNCPROC ext_glIsSync = (PFNGLISSYNCPROC)0xdeadbeef;
	PFNGLDELETESYNCPROC ext_glDeleteSync = (PFNGLDELETESYNCPROC)0xdeadbeef;
	PFNGLCLIENTWAITSYNCPROC ext_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)0xdeadbeef;
	PFNGLWAITSYNCPROC ext_glWaitSync = (PFNGLWAITSYNCPROC)0xdeadbeef;
	PFNGLGETINTEGER64VPROC ext_glGetInteger64v = (PFNGLGETINTEGER64VPROC)0xdeadbeef;
	PFNGLGETSYNCIVPROC ext_glGetSynciv = (PFNGLGETSYNCIVPROC)0xdeadbeef;
	PFNGLTEXIMAGE2DMULTISAMPLEPROC ext_glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)0xdeadbeef;
	PFNGLTEXIMAGE3DMULTISAMPLEPROC ext_glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)0xdeadbeef;
	PFNGLGETMULTISAMPLEFVPROC ext_glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC)0xdeadbeef;
	PFNGLSAMPLEMASKIPROC ext_glSampleMaski = (PFNGLSAMPLEMASKIPROC)0xdeadbeef;
	PFNGLBLENDEQUATIONIARBPROC ext_glBlendEquationiARB = (PFNGLBLENDEQUATIONIARBPROC)0xdeadbeef;
	PFNGLBLENDEQUATIONSEPARATEIARBPROC ext_glBlendEquationSeparateiARB = (PFNGLBLENDEQUATIONSEPARATEIARBPROC)0xdeadbeef;
	PFNGLBLENDFUNCIARBPROC ext_glBlendFunciARB = (PFNGLBLENDFUNCIARBPROC)0xdeadbeef;
	PFNGLBLENDFUNCSEPARATEIARBPROC ext_glBlendFuncSeparateiARB = (PFNGLBLENDFUNCSEPARATEIARBPROC)0xdeadbeef;
	PFNGLMINSAMPLESHADINGARBPROC ext_glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC)0xdeadbeef;
	PFNGLNAMEDSTRINGARBPROC ext_glNamedStringARB = (PFNGLNAMEDSTRINGARBPROC)0xdeadbeef;
	PFNGLDELETENAMEDSTRINGARBPROC ext_glDeleteNamedStringARB = (PFNGLDELETENAMEDSTRINGARBPROC)0xdeadbeef;
	PFNGLCOMPILESHADERINCLUDEARBPROC ext_glCompileShaderIncludeARB = (PFNGLCOMPILESHADERINCLUDEARBPROC)0xdeadbeef;
	PFNGLISNAMEDSTRINGARBPROC ext_glIsNamedStringARB = (PFNGLISNAMEDSTRINGARBPROC)0xdeadbeef;
	PFNGLGETNAMEDSTRINGARBPROC ext_glGetNamedStringARB = (PFNGLGETNAMEDSTRINGARBPROC)0xdeadbeef;
	PFNGLGETNAMEDSTRINGIVARBPROC ext_glGetNamedStringivARB = (PFNGLGETNAMEDSTRINGIVARBPROC)0xdeadbeef;
	PFNGLBINDFRAGDATALOCATIONINDEXEDPROC ext_glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)0xdeadbeef;
	PFNGLGETFRAGDATAINDEXPROC ext_glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC)0xdeadbeef;
	PFNGLGENSAMPLERSPROC ext_glGenSamplers = (PFNGLGENSAMPLERSPROC)0xdeadbeef;
	PFNGLDELETESAMPLERSPROC ext_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)0xdeadbeef;
	PFNGLISSAMPLERPROC ext_glIsSampler = (PFNGLISSAMPLERPROC)0xdeadbeef;
	PFNGLBINDSAMPLERPROC ext_glBindSampler = (PFNGLBINDSAMPLERPROC)0xdeadbeef;
	PFNGLSAMPLERPARAMETERIPROC ext_glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC)0xdeadbeef;
	PFNGLSAMPLERPARAMETERIVPROC ext_glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC)0xdeadbeef;
	PFNGLSAMPLERPARAMETERFPROC ext_glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC)0xdeadbeef;
	PFNGLSAMPLERPARAMETERFVPROC ext_glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC)0xdeadbeef;
	PFNGLSAMPLERPARAMETERIIVPROC ext_glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC)0xdeadbeef;
	PFNGLSAMPLERPARAMETERIUIVPROC ext_glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC)0xdeadbeef;
	PFNGLGETSAMPLERPARAMETERIVPROC ext_glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC)0xdeadbeef;
	PFNGLGETSAMPLERPARAMETERIIVPROC ext_glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC)0xdeadbeef;
	PFNGLGETSAMPLERPARAMETERFVPROC ext_glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC)0xdeadbeef;
	PFNGLGETSAMPLERPARAMETERIUIVPROC ext_glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC)0xdeadbeef;
	PFNGLQUERYCOUNTERPROC ext_glQueryCounter = (PFNGLQUERYCOUNTERPROC)0xdeadbeef;
	PFNGLGETQUERYOBJECTI64VPROC ext_glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC)0xdeadbeef;
	PFNGLGETQUERYOBJECTUI64VPROC ext_glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)0xdeadbeef;
	PFNGLVERTEXP2UIPROC ext_glVertexP2ui = (PFNGLVERTEXP2UIPROC)0xdeadbeef;
	PFNGLVERTEXP2UIVPROC ext_glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)0xdeadbeef;
	PFNGLVERTEXP3UIPROC ext_glVertexP3ui = (PFNGLVERTEXP3UIPROC)0xdeadbeef;
	PFNGLVERTEXP3UIVPROC ext_glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)0xdeadbeef;
	PFNGLVERTEXP4UIPROC ext_glVertexP4ui = (PFNGLVERTEXP4UIPROC)0xdeadbeef;
	PFNGLVERTEXP4UIVPROC ext_glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)0xdeadbeef;
	PFNGLTEXCOORDP1UIPROC ext_glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)0xdeadbeef;
	PFNGLTEXCOORDP1UIVPROC ext_glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)0xdeadbeef;
	PFNGLTEXCOORDP2UIPROC ext_glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)0xdeadbeef;
	PFNGLTEXCOORDP2UIVPROC ext_glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)0xdeadbeef;
	PFNGLTEXCOORDP3UIPROC ext_glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)0xdeadbeef;
	PFNGLTEXCOORDP3UIVPROC ext_glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)0xdeadbeef;
	PFNGLTEXCOORDP4UIPROC ext_glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)0xdeadbeef;
	PFNGLTEXCOORDP4UIVPROC ext_glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORDP1UIPROC ext_glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC)0xdeadbeef;
	PFNGLMULTITEXCOORDP1UIVPROC ext_glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORDP2UIPROC ext_glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC)0xdeadbeef;
	PFNGLMULTITEXCOORDP2UIVPROC ext_glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORDP3UIPROC ext_glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC)0xdeadbeef;
	PFNGLMULTITEXCOORDP3UIVPROC ext_glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORDP4UIPROC ext_glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC)0xdeadbeef;
	PFNGLMULTITEXCOORDP4UIVPROC ext_glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC)0xdeadbeef;
	PFNGLNORMALP3UIPROC ext_glNormalP3ui = (PFNGLNORMALP3UIPROC)0xdeadbeef;
	PFNGLNORMALP3UIVPROC ext_glNormalP3uiv = (PFNGLNORMALP3UIVPROC)0xdeadbeef;
	PFNGLCOLORP3UIPROC ext_glColorP3ui = (PFNGLCOLORP3UIPROC)0xdeadbeef;
	PFNGLCOLORP3UIVPROC ext_glColorP3uiv = (PFNGLCOLORP3UIVPROC)0xdeadbeef;
	PFNGLCOLORP4UIPROC ext_glColorP4ui = (PFNGLCOLORP4UIPROC)0xdeadbeef;
	PFNGLCOLORP4UIVPROC ext_glColorP4uiv = (PFNGLCOLORP4UIVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLORP3UIPROC ext_glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC)0xdeadbeef;
	PFNGLSECONDARYCOLORP3UIVPROC ext_glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBP1UIPROC ext_glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBP1UIVPROC ext_glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBP2UIPROC ext_glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBP2UIVPROC ext_glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBP3UIPROC ext_glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBP3UIVPROC ext_glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBP4UIPROC ext_glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBP4UIVPROC ext_glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC)0xdeadbeef;
	PFNGLDRAWARRAYSINDIRECTPROC ext_glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC)0xdeadbeef;
	PFNGLDRAWELEMENTSINDIRECTPROC ext_glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC)0xdeadbeef;
	PFNGLUNIFORM1DPROC ext_glUniform1d = (PFNGLUNIFORM1DPROC)0xdeadbeef;
	PFNGLUNIFORM2DPROC ext_glUniform2d = (PFNGLUNIFORM2DPROC)0xdeadbeef;
	PFNGLUNIFORM3DPROC ext_glUniform3d = (PFNGLUNIFORM3DPROC)0xdeadbeef;
	PFNGLUNIFORM4DPROC ext_glUniform4d = (PFNGLUNIFORM4DPROC)0xdeadbeef;
	PFNGLUNIFORM1DVPROC ext_glUniform1dv = (PFNGLUNIFORM1DVPROC)0xdeadbeef;
	PFNGLUNIFORM2DVPROC ext_glUniform2dv = (PFNGLUNIFORM2DVPROC)0xdeadbeef;
	PFNGLUNIFORM3DVPROC ext_glUniform3dv = (PFNGLUNIFORM3DVPROC)0xdeadbeef;
	PFNGLUNIFORM4DVPROC ext_glUniform4dv = (PFNGLUNIFORM4DVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX2DVPROC ext_glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX3DVPROC ext_glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX4DVPROC ext_glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX2X3DVPROC ext_glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX2X4DVPROC ext_glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX3X2DVPROC ext_glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX3X4DVPROC ext_glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX4X2DVPROC ext_glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC)0xdeadbeef;
	PFNGLUNIFORMMATRIX4X3DVPROC ext_glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC)0xdeadbeef;
	PFNGLGETUNIFORMDVPROC ext_glGetUniformdv = (PFNGLGETUNIFORMDVPROC)0xdeadbeef;
	PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC ext_glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)0xdeadbeef;
	PFNGLGETSUBROUTINEINDEXPROC ext_glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC)0xdeadbeef;
	PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC ext_glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)0xdeadbeef;
	PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC ext_glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)0xdeadbeef;
	PFNGLGETACTIVESUBROUTINENAMEPROC ext_glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC)0xdeadbeef;
	PFNGLUNIFORMSUBROUTINESUIVPROC ext_glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC)0xdeadbeef;
	PFNGLGETUNIFORMSUBROUTINEUIVPROC ext_glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)0xdeadbeef;
	PFNGLGETPROGRAMSTAGEIVPROC ext_glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC)0xdeadbeef;
	PFNGLPATCHPARAMETERIPROC ext_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)0xdeadbeef;
	PFNGLPATCHPARAMETERFVPROC ext_glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC)0xdeadbeef;
	PFNGLBINDTRANSFORMFEEDBACKPROC ext_glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC)0xdeadbeef;
	PFNGLDELETETRANSFORMFEEDBACKSPROC ext_glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC)0xdeadbeef;
	PFNGLGENTRANSFORMFEEDBACKSPROC ext_glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC)0xdeadbeef;
	PFNGLISTRANSFORMFEEDBACKPROC ext_glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC)0xdeadbeef;
	PFNGLPAUSETRANSFORMFEEDBACKPROC ext_glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC)0xdeadbeef;
	PFNGLRESUMETRANSFORMFEEDBACKPROC ext_glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC)0xdeadbeef;
	PFNGLDRAWTRANSFORMFEEDBACKPROC ext_glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC)0xdeadbeef;
	PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC ext_glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)0xdeadbeef;
	PFNGLBEGINQUERYINDEXEDPROC ext_glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC)0xdeadbeef;
	PFNGLENDQUERYINDEXEDPROC ext_glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)0xdeadbeef;
	PFNGLGETQUERYINDEXEDIVPROC ext_glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC)0xdeadbeef;
	PFNGLRELEASESHADERCOMPILERPROC ext_glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC)0xdeadbeef;
	PFNGLSHADERBINARYPROC ext_glShaderBinary = (PFNGLSHADERBINARYPROC)0xdeadbeef;
	PFNGLGETSHADERPRECISIONFORMATPROC ext_glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC)0xdeadbeef;
	PFNGLDEPTHRANGEFPROC ext_glDepthRangef = (PFNGLDEPTHRANGEFPROC)0xdeadbeef;
	PFNGLCLEARDEPTHFPROC ext_glClearDepthf = (PFNGLCLEARDEPTHFPROC)0xdeadbeef;
	PFNGLGETPROGRAMBINARYPROC ext_glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC)0xdeadbeef;
	PFNGLPROGRAMBINARYPROC ext_glProgramBinary = (PFNGLPROGRAMBINARYPROC)0xdeadbeef;
	PFNGLPROGRAMPARAMETERIPROC ext_glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC)0xdeadbeef;
	PFNGLUSEPROGRAMSTAGESPROC ext_glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC)0xdeadbeef;
	PFNGLACTIVESHADERPROGRAMPROC ext_glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC)0xdeadbeef;
	PFNGLCREATESHADERPROGRAMVPROC ext_glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC)0xdeadbeef;
	PFNGLBINDPROGRAMPIPELINEPROC ext_glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC)0xdeadbeef;
	PFNGLDELETEPROGRAMPIPELINESPROC ext_glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC)0xdeadbeef;
	PFNGLGENPROGRAMPIPELINESPROC ext_glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC)0xdeadbeef;
	PFNGLISPROGRAMPIPELINEPROC ext_glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC)0xdeadbeef;
	PFNGLGETPROGRAMPIPELINEIVPROC ext_glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1IPROC ext_glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1IVPROC ext_glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1FPROC ext_glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1FVPROC ext_glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1DPROC ext_glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1DVPROC ext_glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1UIPROC ext_glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1UIVPROC ext_glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2IPROC ext_glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2IVPROC ext_glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2FPROC ext_glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2FVPROC ext_glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2DPROC ext_glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2DVPROC ext_glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2UIPROC ext_glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2UIVPROC ext_glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3IPROC ext_glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3IVPROC ext_glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3FPROC ext_glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3FVPROC ext_glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3DPROC ext_glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3DVPROC ext_glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3UIPROC ext_glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3UIVPROC ext_glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4IPROC ext_glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4IVPROC ext_glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4FPROC ext_glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4FVPROC ext_glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4DPROC ext_glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4DVPROC ext_glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4UIPROC ext_glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4UIVPROC ext_glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2FVPROC ext_glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3FVPROC ext_glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4FVPROC ext_glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2DVPROC ext_glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3DVPROC ext_glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4DVPROC ext_glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC ext_glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC ext_glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC ext_glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC ext_glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC ext_glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC ext_glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC ext_glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC ext_glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC ext_glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC ext_glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC ext_glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC ext_glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)0xdeadbeef;
	PFNGLVALIDATEPROGRAMPIPELINEPROC ext_glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC)0xdeadbeef;
	PFNGLGETPROGRAMPIPELINEINFOLOGPROC ext_glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL1DPROC ext_glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL2DPROC ext_glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL3DPROC ext_glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL4DPROC ext_glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL1DVPROC ext_glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL2DVPROC ext_glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL3DVPROC ext_glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL4DVPROC ext_glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBLPOINTERPROC ext_glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBLDVPROC ext_glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC)0xdeadbeef;
	PFNGLVIEWPORTARRAYVPROC ext_glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)0xdeadbeef;
	PFNGLVIEWPORTINDEXEDFPROC ext_glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)0xdeadbeef;
	PFNGLVIEWPORTINDEXEDFVPROC ext_glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)0xdeadbeef;
	PFNGLSCISSORARRAYVPROC ext_glScissorArrayv = (PFNGLSCISSORARRAYVPROC)0xdeadbeef;
	PFNGLSCISSORINDEXEDPROC ext_glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)0xdeadbeef;
	PFNGLSCISSORINDEXEDVPROC ext_glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)0xdeadbeef;
	PFNGLDEPTHRANGEARRAYVPROC ext_glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC)0xdeadbeef;
	PFNGLDEPTHRANGEINDEXEDPROC ext_glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC)0xdeadbeef;
	PFNGLCREATESYNCFROMCLEVENTARBPROC ext_glCreateSyncFromCLeventARB = (PFNGLCREATESYNCFROMCLEVENTARBPROC)0xdeadbeef;
	PFNGLGETDEBUGMESSAGELOGARBPROC ext_glGetDebugMessageLogARB = (PFNGLGETDEBUGMESSAGELOGARBPROC)0xdeadbeef;
	PFNGLGETGRAPHICSRESETSTATUSARBPROC ext_glGetGraphicsResetStatusARB = (PFNGLGETGRAPHICSRESETSTATUSARBPROC)0xdeadbeef;
	PFNGLGETNMAPDVARBPROC ext_glGetnMapdvARB = (PFNGLGETNMAPDVARBPROC)0xdeadbeef;
	PFNGLGETNMAPFVARBPROC ext_glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC)0xdeadbeef;
	PFNGLGETNMAPIVARBPROC ext_glGetnMapivARB = (PFNGLGETNMAPIVARBPROC)0xdeadbeef;
	PFNGLGETNPIXELMAPFVARBPROC ext_glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC)0xdeadbeef;
	PFNGLGETNPIXELMAPUIVARBPROC ext_glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC)0xdeadbeef;
	PFNGLGETNPIXELMAPUSVARBPROC ext_glGetnPixelMapusvARB = (PFNGLGETNPIXELMAPUSVARBPROC)0xdeadbeef;
	PFNGLGETNPOLYGONSTIPPLEARBPROC ext_glGetnPolygonStippleARB = (PFNGLGETNPOLYGONSTIPPLEARBPROC)0xdeadbeef;
	PFNGLGETNCOLORTABLEARBPROC ext_glGetnColorTableARB = (PFNGLGETNCOLORTABLEARBPROC)0xdeadbeef;
	PFNGLGETNCONVOLUTIONFILTERARBPROC ext_glGetnConvolutionFilterARB = (PFNGLGETNCONVOLUTIONFILTERARBPROC)0xdeadbeef;
	PFNGLGETNSEPARABLEFILTERARBPROC ext_glGetnSeparableFilterARB = (PFNGLGETNSEPARABLEFILTERARBPROC)0xdeadbeef;
	PFNGLGETNHISTOGRAMARBPROC ext_glGetnHistogramARB = (PFNGLGETNHISTOGRAMARBPROC)0xdeadbeef;
	PFNGLGETNMINMAXARBPROC ext_glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC)0xdeadbeef;
	PFNGLGETNTEXIMAGEARBPROC ext_glGetnTexImageARB = (PFNGLGETNTEXIMAGEARBPROC)0xdeadbeef;
	PFNGLREADNPIXELSARBPROC ext_glReadnPixelsARB = (PFNGLREADNPIXELSARBPROC)0xdeadbeef;
	PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC ext_glGetnCompressedTexImageARB = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)0xdeadbeef;
	PFNGLGETNUNIFORMFVARBPROC ext_glGetnUniformfvARB = (PFNGLGETNUNIFORMFVARBPROC)0xdeadbeef;
	PFNGLGETNUNIFORMIVARBPROC ext_glGetnUniformivARB = (PFNGLGETNUNIFORMIVARBPROC)0xdeadbeef;
	PFNGLGETNUNIFORMUIVARBPROC ext_glGetnUniformuivARB = (PFNGLGETNUNIFORMUIVARBPROC)0xdeadbeef;
	PFNGLGETNUNIFORMDVARBPROC ext_glGetnUniformdvARB = (PFNGLGETNUNIFORMDVARBPROC)0xdeadbeef;
	PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC ext_glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)0xdeadbeef;
	PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC ext_glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)0xdeadbeef;
	PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC ext_glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)0xdeadbeef;
	PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC ext_glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)0xdeadbeef;
	PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC ext_glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)0xdeadbeef;
	PFNGLGETINTERNALFORMATIVPROC ext_glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC)0xdeadbeef;
	PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC ext_glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)0xdeadbeef;
	PFNGLBINDIMAGETEXTUREPROC ext_glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC)0xdeadbeef;
	PFNGLMEMORYBARRIERPROC ext_glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)0xdeadbeef;
	PFNGLTEXSTORAGE1DPROC ext_glTexStorage1D = (PFNGLTEXSTORAGE1DPROC)0xdeadbeef;
	PFNGLTEXSTORAGE2DPROC ext_glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)0xdeadbeef;
	PFNGLTEXSTORAGE3DPROC ext_glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)0xdeadbeef;
	PFNGLTEXTURESTORAGE1DEXTPROC ext_glTextureStorage1DEXT = (PFNGLTEXTURESTORAGE1DEXTPROC)0xdeadbeef;
	PFNGLTEXTURESTORAGE2DEXTPROC ext_glTextureStorage2DEXT = (PFNGLTEXTURESTORAGE2DEXTPROC)0xdeadbeef;
	PFNGLTEXTURESTORAGE3DEXTPROC ext_glTextureStorage3DEXT = (PFNGLTEXTURESTORAGE3DEXTPROC)0xdeadbeef;
	PFNGLGETDEBUGMESSAGELOGPROC ext_glGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC)0xdeadbeef;
	PFNGLPUSHDEBUGGROUPPROC ext_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)0xdeadbeef;
	PFNGLPOPDEBUGGROUPPROC ext_glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)0xdeadbeef;
	PFNGLOBJECTLABELPROC ext_glObjectLabel = (PFNGLOBJECTLABELPROC)0xdeadbeef;
	PFNGLGETOBJECTLABELPROC ext_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)0xdeadbeef;
	PFNGLOBJECTPTRLABELPROC ext_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)0xdeadbeef;
	PFNGLGETOBJECTPTRLABELPROC ext_glGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC)0xdeadbeef;
	PFNGLCLEARBUFFERDATAPROC ext_glClearBufferData = (PFNGLCLEARBUFFERDATAPROC)0xdeadbeef;
	PFNGLCLEARBUFFERSUBDATAPROC ext_glClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC)0xdeadbeef;
	PFNGLCLEARNAMEDBUFFERDATAEXTPROC ext_glClearNamedBufferDataEXT = (PFNGLCLEARNAMEDBUFFERDATAEXTPROC)0xdeadbeef;
	PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC ext_glClearNamedBufferSubDataEXT = (PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC)0xdeadbeef;
	PFNGLDISPATCHCOMPUTEPROC ext_glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)0xdeadbeef;
	PFNGLDISPATCHCOMPUTEINDIRECTPROC ext_glDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC)0xdeadbeef;
	PFNGLCOPYIMAGESUBDATAPROC ext_glCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC)0xdeadbeef;
	PFNGLTEXTUREVIEWPROC ext_glTextureView = (PFNGLTEXTUREVIEWPROC)0xdeadbeef;
	PFNGLBINDVERTEXBUFFERPROC ext_glBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBFORMATPROC ext_glVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBIFORMATPROC ext_glVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBLFORMATPROC ext_glVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBBINDINGPROC ext_glVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC)0xdeadbeef;
	PFNGLVERTEXBINDINGDIVISORPROC ext_glVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC)0xdeadbeef;
	PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC ext_glVertexArrayBindVertexBufferEXT = (PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC)0xdeadbeef;
	PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC ext_glVertexArrayVertexAttribFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC)0xdeadbeef;
	PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC ext_glVertexArrayVertexAttribIFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC)0xdeadbeef;
	PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC ext_glVertexArrayVertexAttribLFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC)0xdeadbeef;
	PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC ext_glVertexArrayVertexAttribBindingEXT = (PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC)0xdeadbeef;
	PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC ext_glVertexArrayVertexBindingDivisorEXT = (PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERPARAMETERIPROC ext_glFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC)0xdeadbeef;
	PFNGLGETFRAMEBUFFERPARAMETERIVPROC ext_glGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)0xdeadbeef;
	PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC ext_glNamedFramebufferParameteriEXT = (PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC ext_glGetNamedFramebufferParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLGETINTERNALFORMATI64VPROC ext_glGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC)0xdeadbeef;
	PFNGLINVALIDATETEXSUBIMAGEPROC ext_glInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC)0xdeadbeef;
	PFNGLINVALIDATETEXIMAGEPROC ext_glInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC)0xdeadbeef;
	PFNGLINVALIDATEBUFFERSUBDATAPROC ext_glInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC)0xdeadbeef;
	PFNGLINVALIDATEBUFFERDATAPROC ext_glInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC)0xdeadbeef;
	PFNGLINVALIDATEFRAMEBUFFERPROC ext_glInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC)0xdeadbeef;
	PFNGLINVALIDATESUBFRAMEBUFFERPROC ext_glInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC)0xdeadbeef;
	PFNGLMULTIDRAWARRAYSINDIRECTPROC ext_glMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC)0xdeadbeef;
	PFNGLMULTIDRAWELEMENTSINDIRECTPROC ext_glMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)0xdeadbeef;
	PFNGLGETPROGRAMINTERFACEIVPROC ext_glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC)0xdeadbeef;
	PFNGLGETPROGRAMRESOURCEINDEXPROC ext_glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC)0xdeadbeef;
	PFNGLGETPROGRAMRESOURCENAMEPROC ext_glGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC)0xdeadbeef;
	PFNGLGETPROGRAMRESOURCEIVPROC ext_glGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC)0xdeadbeef;
	PFNGLGETPROGRAMRESOURCELOCATIONPROC ext_glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)0xdeadbeef;
	PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC ext_glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)0xdeadbeef;
	PFNGLSHADERSTORAGEBLOCKBINDINGPROC ext_glShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)0xdeadbeef;
	PFNGLTEXBUFFERRANGEPROC ext_glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)0xdeadbeef;
	PFNGLTEXTUREBUFFERRANGEEXTPROC ext_glTextureBufferRangeEXT = (PFNGLTEXTUREBUFFERRANGEEXTPROC)0xdeadbeef;
	PFNGLTEXSTORAGE2DMULTISAMPLEPROC ext_glTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)0xdeadbeef;
	PFNGLTEXSTORAGE3DMULTISAMPLEPROC ext_glTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)0xdeadbeef;
	PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC ext_glTextureStorage2DMultisampleEXT = (PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC)0xdeadbeef;
	PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC ext_glTextureStorage3DMultisampleEXT = (PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC)0xdeadbeef;
	PFNGLBLENDCOLOREXTPROC ext_glBlendColorEXT = (PFNGLBLENDCOLOREXTPROC)0xdeadbeef;
	PFNGLPOLYGONOFFSETEXTPROC ext_glPolygonOffsetEXT = (PFNGLPOLYGONOFFSETEXTPROC)0xdeadbeef;
	PFNGLTEXIMAGE3DEXTPROC ext_glTexImage3DEXT = (PFNGLTEXIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLTEXSUBIMAGE3DEXTPROC ext_glTexSubImage3DEXT = (PFNGLTEXSUBIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLGETTEXFILTERFUNCSGISPROC ext_glGetTexFilterFuncSGIS = (PFNGLGETTEXFILTERFUNCSGISPROC)0xdeadbeef;
	PFNGLTEXFILTERFUNCSGISPROC ext_glTexFilterFuncSGIS = (PFNGLTEXFILTERFUNCSGISPROC)0xdeadbeef;
	PFNGLTEXSUBIMAGE1DEXTPROC ext_glTexSubImage1DEXT = (PFNGLTEXSUBIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLTEXSUBIMAGE2DEXTPROC ext_glTexSubImage2DEXT = (PFNGLTEXSUBIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOPYTEXIMAGE1DEXTPROC ext_glCopyTexImage1DEXT = (PFNGLCOPYTEXIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLCOPYTEXIMAGE2DEXTPROC ext_glCopyTexImage2DEXT = (PFNGLCOPYTEXIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOPYTEXSUBIMAGE1DEXTPROC ext_glCopyTexSubImage1DEXT = (PFNGLCOPYTEXSUBIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLCOPYTEXSUBIMAGE2DEXTPROC ext_glCopyTexSubImage2DEXT = (PFNGLCOPYTEXSUBIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOPYTEXSUBIMAGE3DEXTPROC ext_glCopyTexSubImage3DEXT = (PFNGLCOPYTEXSUBIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLGETHISTOGRAMEXTPROC ext_glGetHistogramEXT = (PFNGLGETHISTOGRAMEXTPROC)0xdeadbeef;
	PFNGLGETHISTOGRAMPARAMETERFVEXTPROC ext_glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLGETHISTOGRAMPARAMETERIVEXTPROC ext_glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLGETMINMAXEXTPROC ext_glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC)0xdeadbeef;
	PFNGLGETMINMAXPARAMETERFVEXTPROC ext_glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLGETMINMAXPARAMETERIVEXTPROC ext_glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLHISTOGRAMEXTPROC ext_glHistogramEXT = (PFNGLHISTOGRAMEXTPROC)0xdeadbeef;
	PFNGLMINMAXEXTPROC ext_glMinmaxEXT = (PFNGLMINMAXEXTPROC)0xdeadbeef;
	PFNGLRESETHISTOGRAMEXTPROC ext_glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC)0xdeadbeef;
	PFNGLRESETMINMAXEXTPROC ext_glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC)0xdeadbeef;
	PFNGLCONVOLUTIONFILTER1DEXTPROC ext_glConvolutionFilter1DEXT = (PFNGLCONVOLUTIONFILTER1DEXTPROC)0xdeadbeef;
	PFNGLCONVOLUTIONFILTER2DEXTPROC ext_glConvolutionFilter2DEXT = (PFNGLCONVOLUTIONFILTER2DEXTPROC)0xdeadbeef;
	PFNGLCONVOLUTIONPARAMETERFEXTPROC ext_glConvolutionParameterfEXT = (PFNGLCONVOLUTIONPARAMETERFEXTPROC)0xdeadbeef;
	PFNGLCONVOLUTIONPARAMETERFVEXTPROC ext_glConvolutionParameterfvEXT = (PFNGLCONVOLUTIONPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLCONVOLUTIONPARAMETERIEXTPROC ext_glConvolutionParameteriEXT = (PFNGLCONVOLUTIONPARAMETERIEXTPROC)0xdeadbeef;
	PFNGLCONVOLUTIONPARAMETERIVEXTPROC ext_glConvolutionParameterivEXT = (PFNGLCONVOLUTIONPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC ext_glCopyConvolutionFilter1DEXT = (PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)0xdeadbeef;
	PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC ext_glCopyConvolutionFilter2DEXT = (PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)0xdeadbeef;
	PFNGLGETCONVOLUTIONFILTEREXTPROC ext_glGetConvolutionFilterEXT = (PFNGLGETCONVOLUTIONFILTEREXTPROC)0xdeadbeef;
	PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC ext_glGetConvolutionParameterfvEXT = (PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC ext_glGetConvolutionParameterivEXT = (PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLGETSEPARABLEFILTEREXTPROC ext_glGetSeparableFilterEXT = (PFNGLGETSEPARABLEFILTEREXTPROC)0xdeadbeef;
	PFNGLSEPARABLEFILTER2DEXTPROC ext_glSeparableFilter2DEXT = (PFNGLSEPARABLEFILTER2DEXTPROC)0xdeadbeef;
	PFNGLCOLORTABLESGIPROC ext_glColorTableSGI = (PFNGLCOLORTABLESGIPROC)0xdeadbeef;
	PFNGLCOLORTABLEPARAMETERFVSGIPROC ext_glColorTableParameterfvSGI = (PFNGLCOLORTABLEPARAMETERFVSGIPROC)0xdeadbeef;
	PFNGLCOLORTABLEPARAMETERIVSGIPROC ext_glColorTableParameterivSGI = (PFNGLCOLORTABLEPARAMETERIVSGIPROC)0xdeadbeef;
	PFNGLCOPYCOLORTABLESGIPROC ext_glCopyColorTableSGI = (PFNGLCOPYCOLORTABLESGIPROC)0xdeadbeef;
	PFNGLGETCOLORTABLESGIPROC ext_glGetColorTableSGI = (PFNGLGETCOLORTABLESGIPROC)0xdeadbeef;
	PFNGLGETCOLORTABLEPARAMETERFVSGIPROC ext_glGetColorTableParameterfvSGI = (PFNGLGETCOLORTABLEPARAMETERFVSGIPROC)0xdeadbeef;
	PFNGLGETCOLORTABLEPARAMETERIVSGIPROC ext_glGetColorTableParameterivSGI = (PFNGLGETCOLORTABLEPARAMETERIVSGIPROC)0xdeadbeef;
	PFNGLPIXELTEXGENSGIXPROC ext_glPixelTexGenSGIX = (PFNGLPIXELTEXGENSGIXPROC)0xdeadbeef;
	PFNGLPIXELTEXGENPARAMETERISGISPROC ext_glPixelTexGenParameteriSGIS = (PFNGLPIXELTEXGENPARAMETERISGISPROC)0xdeadbeef;
	PFNGLPIXELTEXGENPARAMETERIVSGISPROC ext_glPixelTexGenParameterivSGIS = (PFNGLPIXELTEXGENPARAMETERIVSGISPROC)0xdeadbeef;
	PFNGLPIXELTEXGENPARAMETERFSGISPROC ext_glPixelTexGenParameterfSGIS = (PFNGLPIXELTEXGENPARAMETERFSGISPROC)0xdeadbeef;
	PFNGLPIXELTEXGENPARAMETERFVSGISPROC ext_glPixelTexGenParameterfvSGIS = (PFNGLPIXELTEXGENPARAMETERFVSGISPROC)0xdeadbeef;
	PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC ext_glGetPixelTexGenParameterivSGIS = (PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC)0xdeadbeef;
	PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC ext_glGetPixelTexGenParameterfvSGIS = (PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC)0xdeadbeef;
	PFNGLTEXIMAGE4DSGISPROC ext_glTexImage4DSGIS = (PFNGLTEXIMAGE4DSGISPROC)0xdeadbeef;
	PFNGLTEXSUBIMAGE4DSGISPROC ext_glTexSubImage4DSGIS = (PFNGLTEXSUBIMAGE4DSGISPROC)0xdeadbeef;
	PFNGLARETEXTURESRESIDENTEXTPROC ext_glAreTexturesResidentEXT = (PFNGLARETEXTURESRESIDENTEXTPROC)0xdeadbeef;
	PFNGLBINDTEXTUREEXTPROC ext_glBindTextureEXT = (PFNGLBINDTEXTUREEXTPROC)0xdeadbeef;
	PFNGLDELETETEXTURESEXTPROC ext_glDeleteTexturesEXT = (PFNGLDELETETEXTURESEXTPROC)0xdeadbeef;
	PFNGLGENTEXTURESEXTPROC ext_glGenTexturesEXT = (PFNGLGENTEXTURESEXTPROC)0xdeadbeef;
	PFNGLISTEXTUREEXTPROC ext_glIsTextureEXT = (PFNGLISTEXTUREEXTPROC)0xdeadbeef;
	PFNGLPRIORITIZETEXTURESEXTPROC ext_glPrioritizeTexturesEXT = (PFNGLPRIORITIZETEXTURESEXTPROC)0xdeadbeef;
	PFNGLDETAILTEXFUNCSGISPROC ext_glDetailTexFuncSGIS = (PFNGLDETAILTEXFUNCSGISPROC)0xdeadbeef;
	PFNGLGETDETAILTEXFUNCSGISPROC ext_glGetDetailTexFuncSGIS = (PFNGLGETDETAILTEXFUNCSGISPROC)0xdeadbeef;
	PFNGLSHARPENTEXFUNCSGISPROC ext_glSharpenTexFuncSGIS = (PFNGLSHARPENTEXFUNCSGISPROC)0xdeadbeef;
	PFNGLGETSHARPENTEXFUNCSGISPROC ext_glGetSharpenTexFuncSGIS = (PFNGLGETSHARPENTEXFUNCSGISPROC)0xdeadbeef;
	PFNGLSAMPLEMASKSGISPROC ext_glSampleMaskSGIS = (PFNGLSAMPLEMASKSGISPROC)0xdeadbeef;
	PFNGLSAMPLEPATTERNSGISPROC ext_glSamplePatternSGIS = (PFNGLSAMPLEPATTERNSGISPROC)0xdeadbeef;
	PFNGLARRAYELEMENTEXTPROC ext_glArrayElementEXT = (PFNGLARRAYELEMENTEXTPROC)0xdeadbeef;
	PFNGLCOLORPOINTEREXTPROC ext_glColorPointerEXT = (PFNGLCOLORPOINTEREXTPROC)0xdeadbeef;
	PFNGLDRAWARRAYSEXTPROC ext_glDrawArraysEXT = (PFNGLDRAWARRAYSEXTPROC)0xdeadbeef;
	PFNGLEDGEFLAGPOINTEREXTPROC ext_glEdgeFlagPointerEXT = (PFNGLEDGEFLAGPOINTEREXTPROC)0xdeadbeef;
	PFNGLINDEXPOINTEREXTPROC ext_glIndexPointerEXT = (PFNGLINDEXPOINTEREXTPROC)0xdeadbeef;
	PFNGLNORMALPOINTEREXTPROC ext_glNormalPointerEXT = (PFNGLNORMALPOINTEREXTPROC)0xdeadbeef;
	PFNGLTEXCOORDPOINTEREXTPROC ext_glTexCoordPointerEXT = (PFNGLTEXCOORDPOINTEREXTPROC)0xdeadbeef;
	PFNGLVERTEXPOINTEREXTPROC ext_glVertexPointerEXT = (PFNGLVERTEXPOINTEREXTPROC)0xdeadbeef;
	PFNGLBLENDEQUATIONEXTPROC ext_glBlendEquationEXT = (PFNGLBLENDEQUATIONEXTPROC)0xdeadbeef;
	PFNGLSPRITEPARAMETERFSGIXPROC ext_glSpriteParameterfSGIX = (PFNGLSPRITEPARAMETERFSGIXPROC)0xdeadbeef;
	PFNGLSPRITEPARAMETERFVSGIXPROC ext_glSpriteParameterfvSGIX = (PFNGLSPRITEPARAMETERFVSGIXPROC)0xdeadbeef;
	PFNGLSPRITEPARAMETERISGIXPROC ext_glSpriteParameteriSGIX = (PFNGLSPRITEPARAMETERISGIXPROC)0xdeadbeef;
	PFNGLSPRITEPARAMETERIVSGIXPROC ext_glSpriteParameterivSGIX = (PFNGLSPRITEPARAMETERIVSGIXPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERFEXTPROC ext_glPointParameterfEXT = (PFNGLPOINTPARAMETERFEXTPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERFVEXTPROC ext_glPointParameterfvEXT = (PFNGLPOINTPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERFSGISPROC ext_glPointParameterfSGIS = (PFNGLPOINTPARAMETERFSGISPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERFVSGISPROC ext_glPointParameterfvSGIS = (PFNGLPOINTPARAMETERFVSGISPROC)0xdeadbeef;
	PFNGLGETINSTRUMENTSSGIXPROC ext_glGetInstrumentsSGIX = (PFNGLGETINSTRUMENTSSGIXPROC)0xdeadbeef;
	PFNGLINSTRUMENTSBUFFERSGIXPROC ext_glInstrumentsBufferSGIX = (PFNGLINSTRUMENTSBUFFERSGIXPROC)0xdeadbeef;
	PFNGLPOLLINSTRUMENTSSGIXPROC ext_glPollInstrumentsSGIX = (PFNGLPOLLINSTRUMENTSSGIXPROC)0xdeadbeef;
	PFNGLREADINSTRUMENTSSGIXPROC ext_glReadInstrumentsSGIX = (PFNGLREADINSTRUMENTSSGIXPROC)0xdeadbeef;
	PFNGLSTARTINSTRUMENTSSGIXPROC ext_glStartInstrumentsSGIX = (PFNGLSTARTINSTRUMENTSSGIXPROC)0xdeadbeef;
	PFNGLSTOPINSTRUMENTSSGIXPROC ext_glStopInstrumentsSGIX = (PFNGLSTOPINSTRUMENTSSGIXPROC)0xdeadbeef;
	PFNGLFRAMEZOOMSGIXPROC ext_glFrameZoomSGIX = (PFNGLFRAMEZOOMSGIXPROC)0xdeadbeef;
	PFNGLTAGSAMPLEBUFFERSGIXPROC ext_glTagSampleBufferSGIX = (PFNGLTAGSAMPLEBUFFERSGIXPROC)0xdeadbeef;
	PFNGLDEFORMATIONMAP3DSGIXPROC ext_glDeformationMap3dSGIX = (PFNGLDEFORMATIONMAP3DSGIXPROC)0xdeadbeef;
	PFNGLDEFORMATIONMAP3FSGIXPROC ext_glDeformationMap3fSGIX = (PFNGLDEFORMATIONMAP3FSGIXPROC)0xdeadbeef;
	PFNGLDEFORMSGIXPROC ext_glDeformSGIX = (PFNGLDEFORMSGIXPROC)0xdeadbeef;
	PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC ext_glLoadIdentityDeformationMapSGIX = (PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC)0xdeadbeef;
	PFNGLREFERENCEPLANESGIXPROC ext_glReferencePlaneSGIX = (PFNGLREFERENCEPLANESGIXPROC)0xdeadbeef;
	PFNGLFLUSHRASTERSGIXPROC ext_glFlushRasterSGIX = (PFNGLFLUSHRASTERSGIXPROC)0xdeadbeef;
	PFNGLFOGFUNCSGISPROC ext_glFogFuncSGIS = (PFNGLFOGFUNCSGISPROC)0xdeadbeef;
	PFNGLGETFOGFUNCSGISPROC ext_glGetFogFuncSGIS = (PFNGLGETFOGFUNCSGISPROC)0xdeadbeef;
	PFNGLIMAGETRANSFORMPARAMETERIHPPROC ext_glImageTransformParameteriHP = (PFNGLIMAGETRANSFORMPARAMETERIHPPROC)0xdeadbeef;
	PFNGLIMAGETRANSFORMPARAMETERFHPPROC ext_glImageTransformParameterfHP = (PFNGLIMAGETRANSFORMPARAMETERFHPPROC)0xdeadbeef;
	PFNGLIMAGETRANSFORMPARAMETERIVHPPROC ext_glImageTransformParameterivHP = (PFNGLIMAGETRANSFORMPARAMETERIVHPPROC)0xdeadbeef;
	PFNGLIMAGETRANSFORMPARAMETERFVHPPROC ext_glImageTransformParameterfvHP = (PFNGLIMAGETRANSFORMPARAMETERFVHPPROC)0xdeadbeef;
	PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC ext_glGetImageTransformParameterivHP = (PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC)0xdeadbeef;
	PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC ext_glGetImageTransformParameterfvHP = (PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC)0xdeadbeef;
	PFNGLCOLORSUBTABLEEXTPROC ext_glColorSubTableEXT = (PFNGLCOLORSUBTABLEEXTPROC)0xdeadbeef;
	PFNGLCOPYCOLORSUBTABLEEXTPROC ext_glCopyColorSubTableEXT = (PFNGLCOPYCOLORSUBTABLEEXTPROC)0xdeadbeef;
	PFNGLHINTPGIPROC ext_glHintPGI = (PFNGLHINTPGIPROC)0xdeadbeef;
	PFNGLCOLORTABLEEXTPROC ext_glColorTableEXT = (PFNGLCOLORTABLEEXTPROC)0xdeadbeef;
	PFNGLGETCOLORTABLEEXTPROC ext_glGetColorTableEXT = (PFNGLGETCOLORTABLEEXTPROC)0xdeadbeef;
	PFNGLGETCOLORTABLEPARAMETERIVEXTPROC ext_glGetColorTableParameterivEXT = (PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLGETCOLORTABLEPARAMETERFVEXTPROC ext_glGetColorTableParameterfvEXT = (PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLGETLISTPARAMETERFVSGIXPROC ext_glGetListParameterfvSGIX = (PFNGLGETLISTPARAMETERFVSGIXPROC)0xdeadbeef;
	PFNGLGETLISTPARAMETERIVSGIXPROC ext_glGetListParameterivSGIX = (PFNGLGETLISTPARAMETERIVSGIXPROC)0xdeadbeef;
	PFNGLLISTPARAMETERFSGIXPROC ext_glListParameterfSGIX = (PFNGLLISTPARAMETERFSGIXPROC)0xdeadbeef;
	PFNGLLISTPARAMETERFVSGIXPROC ext_glListParameterfvSGIX = (PFNGLLISTPARAMETERFVSGIXPROC)0xdeadbeef;
	PFNGLLISTPARAMETERISGIXPROC ext_glListParameteriSGIX = (PFNGLLISTPARAMETERISGIXPROC)0xdeadbeef;
	PFNGLLISTPARAMETERIVSGIXPROC ext_glListParameterivSGIX = (PFNGLLISTPARAMETERIVSGIXPROC)0xdeadbeef;
	PFNGLINDEXMATERIALEXTPROC ext_glIndexMaterialEXT = (PFNGLINDEXMATERIALEXTPROC)0xdeadbeef;
	PFNGLINDEXFUNCEXTPROC ext_glIndexFuncEXT = (PFNGLINDEXFUNCEXTPROC)0xdeadbeef;
	PFNGLLOCKARRAYSEXTPROC ext_glLockArraysEXT = (PFNGLLOCKARRAYSEXTPROC)0xdeadbeef;
	PFNGLUNLOCKARRAYSEXTPROC ext_glUnlockArraysEXT = (PFNGLUNLOCKARRAYSEXTPROC)0xdeadbeef;
	PFNGLCULLPARAMETERDVEXTPROC ext_glCullParameterdvEXT = (PFNGLCULLPARAMETERDVEXTPROC)0xdeadbeef;
	PFNGLCULLPARAMETERFVEXTPROC ext_glCullParameterfvEXT = (PFNGLCULLPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLFRAGMENTCOLORMATERIALSGIXPROC ext_glFragmentColorMaterialSGIX = (PFNGLFRAGMENTCOLORMATERIALSGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTLIGHTFSGIXPROC ext_glFragmentLightfSGIX = (PFNGLFRAGMENTLIGHTFSGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTLIGHTFVSGIXPROC ext_glFragmentLightfvSGIX = (PFNGLFRAGMENTLIGHTFVSGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTLIGHTISGIXPROC ext_glFragmentLightiSGIX = (PFNGLFRAGMENTLIGHTISGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTLIGHTIVSGIXPROC ext_glFragmentLightivSGIX = (PFNGLFRAGMENTLIGHTIVSGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTLIGHTMODELFSGIXPROC ext_glFragmentLightModelfSGIX = (PFNGLFRAGMENTLIGHTMODELFSGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTLIGHTMODELFVSGIXPROC ext_glFragmentLightModelfvSGIX = (PFNGLFRAGMENTLIGHTMODELFVSGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTLIGHTMODELISGIXPROC ext_glFragmentLightModeliSGIX = (PFNGLFRAGMENTLIGHTMODELISGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTLIGHTMODELIVSGIXPROC ext_glFragmentLightModelivSGIX = (PFNGLFRAGMENTLIGHTMODELIVSGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTMATERIALFSGIXPROC ext_glFragmentMaterialfSGIX = (PFNGLFRAGMENTMATERIALFSGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTMATERIALFVSGIXPROC ext_glFragmentMaterialfvSGIX = (PFNGLFRAGMENTMATERIALFVSGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTMATERIALISGIXPROC ext_glFragmentMaterialiSGIX = (PFNGLFRAGMENTMATERIALISGIXPROC)0xdeadbeef;
	PFNGLFRAGMENTMATERIALIVSGIXPROC ext_glFragmentMaterialivSGIX = (PFNGLFRAGMENTMATERIALIVSGIXPROC)0xdeadbeef;
	PFNGLGETFRAGMENTLIGHTFVSGIXPROC ext_glGetFragmentLightfvSGIX = (PFNGLGETFRAGMENTLIGHTFVSGIXPROC)0xdeadbeef;
	PFNGLGETFRAGMENTLIGHTIVSGIXPROC ext_glGetFragmentLightivSGIX = (PFNGLGETFRAGMENTLIGHTIVSGIXPROC)0xdeadbeef;
	PFNGLGETFRAGMENTMATERIALFVSGIXPROC ext_glGetFragmentMaterialfvSGIX = (PFNGLGETFRAGMENTMATERIALFVSGIXPROC)0xdeadbeef;
	PFNGLGETFRAGMENTMATERIALIVSGIXPROC ext_glGetFragmentMaterialivSGIX = (PFNGLGETFRAGMENTMATERIALIVSGIXPROC)0xdeadbeef;
	PFNGLLIGHTENVISGIXPROC ext_glLightEnviSGIX = (PFNGLLIGHTENVISGIXPROC)0xdeadbeef;
	PFNGLDRAWRANGEELEMENTSEXTPROC ext_glDrawRangeElementsEXT = (PFNGLDRAWRANGEELEMENTSEXTPROC)0xdeadbeef;
	PFNGLAPPLYTEXTUREEXTPROC ext_glApplyTextureEXT = (PFNGLAPPLYTEXTUREEXTPROC)0xdeadbeef;
	PFNGLTEXTURELIGHTEXTPROC ext_glTextureLightEXT = (PFNGLTEXTURELIGHTEXTPROC)0xdeadbeef;
	PFNGLTEXTUREMATERIALEXTPROC ext_glTextureMaterialEXT = (PFNGLTEXTUREMATERIALEXTPROC)0xdeadbeef;
	PFNGLASYNCMARKERSGIXPROC ext_glAsyncMarkerSGIX = (PFNGLASYNCMARKERSGIXPROC)0xdeadbeef;
	PFNGLFINISHASYNCSGIXPROC ext_glFinishAsyncSGIX = (PFNGLFINISHASYNCSGIXPROC)0xdeadbeef;
	PFNGLPOLLASYNCSGIXPROC ext_glPollAsyncSGIX = (PFNGLPOLLASYNCSGIXPROC)0xdeadbeef;
	PFNGLGENASYNCMARKERSSGIXPROC ext_glGenAsyncMarkersSGIX = (PFNGLGENASYNCMARKERSSGIXPROC)0xdeadbeef;
	PFNGLDELETEASYNCMARKERSSGIXPROC ext_glDeleteAsyncMarkersSGIX = (PFNGLDELETEASYNCMARKERSSGIXPROC)0xdeadbeef;
	PFNGLISASYNCMARKERSGIXPROC ext_glIsAsyncMarkerSGIX = (PFNGLISASYNCMARKERSGIXPROC)0xdeadbeef;
	PFNGLVERTEXPOINTERVINTELPROC ext_glVertexPointervINTEL = (PFNGLVERTEXPOINTERVINTELPROC)0xdeadbeef;
	PFNGLNORMALPOINTERVINTELPROC ext_glNormalPointervINTEL = (PFNGLNORMALPOINTERVINTELPROC)0xdeadbeef;
	PFNGLCOLORPOINTERVINTELPROC ext_glColorPointervINTEL = (PFNGLCOLORPOINTERVINTELPROC)0xdeadbeef;
	PFNGLTEXCOORDPOINTERVINTELPROC ext_glTexCoordPointervINTEL = (PFNGLTEXCOORDPOINTERVINTELPROC)0xdeadbeef;
	PFNGLPIXELTRANSFORMPARAMETERIEXTPROC ext_glPixelTransformParameteriEXT = (PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)0xdeadbeef;
	PFNGLPIXELTRANSFORMPARAMETERFEXTPROC ext_glPixelTransformParameterfEXT = (PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)0xdeadbeef;
	PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC ext_glPixelTransformParameterivEXT = (PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC ext_glPixelTransformParameterfvEXT = (PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC ext_glGetPixelTransformParameterivEXT = (PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC ext_glGetPixelTransformParameterfvEXT = (PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3BEXTPROC ext_glSecondaryColor3bEXT = (PFNGLSECONDARYCOLOR3BEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3BVEXTPROC ext_glSecondaryColor3bvEXT = (PFNGLSECONDARYCOLOR3BVEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3DEXTPROC ext_glSecondaryColor3dEXT = (PFNGLSECONDARYCOLOR3DEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3DVEXTPROC ext_glSecondaryColor3dvEXT = (PFNGLSECONDARYCOLOR3DVEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3FEXTPROC ext_glSecondaryColor3fEXT = (PFNGLSECONDARYCOLOR3FEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3FVEXTPROC ext_glSecondaryColor3fvEXT = (PFNGLSECONDARYCOLOR3FVEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3IEXTPROC ext_glSecondaryColor3iEXT = (PFNGLSECONDARYCOLOR3IEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3IVEXTPROC ext_glSecondaryColor3ivEXT = (PFNGLSECONDARYCOLOR3IVEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3SEXTPROC ext_glSecondaryColor3sEXT = (PFNGLSECONDARYCOLOR3SEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3SVEXTPROC ext_glSecondaryColor3svEXT = (PFNGLSECONDARYCOLOR3SVEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3UBEXTPROC ext_glSecondaryColor3ubEXT = (PFNGLSECONDARYCOLOR3UBEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3UBVEXTPROC ext_glSecondaryColor3ubvEXT = (PFNGLSECONDARYCOLOR3UBVEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3UIEXTPROC ext_glSecondaryColor3uiEXT = (PFNGLSECONDARYCOLOR3UIEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3UIVEXTPROC ext_glSecondaryColor3uivEXT = (PFNGLSECONDARYCOLOR3UIVEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3USEXTPROC ext_glSecondaryColor3usEXT = (PFNGLSECONDARYCOLOR3USEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3USVEXTPROC ext_glSecondaryColor3usvEXT = (PFNGLSECONDARYCOLOR3USVEXTPROC)0xdeadbeef;
	PFNGLSECONDARYCOLORPOINTEREXTPROC ext_glSecondaryColorPointerEXT = (PFNGLSECONDARYCOLORPOINTEREXTPROC)0xdeadbeef;
	PFNGLTEXTURENORMALEXTPROC ext_glTextureNormalEXT = (PFNGLTEXTURENORMALEXTPROC)0xdeadbeef;
	PFNGLMULTIDRAWARRAYSEXTPROC ext_glMultiDrawArraysEXT = (PFNGLMULTIDRAWARRAYSEXTPROC)0xdeadbeef;
	PFNGLMULTIDRAWELEMENTSEXTPROC ext_glMultiDrawElementsEXT = (PFNGLMULTIDRAWELEMENTSEXTPROC)0xdeadbeef;
	PFNGLFOGCOORDFEXTPROC ext_glFogCoordfEXT = (PFNGLFOGCOORDFEXTPROC)0xdeadbeef;
	PFNGLFOGCOORDFVEXTPROC ext_glFogCoordfvEXT = (PFNGLFOGCOORDFVEXTPROC)0xdeadbeef;
	PFNGLFOGCOORDDEXTPROC ext_glFogCoorddEXT = (PFNGLFOGCOORDDEXTPROC)0xdeadbeef;
	PFNGLFOGCOORDDVEXTPROC ext_glFogCoorddvEXT = (PFNGLFOGCOORDDVEXTPROC)0xdeadbeef;
	PFNGLFOGCOORDPOINTEREXTPROC ext_glFogCoordPointerEXT = (PFNGLFOGCOORDPOINTEREXTPROC)0xdeadbeef;
	PFNGLTANGENT3BEXTPROC ext_glTangent3bEXT = (PFNGLTANGENT3BEXTPROC)0xdeadbeef;
	PFNGLTANGENT3BVEXTPROC ext_glTangent3bvEXT = (PFNGLTANGENT3BVEXTPROC)0xdeadbeef;
	PFNGLTANGENT3DEXTPROC ext_glTangent3dEXT = (PFNGLTANGENT3DEXTPROC)0xdeadbeef;
	PFNGLTANGENT3DVEXTPROC ext_glTangent3dvEXT = (PFNGLTANGENT3DVEXTPROC)0xdeadbeef;
	PFNGLTANGENT3FEXTPROC ext_glTangent3fEXT = (PFNGLTANGENT3FEXTPROC)0xdeadbeef;
	PFNGLTANGENT3FVEXTPROC ext_glTangent3fvEXT = (PFNGLTANGENT3FVEXTPROC)0xdeadbeef;
	PFNGLTANGENT3IEXTPROC ext_glTangent3iEXT = (PFNGLTANGENT3IEXTPROC)0xdeadbeef;
	PFNGLTANGENT3IVEXTPROC ext_glTangent3ivEXT = (PFNGLTANGENT3IVEXTPROC)0xdeadbeef;
	PFNGLTANGENT3SEXTPROC ext_glTangent3sEXT = (PFNGLTANGENT3SEXTPROC)0xdeadbeef;
	PFNGLTANGENT3SVEXTPROC ext_glTangent3svEXT = (PFNGLTANGENT3SVEXTPROC)0xdeadbeef;
	PFNGLBINORMAL3BEXTPROC ext_glBinormal3bEXT = (PFNGLBINORMAL3BEXTPROC)0xdeadbeef;
	PFNGLBINORMAL3BVEXTPROC ext_glBinormal3bvEXT = (PFNGLBINORMAL3BVEXTPROC)0xdeadbeef;
	PFNGLBINORMAL3DEXTPROC ext_glBinormal3dEXT = (PFNGLBINORMAL3DEXTPROC)0xdeadbeef;
	PFNGLBINORMAL3DVEXTPROC ext_glBinormal3dvEXT = (PFNGLBINORMAL3DVEXTPROC)0xdeadbeef;
	PFNGLBINORMAL3FEXTPROC ext_glBinormal3fEXT = (PFNGLBINORMAL3FEXTPROC)0xdeadbeef;
	PFNGLBINORMAL3FVEXTPROC ext_glBinormal3fvEXT = (PFNGLBINORMAL3FVEXTPROC)0xdeadbeef;
	PFNGLBINORMAL3IEXTPROC ext_glBinormal3iEXT = (PFNGLBINORMAL3IEXTPROC)0xdeadbeef;
	PFNGLBINORMAL3IVEXTPROC ext_glBinormal3ivEXT = (PFNGLBINORMAL3IVEXTPROC)0xdeadbeef;
	PFNGLBINORMAL3SEXTPROC ext_glBinormal3sEXT = (PFNGLBINORMAL3SEXTPROC)0xdeadbeef;
	PFNGLBINORMAL3SVEXTPROC ext_glBinormal3svEXT = (PFNGLBINORMAL3SVEXTPROC)0xdeadbeef;
	PFNGLTANGENTPOINTEREXTPROC ext_glTangentPointerEXT = (PFNGLTANGENTPOINTEREXTPROC)0xdeadbeef;
	PFNGLBINORMALPOINTEREXTPROC ext_glBinormalPointerEXT = (PFNGLBINORMALPOINTEREXTPROC)0xdeadbeef;
	PFNGLFINISHTEXTURESUNXPROC ext_glFinishTextureSUNX = (PFNGLFINISHTEXTURESUNXPROC)0xdeadbeef;
	PFNGLGLOBALALPHAFACTORBSUNPROC ext_glGlobalAlphaFactorbSUN = (PFNGLGLOBALALPHAFACTORBSUNPROC)0xdeadbeef;
	PFNGLGLOBALALPHAFACTORSSUNPROC ext_glGlobalAlphaFactorsSUN = (PFNGLGLOBALALPHAFACTORSSUNPROC)0xdeadbeef;
	PFNGLGLOBALALPHAFACTORISUNPROC ext_glGlobalAlphaFactoriSUN = (PFNGLGLOBALALPHAFACTORISUNPROC)0xdeadbeef;
	PFNGLGLOBALALPHAFACTORFSUNPROC ext_glGlobalAlphaFactorfSUN = (PFNGLGLOBALALPHAFACTORFSUNPROC)0xdeadbeef;
	PFNGLGLOBALALPHAFACTORDSUNPROC ext_glGlobalAlphaFactordSUN = (PFNGLGLOBALALPHAFACTORDSUNPROC)0xdeadbeef;
	PFNGLGLOBALALPHAFACTORUBSUNPROC ext_glGlobalAlphaFactorubSUN = (PFNGLGLOBALALPHAFACTORUBSUNPROC)0xdeadbeef;
	PFNGLGLOBALALPHAFACTORUSSUNPROC ext_glGlobalAlphaFactorusSUN = (PFNGLGLOBALALPHAFACTORUSSUNPROC)0xdeadbeef;
	PFNGLGLOBALALPHAFACTORUISUNPROC ext_glGlobalAlphaFactoruiSUN = (PFNGLGLOBALALPHAFACTORUISUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUISUNPROC ext_glReplacementCodeuiSUN = (PFNGLREPLACEMENTCODEUISUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUSSUNPROC ext_glReplacementCodeusSUN = (PFNGLREPLACEMENTCODEUSSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUBSUNPROC ext_glReplacementCodeubSUN = (PFNGLREPLACEMENTCODEUBSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUIVSUNPROC ext_glReplacementCodeuivSUN = (PFNGLREPLACEMENTCODEUIVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUSVSUNPROC ext_glReplacementCodeusvSUN = (PFNGLREPLACEMENTCODEUSVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUBVSUNPROC ext_glReplacementCodeubvSUN = (PFNGLREPLACEMENTCODEUBVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEPOINTERSUNPROC ext_glReplacementCodePointerSUN = (PFNGLREPLACEMENTCODEPOINTERSUNPROC)0xdeadbeef;
	PFNGLCOLOR4UBVERTEX2FSUNPROC ext_glColor4ubVertex2fSUN = (PFNGLCOLOR4UBVERTEX2FSUNPROC)0xdeadbeef;
	PFNGLCOLOR4UBVERTEX2FVSUNPROC ext_glColor4ubVertex2fvSUN = (PFNGLCOLOR4UBVERTEX2FVSUNPROC)0xdeadbeef;
	PFNGLCOLOR4UBVERTEX3FSUNPROC ext_glColor4ubVertex3fSUN = (PFNGLCOLOR4UBVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLCOLOR4UBVERTEX3FVSUNPROC ext_glColor4ubVertex3fvSUN = (PFNGLCOLOR4UBVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLCOLOR3FVERTEX3FSUNPROC ext_glColor3fVertex3fSUN = (PFNGLCOLOR3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLCOLOR3FVERTEX3FVSUNPROC ext_glColor3fVertex3fvSUN = (PFNGLCOLOR3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLNORMAL3FVERTEX3FSUNPROC ext_glNormal3fVertex3fSUN = (PFNGLNORMAL3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLNORMAL3FVERTEX3FVSUNPROC ext_glNormal3fVertex3fvSUN = (PFNGLNORMAL3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC ext_glColor4fNormal3fVertex3fSUN = (PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC ext_glColor4fNormal3fVertex3fvSUN = (PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD2FVERTEX3FSUNPROC ext_glTexCoord2fVertex3fSUN = (PFNGLTEXCOORD2FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD2FVERTEX3FVSUNPROC ext_glTexCoord2fVertex3fvSUN = (PFNGLTEXCOORD2FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD4FVERTEX4FSUNPROC ext_glTexCoord4fVertex4fSUN = (PFNGLTEXCOORD4FVERTEX4FSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD4FVERTEX4FVSUNPROC ext_glTexCoord4fVertex4fvSUN = (PFNGLTEXCOORD4FVERTEX4FVSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC ext_glTexCoord2fColor4ubVertex3fSUN = (PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC ext_glTexCoord2fColor4ubVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC ext_glTexCoord2fColor3fVertex3fSUN = (PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC ext_glTexCoord2fColor3fVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC ext_glTexCoord2fNormal3fVertex3fSUN = (PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC ext_glTexCoord2fNormal3fVertex3fvSUN = (PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC ext_glTexCoord2fColor4fNormal3fVertex3fSUN = (PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC ext_glTexCoord2fColor4fNormal3fVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC ext_glTexCoord4fColor4fNormal3fVertex4fSUN = (PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC)0xdeadbeef;
	PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC ext_glTexCoord4fColor4fNormal3fVertex4fvSUN = (PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC ext_glReplacementCodeuiVertex3fSUN = (PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC ext_glReplacementCodeuiVertex3fvSUN = (PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC ext_glReplacementCodeuiColor4ubVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC ext_glReplacementCodeuiColor4ubVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC ext_glReplacementCodeuiColor3fVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC ext_glReplacementCodeuiColor3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC ext_glReplacementCodeuiNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC ext_glReplacementCodeuiNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC ext_glReplacementCodeuiColor4fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC ext_glReplacementCodeuiColor4fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC ext_glReplacementCodeuiTexCoord2fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC ext_glReplacementCodeuiTexCoord2fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC ext_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC ext_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC ext_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)0xdeadbeef;
	PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC ext_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)0xdeadbeef;
	PFNGLBLENDFUNCSEPARATEEXTPROC ext_glBlendFuncSeparateEXT = (PFNGLBLENDFUNCSEPARATEEXTPROC)0xdeadbeef;
	PFNGLBLENDFUNCSEPARATEINGRPROC ext_glBlendFuncSeparateINGR = (PFNGLBLENDFUNCSEPARATEINGRPROC)0xdeadbeef;
	PFNGLVERTEXWEIGHTFEXTPROC ext_glVertexWeightfEXT = (PFNGLVERTEXWEIGHTFEXTPROC)0xdeadbeef;
	PFNGLVERTEXWEIGHTFVEXTPROC ext_glVertexWeightfvEXT = (PFNGLVERTEXWEIGHTFVEXTPROC)0xdeadbeef;
	PFNGLVERTEXWEIGHTPOINTEREXTPROC ext_glVertexWeightPointerEXT = (PFNGLVERTEXWEIGHTPOINTEREXTPROC)0xdeadbeef;
	PFNGLFLUSHVERTEXARRAYRANGENVPROC ext_glFlushVertexArrayRangeNV = (PFNGLFLUSHVERTEXARRAYRANGENVPROC)0xdeadbeef;
	PFNGLVERTEXARRAYRANGENVPROC ext_glVertexArrayRangeNV = (PFNGLVERTEXARRAYRANGENVPROC)0xdeadbeef;
	PFNGLCOMBINERPARAMETERFVNVPROC ext_glCombinerParameterfvNV = (PFNGLCOMBINERPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLCOMBINERPARAMETERFNVPROC ext_glCombinerParameterfNV = (PFNGLCOMBINERPARAMETERFNVPROC)0xdeadbeef;
	PFNGLCOMBINERPARAMETERIVNVPROC ext_glCombinerParameterivNV = (PFNGLCOMBINERPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLCOMBINERPARAMETERINVPROC ext_glCombinerParameteriNV = (PFNGLCOMBINERPARAMETERINVPROC)0xdeadbeef;
	PFNGLCOMBINERINPUTNVPROC ext_glCombinerInputNV = (PFNGLCOMBINERINPUTNVPROC)0xdeadbeef;
	PFNGLCOMBINEROUTPUTNVPROC ext_glCombinerOutputNV = (PFNGLCOMBINEROUTPUTNVPROC)0xdeadbeef;
	PFNGLFINALCOMBINERINPUTNVPROC ext_glFinalCombinerInputNV = (PFNGLFINALCOMBINERINPUTNVPROC)0xdeadbeef;
	PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC ext_glGetCombinerInputParameterfvNV = (PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC ext_glGetCombinerInputParameterivNV = (PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC ext_glGetCombinerOutputParameterfvNV = (PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC ext_glGetCombinerOutputParameterivNV = (PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC ext_glGetFinalCombinerInputParameterfvNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC ext_glGetFinalCombinerInputParameterivNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLRESIZEBUFFERSMESAPROC ext_glResizeBuffersMESA = (PFNGLRESIZEBUFFERSMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS2DMESAPROC ext_glWindowPos2dMESA = (PFNGLWINDOWPOS2DMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS2DVMESAPROC ext_glWindowPos2dvMESA = (PFNGLWINDOWPOS2DVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS2FMESAPROC ext_glWindowPos2fMESA = (PFNGLWINDOWPOS2FMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS2FVMESAPROC ext_glWindowPos2fvMESA = (PFNGLWINDOWPOS2FVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS2IMESAPROC ext_glWindowPos2iMESA = (PFNGLWINDOWPOS2IMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS2IVMESAPROC ext_glWindowPos2ivMESA = (PFNGLWINDOWPOS2IVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS2SMESAPROC ext_glWindowPos2sMESA = (PFNGLWINDOWPOS2SMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS2SVMESAPROC ext_glWindowPos2svMESA = (PFNGLWINDOWPOS2SVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS3DMESAPROC ext_glWindowPos3dMESA = (PFNGLWINDOWPOS3DMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS3DVMESAPROC ext_glWindowPos3dvMESA = (PFNGLWINDOWPOS3DVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS3FMESAPROC ext_glWindowPos3fMESA = (PFNGLWINDOWPOS3FMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS3FVMESAPROC ext_glWindowPos3fvMESA = (PFNGLWINDOWPOS3FVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS3IMESAPROC ext_glWindowPos3iMESA = (PFNGLWINDOWPOS3IMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS3IVMESAPROC ext_glWindowPos3ivMESA = (PFNGLWINDOWPOS3IVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS3SMESAPROC ext_glWindowPos3sMESA = (PFNGLWINDOWPOS3SMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS3SVMESAPROC ext_glWindowPos3svMESA = (PFNGLWINDOWPOS3SVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS4DMESAPROC ext_glWindowPos4dMESA = (PFNGLWINDOWPOS4DMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS4DVMESAPROC ext_glWindowPos4dvMESA = (PFNGLWINDOWPOS4DVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS4FMESAPROC ext_glWindowPos4fMESA = (PFNGLWINDOWPOS4FMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS4FVMESAPROC ext_glWindowPos4fvMESA = (PFNGLWINDOWPOS4FVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS4IMESAPROC ext_glWindowPos4iMESA = (PFNGLWINDOWPOS4IMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS4IVMESAPROC ext_glWindowPos4ivMESA = (PFNGLWINDOWPOS4IVMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS4SMESAPROC ext_glWindowPos4sMESA = (PFNGLWINDOWPOS4SMESAPROC)0xdeadbeef;
	PFNGLWINDOWPOS4SVMESAPROC ext_glWindowPos4svMESA = (PFNGLWINDOWPOS4SVMESAPROC)0xdeadbeef;
	PFNGLMULTIMODEDRAWARRAYSIBMPROC ext_glMultiModeDrawArraysIBM = (PFNGLMULTIMODEDRAWARRAYSIBMPROC)0xdeadbeef;
	PFNGLMULTIMODEDRAWELEMENTSIBMPROC ext_glMultiModeDrawElementsIBM = (PFNGLMULTIMODEDRAWELEMENTSIBMPROC)0xdeadbeef;
	PFNGLCOLORPOINTERLISTIBMPROC ext_glColorPointerListIBM = (PFNGLCOLORPOINTERLISTIBMPROC)0xdeadbeef;
	PFNGLSECONDARYCOLORPOINTERLISTIBMPROC ext_glSecondaryColorPointerListIBM = (PFNGLSECONDARYCOLORPOINTERLISTIBMPROC)0xdeadbeef;
	PFNGLEDGEFLAGPOINTERLISTIBMPROC ext_glEdgeFlagPointerListIBM = (PFNGLEDGEFLAGPOINTERLISTIBMPROC)0xdeadbeef;
	PFNGLFOGCOORDPOINTERLISTIBMPROC ext_glFogCoordPointerListIBM = (PFNGLFOGCOORDPOINTERLISTIBMPROC)0xdeadbeef;
	PFNGLINDEXPOINTERLISTIBMPROC ext_glIndexPointerListIBM = (PFNGLINDEXPOINTERLISTIBMPROC)0xdeadbeef;
	PFNGLNORMALPOINTERLISTIBMPROC ext_glNormalPointerListIBM = (PFNGLNORMALPOINTERLISTIBMPROC)0xdeadbeef;
	PFNGLTEXCOORDPOINTERLISTIBMPROC ext_glTexCoordPointerListIBM = (PFNGLTEXCOORDPOINTERLISTIBMPROC)0xdeadbeef;
	PFNGLVERTEXPOINTERLISTIBMPROC ext_glVertexPointerListIBM = (PFNGLVERTEXPOINTERLISTIBMPROC)0xdeadbeef;
	PFNGLTBUFFERMASK3DFXPROC ext_glTbufferMask3DFX = (PFNGLTBUFFERMASK3DFXPROC)0xdeadbeef;
	PFNGLSAMPLEMASKEXTPROC ext_glSampleMaskEXT = (PFNGLSAMPLEMASKEXTPROC)0xdeadbeef;
	PFNGLSAMPLEPATTERNEXTPROC ext_glSamplePatternEXT = (PFNGLSAMPLEPATTERNEXTPROC)0xdeadbeef;
	PFNGLTEXTURECOLORMASKSGISPROC ext_glTextureColorMaskSGIS = (PFNGLTEXTURECOLORMASKSGISPROC)0xdeadbeef;
	PFNGLIGLOOINTERFACESGIXPROC ext_glIglooInterfaceSGIX = (PFNGLIGLOOINTERFACESGIXPROC)0xdeadbeef;
	PFNGLDELETEFENCESNVPROC ext_glDeleteFencesNV = (PFNGLDELETEFENCESNVPROC)0xdeadbeef;
	PFNGLGENFENCESNVPROC ext_glGenFencesNV = (PFNGLGENFENCESNVPROC)0xdeadbeef;
	PFNGLISFENCENVPROC ext_glIsFenceNV = (PFNGLISFENCENVPROC)0xdeadbeef;
	PFNGLTESTFENCENVPROC ext_glTestFenceNV = (PFNGLTESTFENCENVPROC)0xdeadbeef;
	PFNGLGETFENCEIVNVPROC ext_glGetFenceivNV = (PFNGLGETFENCEIVNVPROC)0xdeadbeef;
	PFNGLFINISHFENCENVPROC ext_glFinishFenceNV = (PFNGLFINISHFENCENVPROC)0xdeadbeef;
	PFNGLSETFENCENVPROC ext_glSetFenceNV = (PFNGLSETFENCENVPROC)0xdeadbeef;
	PFNGLMAPCONTROLPOINTSNVPROC ext_glMapControlPointsNV = (PFNGLMAPCONTROLPOINTSNVPROC)0xdeadbeef;
	PFNGLMAPPARAMETERIVNVPROC ext_glMapParameterivNV = (PFNGLMAPPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLMAPPARAMETERFVNVPROC ext_glMapParameterfvNV = (PFNGLMAPPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLGETMAPCONTROLPOINTSNVPROC ext_glGetMapControlPointsNV = (PFNGLGETMAPCONTROLPOINTSNVPROC)0xdeadbeef;
	PFNGLGETMAPPARAMETERIVNVPROC ext_glGetMapParameterivNV = (PFNGLGETMAPPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLGETMAPPARAMETERFVNVPROC ext_glGetMapParameterfvNV = (PFNGLGETMAPPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLGETMAPATTRIBPARAMETERIVNVPROC ext_glGetMapAttribParameterivNV = (PFNGLGETMAPATTRIBPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLGETMAPATTRIBPARAMETERFVNVPROC ext_glGetMapAttribParameterfvNV = (PFNGLGETMAPATTRIBPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLEVALMAPSNVPROC ext_glEvalMapsNV = (PFNGLEVALMAPSNVPROC)0xdeadbeef;
	PFNGLCOMBINERSTAGEPARAMETERFVNVPROC ext_glCombinerStageParameterfvNV = (PFNGLCOMBINERSTAGEPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC ext_glGetCombinerStageParameterfvNV = (PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLAREPROGRAMSRESIDENTNVPROC ext_glAreProgramsResidentNV = (PFNGLAREPROGRAMSRESIDENTNVPROC)0xdeadbeef;
	PFNGLBINDPROGRAMNVPROC ext_glBindProgramNV = (PFNGLBINDPROGRAMNVPROC)0xdeadbeef;
	PFNGLDELETEPROGRAMSNVPROC ext_glDeleteProgramsNV = (PFNGLDELETEPROGRAMSNVPROC)0xdeadbeef;
	PFNGLEXECUTEPROGRAMNVPROC ext_glExecuteProgramNV = (PFNGLEXECUTEPROGRAMNVPROC)0xdeadbeef;
	PFNGLGENPROGRAMSNVPROC ext_glGenProgramsNV = (PFNGLGENPROGRAMSNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMPARAMETERDVNVPROC ext_glGetProgramParameterdvNV = (PFNGLGETPROGRAMPARAMETERDVNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMPARAMETERFVNVPROC ext_glGetProgramParameterfvNV = (PFNGLGETPROGRAMPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMIVNVPROC ext_glGetProgramivNV = (PFNGLGETPROGRAMIVNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMSTRINGNVPROC ext_glGetProgramStringNV = (PFNGLGETPROGRAMSTRINGNVPROC)0xdeadbeef;
	PFNGLGETTRACKMATRIXIVNVPROC ext_glGetTrackMatrixivNV = (PFNGLGETTRACKMATRIXIVNVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBDVNVPROC ext_glGetVertexAttribdvNV = (PFNGLGETVERTEXATTRIBDVNVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBFVNVPROC ext_glGetVertexAttribfvNV = (PFNGLGETVERTEXATTRIBFVNVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBIVNVPROC ext_glGetVertexAttribivNV = (PFNGLGETVERTEXATTRIBIVNVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBPOINTERVNVPROC ext_glGetVertexAttribPointervNV = (PFNGLGETVERTEXATTRIBPOINTERVNVPROC)0xdeadbeef;
	PFNGLISPROGRAMNVPROC ext_glIsProgramNV = (PFNGLISPROGRAMNVPROC)0xdeadbeef;
	PFNGLLOADPROGRAMNVPROC ext_glLoadProgramNV = (PFNGLLOADPROGRAMNVPROC)0xdeadbeef;
	PFNGLPROGRAMPARAMETER4DNVPROC ext_glProgramParameter4dNV = (PFNGLPROGRAMPARAMETER4DNVPROC)0xdeadbeef;
	PFNGLPROGRAMPARAMETER4DVNVPROC ext_glProgramParameter4dvNV = (PFNGLPROGRAMPARAMETER4DVNVPROC)0xdeadbeef;
	PFNGLPROGRAMPARAMETER4FNVPROC ext_glProgramParameter4fNV = (PFNGLPROGRAMPARAMETER4FNVPROC)0xdeadbeef;
	PFNGLPROGRAMPARAMETER4FVNVPROC ext_glProgramParameter4fvNV = (PFNGLPROGRAMPARAMETER4FVNVPROC)0xdeadbeef;
	PFNGLPROGRAMPARAMETERS4DVNVPROC ext_glProgramParameters4dvNV = (PFNGLPROGRAMPARAMETERS4DVNVPROC)0xdeadbeef;
	PFNGLPROGRAMPARAMETERS4FVNVPROC ext_glProgramParameters4fvNV = (PFNGLPROGRAMPARAMETERS4FVNVPROC)0xdeadbeef;
	PFNGLREQUESTRESIDENTPROGRAMSNVPROC ext_glRequestResidentProgramsNV = (PFNGLREQUESTRESIDENTPROGRAMSNVPROC)0xdeadbeef;
	PFNGLTRACKMATRIXNVPROC ext_glTrackMatrixNV = (PFNGLTRACKMATRIXNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBPOINTERNVPROC ext_glVertexAttribPointerNV = (PFNGLVERTEXATTRIBPOINTERNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1DNVPROC ext_glVertexAttrib1dNV = (PFNGLVERTEXATTRIB1DNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1DVNVPROC ext_glVertexAttrib1dvNV = (PFNGLVERTEXATTRIB1DVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1FNVPROC ext_glVertexAttrib1fNV = (PFNGLVERTEXATTRIB1FNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1FVNVPROC ext_glVertexAttrib1fvNV = (PFNGLVERTEXATTRIB1FVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1SNVPROC ext_glVertexAttrib1sNV = (PFNGLVERTEXATTRIB1SNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1SVNVPROC ext_glVertexAttrib1svNV = (PFNGLVERTEXATTRIB1SVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2DNVPROC ext_glVertexAttrib2dNV = (PFNGLVERTEXATTRIB2DNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2DVNVPROC ext_glVertexAttrib2dvNV = (PFNGLVERTEXATTRIB2DVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2FNVPROC ext_glVertexAttrib2fNV = (PFNGLVERTEXATTRIB2FNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2FVNVPROC ext_glVertexAttrib2fvNV = (PFNGLVERTEXATTRIB2FVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2SNVPROC ext_glVertexAttrib2sNV = (PFNGLVERTEXATTRIB2SNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2SVNVPROC ext_glVertexAttrib2svNV = (PFNGLVERTEXATTRIB2SVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3DNVPROC ext_glVertexAttrib3dNV = (PFNGLVERTEXATTRIB3DNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3DVNVPROC ext_glVertexAttrib3dvNV = (PFNGLVERTEXATTRIB3DVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3FNVPROC ext_glVertexAttrib3fNV = (PFNGLVERTEXATTRIB3FNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3FVNVPROC ext_glVertexAttrib3fvNV = (PFNGLVERTEXATTRIB3FVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3SNVPROC ext_glVertexAttrib3sNV = (PFNGLVERTEXATTRIB3SNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3SVNVPROC ext_glVertexAttrib3svNV = (PFNGLVERTEXATTRIB3SVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4DNVPROC ext_glVertexAttrib4dNV = (PFNGLVERTEXATTRIB4DNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4DVNVPROC ext_glVertexAttrib4dvNV = (PFNGLVERTEXATTRIB4DVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4FNVPROC ext_glVertexAttrib4fNV = (PFNGLVERTEXATTRIB4FNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4FVNVPROC ext_glVertexAttrib4fvNV = (PFNGLVERTEXATTRIB4FVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4SNVPROC ext_glVertexAttrib4sNV = (PFNGLVERTEXATTRIB4SNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4SVNVPROC ext_glVertexAttrib4svNV = (PFNGLVERTEXATTRIB4SVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4UBNVPROC ext_glVertexAttrib4ubNV = (PFNGLVERTEXATTRIB4UBNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4UBVNVPROC ext_glVertexAttrib4ubvNV = (PFNGLVERTEXATTRIB4UBVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS1DVNVPROC ext_glVertexAttribs1dvNV = (PFNGLVERTEXATTRIBS1DVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS1FVNVPROC ext_glVertexAttribs1fvNV = (PFNGLVERTEXATTRIBS1FVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS1SVNVPROC ext_glVertexAttribs1svNV = (PFNGLVERTEXATTRIBS1SVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS2DVNVPROC ext_glVertexAttribs2dvNV = (PFNGLVERTEXATTRIBS2DVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS2FVNVPROC ext_glVertexAttribs2fvNV = (PFNGLVERTEXATTRIBS2FVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS2SVNVPROC ext_glVertexAttribs2svNV = (PFNGLVERTEXATTRIBS2SVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS3DVNVPROC ext_glVertexAttribs3dvNV = (PFNGLVERTEXATTRIBS3DVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS3FVNVPROC ext_glVertexAttribs3fvNV = (PFNGLVERTEXATTRIBS3FVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS3SVNVPROC ext_glVertexAttribs3svNV = (PFNGLVERTEXATTRIBS3SVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS4DVNVPROC ext_glVertexAttribs4dvNV = (PFNGLVERTEXATTRIBS4DVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS4FVNVPROC ext_glVertexAttribs4fvNV = (PFNGLVERTEXATTRIBS4FVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS4SVNVPROC ext_glVertexAttribs4svNV = (PFNGLVERTEXATTRIBS4SVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS4UBVNVPROC ext_glVertexAttribs4ubvNV = (PFNGLVERTEXATTRIBS4UBVNVPROC)0xdeadbeef;
	PFNGLTEXBUMPPARAMETERIVATIPROC ext_glTexBumpParameterivATI = (PFNGLTEXBUMPPARAMETERIVATIPROC)0xdeadbeef;
	PFNGLTEXBUMPPARAMETERFVATIPROC ext_glTexBumpParameterfvATI = (PFNGLTEXBUMPPARAMETERFVATIPROC)0xdeadbeef;
	PFNGLGETTEXBUMPPARAMETERIVATIPROC ext_glGetTexBumpParameterivATI = (PFNGLGETTEXBUMPPARAMETERIVATIPROC)0xdeadbeef;
	PFNGLGETTEXBUMPPARAMETERFVATIPROC ext_glGetTexBumpParameterfvATI = (PFNGLGETTEXBUMPPARAMETERFVATIPROC)0xdeadbeef;
	PFNGLGENFRAGMENTSHADERSATIPROC ext_glGenFragmentShadersATI = (PFNGLGENFRAGMENTSHADERSATIPROC)0xdeadbeef;
	PFNGLBINDFRAGMENTSHADERATIPROC ext_glBindFragmentShaderATI = (PFNGLBINDFRAGMENTSHADERATIPROC)0xdeadbeef;
	PFNGLDELETEFRAGMENTSHADERATIPROC ext_glDeleteFragmentShaderATI = (PFNGLDELETEFRAGMENTSHADERATIPROC)0xdeadbeef;
	PFNGLBEGINFRAGMENTSHADERATIPROC ext_glBeginFragmentShaderATI = (PFNGLBEGINFRAGMENTSHADERATIPROC)0xdeadbeef;
	PFNGLENDFRAGMENTSHADERATIPROC ext_glEndFragmentShaderATI = (PFNGLENDFRAGMENTSHADERATIPROC)0xdeadbeef;
	PFNGLPASSTEXCOORDATIPROC ext_glPassTexCoordATI = (PFNGLPASSTEXCOORDATIPROC)0xdeadbeef;
	PFNGLSAMPLEMAPATIPROC ext_glSampleMapATI = (PFNGLSAMPLEMAPATIPROC)0xdeadbeef;
	PFNGLCOLORFRAGMENTOP1ATIPROC ext_glColorFragmentOp1ATI = (PFNGLCOLORFRAGMENTOP1ATIPROC)0xdeadbeef;
	PFNGLCOLORFRAGMENTOP2ATIPROC ext_glColorFragmentOp2ATI = (PFNGLCOLORFRAGMENTOP2ATIPROC)0xdeadbeef;
	PFNGLCOLORFRAGMENTOP3ATIPROC ext_glColorFragmentOp3ATI = (PFNGLCOLORFRAGMENTOP3ATIPROC)0xdeadbeef;
	PFNGLALPHAFRAGMENTOP1ATIPROC ext_glAlphaFragmentOp1ATI = (PFNGLALPHAFRAGMENTOP1ATIPROC)0xdeadbeef;
	PFNGLALPHAFRAGMENTOP2ATIPROC ext_glAlphaFragmentOp2ATI = (PFNGLALPHAFRAGMENTOP2ATIPROC)0xdeadbeef;
	PFNGLALPHAFRAGMENTOP3ATIPROC ext_glAlphaFragmentOp3ATI = (PFNGLALPHAFRAGMENTOP3ATIPROC)0xdeadbeef;
	PFNGLSETFRAGMENTSHADERCONSTANTATIPROC ext_glSetFragmentShaderConstantATI = (PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)0xdeadbeef;
	PFNGLPNTRIANGLESIATIPROC ext_glPNTrianglesiATI = (PFNGLPNTRIANGLESIATIPROC)0xdeadbeef;
	PFNGLPNTRIANGLESFATIPROC ext_glPNTrianglesfATI = (PFNGLPNTRIANGLESFATIPROC)0xdeadbeef;
	PFNGLNEWOBJECTBUFFERATIPROC ext_glNewObjectBufferATI = (PFNGLNEWOBJECTBUFFERATIPROC)0xdeadbeef;
	PFNGLISOBJECTBUFFERATIPROC ext_glIsObjectBufferATI = (PFNGLISOBJECTBUFFERATIPROC)0xdeadbeef;
	PFNGLUPDATEOBJECTBUFFERATIPROC ext_glUpdateObjectBufferATI = (PFNGLUPDATEOBJECTBUFFERATIPROC)0xdeadbeef;
	PFNGLGETOBJECTBUFFERFVATIPROC ext_glGetObjectBufferfvATI = (PFNGLGETOBJECTBUFFERFVATIPROC)0xdeadbeef;
	PFNGLGETOBJECTBUFFERIVATIPROC ext_glGetObjectBufferivATI = (PFNGLGETOBJECTBUFFERIVATIPROC)0xdeadbeef;
	PFNGLFREEOBJECTBUFFERATIPROC ext_glFreeObjectBufferATI = (PFNGLFREEOBJECTBUFFERATIPROC)0xdeadbeef;
	PFNGLARRAYOBJECTATIPROC ext_glArrayObjectATI = (PFNGLARRAYOBJECTATIPROC)0xdeadbeef;
	PFNGLGETARRAYOBJECTFVATIPROC ext_glGetArrayObjectfvATI = (PFNGLGETARRAYOBJECTFVATIPROC)0xdeadbeef;
	PFNGLGETARRAYOBJECTIVATIPROC ext_glGetArrayObjectivATI = (PFNGLGETARRAYOBJECTIVATIPROC)0xdeadbeef;
	PFNGLVARIANTARRAYOBJECTATIPROC ext_glVariantArrayObjectATI = (PFNGLVARIANTARRAYOBJECTATIPROC)0xdeadbeef;
	PFNGLGETVARIANTARRAYOBJECTFVATIPROC ext_glGetVariantArrayObjectfvATI = (PFNGLGETVARIANTARRAYOBJECTFVATIPROC)0xdeadbeef;
	PFNGLGETVARIANTARRAYOBJECTIVATIPROC ext_glGetVariantArrayObjectivATI = (PFNGLGETVARIANTARRAYOBJECTIVATIPROC)0xdeadbeef;
	PFNGLBEGINVERTEXSHADEREXTPROC ext_glBeginVertexShaderEXT = (PFNGLBEGINVERTEXSHADEREXTPROC)0xdeadbeef;
	PFNGLENDVERTEXSHADEREXTPROC ext_glEndVertexShaderEXT = (PFNGLENDVERTEXSHADEREXTPROC)0xdeadbeef;
	PFNGLBINDVERTEXSHADEREXTPROC ext_glBindVertexShaderEXT = (PFNGLBINDVERTEXSHADEREXTPROC)0xdeadbeef;
	PFNGLGENVERTEXSHADERSEXTPROC ext_glGenVertexShadersEXT = (PFNGLGENVERTEXSHADERSEXTPROC)0xdeadbeef;
	PFNGLDELETEVERTEXSHADEREXTPROC ext_glDeleteVertexShaderEXT = (PFNGLDELETEVERTEXSHADEREXTPROC)0xdeadbeef;
	PFNGLSHADEROP1EXTPROC ext_glShaderOp1EXT = (PFNGLSHADEROP1EXTPROC)0xdeadbeef;
	PFNGLSHADEROP2EXTPROC ext_glShaderOp2EXT = (PFNGLSHADEROP2EXTPROC)0xdeadbeef;
	PFNGLSHADEROP3EXTPROC ext_glShaderOp3EXT = (PFNGLSHADEROP3EXTPROC)0xdeadbeef;
	PFNGLSWIZZLEEXTPROC ext_glSwizzleEXT = (PFNGLSWIZZLEEXTPROC)0xdeadbeef;
	PFNGLWRITEMASKEXTPROC ext_glWriteMaskEXT = (PFNGLWRITEMASKEXTPROC)0xdeadbeef;
	PFNGLINSERTCOMPONENTEXTPROC ext_glInsertComponentEXT = (PFNGLINSERTCOMPONENTEXTPROC)0xdeadbeef;
	PFNGLEXTRACTCOMPONENTEXTPROC ext_glExtractComponentEXT = (PFNGLEXTRACTCOMPONENTEXTPROC)0xdeadbeef;
	PFNGLGENSYMBOLSEXTPROC ext_glGenSymbolsEXT = (PFNGLGENSYMBOLSEXTPROC)0xdeadbeef;
	PFNGLSETINVARIANTEXTPROC ext_glSetInvariantEXT = (PFNGLSETINVARIANTEXTPROC)0xdeadbeef;
	PFNGLSETLOCALCONSTANTEXTPROC ext_glSetLocalConstantEXT = (PFNGLSETLOCALCONSTANTEXTPROC)0xdeadbeef;
	PFNGLVARIANTBVEXTPROC ext_glVariantbvEXT = (PFNGLVARIANTBVEXTPROC)0xdeadbeef;
	PFNGLVARIANTSVEXTPROC ext_glVariantsvEXT = (PFNGLVARIANTSVEXTPROC)0xdeadbeef;
	PFNGLVARIANTIVEXTPROC ext_glVariantivEXT = (PFNGLVARIANTIVEXTPROC)0xdeadbeef;
	PFNGLVARIANTFVEXTPROC ext_glVariantfvEXT = (PFNGLVARIANTFVEXTPROC)0xdeadbeef;
	PFNGLVARIANTDVEXTPROC ext_glVariantdvEXT = (PFNGLVARIANTDVEXTPROC)0xdeadbeef;
	PFNGLVARIANTUBVEXTPROC ext_glVariantubvEXT = (PFNGLVARIANTUBVEXTPROC)0xdeadbeef;
	PFNGLVARIANTUSVEXTPROC ext_glVariantusvEXT = (PFNGLVARIANTUSVEXTPROC)0xdeadbeef;
	PFNGLVARIANTUIVEXTPROC ext_glVariantuivEXT = (PFNGLVARIANTUIVEXTPROC)0xdeadbeef;
	PFNGLVARIANTPOINTEREXTPROC ext_glVariantPointerEXT = (PFNGLVARIANTPOINTEREXTPROC)0xdeadbeef;
	PFNGLENABLEVARIANTCLIENTSTATEEXTPROC ext_glEnableVariantClientStateEXT = (PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)0xdeadbeef;
	PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC ext_glDisableVariantClientStateEXT = (PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)0xdeadbeef;
	PFNGLBINDLIGHTPARAMETEREXTPROC ext_glBindLightParameterEXT = (PFNGLBINDLIGHTPARAMETEREXTPROC)0xdeadbeef;
	PFNGLBINDMATERIALPARAMETEREXTPROC ext_glBindMaterialParameterEXT = (PFNGLBINDMATERIALPARAMETEREXTPROC)0xdeadbeef;
	PFNGLBINDTEXGENPARAMETEREXTPROC ext_glBindTexGenParameterEXT = (PFNGLBINDTEXGENPARAMETEREXTPROC)0xdeadbeef;
	PFNGLBINDTEXTUREUNITPARAMETEREXTPROC ext_glBindTextureUnitParameterEXT = (PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)0xdeadbeef;
	PFNGLBINDPARAMETEREXTPROC ext_glBindParameterEXT = (PFNGLBINDPARAMETEREXTPROC)0xdeadbeef;
	PFNGLISVARIANTENABLEDEXTPROC ext_glIsVariantEnabledEXT = (PFNGLISVARIANTENABLEDEXTPROC)0xdeadbeef;
	PFNGLGETVARIANTBOOLEANVEXTPROC ext_glGetVariantBooleanvEXT = (PFNGLGETVARIANTBOOLEANVEXTPROC)0xdeadbeef;
	PFNGLGETVARIANTINTEGERVEXTPROC ext_glGetVariantIntegervEXT = (PFNGLGETVARIANTINTEGERVEXTPROC)0xdeadbeef;
	PFNGLGETVARIANTFLOATVEXTPROC ext_glGetVariantFloatvEXT = (PFNGLGETVARIANTFLOATVEXTPROC)0xdeadbeef;
	PFNGLGETVARIANTPOINTERVEXTPROC ext_glGetVariantPointervEXT = (PFNGLGETVARIANTPOINTERVEXTPROC)0xdeadbeef;
	PFNGLGETINVARIANTBOOLEANVEXTPROC ext_glGetInvariantBooleanvEXT = (PFNGLGETINVARIANTBOOLEANVEXTPROC)0xdeadbeef;
	PFNGLGETINVARIANTINTEGERVEXTPROC ext_glGetInvariantIntegervEXT = (PFNGLGETINVARIANTINTEGERVEXTPROC)0xdeadbeef;
	PFNGLGETINVARIANTFLOATVEXTPROC ext_glGetInvariantFloatvEXT = (PFNGLGETINVARIANTFLOATVEXTPROC)0xdeadbeef;
	PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC ext_glGetLocalConstantBooleanvEXT = (PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)0xdeadbeef;
	PFNGLGETLOCALCONSTANTINTEGERVEXTPROC ext_glGetLocalConstantIntegervEXT = (PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)0xdeadbeef;
	PFNGLGETLOCALCONSTANTFLOATVEXTPROC ext_glGetLocalConstantFloatvEXT = (PFNGLGETLOCALCONSTANTFLOATVEXTPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM1SATIPROC ext_glVertexStream1sATI = (PFNGLVERTEXSTREAM1SATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM1SVATIPROC ext_glVertexStream1svATI = (PFNGLVERTEXSTREAM1SVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM1IATIPROC ext_glVertexStream1iATI = (PFNGLVERTEXSTREAM1IATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM1IVATIPROC ext_glVertexStream1ivATI = (PFNGLVERTEXSTREAM1IVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM1FATIPROC ext_glVertexStream1fATI = (PFNGLVERTEXSTREAM1FATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM1FVATIPROC ext_glVertexStream1fvATI = (PFNGLVERTEXSTREAM1FVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM1DATIPROC ext_glVertexStream1dATI = (PFNGLVERTEXSTREAM1DATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM1DVATIPROC ext_glVertexStream1dvATI = (PFNGLVERTEXSTREAM1DVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM2SATIPROC ext_glVertexStream2sATI = (PFNGLVERTEXSTREAM2SATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM2SVATIPROC ext_glVertexStream2svATI = (PFNGLVERTEXSTREAM2SVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM2IATIPROC ext_glVertexStream2iATI = (PFNGLVERTEXSTREAM2IATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM2IVATIPROC ext_glVertexStream2ivATI = (PFNGLVERTEXSTREAM2IVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM2FATIPROC ext_glVertexStream2fATI = (PFNGLVERTEXSTREAM2FATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM2FVATIPROC ext_glVertexStream2fvATI = (PFNGLVERTEXSTREAM2FVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM2DATIPROC ext_glVertexStream2dATI = (PFNGLVERTEXSTREAM2DATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM2DVATIPROC ext_glVertexStream2dvATI = (PFNGLVERTEXSTREAM2DVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM3SATIPROC ext_glVertexStream3sATI = (PFNGLVERTEXSTREAM3SATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM3SVATIPROC ext_glVertexStream3svATI = (PFNGLVERTEXSTREAM3SVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM3IATIPROC ext_glVertexStream3iATI = (PFNGLVERTEXSTREAM3IATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM3IVATIPROC ext_glVertexStream3ivATI = (PFNGLVERTEXSTREAM3IVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM3FATIPROC ext_glVertexStream3fATI = (PFNGLVERTEXSTREAM3FATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM3FVATIPROC ext_glVertexStream3fvATI = (PFNGLVERTEXSTREAM3FVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM3DATIPROC ext_glVertexStream3dATI = (PFNGLVERTEXSTREAM3DATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM3DVATIPROC ext_glVertexStream3dvATI = (PFNGLVERTEXSTREAM3DVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM4SATIPROC ext_glVertexStream4sATI = (PFNGLVERTEXSTREAM4SATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM4SVATIPROC ext_glVertexStream4svATI = (PFNGLVERTEXSTREAM4SVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM4IATIPROC ext_glVertexStream4iATI = (PFNGLVERTEXSTREAM4IATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM4IVATIPROC ext_glVertexStream4ivATI = (PFNGLVERTEXSTREAM4IVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM4FATIPROC ext_glVertexStream4fATI = (PFNGLVERTEXSTREAM4FATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM4FVATIPROC ext_glVertexStream4fvATI = (PFNGLVERTEXSTREAM4FVATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM4DATIPROC ext_glVertexStream4dATI = (PFNGLVERTEXSTREAM4DATIPROC)0xdeadbeef;
	PFNGLVERTEXSTREAM4DVATIPROC ext_glVertexStream4dvATI = (PFNGLVERTEXSTREAM4DVATIPROC)0xdeadbeef;
	PFNGLNORMALSTREAM3BATIPROC ext_glNormalStream3bATI = (PFNGLNORMALSTREAM3BATIPROC)0xdeadbeef;
	PFNGLNORMALSTREAM3BVATIPROC ext_glNormalStream3bvATI = (PFNGLNORMALSTREAM3BVATIPROC)0xdeadbeef;
	PFNGLNORMALSTREAM3SATIPROC ext_glNormalStream3sATI = (PFNGLNORMALSTREAM3SATIPROC)0xdeadbeef;
	PFNGLNORMALSTREAM3SVATIPROC ext_glNormalStream3svATI = (PFNGLNORMALSTREAM3SVATIPROC)0xdeadbeef;
	PFNGLNORMALSTREAM3IATIPROC ext_glNormalStream3iATI = (PFNGLNORMALSTREAM3IATIPROC)0xdeadbeef;
	PFNGLNORMALSTREAM3IVATIPROC ext_glNormalStream3ivATI = (PFNGLNORMALSTREAM3IVATIPROC)0xdeadbeef;
	PFNGLNORMALSTREAM3FATIPROC ext_glNormalStream3fATI = (PFNGLNORMALSTREAM3FATIPROC)0xdeadbeef;
	PFNGLNORMALSTREAM3FVATIPROC ext_glNormalStream3fvATI = (PFNGLNORMALSTREAM3FVATIPROC)0xdeadbeef;
	PFNGLNORMALSTREAM3DATIPROC ext_glNormalStream3dATI = (PFNGLNORMALSTREAM3DATIPROC)0xdeadbeef;
	PFNGLNORMALSTREAM3DVATIPROC ext_glNormalStream3dvATI = (PFNGLNORMALSTREAM3DVATIPROC)0xdeadbeef;
	PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC ext_glClientActiveVertexStreamATI = (PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC)0xdeadbeef;
	PFNGLVERTEXBLENDENVIATIPROC ext_glVertexBlendEnviATI = (PFNGLVERTEXBLENDENVIATIPROC)0xdeadbeef;
	PFNGLVERTEXBLENDENVFATIPROC ext_glVertexBlendEnvfATI = (PFNGLVERTEXBLENDENVFATIPROC)0xdeadbeef;
	PFNGLELEMENTPOINTERATIPROC ext_glElementPointerATI = (PFNGLELEMENTPOINTERATIPROC)0xdeadbeef;
	PFNGLDRAWELEMENTARRAYATIPROC ext_glDrawElementArrayATI = (PFNGLDRAWELEMENTARRAYATIPROC)0xdeadbeef;
	PFNGLDRAWRANGEELEMENTARRAYATIPROC ext_glDrawRangeElementArrayATI = (PFNGLDRAWRANGEELEMENTARRAYATIPROC)0xdeadbeef;
	PFNGLDRAWMESHARRAYSSUNPROC ext_glDrawMeshArraysSUN = (PFNGLDRAWMESHARRAYSSUNPROC)0xdeadbeef;
	PFNGLGENOCCLUSIONQUERIESNVPROC ext_glGenOcclusionQueriesNV = (PFNGLGENOCCLUSIONQUERIESNVPROC)0xdeadbeef;
	PFNGLDELETEOCCLUSIONQUERIESNVPROC ext_glDeleteOcclusionQueriesNV = (PFNGLDELETEOCCLUSIONQUERIESNVPROC)0xdeadbeef;
	PFNGLISOCCLUSIONQUERYNVPROC ext_glIsOcclusionQueryNV = (PFNGLISOCCLUSIONQUERYNVPROC)0xdeadbeef;
	PFNGLBEGINOCCLUSIONQUERYNVPROC ext_glBeginOcclusionQueryNV = (PFNGLBEGINOCCLUSIONQUERYNVPROC)0xdeadbeef;
	PFNGLENDOCCLUSIONQUERYNVPROC ext_glEndOcclusionQueryNV = (PFNGLENDOCCLUSIONQUERYNVPROC)0xdeadbeef;
	PFNGLGETOCCLUSIONQUERYIVNVPROC ext_glGetOcclusionQueryivNV = (PFNGLGETOCCLUSIONQUERYIVNVPROC)0xdeadbeef;
	PFNGLGETOCCLUSIONQUERYUIVNVPROC ext_glGetOcclusionQueryuivNV = (PFNGLGETOCCLUSIONQUERYUIVNVPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERINVPROC ext_glPointParameteriNV = (PFNGLPOINTPARAMETERINVPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERIVNVPROC ext_glPointParameterivNV = (PFNGLPOINTPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLACTIVESTENCILFACEEXTPROC ext_glActiveStencilFaceEXT = (PFNGLACTIVESTENCILFACEEXTPROC)0xdeadbeef;
	PFNGLELEMENTPOINTERAPPLEPROC ext_glElementPointerAPPLE = (PFNGLELEMENTPOINTERAPPLEPROC)0xdeadbeef;
	PFNGLDRAWELEMENTARRAYAPPLEPROC ext_glDrawElementArrayAPPLE = (PFNGLDRAWELEMENTARRAYAPPLEPROC)0xdeadbeef;
	PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC ext_glDrawRangeElementArrayAPPLE = (PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC)0xdeadbeef;
	PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC ext_glMultiDrawElementArrayAPPLE = (PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC)0xdeadbeef;
	PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC ext_glMultiDrawRangeElementArrayAPPLE = (PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC)0xdeadbeef;
	PFNGLGENFENCESAPPLEPROC ext_glGenFencesAPPLE = (PFNGLGENFENCESAPPLEPROC)0xdeadbeef;
	PFNGLDELETEFENCESAPPLEPROC ext_glDeleteFencesAPPLE = (PFNGLDELETEFENCESAPPLEPROC)0xdeadbeef;
	PFNGLSETFENCEAPPLEPROC ext_glSetFenceAPPLE = (PFNGLSETFENCEAPPLEPROC)0xdeadbeef;
	PFNGLISFENCEAPPLEPROC ext_glIsFenceAPPLE = (PFNGLISFENCEAPPLEPROC)0xdeadbeef;
	PFNGLTESTFENCEAPPLEPROC ext_glTestFenceAPPLE = (PFNGLTESTFENCEAPPLEPROC)0xdeadbeef;
	PFNGLFINISHFENCEAPPLEPROC ext_glFinishFenceAPPLE = (PFNGLFINISHFENCEAPPLEPROC)0xdeadbeef;
	PFNGLTESTOBJECTAPPLEPROC ext_glTestObjectAPPLE = (PFNGLTESTOBJECTAPPLEPROC)0xdeadbeef;
	PFNGLFINISHOBJECTAPPLEPROC ext_glFinishObjectAPPLE = (PFNGLFINISHOBJECTAPPLEPROC)0xdeadbeef;
	PFNGLBINDVERTEXARRAYAPPLEPROC ext_glBindVertexArrayAPPLE = (PFNGLBINDVERTEXARRAYAPPLEPROC)0xdeadbeef;
	PFNGLDELETEVERTEXARRAYSAPPLEPROC ext_glDeleteVertexArraysAPPLE = (PFNGLDELETEVERTEXARRAYSAPPLEPROC)0xdeadbeef;
	PFNGLGENVERTEXARRAYSAPPLEPROC ext_glGenVertexArraysAPPLE = (PFNGLGENVERTEXARRAYSAPPLEPROC)0xdeadbeef;
	PFNGLISVERTEXARRAYAPPLEPROC ext_glIsVertexArrayAPPLE = (PFNGLISVERTEXARRAYAPPLEPROC)0xdeadbeef;
	PFNGLVERTEXARRAYRANGEAPPLEPROC ext_glVertexArrayRangeAPPLE = (PFNGLVERTEXARRAYRANGEAPPLEPROC)0xdeadbeef;
	PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC ext_glFlushVertexArrayRangeAPPLE = (PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC)0xdeadbeef;
	PFNGLVERTEXARRAYPARAMETERIAPPLEPROC ext_glVertexArrayParameteriAPPLE = (PFNGLVERTEXARRAYPARAMETERIAPPLEPROC)0xdeadbeef;
	PFNGLDRAWBUFFERSATIPROC ext_glDrawBuffersATI = (PFNGLDRAWBUFFERSATIPROC)0xdeadbeef;
	PFNGLPROGRAMNAMEDPARAMETER4FNVPROC ext_glProgramNamedParameter4fNV = (PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)0xdeadbeef;
	PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC ext_glProgramNamedParameter4fvNV = (PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)0xdeadbeef;
	PFNGLPROGRAMNAMEDPARAMETER4DNVPROC ext_glProgramNamedParameter4dNV = (PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)0xdeadbeef;
	PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC ext_glProgramNamedParameter4dvNV = (PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC ext_glGetProgramNamedParameterfvNV = (PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC ext_glGetProgramNamedParameterdvNV = (PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)0xdeadbeef;
	PFNGLVERTEX2HNVPROC ext_glVertex2hNV = (PFNGLVERTEX2HNVPROC)0xdeadbeef;
	PFNGLVERTEX2HVNVPROC ext_glVertex2hvNV = (PFNGLVERTEX2HVNVPROC)0xdeadbeef;
	PFNGLVERTEX3HNVPROC ext_glVertex3hNV = (PFNGLVERTEX3HNVPROC)0xdeadbeef;
	PFNGLVERTEX3HVNVPROC ext_glVertex3hvNV = (PFNGLVERTEX3HVNVPROC)0xdeadbeef;
	PFNGLVERTEX4HNVPROC ext_glVertex4hNV = (PFNGLVERTEX4HNVPROC)0xdeadbeef;
	PFNGLVERTEX4HVNVPROC ext_glVertex4hvNV = (PFNGLVERTEX4HVNVPROC)0xdeadbeef;
	PFNGLNORMAL3HNVPROC ext_glNormal3hNV = (PFNGLNORMAL3HNVPROC)0xdeadbeef;
	PFNGLNORMAL3HVNVPROC ext_glNormal3hvNV = (PFNGLNORMAL3HVNVPROC)0xdeadbeef;
	PFNGLCOLOR3HNVPROC ext_glColor3hNV = (PFNGLCOLOR3HNVPROC)0xdeadbeef;
	PFNGLCOLOR3HVNVPROC ext_glColor3hvNV = (PFNGLCOLOR3HVNVPROC)0xdeadbeef;
	PFNGLCOLOR4HNVPROC ext_glColor4hNV = (PFNGLCOLOR4HNVPROC)0xdeadbeef;
	PFNGLCOLOR4HVNVPROC ext_glColor4hvNV = (PFNGLCOLOR4HVNVPROC)0xdeadbeef;
	PFNGLTEXCOORD1HNVPROC ext_glTexCoord1hNV = (PFNGLTEXCOORD1HNVPROC)0xdeadbeef;
	PFNGLTEXCOORD1HVNVPROC ext_glTexCoord1hvNV = (PFNGLTEXCOORD1HVNVPROC)0xdeadbeef;
	PFNGLTEXCOORD2HNVPROC ext_glTexCoord2hNV = (PFNGLTEXCOORD2HNVPROC)0xdeadbeef;
	PFNGLTEXCOORD2HVNVPROC ext_glTexCoord2hvNV = (PFNGLTEXCOORD2HVNVPROC)0xdeadbeef;
	PFNGLTEXCOORD3HNVPROC ext_glTexCoord3hNV = (PFNGLTEXCOORD3HNVPROC)0xdeadbeef;
	PFNGLTEXCOORD3HVNVPROC ext_glTexCoord3hvNV = (PFNGLTEXCOORD3HVNVPROC)0xdeadbeef;
	PFNGLTEXCOORD4HNVPROC ext_glTexCoord4hNV = (PFNGLTEXCOORD4HNVPROC)0xdeadbeef;
	PFNGLTEXCOORD4HVNVPROC ext_glTexCoord4hvNV = (PFNGLTEXCOORD4HVNVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1HNVPROC ext_glMultiTexCoord1hNV = (PFNGLMULTITEXCOORD1HNVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1HVNVPROC ext_glMultiTexCoord1hvNV = (PFNGLMULTITEXCOORD1HVNVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2HNVPROC ext_glMultiTexCoord2hNV = (PFNGLMULTITEXCOORD2HNVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2HVNVPROC ext_glMultiTexCoord2hvNV = (PFNGLMULTITEXCOORD2HVNVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3HNVPROC ext_glMultiTexCoord3hNV = (PFNGLMULTITEXCOORD3HNVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3HVNVPROC ext_glMultiTexCoord3hvNV = (PFNGLMULTITEXCOORD3HVNVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4HNVPROC ext_glMultiTexCoord4hNV = (PFNGLMULTITEXCOORD4HNVPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4HVNVPROC ext_glMultiTexCoord4hvNV = (PFNGLMULTITEXCOORD4HVNVPROC)0xdeadbeef;
	PFNGLFOGCOORDHNVPROC ext_glFogCoordhNV = (PFNGLFOGCOORDHNVPROC)0xdeadbeef;
	PFNGLFOGCOORDHVNVPROC ext_glFogCoordhvNV = (PFNGLFOGCOORDHVNVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3HNVPROC ext_glSecondaryColor3hNV = (PFNGLSECONDARYCOLOR3HNVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLOR3HVNVPROC ext_glSecondaryColor3hvNV = (PFNGLSECONDARYCOLOR3HVNVPROC)0xdeadbeef;
	PFNGLVERTEXWEIGHTHNVPROC ext_glVertexWeighthNV = (PFNGLVERTEXWEIGHTHNVPROC)0xdeadbeef;
	PFNGLVERTEXWEIGHTHVNVPROC ext_glVertexWeighthvNV = (PFNGLVERTEXWEIGHTHVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1HNVPROC ext_glVertexAttrib1hNV = (PFNGLVERTEXATTRIB1HNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB1HVNVPROC ext_glVertexAttrib1hvNV = (PFNGLVERTEXATTRIB1HVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2HNVPROC ext_glVertexAttrib2hNV = (PFNGLVERTEXATTRIB2HNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB2HVNVPROC ext_glVertexAttrib2hvNV = (PFNGLVERTEXATTRIB2HVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3HNVPROC ext_glVertexAttrib3hNV = (PFNGLVERTEXATTRIB3HNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB3HVNVPROC ext_glVertexAttrib3hvNV = (PFNGLVERTEXATTRIB3HVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4HNVPROC ext_glVertexAttrib4hNV = (PFNGLVERTEXATTRIB4HNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIB4HVNVPROC ext_glVertexAttrib4hvNV = (PFNGLVERTEXATTRIB4HVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS1HVNVPROC ext_glVertexAttribs1hvNV = (PFNGLVERTEXATTRIBS1HVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS2HVNVPROC ext_glVertexAttribs2hvNV = (PFNGLVERTEXATTRIBS2HVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS3HVNVPROC ext_glVertexAttribs3hvNV = (PFNGLVERTEXATTRIBS3HVNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBS4HVNVPROC ext_glVertexAttribs4hvNV = (PFNGLVERTEXATTRIBS4HVNVPROC)0xdeadbeef;
	PFNGLPIXELDATARANGENVPROC ext_glPixelDataRangeNV = (PFNGLPIXELDATARANGENVPROC)0xdeadbeef;
	PFNGLFLUSHPIXELDATARANGENVPROC ext_glFlushPixelDataRangeNV = (PFNGLFLUSHPIXELDATARANGENVPROC)0xdeadbeef;
	PFNGLPRIMITIVERESTARTNVPROC ext_glPrimitiveRestartNV = (PFNGLPRIMITIVERESTARTNVPROC)0xdeadbeef;
	PFNGLPRIMITIVERESTARTINDEXNVPROC ext_glPrimitiveRestartIndexNV = (PFNGLPRIMITIVERESTARTINDEXNVPROC)0xdeadbeef;
	PFNGLMAPOBJECTBUFFERATIPROC ext_glMapObjectBufferATI = (PFNGLMAPOBJECTBUFFERATIPROC)0xdeadbeef;
	PFNGLUNMAPOBJECTBUFFERATIPROC ext_glUnmapObjectBufferATI = (PFNGLUNMAPOBJECTBUFFERATIPROC)0xdeadbeef;
	PFNGLSTENCILOPSEPARATEATIPROC ext_glStencilOpSeparateATI = (PFNGLSTENCILOPSEPARATEATIPROC)0xdeadbeef;
	PFNGLSTENCILFUNCSEPARATEATIPROC ext_glStencilFuncSeparateATI = (PFNGLSTENCILFUNCSEPARATEATIPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBARRAYOBJECTATIPROC ext_glVertexAttribArrayObjectATI = (PFNGLVERTEXATTRIBARRAYOBJECTATIPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC ext_glGetVertexAttribArrayObjectfvATI = (PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC ext_glGetVertexAttribArrayObjectivATI = (PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1BOESPROC ext_glMultiTexCoord1bOES = (PFNGLMULTITEXCOORD1BOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1BVOESPROC ext_glMultiTexCoord1bvOES = (PFNGLMULTITEXCOORD1BVOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2BOESPROC ext_glMultiTexCoord2bOES = (PFNGLMULTITEXCOORD2BOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2BVOESPROC ext_glMultiTexCoord2bvOES = (PFNGLMULTITEXCOORD2BVOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3BOESPROC ext_glMultiTexCoord3bOES = (PFNGLMULTITEXCOORD3BOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3BVOESPROC ext_glMultiTexCoord3bvOES = (PFNGLMULTITEXCOORD3BVOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4BOESPROC ext_glMultiTexCoord4bOES = (PFNGLMULTITEXCOORD4BOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4BVOESPROC ext_glMultiTexCoord4bvOES = (PFNGLMULTITEXCOORD4BVOESPROC)0xdeadbeef;
	PFNGLTEXCOORD1BOESPROC ext_glTexCoord1bOES = (PFNGLTEXCOORD1BOESPROC)0xdeadbeef;
	PFNGLTEXCOORD1BVOESPROC ext_glTexCoord1bvOES = (PFNGLTEXCOORD1BVOESPROC)0xdeadbeef;
	PFNGLTEXCOORD2BOESPROC ext_glTexCoord2bOES = (PFNGLTEXCOORD2BOESPROC)0xdeadbeef;
	PFNGLTEXCOORD2BVOESPROC ext_glTexCoord2bvOES = (PFNGLTEXCOORD2BVOESPROC)0xdeadbeef;
	PFNGLTEXCOORD3BOESPROC ext_glTexCoord3bOES = (PFNGLTEXCOORD3BOESPROC)0xdeadbeef;
	PFNGLTEXCOORD3BVOESPROC ext_glTexCoord3bvOES = (PFNGLTEXCOORD3BVOESPROC)0xdeadbeef;
	PFNGLTEXCOORD4BOESPROC ext_glTexCoord4bOES = (PFNGLTEXCOORD4BOESPROC)0xdeadbeef;
	PFNGLTEXCOORD4BVOESPROC ext_glTexCoord4bvOES = (PFNGLTEXCOORD4BVOESPROC)0xdeadbeef;
	PFNGLVERTEX2BOESPROC ext_glVertex2bOES = (PFNGLVERTEX2BOESPROC)0xdeadbeef;
	PFNGLVERTEX2BVOESPROC ext_glVertex2bvOES = (PFNGLVERTEX2BVOESPROC)0xdeadbeef;
	PFNGLVERTEX3BOESPROC ext_glVertex3bOES = (PFNGLVERTEX3BOESPROC)0xdeadbeef;
	PFNGLVERTEX3BVOESPROC ext_glVertex3bvOES = (PFNGLVERTEX3BVOESPROC)0xdeadbeef;
	PFNGLVERTEX4BOESPROC ext_glVertex4bOES = (PFNGLVERTEX4BOESPROC)0xdeadbeef;
	PFNGLVERTEX4BVOESPROC ext_glVertex4bvOES = (PFNGLVERTEX4BVOESPROC)0xdeadbeef;
	PFNGLACCUMXOESPROC ext_glAccumxOES = (PFNGLACCUMXOESPROC)0xdeadbeef;
	PFNGLALPHAFUNCXOESPROC ext_glAlphaFuncxOES = (PFNGLALPHAFUNCXOESPROC)0xdeadbeef;
	PFNGLBITMAPXOESPROC ext_glBitmapxOES = (PFNGLBITMAPXOESPROC)0xdeadbeef;
	PFNGLBLENDCOLORXOESPROC ext_glBlendColorxOES = (PFNGLBLENDCOLORXOESPROC)0xdeadbeef;
	PFNGLCLEARACCUMXOESPROC ext_glClearAccumxOES = (PFNGLCLEARACCUMXOESPROC)0xdeadbeef;
	PFNGLCLEARCOLORXOESPROC ext_glClearColorxOES = (PFNGLCLEARCOLORXOESPROC)0xdeadbeef;
	PFNGLCLEARDEPTHXOESPROC ext_glClearDepthxOES = (PFNGLCLEARDEPTHXOESPROC)0xdeadbeef;
	PFNGLCLIPPLANEXOESPROC ext_glClipPlanexOES = (PFNGLCLIPPLANEXOESPROC)0xdeadbeef;
	PFNGLCOLOR3XOESPROC ext_glColor3xOES = (PFNGLCOLOR3XOESPROC)0xdeadbeef;
	PFNGLCOLOR4XOESPROC ext_glColor4xOES = (PFNGLCOLOR4XOESPROC)0xdeadbeef;
	PFNGLCOLOR3XVOESPROC ext_glColor3xvOES = (PFNGLCOLOR3XVOESPROC)0xdeadbeef;
	PFNGLCOLOR4XVOESPROC ext_glColor4xvOES = (PFNGLCOLOR4XVOESPROC)0xdeadbeef;
	PFNGLCONVOLUTIONPARAMETERXOESPROC ext_glConvolutionParameterxOES = (PFNGLCONVOLUTIONPARAMETERXOESPROC)0xdeadbeef;
	PFNGLCONVOLUTIONPARAMETERXVOESPROC ext_glConvolutionParameterxvOES = (PFNGLCONVOLUTIONPARAMETERXVOESPROC)0xdeadbeef;
	PFNGLDEPTHRANGEXOESPROC ext_glDepthRangexOES = (PFNGLDEPTHRANGEXOESPROC)0xdeadbeef;
	PFNGLEVALCOORD1XOESPROC ext_glEvalCoord1xOES = (PFNGLEVALCOORD1XOESPROC)0xdeadbeef;
	PFNGLEVALCOORD2XOESPROC ext_glEvalCoord2xOES = (PFNGLEVALCOORD2XOESPROC)0xdeadbeef;
	PFNGLEVALCOORD1XVOESPROC ext_glEvalCoord1xvOES = (PFNGLEVALCOORD1XVOESPROC)0xdeadbeef;
	PFNGLEVALCOORD2XVOESPROC ext_glEvalCoord2xvOES = (PFNGLEVALCOORD2XVOESPROC)0xdeadbeef;
	PFNGLFEEDBACKBUFFERXOESPROC ext_glFeedbackBufferxOES = (PFNGLFEEDBACKBUFFERXOESPROC)0xdeadbeef;
	PFNGLFOGXOESPROC ext_glFogxOES = (PFNGLFOGXOESPROC)0xdeadbeef;
	PFNGLFOGXVOESPROC ext_glFogxvOES = (PFNGLFOGXVOESPROC)0xdeadbeef;
	PFNGLFRUSTUMXOESPROC ext_glFrustumxOES = (PFNGLFRUSTUMXOESPROC)0xdeadbeef;
	PFNGLGETCLIPPLANEXOESPROC ext_glGetClipPlanexOES = (PFNGLGETCLIPPLANEXOESPROC)0xdeadbeef;
	PFNGLGETCONVOLUTIONPARAMETERXVOESPROC ext_glGetConvolutionParameterxvOES = (PFNGLGETCONVOLUTIONPARAMETERXVOESPROC)0xdeadbeef;
	PFNGLGETFIXEDVOESPROC ext_glGetFixedvOES = (PFNGLGETFIXEDVOESPROC)0xdeadbeef;
	PFNGLGETHISTOGRAMPARAMETERXVOESPROC ext_glGetHistogramParameterxvOES = (PFNGLGETHISTOGRAMPARAMETERXVOESPROC)0xdeadbeef;
	PFNGLGETLIGHTXOESPROC ext_glGetLightxOES = (PFNGLGETLIGHTXOESPROC)0xdeadbeef;
	PFNGLGETMAPXVOESPROC ext_glGetMapxvOES = (PFNGLGETMAPXVOESPROC)0xdeadbeef;
	PFNGLGETMATERIALXOESPROC ext_glGetMaterialxOES = (PFNGLGETMATERIALXOESPROC)0xdeadbeef;
	PFNGLGETPIXELMAPXVPROC ext_glGetPixelMapxv = (PFNGLGETPIXELMAPXVPROC)0xdeadbeef;
	PFNGLGETTEXENVXVOESPROC ext_glGetTexEnvxvOES = (PFNGLGETTEXENVXVOESPROC)0xdeadbeef;
	PFNGLGETTEXGENXVOESPROC ext_glGetTexGenxvOES = (PFNGLGETTEXGENXVOESPROC)0xdeadbeef;
	PFNGLGETTEXLEVELPARAMETERXVOESPROC ext_glGetTexLevelParameterxvOES = (PFNGLGETTEXLEVELPARAMETERXVOESPROC)0xdeadbeef;
	PFNGLGETTEXPARAMETERXVOESPROC ext_glGetTexParameterxvOES = (PFNGLGETTEXPARAMETERXVOESPROC)0xdeadbeef;
	PFNGLINDEXXOESPROC ext_glIndexxOES = (PFNGLINDEXXOESPROC)0xdeadbeef;
	PFNGLINDEXXVOESPROC ext_glIndexxvOES = (PFNGLINDEXXVOESPROC)0xdeadbeef;
	PFNGLLIGHTMODELXOESPROC ext_glLightModelxOES = (PFNGLLIGHTMODELXOESPROC)0xdeadbeef;
	PFNGLLIGHTMODELXVOESPROC ext_glLightModelxvOES = (PFNGLLIGHTMODELXVOESPROC)0xdeadbeef;
	PFNGLLIGHTXOESPROC ext_glLightxOES = (PFNGLLIGHTXOESPROC)0xdeadbeef;
	PFNGLLIGHTXVOESPROC ext_glLightxvOES = (PFNGLLIGHTXVOESPROC)0xdeadbeef;
	PFNGLLINEWIDTHXOESPROC ext_glLineWidthxOES = (PFNGLLINEWIDTHXOESPROC)0xdeadbeef;
	PFNGLLOADMATRIXXOESPROC ext_glLoadMatrixxOES = (PFNGLLOADMATRIXXOESPROC)0xdeadbeef;
	PFNGLLOADTRANSPOSEMATRIXXOESPROC ext_glLoadTransposeMatrixxOES = (PFNGLLOADTRANSPOSEMATRIXXOESPROC)0xdeadbeef;
	PFNGLMAP1XOESPROC ext_glMap1xOES = (PFNGLMAP1XOESPROC)0xdeadbeef;
	PFNGLMAP2XOESPROC ext_glMap2xOES = (PFNGLMAP2XOESPROC)0xdeadbeef;
	PFNGLMAPGRID1XOESPROC ext_glMapGrid1xOES = (PFNGLMAPGRID1XOESPROC)0xdeadbeef;
	PFNGLMAPGRID2XOESPROC ext_glMapGrid2xOES = (PFNGLMAPGRID2XOESPROC)0xdeadbeef;
	PFNGLMATERIALXOESPROC ext_glMaterialxOES = (PFNGLMATERIALXOESPROC)0xdeadbeef;
	PFNGLMATERIALXVOESPROC ext_glMaterialxvOES = (PFNGLMATERIALXVOESPROC)0xdeadbeef;
	PFNGLMULTMATRIXXOESPROC ext_glMultMatrixxOES = (PFNGLMULTMATRIXXOESPROC)0xdeadbeef;
	PFNGLMULTTRANSPOSEMATRIXXOESPROC ext_glMultTransposeMatrixxOES = (PFNGLMULTTRANSPOSEMATRIXXOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1XOESPROC ext_glMultiTexCoord1xOES = (PFNGLMULTITEXCOORD1XOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2XOESPROC ext_glMultiTexCoord2xOES = (PFNGLMULTITEXCOORD2XOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3XOESPROC ext_glMultiTexCoord3xOES = (PFNGLMULTITEXCOORD3XOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4XOESPROC ext_glMultiTexCoord4xOES = (PFNGLMULTITEXCOORD4XOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD1XVOESPROC ext_glMultiTexCoord1xvOES = (PFNGLMULTITEXCOORD1XVOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD2XVOESPROC ext_glMultiTexCoord2xvOES = (PFNGLMULTITEXCOORD2XVOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD3XVOESPROC ext_glMultiTexCoord3xvOES = (PFNGLMULTITEXCOORD3XVOESPROC)0xdeadbeef;
	PFNGLMULTITEXCOORD4XVOESPROC ext_glMultiTexCoord4xvOES = (PFNGLMULTITEXCOORD4XVOESPROC)0xdeadbeef;
	PFNGLNORMAL3XOESPROC ext_glNormal3xOES = (PFNGLNORMAL3XOESPROC)0xdeadbeef;
	PFNGLNORMAL3XVOESPROC ext_glNormal3xvOES = (PFNGLNORMAL3XVOESPROC)0xdeadbeef;
	PFNGLORTHOXOESPROC ext_glOrthoxOES = (PFNGLORTHOXOESPROC)0xdeadbeef;
	PFNGLPASSTHROUGHXOESPROC ext_glPassThroughxOES = (PFNGLPASSTHROUGHXOESPROC)0xdeadbeef;
	PFNGLPIXELMAPXPROC ext_glPixelMapx = (PFNGLPIXELMAPXPROC)0xdeadbeef;
	PFNGLPIXELSTOREXPROC ext_glPixelStorex = (PFNGLPIXELSTOREXPROC)0xdeadbeef;
	PFNGLPIXELTRANSFERXOESPROC ext_glPixelTransferxOES = (PFNGLPIXELTRANSFERXOESPROC)0xdeadbeef;
	PFNGLPIXELZOOMXOESPROC ext_glPixelZoomxOES = (PFNGLPIXELZOOMXOESPROC)0xdeadbeef;
	PFNGLPOINTPARAMETERXVOESPROC ext_glPointParameterxvOES = (PFNGLPOINTPARAMETERXVOESPROC)0xdeadbeef;
	PFNGLPOINTSIZEXOESPROC ext_glPointSizexOES = (PFNGLPOINTSIZEXOESPROC)0xdeadbeef;
	PFNGLPOLYGONOFFSETXOESPROC ext_glPolygonOffsetxOES = (PFNGLPOLYGONOFFSETXOESPROC)0xdeadbeef;
	PFNGLPRIORITIZETEXTURESXOESPROC ext_glPrioritizeTexturesxOES = (PFNGLPRIORITIZETEXTURESXOESPROC)0xdeadbeef;
	PFNGLRASTERPOS2XOESPROC ext_glRasterPos2xOES = (PFNGLRASTERPOS2XOESPROC)0xdeadbeef;
	PFNGLRASTERPOS3XOESPROC ext_glRasterPos3xOES = (PFNGLRASTERPOS3XOESPROC)0xdeadbeef;
	PFNGLRASTERPOS4XOESPROC ext_glRasterPos4xOES = (PFNGLRASTERPOS4XOESPROC)0xdeadbeef;
	PFNGLRASTERPOS2XVOESPROC ext_glRasterPos2xvOES = (PFNGLRASTERPOS2XVOESPROC)0xdeadbeef;
	PFNGLRASTERPOS3XVOESPROC ext_glRasterPos3xvOES = (PFNGLRASTERPOS3XVOESPROC)0xdeadbeef;
	PFNGLRASTERPOS4XVOESPROC ext_glRasterPos4xvOES = (PFNGLRASTERPOS4XVOESPROC)0xdeadbeef;
	PFNGLRECTXOESPROC ext_glRectxOES = (PFNGLRECTXOESPROC)0xdeadbeef;
	PFNGLRECTXVOESPROC ext_glRectxvOES = (PFNGLRECTXVOESPROC)0xdeadbeef;
	PFNGLROTATEXOESPROC ext_glRotatexOES = (PFNGLROTATEXOESPROC)0xdeadbeef;
	PFNGLSAMPLECOVERAGEOESPROC ext_glSampleCoverageOES = (PFNGLSAMPLECOVERAGEOESPROC)0xdeadbeef;
	PFNGLSCALEXOESPROC ext_glScalexOES = (PFNGLSCALEXOESPROC)0xdeadbeef;
	PFNGLTEXCOORD1XOESPROC ext_glTexCoord1xOES = (PFNGLTEXCOORD1XOESPROC)0xdeadbeef;
	PFNGLTEXCOORD2XOESPROC ext_glTexCoord2xOES = (PFNGLTEXCOORD2XOESPROC)0xdeadbeef;
	PFNGLTEXCOORD3XOESPROC ext_glTexCoord3xOES = (PFNGLTEXCOORD3XOESPROC)0xdeadbeef;
	PFNGLTEXCOORD4XOESPROC ext_glTexCoord4xOES = (PFNGLTEXCOORD4XOESPROC)0xdeadbeef;
	PFNGLTEXCOORD1XVOESPROC ext_glTexCoord1xvOES = (PFNGLTEXCOORD1XVOESPROC)0xdeadbeef;
	PFNGLTEXCOORD2XVOESPROC ext_glTexCoord2xvOES = (PFNGLTEXCOORD2XVOESPROC)0xdeadbeef;
	PFNGLTEXCOORD3XVOESPROC ext_glTexCoord3xvOES = (PFNGLTEXCOORD3XVOESPROC)0xdeadbeef;
	PFNGLTEXCOORD4XVOESPROC ext_glTexCoord4xvOES = (PFNGLTEXCOORD4XVOESPROC)0xdeadbeef;
	PFNGLTEXENVXOESPROC ext_glTexEnvxOES = (PFNGLTEXENVXOESPROC)0xdeadbeef;
	PFNGLTEXENVXVOESPROC ext_glTexEnvxvOES = (PFNGLTEXENVXVOESPROC)0xdeadbeef;
	PFNGLTEXGENXOESPROC ext_glTexGenxOES = (PFNGLTEXGENXOESPROC)0xdeadbeef;
	PFNGLTEXGENXVOESPROC ext_glTexGenxvOES = (PFNGLTEXGENXVOESPROC)0xdeadbeef;
	PFNGLTEXPARAMETERXOESPROC ext_glTexParameterxOES = (PFNGLTEXPARAMETERXOESPROC)0xdeadbeef;
	PFNGLTEXPARAMETERXVOESPROC ext_glTexParameterxvOES = (PFNGLTEXPARAMETERXVOESPROC)0xdeadbeef;
	PFNGLTRANSLATEXOESPROC ext_glTranslatexOES = (PFNGLTRANSLATEXOESPROC)0xdeadbeef;
	PFNGLVERTEX2XOESPROC ext_glVertex2xOES = (PFNGLVERTEX2XOESPROC)0xdeadbeef;
	PFNGLVERTEX3XOESPROC ext_glVertex3xOES = (PFNGLVERTEX3XOESPROC)0xdeadbeef;
	PFNGLVERTEX4XOESPROC ext_glVertex4xOES = (PFNGLVERTEX4XOESPROC)0xdeadbeef;
	PFNGLVERTEX2XVOESPROC ext_glVertex2xvOES = (PFNGLVERTEX2XVOESPROC)0xdeadbeef;
	PFNGLVERTEX3XVOESPROC ext_glVertex3xvOES = (PFNGLVERTEX3XVOESPROC)0xdeadbeef;
	PFNGLVERTEX4XVOESPROC ext_glVertex4xvOES = (PFNGLVERTEX4XVOESPROC)0xdeadbeef;
	PFNGLDEPTHRANGEFOESPROC ext_glDepthRangefOES = (PFNGLDEPTHRANGEFOESPROC)0xdeadbeef;
	PFNGLFRUSTUMFOESPROC ext_glFrustumfOES = (PFNGLFRUSTUMFOESPROC)0xdeadbeef;
	PFNGLORTHOFOESPROC ext_glOrthofOES = (PFNGLORTHOFOESPROC)0xdeadbeef;
	PFNGLCLIPPLANEFOESPROC ext_glClipPlanefOES = (PFNGLCLIPPLANEFOESPROC)0xdeadbeef;
	PFNGLCLEARDEPTHFOESPROC ext_glClearDepthfOES = (PFNGLCLEARDEPTHFOESPROC)0xdeadbeef;
	PFNGLGETCLIPPLANEFOESPROC ext_glGetClipPlanefOES = (PFNGLGETCLIPPLANEFOESPROC)0xdeadbeef;
	PFNGLQUERYMATRIXXOESPROC ext_glQueryMatrixxOES = (PFNGLQUERYMATRIXXOESPROC)0xdeadbeef;
	PFNGLDEPTHBOUNDSEXTPROC ext_glDepthBoundsEXT = (PFNGLDEPTHBOUNDSEXTPROC)0xdeadbeef;
	PFNGLBLENDEQUATIONSEPARATEEXTPROC ext_glBlendEquationSeparateEXT = (PFNGLBLENDEQUATIONSEPARATEEXTPROC)0xdeadbeef;
	PFNGLISRENDERBUFFEREXTPROC ext_glIsRenderbufferEXT = (PFNGLISRENDERBUFFEREXTPROC)0xdeadbeef;
	PFNGLBINDRENDERBUFFEREXTPROC ext_glBindRenderbufferEXT = (PFNGLBINDRENDERBUFFEREXTPROC)0xdeadbeef;
	PFNGLDELETERENDERBUFFERSEXTPROC ext_glDeleteRenderbuffersEXT = (PFNGLDELETERENDERBUFFERSEXTPROC)0xdeadbeef;
	PFNGLGENRENDERBUFFERSEXTPROC ext_glGenRenderbuffersEXT = (PFNGLGENRENDERBUFFERSEXTPROC)0xdeadbeef;
	PFNGLRENDERBUFFERSTORAGEEXTPROC ext_glRenderbufferStorageEXT = (PFNGLRENDERBUFFERSTORAGEEXTPROC)0xdeadbeef;
	PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC ext_glGetRenderbufferParameterivEXT = (PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLISFRAMEBUFFEREXTPROC ext_glIsFramebufferEXT = (PFNGLISFRAMEBUFFEREXTPROC)0xdeadbeef;
	PFNGLBINDFRAMEBUFFEREXTPROC ext_glBindFramebufferEXT = (PFNGLBINDFRAMEBUFFEREXTPROC)0xdeadbeef;
	PFNGLDELETEFRAMEBUFFERSEXTPROC ext_glDeleteFramebuffersEXT = (PFNGLDELETEFRAMEBUFFERSEXTPROC)0xdeadbeef;
	PFNGLGENFRAMEBUFFERSEXTPROC ext_glGenFramebuffersEXT = (PFNGLGENFRAMEBUFFERSEXTPROC)0xdeadbeef;
	PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC ext_glCheckFramebufferStatusEXT = (PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTURE1DEXTPROC ext_glFramebufferTexture1DEXT = (PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTURE2DEXTPROC ext_glFramebufferTexture2DEXT = (PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTURE3DEXTPROC ext_glFramebufferTexture3DEXT = (PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC ext_glFramebufferRenderbufferEXT = (PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)0xdeadbeef;
	PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC ext_glGetFramebufferAttachmentParameterivEXT = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLGENERATEMIPMAPEXTPROC ext_glGenerateMipmapEXT = (PFNGLGENERATEMIPMAPEXTPROC)0xdeadbeef;
	PFNGLSTRINGMARKERGREMEDYPROC ext_glStringMarkerGREMEDY = (PFNGLSTRINGMARKERGREMEDYPROC)0xdeadbeef;
	PFNGLSTENCILCLEARTAGEXTPROC ext_glStencilClearTagEXT = (PFNGLSTENCILCLEARTAGEXTPROC)0xdeadbeef;
	PFNGLBLITFRAMEBUFFEREXTPROC ext_glBlitFramebufferEXT = (PFNGLBLITFRAMEBUFFEREXTPROC)0xdeadbeef;
	PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC ext_glRenderbufferStorageMultisampleEXT = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)0xdeadbeef;
	PFNGLGETQUERYOBJECTI64VEXTPROC ext_glGetQueryObjecti64vEXT = (PFNGLGETQUERYOBJECTI64VEXTPROC)0xdeadbeef;
	PFNGLGETQUERYOBJECTUI64VEXTPROC ext_glGetQueryObjectui64vEXT = (PFNGLGETQUERYOBJECTUI64VEXTPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETERS4FVEXTPROC ext_glProgramEnvParameters4fvEXT = (PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC ext_glProgramLocalParameters4fvEXT = (PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)0xdeadbeef;
	PFNGLBUFFERPARAMETERIAPPLEPROC ext_glBufferParameteriAPPLE = (PFNGLBUFFERPARAMETERIAPPLEPROC)0xdeadbeef;
	PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC ext_glFlushMappedBufferRangeAPPLE = (PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETERI4INVPROC ext_glProgramLocalParameterI4iNV = (PFNGLPROGRAMLOCALPARAMETERI4INVPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC ext_glProgramLocalParameterI4ivNV = (PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC ext_glProgramLocalParametersI4ivNV = (PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETERI4UINVPROC ext_glProgramLocalParameterI4uiNV = (PFNGLPROGRAMLOCALPARAMETERI4UINVPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC ext_glProgramLocalParameterI4uivNV = (PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC)0xdeadbeef;
	PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC ext_glProgramLocalParametersI4uivNV = (PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETERI4INVPROC ext_glProgramEnvParameterI4iNV = (PFNGLPROGRAMENVPARAMETERI4INVPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETERI4IVNVPROC ext_glProgramEnvParameterI4ivNV = (PFNGLPROGRAMENVPARAMETERI4IVNVPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETERSI4IVNVPROC ext_glProgramEnvParametersI4ivNV = (PFNGLPROGRAMENVPARAMETERSI4IVNVPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETERI4UINVPROC ext_glProgramEnvParameterI4uiNV = (PFNGLPROGRAMENVPARAMETERI4UINVPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETERI4UIVNVPROC ext_glProgramEnvParameterI4uivNV = (PFNGLPROGRAMENVPARAMETERI4UIVNVPROC)0xdeadbeef;
	PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC ext_glProgramEnvParametersI4uivNV = (PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC ext_glGetProgramLocalParameterIivNV = (PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC ext_glGetProgramLocalParameterIuivNV = (PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMENVPARAMETERIIVNVPROC ext_glGetProgramEnvParameterIivNV = (PFNGLGETPROGRAMENVPARAMETERIIVNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC ext_glGetProgramEnvParameterIuivNV = (PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC)0xdeadbeef;
	PFNGLPROGRAMVERTEXLIMITNVPROC ext_glProgramVertexLimitNV = (PFNGLPROGRAMVERTEXLIMITNVPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTUREEXTPROC ext_glFramebufferTextureEXT = (PFNGLFRAMEBUFFERTEXTUREEXTPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC ext_glFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC ext_glFramebufferTextureFaceEXT = (PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC)0xdeadbeef;
	PFNGLPROGRAMPARAMETERIEXTPROC ext_glProgramParameteriEXT = (PFNGLPROGRAMPARAMETERIEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI1IEXTPROC ext_glVertexAttribI1iEXT = (PFNGLVERTEXATTRIBI1IEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI2IEXTPROC ext_glVertexAttribI2iEXT = (PFNGLVERTEXATTRIBI2IEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI3IEXTPROC ext_glVertexAttribI3iEXT = (PFNGLVERTEXATTRIBI3IEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4IEXTPROC ext_glVertexAttribI4iEXT = (PFNGLVERTEXATTRIBI4IEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI1UIEXTPROC ext_glVertexAttribI1uiEXT = (PFNGLVERTEXATTRIBI1UIEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI2UIEXTPROC ext_glVertexAttribI2uiEXT = (PFNGLVERTEXATTRIBI2UIEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI3UIEXTPROC ext_glVertexAttribI3uiEXT = (PFNGLVERTEXATTRIBI3UIEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4UIEXTPROC ext_glVertexAttribI4uiEXT = (PFNGLVERTEXATTRIBI4UIEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI1IVEXTPROC ext_glVertexAttribI1ivEXT = (PFNGLVERTEXATTRIBI1IVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI2IVEXTPROC ext_glVertexAttribI2ivEXT = (PFNGLVERTEXATTRIBI2IVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI3IVEXTPROC ext_glVertexAttribI3ivEXT = (PFNGLVERTEXATTRIBI3IVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4IVEXTPROC ext_glVertexAttribI4ivEXT = (PFNGLVERTEXATTRIBI4IVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI1UIVEXTPROC ext_glVertexAttribI1uivEXT = (PFNGLVERTEXATTRIBI1UIVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI2UIVEXTPROC ext_glVertexAttribI2uivEXT = (PFNGLVERTEXATTRIBI2UIVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI3UIVEXTPROC ext_glVertexAttribI3uivEXT = (PFNGLVERTEXATTRIBI3UIVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4UIVEXTPROC ext_glVertexAttribI4uivEXT = (PFNGLVERTEXATTRIBI4UIVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4BVEXTPROC ext_glVertexAttribI4bvEXT = (PFNGLVERTEXATTRIBI4BVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4SVEXTPROC ext_glVertexAttribI4svEXT = (PFNGLVERTEXATTRIBI4SVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4UBVEXTPROC ext_glVertexAttribI4ubvEXT = (PFNGLVERTEXATTRIBI4UBVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBI4USVEXTPROC ext_glVertexAttribI4usvEXT = (PFNGLVERTEXATTRIBI4USVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBIPOINTEREXTPROC ext_glVertexAttribIPointerEXT = (PFNGLVERTEXATTRIBIPOINTEREXTPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBIIVEXTPROC ext_glGetVertexAttribIivEXT = (PFNGLGETVERTEXATTRIBIIVEXTPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBIUIVEXTPROC ext_glGetVertexAttribIuivEXT = (PFNGLGETVERTEXATTRIBIUIVEXTPROC)0xdeadbeef;
	PFNGLGETUNIFORMUIVEXTPROC ext_glGetUniformuivEXT = (PFNGLGETUNIFORMUIVEXTPROC)0xdeadbeef;
	PFNGLBINDFRAGDATALOCATIONEXTPROC ext_glBindFragDataLocationEXT = (PFNGLBINDFRAGDATALOCATIONEXTPROC)0xdeadbeef;
	PFNGLGETFRAGDATALOCATIONEXTPROC ext_glGetFragDataLocationEXT = (PFNGLGETFRAGDATALOCATIONEXTPROC)0xdeadbeef;
	PFNGLUNIFORM1UIEXTPROC ext_glUniform1uiEXT = (PFNGLUNIFORM1UIEXTPROC)0xdeadbeef;
	PFNGLUNIFORM2UIEXTPROC ext_glUniform2uiEXT = (PFNGLUNIFORM2UIEXTPROC)0xdeadbeef;
	PFNGLUNIFORM3UIEXTPROC ext_glUniform3uiEXT = (PFNGLUNIFORM3UIEXTPROC)0xdeadbeef;
	PFNGLUNIFORM4UIEXTPROC ext_glUniform4uiEXT = (PFNGLUNIFORM4UIEXTPROC)0xdeadbeef;
	PFNGLUNIFORM1UIVEXTPROC ext_glUniform1uivEXT = (PFNGLUNIFORM1UIVEXTPROC)0xdeadbeef;
	PFNGLUNIFORM2UIVEXTPROC ext_glUniform2uivEXT = (PFNGLUNIFORM2UIVEXTPROC)0xdeadbeef;
	PFNGLUNIFORM3UIVEXTPROC ext_glUniform3uivEXT = (PFNGLUNIFORM3UIVEXTPROC)0xdeadbeef;
	PFNGLUNIFORM4UIVEXTPROC ext_glUniform4uivEXT = (PFNGLUNIFORM4UIVEXTPROC)0xdeadbeef;
	PFNGLDRAWARRAYSINSTANCEDEXTPROC ext_glDrawArraysInstancedEXT = (PFNGLDRAWARRAYSINSTANCEDEXTPROC)0xdeadbeef;
	PFNGLDRAWELEMENTSINSTANCEDEXTPROC ext_glDrawElementsInstancedEXT = (PFNGLDRAWELEMENTSINSTANCEDEXTPROC)0xdeadbeef;
	PFNGLTEXBUFFEREXTPROC ext_glTexBufferEXT = (PFNGLTEXBUFFEREXTPROC)0xdeadbeef;
	PFNGLDEPTHRANGEDNVPROC ext_glDepthRangedNV = (PFNGLDEPTHRANGEDNVPROC)0xdeadbeef;
	PFNGLCLEARDEPTHDNVPROC ext_glClearDepthdNV = (PFNGLCLEARDEPTHDNVPROC)0xdeadbeef;
	PFNGLDEPTHBOUNDSDNVPROC ext_glDepthBoundsdNV = (PFNGLDEPTHBOUNDSDNVPROC)0xdeadbeef;
	PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC ext_glRenderbufferStorageMultisampleCoverageNV = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC)0xdeadbeef;
	PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC ext_glProgramBufferParametersfvNV = (PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC)0xdeadbeef;
	PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC ext_glProgramBufferParametersIivNV = (PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC)0xdeadbeef;
	PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC ext_glProgramBufferParametersIuivNV = (PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC)0xdeadbeef;
	PFNGLCOLORMASKINDEXEDEXTPROC ext_glColorMaskIndexedEXT = (PFNGLCOLORMASKINDEXEDEXTPROC)0xdeadbeef;
	PFNGLGETBOOLEANINDEXEDVEXTPROC ext_glGetBooleanIndexedvEXT = (PFNGLGETBOOLEANINDEXEDVEXTPROC)0xdeadbeef;
	PFNGLGETINTEGERINDEXEDVEXTPROC ext_glGetIntegerIndexedvEXT = (PFNGLGETINTEGERINDEXEDVEXTPROC)0xdeadbeef;
	PFNGLENABLEINDEXEDEXTPROC ext_glEnableIndexedEXT = (PFNGLENABLEINDEXEDEXTPROC)0xdeadbeef;
	PFNGLDISABLEINDEXEDEXTPROC ext_glDisableIndexedEXT = (PFNGLDISABLEINDEXEDEXTPROC)0xdeadbeef;
	PFNGLISENABLEDINDEXEDEXTPROC ext_glIsEnabledIndexedEXT = (PFNGLISENABLEDINDEXEDEXTPROC)0xdeadbeef;
	PFNGLBEGINTRANSFORMFEEDBACKNVPROC ext_glBeginTransformFeedbackNV = (PFNGLBEGINTRANSFORMFEEDBACKNVPROC)0xdeadbeef;
	PFNGLENDTRANSFORMFEEDBACKNVPROC ext_glEndTransformFeedbackNV = (PFNGLENDTRANSFORMFEEDBACKNVPROC)0xdeadbeef;
	PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC ext_glTransformFeedbackAttribsNV = (PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC)0xdeadbeef;
	PFNGLBINDBUFFERRANGENVPROC ext_glBindBufferRangeNV = (PFNGLBINDBUFFERRANGENVPROC)0xdeadbeef;
	PFNGLBINDBUFFEROFFSETNVPROC ext_glBindBufferOffsetNV = (PFNGLBINDBUFFEROFFSETNVPROC)0xdeadbeef;
	PFNGLBINDBUFFERBASENVPROC ext_glBindBufferBaseNV = (PFNGLBINDBUFFERBASENVPROC)0xdeadbeef;
	PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC ext_glTransformFeedbackVaryingsNV = (PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC)0xdeadbeef;
	PFNGLACTIVEVARYINGNVPROC ext_glActiveVaryingNV = (PFNGLACTIVEVARYINGNVPROC)0xdeadbeef;
	PFNGLGETVARYINGLOCATIONNVPROC ext_glGetVaryingLocationNV = (PFNGLGETVARYINGLOCATIONNVPROC)0xdeadbeef;
	PFNGLGETACTIVEVARYINGNVPROC ext_glGetActiveVaryingNV = (PFNGLGETACTIVEVARYINGNVPROC)0xdeadbeef;
	PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC ext_glGetTransformFeedbackVaryingNV = (PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC)0xdeadbeef;
	PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC ext_glTransformFeedbackStreamAttribsNV = (PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC)0xdeadbeef;
	PFNGLUNIFORMBUFFEREXTPROC ext_glUniformBufferEXT = (PFNGLUNIFORMBUFFEREXTPROC)0xdeadbeef;
	PFNGLGETUNIFORMBUFFERSIZEEXTPROC ext_glGetUniformBufferSizeEXT = (PFNGLGETUNIFORMBUFFERSIZEEXTPROC)0xdeadbeef;
	PFNGLGETUNIFORMOFFSETEXTPROC ext_glGetUniformOffsetEXT = (PFNGLGETUNIFORMOFFSETEXTPROC)0xdeadbeef;
	PFNGLTEXPARAMETERIIVEXTPROC ext_glTexParameterIivEXT = (PFNGLTEXPARAMETERIIVEXTPROC)0xdeadbeef;
	PFNGLTEXPARAMETERIUIVEXTPROC ext_glTexParameterIuivEXT = (PFNGLTEXPARAMETERIUIVEXTPROC)0xdeadbeef;
	PFNGLGETTEXPARAMETERIIVEXTPROC ext_glGetTexParameterIivEXT = (PFNGLGETTEXPARAMETERIIVEXTPROC)0xdeadbeef;
	PFNGLGETTEXPARAMETERIUIVEXTPROC ext_glGetTexParameterIuivEXT = (PFNGLGETTEXPARAMETERIUIVEXTPROC)0xdeadbeef;
	PFNGLCLEARCOLORIIEXTPROC ext_glClearColorIiEXT = (PFNGLCLEARCOLORIIEXTPROC)0xdeadbeef;
	PFNGLCLEARCOLORIUIEXTPROC ext_glClearColorIuiEXT = (PFNGLCLEARCOLORIUIEXTPROC)0xdeadbeef;
	PFNGLFRAMETERMINATORGREMEDYPROC ext_glFrameTerminatorGREMEDY = (PFNGLFRAMETERMINATORGREMEDYPROC)0xdeadbeef;
	PFNGLBEGINCONDITIONALRENDERNVPROC ext_glBeginConditionalRenderNV = (PFNGLBEGINCONDITIONALRENDERNVPROC)0xdeadbeef;
	PFNGLENDCONDITIONALRENDERNVPROC ext_glEndConditionalRenderNV = (PFNGLENDCONDITIONALRENDERNVPROC)0xdeadbeef;
	PFNGLPRESENTFRAMEKEYEDNVPROC ext_glPresentFrameKeyedNV = (PFNGLPRESENTFRAMEKEYEDNVPROC)0xdeadbeef;
	PFNGLPRESENTFRAMEDUALFILLNVPROC ext_glPresentFrameDualFillNV = (PFNGLPRESENTFRAMEDUALFILLNVPROC)0xdeadbeef;
	PFNGLGETVIDEOIVNVPROC ext_glGetVideoivNV = (PFNGLGETVIDEOIVNVPROC)0xdeadbeef;
	PFNGLGETVIDEOUIVNVPROC ext_glGetVideouivNV = (PFNGLGETVIDEOUIVNVPROC)0xdeadbeef;
	PFNGLGETVIDEOI64VNVPROC ext_glGetVideoi64vNV = (PFNGLGETVIDEOI64VNVPROC)0xdeadbeef;
	PFNGLGETVIDEOUI64VNVPROC ext_glGetVideoui64vNV = (PFNGLGETVIDEOUI64VNVPROC)0xdeadbeef;
	PFNGLBEGINTRANSFORMFEEDBACKEXTPROC ext_glBeginTransformFeedbackEXT = (PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)0xdeadbeef;
	PFNGLENDTRANSFORMFEEDBACKEXTPROC ext_glEndTransformFeedbackEXT = (PFNGLENDTRANSFORMFEEDBACKEXTPROC)0xdeadbeef;
	PFNGLBINDBUFFERRANGEEXTPROC ext_glBindBufferRangeEXT = (PFNGLBINDBUFFERRANGEEXTPROC)0xdeadbeef;
	PFNGLBINDBUFFEROFFSETEXTPROC ext_glBindBufferOffsetEXT = (PFNGLBINDBUFFEROFFSETEXTPROC)0xdeadbeef;
	PFNGLBINDBUFFERBASEEXTPROC ext_glBindBufferBaseEXT = (PFNGLBINDBUFFERBASEEXTPROC)0xdeadbeef;
	PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC ext_glTransformFeedbackVaryingsEXT = (PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)0xdeadbeef;
	PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC ext_glGetTransformFeedbackVaryingEXT = (PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)0xdeadbeef;
	PFNGLCLIENTATTRIBDEFAULTEXTPROC ext_glClientAttribDefaultEXT = (PFNGLCLIENTATTRIBDEFAULTEXTPROC)0xdeadbeef;
	PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC ext_glPushClientAttribDefaultEXT = (PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)0xdeadbeef;
	PFNGLMATRIXLOADFEXTPROC ext_glMatrixLoadfEXT = (PFNGLMATRIXLOADFEXTPROC)0xdeadbeef;
	PFNGLMATRIXLOADDEXTPROC ext_glMatrixLoaddEXT = (PFNGLMATRIXLOADDEXTPROC)0xdeadbeef;
	PFNGLMATRIXMULTFEXTPROC ext_glMatrixMultfEXT = (PFNGLMATRIXMULTFEXTPROC)0xdeadbeef;
	PFNGLMATRIXMULTDEXTPROC ext_glMatrixMultdEXT = (PFNGLMATRIXMULTDEXTPROC)0xdeadbeef;
	PFNGLMATRIXLOADIDENTITYEXTPROC ext_glMatrixLoadIdentityEXT = (PFNGLMATRIXLOADIDENTITYEXTPROC)0xdeadbeef;
	PFNGLMATRIXROTATEFEXTPROC ext_glMatrixRotatefEXT = (PFNGLMATRIXROTATEFEXTPROC)0xdeadbeef;
	PFNGLMATRIXROTATEDEXTPROC ext_glMatrixRotatedEXT = (PFNGLMATRIXROTATEDEXTPROC)0xdeadbeef;
	PFNGLMATRIXSCALEFEXTPROC ext_glMatrixScalefEXT = (PFNGLMATRIXSCALEFEXTPROC)0xdeadbeef;
	PFNGLMATRIXSCALEDEXTPROC ext_glMatrixScaledEXT = (PFNGLMATRIXSCALEDEXTPROC)0xdeadbeef;
	PFNGLMATRIXTRANSLATEFEXTPROC ext_glMatrixTranslatefEXT = (PFNGLMATRIXTRANSLATEFEXTPROC)0xdeadbeef;
	PFNGLMATRIXTRANSLATEDEXTPROC ext_glMatrixTranslatedEXT = (PFNGLMATRIXTRANSLATEDEXTPROC)0xdeadbeef;
	PFNGLMATRIXFRUSTUMEXTPROC ext_glMatrixFrustumEXT = (PFNGLMATRIXFRUSTUMEXTPROC)0xdeadbeef;
	PFNGLMATRIXORTHOEXTPROC ext_glMatrixOrthoEXT = (PFNGLMATRIXORTHOEXTPROC)0xdeadbeef;
	PFNGLMATRIXPOPEXTPROC ext_glMatrixPopEXT = (PFNGLMATRIXPOPEXTPROC)0xdeadbeef;
	PFNGLMATRIXPUSHEXTPROC ext_glMatrixPushEXT = (PFNGLMATRIXPUSHEXTPROC)0xdeadbeef;
	PFNGLMATRIXLOADTRANSPOSEFEXTPROC ext_glMatrixLoadTransposefEXT = (PFNGLMATRIXLOADTRANSPOSEFEXTPROC)0xdeadbeef;
	PFNGLMATRIXLOADTRANSPOSEDEXTPROC ext_glMatrixLoadTransposedEXT = (PFNGLMATRIXLOADTRANSPOSEDEXTPROC)0xdeadbeef;
	PFNGLMATRIXMULTTRANSPOSEFEXTPROC ext_glMatrixMultTransposefEXT = (PFNGLMATRIXMULTTRANSPOSEFEXTPROC)0xdeadbeef;
	PFNGLMATRIXMULTTRANSPOSEDEXTPROC ext_glMatrixMultTransposedEXT = (PFNGLMATRIXMULTTRANSPOSEDEXTPROC)0xdeadbeef;
	PFNGLTEXTUREPARAMETERFEXTPROC ext_glTextureParameterfEXT = (PFNGLTEXTUREPARAMETERFEXTPROC)0xdeadbeef;
	PFNGLTEXTUREPARAMETERFVEXTPROC ext_glTextureParameterfvEXT = (PFNGLTEXTUREPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLTEXTUREPARAMETERIEXTPROC ext_glTextureParameteriEXT = (PFNGLTEXTUREPARAMETERIEXTPROC)0xdeadbeef;
	PFNGLTEXTUREPARAMETERIVEXTPROC ext_glTextureParameterivEXT = (PFNGLTEXTUREPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLTEXTUREIMAGE1DEXTPROC ext_glTextureImage1DEXT = (PFNGLTEXTUREIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLTEXTUREIMAGE2DEXTPROC ext_glTextureImage2DEXT = (PFNGLTEXTUREIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLTEXTURESUBIMAGE1DEXTPROC ext_glTextureSubImage1DEXT = (PFNGLTEXTURESUBIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLTEXTURESUBIMAGE2DEXTPROC ext_glTextureSubImage2DEXT = (PFNGLTEXTURESUBIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOPYTEXTUREIMAGE1DEXTPROC ext_glCopyTextureImage1DEXT = (PFNGLCOPYTEXTUREIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLCOPYTEXTUREIMAGE2DEXTPROC ext_glCopyTextureImage2DEXT = (PFNGLCOPYTEXTUREIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC ext_glCopyTextureSubImage1DEXT = (PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC ext_glCopyTextureSubImage2DEXT = (PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLGETTEXTUREIMAGEEXTPROC ext_glGetTextureImageEXT = (PFNGLGETTEXTUREIMAGEEXTPROC)0xdeadbeef;
	PFNGLGETTEXTUREPARAMETERFVEXTPROC ext_glGetTextureParameterfvEXT = (PFNGLGETTEXTUREPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLGETTEXTUREPARAMETERIVEXTPROC ext_glGetTextureParameterivEXT = (PFNGLGETTEXTUREPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC ext_glGetTextureLevelParameterfvEXT = (PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC ext_glGetTextureLevelParameterivEXT = (PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLTEXTUREIMAGE3DEXTPROC ext_glTextureImage3DEXT = (PFNGLTEXTUREIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLTEXTURESUBIMAGE3DEXTPROC ext_glTextureSubImage3DEXT = (PFNGLTEXTURESUBIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC ext_glCopyTextureSubImage3DEXT = (PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLMULTITEXPARAMETERFEXTPROC ext_glMultiTexParameterfEXT = (PFNGLMULTITEXPARAMETERFEXTPROC)0xdeadbeef;
	PFNGLMULTITEXPARAMETERFVEXTPROC ext_glMultiTexParameterfvEXT = (PFNGLMULTITEXPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLMULTITEXPARAMETERIEXTPROC ext_glMultiTexParameteriEXT = (PFNGLMULTITEXPARAMETERIEXTPROC)0xdeadbeef;
	PFNGLMULTITEXPARAMETERIVEXTPROC ext_glMultiTexParameterivEXT = (PFNGLMULTITEXPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLMULTITEXIMAGE1DEXTPROC ext_glMultiTexImage1DEXT = (PFNGLMULTITEXIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLMULTITEXIMAGE2DEXTPROC ext_glMultiTexImage2DEXT = (PFNGLMULTITEXIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLMULTITEXSUBIMAGE1DEXTPROC ext_glMultiTexSubImage1DEXT = (PFNGLMULTITEXSUBIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLMULTITEXSUBIMAGE2DEXTPROC ext_glMultiTexSubImage2DEXT = (PFNGLMULTITEXSUBIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOPYMULTITEXIMAGE1DEXTPROC ext_glCopyMultiTexImage1DEXT = (PFNGLCOPYMULTITEXIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLCOPYMULTITEXIMAGE2DEXTPROC ext_glCopyMultiTexImage2DEXT = (PFNGLCOPYMULTITEXIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC ext_glCopyMultiTexSubImage1DEXT = (PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC ext_glCopyMultiTexSubImage2DEXT = (PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXIMAGEEXTPROC ext_glGetMultiTexImageEXT = (PFNGLGETMULTITEXIMAGEEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXPARAMETERFVEXTPROC ext_glGetMultiTexParameterfvEXT = (PFNGLGETMULTITEXPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXPARAMETERIVEXTPROC ext_glGetMultiTexParameterivEXT = (PFNGLGETMULTITEXPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC ext_glGetMultiTexLevelParameterfvEXT = (PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC ext_glGetMultiTexLevelParameterivEXT = (PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLMULTITEXIMAGE3DEXTPROC ext_glMultiTexImage3DEXT = (PFNGLMULTITEXIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLMULTITEXSUBIMAGE3DEXTPROC ext_glMultiTexSubImage3DEXT = (PFNGLMULTITEXSUBIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC ext_glCopyMultiTexSubImage3DEXT = (PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLBINDMULTITEXTUREEXTPROC ext_glBindMultiTextureEXT = (PFNGLBINDMULTITEXTUREEXTPROC)0xdeadbeef;
	PFNGLENABLECLIENTSTATEINDEXEDEXTPROC ext_glEnableClientStateIndexedEXT = (PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)0xdeadbeef;
	PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC ext_glDisableClientStateIndexedEXT = (PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)0xdeadbeef;
	PFNGLMULTITEXCOORDPOINTEREXTPROC ext_glMultiTexCoordPointerEXT = (PFNGLMULTITEXCOORDPOINTEREXTPROC)0xdeadbeef;
	PFNGLMULTITEXENVFEXTPROC ext_glMultiTexEnvfEXT = (PFNGLMULTITEXENVFEXTPROC)0xdeadbeef;
	PFNGLMULTITEXENVFVEXTPROC ext_glMultiTexEnvfvEXT = (PFNGLMULTITEXENVFVEXTPROC)0xdeadbeef;
	PFNGLMULTITEXENVIEXTPROC ext_glMultiTexEnviEXT = (PFNGLMULTITEXENVIEXTPROC)0xdeadbeef;
	PFNGLMULTITEXENVIVEXTPROC ext_glMultiTexEnvivEXT = (PFNGLMULTITEXENVIVEXTPROC)0xdeadbeef;
	PFNGLMULTITEXGENDEXTPROC ext_glMultiTexGendEXT = (PFNGLMULTITEXGENDEXTPROC)0xdeadbeef;
	PFNGLMULTITEXGENDVEXTPROC ext_glMultiTexGendvEXT = (PFNGLMULTITEXGENDVEXTPROC)0xdeadbeef;
	PFNGLMULTITEXGENFEXTPROC ext_glMultiTexGenfEXT = (PFNGLMULTITEXGENFEXTPROC)0xdeadbeef;
	PFNGLMULTITEXGENFVEXTPROC ext_glMultiTexGenfvEXT = (PFNGLMULTITEXGENFVEXTPROC)0xdeadbeef;
	PFNGLMULTITEXGENIEXTPROC ext_glMultiTexGeniEXT = (PFNGLMULTITEXGENIEXTPROC)0xdeadbeef;
	PFNGLMULTITEXGENIVEXTPROC ext_glMultiTexGenivEXT = (PFNGLMULTITEXGENIVEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXENVFVEXTPROC ext_glGetMultiTexEnvfvEXT = (PFNGLGETMULTITEXENVFVEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXENVIVEXTPROC ext_glGetMultiTexEnvivEXT = (PFNGLGETMULTITEXENVIVEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXGENDVEXTPROC ext_glGetMultiTexGendvEXT = (PFNGLGETMULTITEXGENDVEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXGENFVEXTPROC ext_glGetMultiTexGenfvEXT = (PFNGLGETMULTITEXGENFVEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXGENIVEXTPROC ext_glGetMultiTexGenivEXT = (PFNGLGETMULTITEXGENIVEXTPROC)0xdeadbeef;
	PFNGLGETFLOATINDEXEDVEXTPROC ext_glGetFloatIndexedvEXT = (PFNGLGETFLOATINDEXEDVEXTPROC)0xdeadbeef;
	PFNGLGETDOUBLEINDEXEDVEXTPROC ext_glGetDoubleIndexedvEXT = (PFNGLGETDOUBLEINDEXEDVEXTPROC)0xdeadbeef;
	PFNGLGETPOINTERINDEXEDVEXTPROC ext_glGetPointerIndexedvEXT = (PFNGLGETPOINTERINDEXEDVEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC ext_glCompressedTextureImage3DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC ext_glCompressedTextureImage2DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC ext_glCompressedTextureImage1DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC ext_glCompressedTextureSubImage3DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC ext_glCompressedTextureSubImage2DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC ext_glCompressedTextureSubImage1DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC ext_glGetCompressedTextureImageEXT = (PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC ext_glCompressedMultiTexImage3DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC ext_glCompressedMultiTexImage2DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC ext_glCompressedMultiTexImage1DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC ext_glCompressedMultiTexSubImage3DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC ext_glCompressedMultiTexSubImage2DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)0xdeadbeef;
	PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC ext_glCompressedMultiTexSubImage1DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)0xdeadbeef;
	PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC ext_glGetCompressedMultiTexImageEXT = (PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMSTRINGEXTPROC ext_glNamedProgramStringEXT = (PFNGLNAMEDPROGRAMSTRINGEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC ext_glNamedProgramLocalParameter4dEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC ext_glNamedProgramLocalParameter4dvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC ext_glNamedProgramLocalParameter4fEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC ext_glNamedProgramLocalParameter4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC ext_glGetNamedProgramLocalParameterdvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC ext_glGetNamedProgramLocalParameterfvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDPROGRAMIVEXTPROC ext_glGetNamedProgramivEXT = (PFNGLGETNAMEDPROGRAMIVEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDPROGRAMSTRINGEXTPROC ext_glGetNamedProgramStringEXT = (PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC ext_glNamedProgramLocalParameters4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC ext_glNamedProgramLocalParameterI4iEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC ext_glNamedProgramLocalParameterI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC ext_glNamedProgramLocalParametersI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC ext_glNamedProgramLocalParameterI4uiEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC ext_glNamedProgramLocalParameterI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)0xdeadbeef;
	PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC ext_glNamedProgramLocalParametersI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC ext_glGetNamedProgramLocalParameterIivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC ext_glGetNamedProgramLocalParameterIuivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)0xdeadbeef;
	PFNGLTEXTUREPARAMETERIIVEXTPROC ext_glTextureParameterIivEXT = (PFNGLTEXTUREPARAMETERIIVEXTPROC)0xdeadbeef;
	PFNGLTEXTUREPARAMETERIUIVEXTPROC ext_glTextureParameterIuivEXT = (PFNGLTEXTUREPARAMETERIUIVEXTPROC)0xdeadbeef;
	PFNGLGETTEXTUREPARAMETERIIVEXTPROC ext_glGetTextureParameterIivEXT = (PFNGLGETTEXTUREPARAMETERIIVEXTPROC)0xdeadbeef;
	PFNGLGETTEXTUREPARAMETERIUIVEXTPROC ext_glGetTextureParameterIuivEXT = (PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)0xdeadbeef;
	PFNGLMULTITEXPARAMETERIIVEXTPROC ext_glMultiTexParameterIivEXT = (PFNGLMULTITEXPARAMETERIIVEXTPROC)0xdeadbeef;
	PFNGLMULTITEXPARAMETERIUIVEXTPROC ext_glMultiTexParameterIuivEXT = (PFNGLMULTITEXPARAMETERIUIVEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXPARAMETERIIVEXTPROC ext_glGetMultiTexParameterIivEXT = (PFNGLGETMULTITEXPARAMETERIIVEXTPROC)0xdeadbeef;
	PFNGLGETMULTITEXPARAMETERIUIVEXTPROC ext_glGetMultiTexParameterIuivEXT = (PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1FEXTPROC ext_glProgramUniform1fEXT = (PFNGLPROGRAMUNIFORM1FEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2FEXTPROC ext_glProgramUniform2fEXT = (PFNGLPROGRAMUNIFORM2FEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3FEXTPROC ext_glProgramUniform3fEXT = (PFNGLPROGRAMUNIFORM3FEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4FEXTPROC ext_glProgramUniform4fEXT = (PFNGLPROGRAMUNIFORM4FEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1IEXTPROC ext_glProgramUniform1iEXT = (PFNGLPROGRAMUNIFORM1IEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2IEXTPROC ext_glProgramUniform2iEXT = (PFNGLPROGRAMUNIFORM2IEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3IEXTPROC ext_glProgramUniform3iEXT = (PFNGLPROGRAMUNIFORM3IEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4IEXTPROC ext_glProgramUniform4iEXT = (PFNGLPROGRAMUNIFORM4IEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1FVEXTPROC ext_glProgramUniform1fvEXT = (PFNGLPROGRAMUNIFORM1FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2FVEXTPROC ext_glProgramUniform2fvEXT = (PFNGLPROGRAMUNIFORM2FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3FVEXTPROC ext_glProgramUniform3fvEXT = (PFNGLPROGRAMUNIFORM3FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4FVEXTPROC ext_glProgramUniform4fvEXT = (PFNGLPROGRAMUNIFORM4FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1IVEXTPROC ext_glProgramUniform1ivEXT = (PFNGLPROGRAMUNIFORM1IVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2IVEXTPROC ext_glProgramUniform2ivEXT = (PFNGLPROGRAMUNIFORM2IVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3IVEXTPROC ext_glProgramUniform3ivEXT = (PFNGLPROGRAMUNIFORM3IVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4IVEXTPROC ext_glProgramUniform4ivEXT = (PFNGLPROGRAMUNIFORM4IVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC ext_glProgramUniformMatrix2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC ext_glProgramUniformMatrix3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC ext_glProgramUniformMatrix4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC ext_glProgramUniformMatrix2x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC ext_glProgramUniformMatrix3x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC ext_glProgramUniformMatrix2x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC ext_glProgramUniformMatrix4x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC ext_glProgramUniformMatrix3x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC ext_glProgramUniformMatrix4x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1UIEXTPROC ext_glProgramUniform1uiEXT = (PFNGLPROGRAMUNIFORM1UIEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2UIEXTPROC ext_glProgramUniform2uiEXT = (PFNGLPROGRAMUNIFORM2UIEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3UIEXTPROC ext_glProgramUniform3uiEXT = (PFNGLPROGRAMUNIFORM3UIEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4UIEXTPROC ext_glProgramUniform4uiEXT = (PFNGLPROGRAMUNIFORM4UIEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1UIVEXTPROC ext_glProgramUniform1uivEXT = (PFNGLPROGRAMUNIFORM1UIVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2UIVEXTPROC ext_glProgramUniform2uivEXT = (PFNGLPROGRAMUNIFORM2UIVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3UIVEXTPROC ext_glProgramUniform3uivEXT = (PFNGLPROGRAMUNIFORM3UIVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4UIVEXTPROC ext_glProgramUniform4uivEXT = (PFNGLPROGRAMUNIFORM4UIVEXTPROC)0xdeadbeef;
	PFNGLNAMEDBUFFERDATAEXTPROC ext_glNamedBufferDataEXT = (PFNGLNAMEDBUFFERDATAEXTPROC)0xdeadbeef;
	PFNGLNAMEDBUFFERSUBDATAEXTPROC ext_glNamedBufferSubDataEXT = (PFNGLNAMEDBUFFERSUBDATAEXTPROC)0xdeadbeef;
	PFNGLMAPNAMEDBUFFEREXTPROC ext_glMapNamedBufferEXT = (PFNGLMAPNAMEDBUFFEREXTPROC)0xdeadbeef;
	PFNGLUNMAPNAMEDBUFFEREXTPROC ext_glUnmapNamedBufferEXT = (PFNGLUNMAPNAMEDBUFFEREXTPROC)0xdeadbeef;
	PFNGLMAPNAMEDBUFFERRANGEEXTPROC ext_glMapNamedBufferRangeEXT = (PFNGLMAPNAMEDBUFFERRANGEEXTPROC)0xdeadbeef;
	PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC ext_glFlushMappedNamedBufferRangeEXT = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)0xdeadbeef;
	PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC ext_glNamedCopyBufferSubDataEXT = (PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC ext_glGetNamedBufferParameterivEXT = (PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDBUFFERPOINTERVEXTPROC ext_glGetNamedBufferPointervEXT = (PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDBUFFERSUBDATAEXTPROC ext_glGetNamedBufferSubDataEXT = (PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)0xdeadbeef;
	PFNGLTEXTUREBUFFEREXTPROC ext_glTextureBufferEXT = (PFNGLTEXTUREBUFFEREXTPROC)0xdeadbeef;
	PFNGLMULTITEXBUFFEREXTPROC ext_glMultiTexBufferEXT = (PFNGLMULTITEXBUFFEREXTPROC)0xdeadbeef;
	PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC ext_glNamedRenderbufferStorageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)0xdeadbeef;
	PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC ext_glGetNamedRenderbufferParameterivEXT = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC ext_glCheckNamedFramebufferStatusEXT = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)0xdeadbeef;
	PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC ext_glNamedFramebufferTexture1DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)0xdeadbeef;
	PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC ext_glNamedFramebufferTexture2DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)0xdeadbeef;
	PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC ext_glNamedFramebufferTexture3DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)0xdeadbeef;
	PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC ext_glNamedFramebufferRenderbufferEXT = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)0xdeadbeef;
	PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC ext_glGetNamedFramebufferAttachmentParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLGENERATETEXTUREMIPMAPEXTPROC ext_glGenerateTextureMipmapEXT = (PFNGLGENERATETEXTUREMIPMAPEXTPROC)0xdeadbeef;
	PFNGLGENERATEMULTITEXMIPMAPEXTPROC ext_glGenerateMultiTexMipmapEXT = (PFNGLGENERATEMULTITEXMIPMAPEXTPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC ext_glFramebufferDrawBufferEXT = (PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC ext_glFramebufferDrawBuffersEXT = (PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)0xdeadbeef;
	PFNGLFRAMEBUFFERREADBUFFEREXTPROC ext_glFramebufferReadBufferEXT = (PFNGLFRAMEBUFFERREADBUFFEREXTPROC)0xdeadbeef;
	PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC ext_glGetFramebufferParameterivEXT = (PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)0xdeadbeef;
	PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC ext_glNamedRenderbufferStorageMultisampleEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)0xdeadbeef;
	PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC ext_glNamedRenderbufferStorageMultisampleCoverageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)0xdeadbeef;
	PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC ext_glNamedFramebufferTextureEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)0xdeadbeef;
	PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC ext_glNamedFramebufferTextureLayerEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)0xdeadbeef;
	PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC ext_glNamedFramebufferTextureFaceEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)0xdeadbeef;
	PFNGLTEXTURERENDERBUFFEREXTPROC ext_glTextureRenderbufferEXT = (PFNGLTEXTURERENDERBUFFEREXTPROC)0xdeadbeef;
	PFNGLMULTITEXRENDERBUFFEREXTPROC ext_glMultiTexRenderbufferEXT = (PFNGLMULTITEXRENDERBUFFEREXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1DEXTPROC ext_glProgramUniform1dEXT = (PFNGLPROGRAMUNIFORM1DEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2DEXTPROC ext_glProgramUniform2dEXT = (PFNGLPROGRAMUNIFORM2DEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3DEXTPROC ext_glProgramUniform3dEXT = (PFNGLPROGRAMUNIFORM3DEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4DEXTPROC ext_glProgramUniform4dEXT = (PFNGLPROGRAMUNIFORM4DEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1DVEXTPROC ext_glProgramUniform1dvEXT = (PFNGLPROGRAMUNIFORM1DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2DVEXTPROC ext_glProgramUniform2dvEXT = (PFNGLPROGRAMUNIFORM2DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3DVEXTPROC ext_glProgramUniform3dvEXT = (PFNGLPROGRAMUNIFORM3DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4DVEXTPROC ext_glProgramUniform4dvEXT = (PFNGLPROGRAMUNIFORM4DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC ext_glProgramUniformMatrix2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC ext_glProgramUniformMatrix3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC ext_glProgramUniformMatrix4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC ext_glProgramUniformMatrix2x3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC ext_glProgramUniformMatrix2x4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC ext_glProgramUniformMatrix3x2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC ext_glProgramUniformMatrix3x4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC ext_glProgramUniformMatrix4x2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC ext_glProgramUniformMatrix4x3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC)0xdeadbeef;
	PFNGLGETMULTISAMPLEFVNVPROC ext_glGetMultisamplefvNV = (PFNGLGETMULTISAMPLEFVNVPROC)0xdeadbeef;
	PFNGLSAMPLEMASKINDEXEDNVPROC ext_glSampleMaskIndexedNV = (PFNGLSAMPLEMASKINDEXEDNVPROC)0xdeadbeef;
	PFNGLTEXRENDERBUFFERNVPROC ext_glTexRenderbufferNV = (PFNGLTEXRENDERBUFFERNVPROC)0xdeadbeef;
	PFNGLBINDTRANSFORMFEEDBACKNVPROC ext_glBindTransformFeedbackNV = (PFNGLBINDTRANSFORMFEEDBACKNVPROC)0xdeadbeef;
	PFNGLDELETETRANSFORMFEEDBACKSNVPROC ext_glDeleteTransformFeedbacksNV = (PFNGLDELETETRANSFORMFEEDBACKSNVPROC)0xdeadbeef;
	PFNGLGENTRANSFORMFEEDBACKSNVPROC ext_glGenTransformFeedbacksNV = (PFNGLGENTRANSFORMFEEDBACKSNVPROC)0xdeadbeef;
	PFNGLISTRANSFORMFEEDBACKNVPROC ext_glIsTransformFeedbackNV = (PFNGLISTRANSFORMFEEDBACKNVPROC)0xdeadbeef;
	PFNGLPAUSETRANSFORMFEEDBACKNVPROC ext_glPauseTransformFeedbackNV = (PFNGLPAUSETRANSFORMFEEDBACKNVPROC)0xdeadbeef;
	PFNGLRESUMETRANSFORMFEEDBACKNVPROC ext_glResumeTransformFeedbackNV = (PFNGLRESUMETRANSFORMFEEDBACKNVPROC)0xdeadbeef;
	PFNGLDRAWTRANSFORMFEEDBACKNVPROC ext_glDrawTransformFeedbackNV = (PFNGLDRAWTRANSFORMFEEDBACKNVPROC)0xdeadbeef;
	PFNGLGETPERFMONITORGROUPSAMDPROC ext_glGetPerfMonitorGroupsAMD = (PFNGLGETPERFMONITORGROUPSAMDPROC)0xdeadbeef;
	PFNGLGETPERFMONITORCOUNTERSAMDPROC ext_glGetPerfMonitorCountersAMD = (PFNGLGETPERFMONITORCOUNTERSAMDPROC)0xdeadbeef;
	PFNGLGETPERFMONITORGROUPSTRINGAMDPROC ext_glGetPerfMonitorGroupStringAMD = (PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)0xdeadbeef;
	PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC ext_glGetPerfMonitorCounterStringAMD = (PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)0xdeadbeef;
	PFNGLGETPERFMONITORCOUNTERINFOAMDPROC ext_glGetPerfMonitorCounterInfoAMD = (PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)0xdeadbeef;
	PFNGLGENPERFMONITORSAMDPROC ext_glGenPerfMonitorsAMD = (PFNGLGENPERFMONITORSAMDPROC)0xdeadbeef;
	PFNGLDELETEPERFMONITORSAMDPROC ext_glDeletePerfMonitorsAMD = (PFNGLDELETEPERFMONITORSAMDPROC)0xdeadbeef;
	PFNGLSELECTPERFMONITORCOUNTERSAMDPROC ext_glSelectPerfMonitorCountersAMD = (PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)0xdeadbeef;
	PFNGLBEGINPERFMONITORAMDPROC ext_glBeginPerfMonitorAMD = (PFNGLBEGINPERFMONITORAMDPROC)0xdeadbeef;
	PFNGLENDPERFMONITORAMDPROC ext_glEndPerfMonitorAMD = (PFNGLENDPERFMONITORAMDPROC)0xdeadbeef;
	PFNGLGETPERFMONITORCOUNTERDATAAMDPROC ext_glGetPerfMonitorCounterDataAMD = (PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)0xdeadbeef;
	PFNGLTESSELLATIONFACTORAMDPROC ext_glTessellationFactorAMD = (PFNGLTESSELLATIONFACTORAMDPROC)0xdeadbeef;
	PFNGLTESSELLATIONMODEAMDPROC ext_glTessellationModeAMD = (PFNGLTESSELLATIONMODEAMDPROC)0xdeadbeef;
	PFNGLPROVOKINGVERTEXEXTPROC ext_glProvokingVertexEXT = (PFNGLPROVOKINGVERTEXEXTPROC)0xdeadbeef;
	PFNGLBLENDFUNCINDEXEDAMDPROC ext_glBlendFuncIndexedAMD = (PFNGLBLENDFUNCINDEXEDAMDPROC)0xdeadbeef;
	PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC ext_glBlendFuncSeparateIndexedAMD = (PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC)0xdeadbeef;
	PFNGLBLENDEQUATIONINDEXEDAMDPROC ext_glBlendEquationIndexedAMD = (PFNGLBLENDEQUATIONINDEXEDAMDPROC)0xdeadbeef;
	PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC ext_glBlendEquationSeparateIndexedAMD = (PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC)0xdeadbeef;
	PFNGLTEXTURERANGEAPPLEPROC ext_glTextureRangeAPPLE = (PFNGLTEXTURERANGEAPPLEPROC)0xdeadbeef;
	PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC ext_glGetTexParameterPointervAPPLE = (PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC)0xdeadbeef;
	PFNGLENABLEVERTEXATTRIBAPPLEPROC ext_glEnableVertexAttribAPPLE = (PFNGLENABLEVERTEXATTRIBAPPLEPROC)0xdeadbeef;
	PFNGLDISABLEVERTEXATTRIBAPPLEPROC ext_glDisableVertexAttribAPPLE = (PFNGLDISABLEVERTEXATTRIBAPPLEPROC)0xdeadbeef;
	PFNGLISVERTEXATTRIBENABLEDAPPLEPROC ext_glIsVertexAttribEnabledAPPLE = (PFNGLISVERTEXATTRIBENABLEDAPPLEPROC)0xdeadbeef;
	PFNGLMAPVERTEXATTRIB1DAPPLEPROC ext_glMapVertexAttrib1dAPPLE = (PFNGLMAPVERTEXATTRIB1DAPPLEPROC)0xdeadbeef;
	PFNGLMAPVERTEXATTRIB1FAPPLEPROC ext_glMapVertexAttrib1fAPPLE = (PFNGLMAPVERTEXATTRIB1FAPPLEPROC)0xdeadbeef;
	PFNGLMAPVERTEXATTRIB2DAPPLEPROC ext_glMapVertexAttrib2dAPPLE = (PFNGLMAPVERTEXATTRIB2DAPPLEPROC)0xdeadbeef;
	PFNGLMAPVERTEXATTRIB2FAPPLEPROC ext_glMapVertexAttrib2fAPPLE = (PFNGLMAPVERTEXATTRIB2FAPPLEPROC)0xdeadbeef;
	PFNGLOBJECTPURGEABLEAPPLEPROC ext_glObjectPurgeableAPPLE = (PFNGLOBJECTPURGEABLEAPPLEPROC)0xdeadbeef;
	PFNGLOBJECTUNPURGEABLEAPPLEPROC ext_glObjectUnpurgeableAPPLE = (PFNGLOBJECTUNPURGEABLEAPPLEPROC)0xdeadbeef;
	PFNGLGETOBJECTPARAMETERIVAPPLEPROC ext_glGetObjectParameterivAPPLE = (PFNGLGETOBJECTPARAMETERIVAPPLEPROC)0xdeadbeef;
	PFNGLBEGINVIDEOCAPTURENVPROC ext_glBeginVideoCaptureNV = (PFNGLBEGINVIDEOCAPTURENVPROC)0xdeadbeef;
	PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC ext_glBindVideoCaptureStreamBufferNV = (PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC)0xdeadbeef;
	PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC ext_glBindVideoCaptureStreamTextureNV = (PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC)0xdeadbeef;
	PFNGLENDVIDEOCAPTURENVPROC ext_glEndVideoCaptureNV = (PFNGLENDVIDEOCAPTURENVPROC)0xdeadbeef;
	PFNGLGETVIDEOCAPTUREIVNVPROC ext_glGetVideoCaptureivNV = (PFNGLGETVIDEOCAPTUREIVNVPROC)0xdeadbeef;
	PFNGLGETVIDEOCAPTURESTREAMIVNVPROC ext_glGetVideoCaptureStreamivNV = (PFNGLGETVIDEOCAPTURESTREAMIVNVPROC)0xdeadbeef;
	PFNGLGETVIDEOCAPTURESTREAMFVNVPROC ext_glGetVideoCaptureStreamfvNV = (PFNGLGETVIDEOCAPTURESTREAMFVNVPROC)0xdeadbeef;
	PFNGLGETVIDEOCAPTURESTREAMDVNVPROC ext_glGetVideoCaptureStreamdvNV = (PFNGLGETVIDEOCAPTURESTREAMDVNVPROC)0xdeadbeef;
	PFNGLVIDEOCAPTURENVPROC ext_glVideoCaptureNV = (PFNGLVIDEOCAPTURENVPROC)0xdeadbeef;
	PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC ext_glVideoCaptureStreamParameterivNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC ext_glVideoCaptureStreamParameterfvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC ext_glVideoCaptureStreamParameterdvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC)0xdeadbeef;
	PFNGLCOPYIMAGESUBDATANVPROC ext_glCopyImageSubDataNV = (PFNGLCOPYIMAGESUBDATANVPROC)0xdeadbeef;
	PFNGLUSESHADERPROGRAMEXTPROC ext_glUseShaderProgramEXT = (PFNGLUSESHADERPROGRAMEXTPROC)0xdeadbeef;
	PFNGLACTIVEPROGRAMEXTPROC ext_glActiveProgramEXT = (PFNGLACTIVEPROGRAMEXTPROC)0xdeadbeef;
	PFNGLCREATESHADERPROGRAMEXTPROC ext_glCreateShaderProgramEXT = (PFNGLCREATESHADERPROGRAMEXTPROC)0xdeadbeef;
	PFNGLMAKEBUFFERRESIDENTNVPROC ext_glMakeBufferResidentNV = (PFNGLMAKEBUFFERRESIDENTNVPROC)0xdeadbeef;
	PFNGLMAKEBUFFERNONRESIDENTNVPROC ext_glMakeBufferNonResidentNV = (PFNGLMAKEBUFFERNONRESIDENTNVPROC)0xdeadbeef;
	PFNGLISBUFFERRESIDENTNVPROC ext_glIsBufferResidentNV = (PFNGLISBUFFERRESIDENTNVPROC)0xdeadbeef;
	PFNGLMAKENAMEDBUFFERRESIDENTNVPROC ext_glMakeNamedBufferResidentNV = (PFNGLMAKENAMEDBUFFERRESIDENTNVPROC)0xdeadbeef;
	PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC ext_glMakeNamedBufferNonResidentNV = (PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC)0xdeadbeef;
	PFNGLISNAMEDBUFFERRESIDENTNVPROC ext_glIsNamedBufferResidentNV = (PFNGLISNAMEDBUFFERRESIDENTNVPROC)0xdeadbeef;
	PFNGLGETBUFFERPARAMETERUI64VNVPROC ext_glGetBufferParameterui64vNV = (PFNGLGETBUFFERPARAMETERUI64VNVPROC)0xdeadbeef;
	PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC ext_glGetNamedBufferParameterui64vNV = (PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC)0xdeadbeef;
	PFNGLGETINTEGERUI64VNVPROC ext_glGetIntegerui64vNV = (PFNGLGETINTEGERUI64VNVPROC)0xdeadbeef;
	PFNGLUNIFORMUI64NVPROC ext_glUniformui64NV = (PFNGLUNIFORMUI64NVPROC)0xdeadbeef;
	PFNGLUNIFORMUI64VNVPROC ext_glUniformui64vNV = (PFNGLUNIFORMUI64VNVPROC)0xdeadbeef;
	PFNGLGETUNIFORMUI64VNVPROC ext_glGetUniformui64vNV = (PFNGLGETUNIFORMUI64VNVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMUI64NVPROC ext_glProgramUniformui64NV = (PFNGLPROGRAMUNIFORMUI64NVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMUI64VNVPROC ext_glProgramUniformui64vNV = (PFNGLPROGRAMUNIFORMUI64VNVPROC)0xdeadbeef;
	PFNGLBUFFERADDRESSRANGENVPROC ext_glBufferAddressRangeNV = (PFNGLBUFFERADDRESSRANGENVPROC)0xdeadbeef;
	PFNGLVERTEXFORMATNVPROC ext_glVertexFormatNV = (PFNGLVERTEXFORMATNVPROC)0xdeadbeef;
	PFNGLNORMALFORMATNVPROC ext_glNormalFormatNV = (PFNGLNORMALFORMATNVPROC)0xdeadbeef;
	PFNGLCOLORFORMATNVPROC ext_glColorFormatNV = (PFNGLCOLORFORMATNVPROC)0xdeadbeef;
	PFNGLINDEXFORMATNVPROC ext_glIndexFormatNV = (PFNGLINDEXFORMATNVPROC)0xdeadbeef;
	PFNGLTEXCOORDFORMATNVPROC ext_glTexCoordFormatNV = (PFNGLTEXCOORDFORMATNVPROC)0xdeadbeef;
	PFNGLEDGEFLAGFORMATNVPROC ext_glEdgeFlagFormatNV = (PFNGLEDGEFLAGFORMATNVPROC)0xdeadbeef;
	PFNGLSECONDARYCOLORFORMATNVPROC ext_glSecondaryColorFormatNV = (PFNGLSECONDARYCOLORFORMATNVPROC)0xdeadbeef;
	PFNGLFOGCOORDFORMATNVPROC ext_glFogCoordFormatNV = (PFNGLFOGCOORDFORMATNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBFORMATNVPROC ext_glVertexAttribFormatNV = (PFNGLVERTEXATTRIBFORMATNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBIFORMATNVPROC ext_glVertexAttribIFormatNV = (PFNGLVERTEXATTRIBIFORMATNVPROC)0xdeadbeef;
	PFNGLTEXTUREBARRIERNVPROC ext_glTextureBarrierNV = (PFNGLTEXTUREBARRIERNVPROC)0xdeadbeef;
	PFNGLBINDIMAGETEXTUREEXTPROC ext_glBindImageTextureEXT = (PFNGLBINDIMAGETEXTUREEXTPROC)0xdeadbeef;
	PFNGLMEMORYBARRIEREXTPROC ext_glMemoryBarrierEXT = (PFNGLMEMORYBARRIEREXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL1DEXTPROC ext_glVertexAttribL1dEXT = (PFNGLVERTEXATTRIBL1DEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL2DEXTPROC ext_glVertexAttribL2dEXT = (PFNGLVERTEXATTRIBL2DEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL3DEXTPROC ext_glVertexAttribL3dEXT = (PFNGLVERTEXATTRIBL3DEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL4DEXTPROC ext_glVertexAttribL4dEXT = (PFNGLVERTEXATTRIBL4DEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL1DVEXTPROC ext_glVertexAttribL1dvEXT = (PFNGLVERTEXATTRIBL1DVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL2DVEXTPROC ext_glVertexAttribL2dvEXT = (PFNGLVERTEXATTRIBL2DVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL3DVEXTPROC ext_glVertexAttribL3dvEXT = (PFNGLVERTEXATTRIBL3DVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL4DVEXTPROC ext_glVertexAttribL4dvEXT = (PFNGLVERTEXATTRIBL4DVEXTPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBLPOINTEREXTPROC ext_glVertexAttribLPointerEXT = (PFNGLVERTEXATTRIBLPOINTEREXTPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBLDVEXTPROC ext_glGetVertexAttribLdvEXT = (PFNGLGETVERTEXATTRIBLDVEXTPROC)0xdeadbeef;
	PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC ext_glVertexArrayVertexAttribLOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)0xdeadbeef;
	PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC ext_glProgramSubroutineParametersuivNV = (PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC)0xdeadbeef;
	PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC ext_glGetProgramSubroutineParameteruivNV = (PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC)0xdeadbeef;
	PFNGLUNIFORM1I64NVPROC ext_glUniform1i64NV = (PFNGLUNIFORM1I64NVPROC)0xdeadbeef;
	PFNGLUNIFORM2I64NVPROC ext_glUniform2i64NV = (PFNGLUNIFORM2I64NVPROC)0xdeadbeef;
	PFNGLUNIFORM3I64NVPROC ext_glUniform3i64NV = (PFNGLUNIFORM3I64NVPROC)0xdeadbeef;
	PFNGLUNIFORM4I64NVPROC ext_glUniform4i64NV = (PFNGLUNIFORM4I64NVPROC)0xdeadbeef;
	PFNGLUNIFORM1I64VNVPROC ext_glUniform1i64vNV = (PFNGLUNIFORM1I64VNVPROC)0xdeadbeef;
	PFNGLUNIFORM2I64VNVPROC ext_glUniform2i64vNV = (PFNGLUNIFORM2I64VNVPROC)0xdeadbeef;
	PFNGLUNIFORM3I64VNVPROC ext_glUniform3i64vNV = (PFNGLUNIFORM3I64VNVPROC)0xdeadbeef;
	PFNGLUNIFORM4I64VNVPROC ext_glUniform4i64vNV = (PFNGLUNIFORM4I64VNVPROC)0xdeadbeef;
	PFNGLUNIFORM1UI64NVPROC ext_glUniform1ui64NV = (PFNGLUNIFORM1UI64NVPROC)0xdeadbeef;
	PFNGLUNIFORM2UI64NVPROC ext_glUniform2ui64NV = (PFNGLUNIFORM2UI64NVPROC)0xdeadbeef;
	PFNGLUNIFORM3UI64NVPROC ext_glUniform3ui64NV = (PFNGLUNIFORM3UI64NVPROC)0xdeadbeef;
	PFNGLUNIFORM4UI64NVPROC ext_glUniform4ui64NV = (PFNGLUNIFORM4UI64NVPROC)0xdeadbeef;
	PFNGLUNIFORM1UI64VNVPROC ext_glUniform1ui64vNV = (PFNGLUNIFORM1UI64VNVPROC)0xdeadbeef;
	PFNGLUNIFORM2UI64VNVPROC ext_glUniform2ui64vNV = (PFNGLUNIFORM2UI64VNVPROC)0xdeadbeef;
	PFNGLUNIFORM3UI64VNVPROC ext_glUniform3ui64vNV = (PFNGLUNIFORM3UI64VNVPROC)0xdeadbeef;
	PFNGLUNIFORM4UI64VNVPROC ext_glUniform4ui64vNV = (PFNGLUNIFORM4UI64VNVPROC)0xdeadbeef;
	PFNGLGETUNIFORMI64VNVPROC ext_glGetUniformi64vNV = (PFNGLGETUNIFORMI64VNVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1I64NVPROC ext_glProgramUniform1i64NV = (PFNGLPROGRAMUNIFORM1I64NVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2I64NVPROC ext_glProgramUniform2i64NV = (PFNGLPROGRAMUNIFORM2I64NVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3I64NVPROC ext_glProgramUniform3i64NV = (PFNGLPROGRAMUNIFORM3I64NVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4I64NVPROC ext_glProgramUniform4i64NV = (PFNGLPROGRAMUNIFORM4I64NVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1I64VNVPROC ext_glProgramUniform1i64vNV = (PFNGLPROGRAMUNIFORM1I64VNVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2I64VNVPROC ext_glProgramUniform2i64vNV = (PFNGLPROGRAMUNIFORM2I64VNVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3I64VNVPROC ext_glProgramUniform3i64vNV = (PFNGLPROGRAMUNIFORM3I64VNVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4I64VNVPROC ext_glProgramUniform4i64vNV = (PFNGLPROGRAMUNIFORM4I64VNVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1UI64NVPROC ext_glProgramUniform1ui64NV = (PFNGLPROGRAMUNIFORM1UI64NVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2UI64NVPROC ext_glProgramUniform2ui64NV = (PFNGLPROGRAMUNIFORM2UI64NVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3UI64NVPROC ext_glProgramUniform3ui64NV = (PFNGLPROGRAMUNIFORM3UI64NVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4UI64NVPROC ext_glProgramUniform4ui64NV = (PFNGLPROGRAMUNIFORM4UI64NVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM1UI64VNVPROC ext_glProgramUniform1ui64vNV = (PFNGLPROGRAMUNIFORM1UI64VNVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM2UI64VNVPROC ext_glProgramUniform2ui64vNV = (PFNGLPROGRAMUNIFORM2UI64VNVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM3UI64VNVPROC ext_glProgramUniform3ui64vNV = (PFNGLPROGRAMUNIFORM3UI64VNVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORM4UI64VNVPROC ext_glProgramUniform4ui64vNV = (PFNGLPROGRAMUNIFORM4UI64VNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL1I64NVPROC ext_glVertexAttribL1i64NV = (PFNGLVERTEXATTRIBL1I64NVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL2I64NVPROC ext_glVertexAttribL2i64NV = (PFNGLVERTEXATTRIBL2I64NVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL3I64NVPROC ext_glVertexAttribL3i64NV = (PFNGLVERTEXATTRIBL3I64NVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL4I64NVPROC ext_glVertexAttribL4i64NV = (PFNGLVERTEXATTRIBL4I64NVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL1I64VNVPROC ext_glVertexAttribL1i64vNV = (PFNGLVERTEXATTRIBL1I64VNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL2I64VNVPROC ext_glVertexAttribL2i64vNV = (PFNGLVERTEXATTRIBL2I64VNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL3I64VNVPROC ext_glVertexAttribL3i64vNV = (PFNGLVERTEXATTRIBL3I64VNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL4I64VNVPROC ext_glVertexAttribL4i64vNV = (PFNGLVERTEXATTRIBL4I64VNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL1UI64NVPROC ext_glVertexAttribL1ui64NV = (PFNGLVERTEXATTRIBL1UI64NVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL2UI64NVPROC ext_glVertexAttribL2ui64NV = (PFNGLVERTEXATTRIBL2UI64NVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL3UI64NVPROC ext_glVertexAttribL3ui64NV = (PFNGLVERTEXATTRIBL3UI64NVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL4UI64NVPROC ext_glVertexAttribL4ui64NV = (PFNGLVERTEXATTRIBL4UI64NVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL1UI64VNVPROC ext_glVertexAttribL1ui64vNV = (PFNGLVERTEXATTRIBL1UI64VNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL2UI64VNVPROC ext_glVertexAttribL2ui64vNV = (PFNGLVERTEXATTRIBL2UI64VNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL3UI64VNVPROC ext_glVertexAttribL3ui64vNV = (PFNGLVERTEXATTRIBL3UI64VNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBL4UI64VNVPROC ext_glVertexAttribL4ui64vNV = (PFNGLVERTEXATTRIBL4UI64VNVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBLI64VNVPROC ext_glGetVertexAttribLi64vNV = (PFNGLGETVERTEXATTRIBLI64VNVPROC)0xdeadbeef;
	PFNGLGETVERTEXATTRIBLUI64VNVPROC ext_glGetVertexAttribLui64vNV = (PFNGLGETVERTEXATTRIBLUI64VNVPROC)0xdeadbeef;
	PFNGLVERTEXATTRIBLFORMATNVPROC ext_glVertexAttribLFormatNV = (PFNGLVERTEXATTRIBLFORMATNVPROC)0xdeadbeef;
	PFNGLGENNAMESAMDPROC ext_glGenNamesAMD = (PFNGLGENNAMESAMDPROC)0xdeadbeef;
	PFNGLDELETENAMESAMDPROC ext_glDeleteNamesAMD = (PFNGLDELETENAMESAMDPROC)0xdeadbeef;
	PFNGLISNAMEAMDPROC ext_glIsNameAMD = (PFNGLISNAMEAMDPROC)0xdeadbeef;
	PFNGLGETDEBUGMESSAGELOGAMDPROC ext_glGetDebugMessageLogAMD = (PFNGLGETDEBUGMESSAGELOGAMDPROC)0xdeadbeef;
	PFNGLVDPAUINITNVPROC ext_glVDPAUInitNV = (PFNGLVDPAUINITNVPROC)0xdeadbeef;
	PFNGLVDPAUFININVPROC ext_glVDPAUFiniNV = (PFNGLVDPAUFININVPROC)0xdeadbeef;
	PFNGLVDPAUREGISTERVIDEOSURFACENVPROC ext_glVDPAURegisterVideoSurfaceNV = (PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)0xdeadbeef;
	PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC ext_glVDPAURegisterOutputSurfaceNV = (PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)0xdeadbeef;
	PFNGLVDPAUISSURFACENVPROC ext_glVDPAUIsSurfaceNV = (PFNGLVDPAUISSURFACENVPROC)0xdeadbeef;
	PFNGLVDPAUUNREGISTERSURFACENVPROC ext_glVDPAUUnregisterSurfaceNV = (PFNGLVDPAUUNREGISTERSURFACENVPROC)0xdeadbeef;
	PFNGLVDPAUGETSURFACEIVNVPROC ext_glVDPAUGetSurfaceivNV = (PFNGLVDPAUGETSURFACEIVNVPROC)0xdeadbeef;
	PFNGLVDPAUSURFACEACCESSNVPROC ext_glVDPAUSurfaceAccessNV = (PFNGLVDPAUSURFACEACCESSNVPROC)0xdeadbeef;
	PFNGLVDPAUMAPSURFACESNVPROC ext_glVDPAUMapSurfacesNV = (PFNGLVDPAUMAPSURFACESNVPROC)0xdeadbeef;
	PFNGLVDPAUUNMAPSURFACESNVPROC ext_glVDPAUUnmapSurfacesNV = (PFNGLVDPAUUNMAPSURFACESNVPROC)0xdeadbeef;
	PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC ext_glTexImage2DMultisampleCoverageNV = (PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC)0xdeadbeef;
	PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC ext_glTexImage3DMultisampleCoverageNV = (PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC)0xdeadbeef;
	PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC ext_glTextureImage2DMultisampleNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC)0xdeadbeef;
	PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC ext_glTextureImage3DMultisampleNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC)0xdeadbeef;
	PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC ext_glTextureImage2DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC)0xdeadbeef;
	PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC ext_glTextureImage3DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC)0xdeadbeef;
	PFNGLSETMULTISAMPLEFVAMDPROC ext_glSetMultisamplefvAMD = (PFNGLSETMULTISAMPLEFVAMDPROC)0xdeadbeef;
	PFNGLIMPORTSYNCEXTPROC ext_glImportSyncEXT = (PFNGLIMPORTSYNCEXTPROC)0xdeadbeef;
	PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC ext_glMultiDrawArraysIndirectAMD = (PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC)0xdeadbeef;
	PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC ext_glMultiDrawElementsIndirectAMD = (PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC)0xdeadbeef;
	PFNGLGENPATHSNVPROC ext_glGenPathsNV = (PFNGLGENPATHSNVPROC)0xdeadbeef;
	PFNGLDELETEPATHSNVPROC ext_glDeletePathsNV = (PFNGLDELETEPATHSNVPROC)0xdeadbeef;
	PFNGLISPATHNVPROC ext_glIsPathNV = (PFNGLISPATHNVPROC)0xdeadbeef;
	PFNGLPATHCOMMANDSNVPROC ext_glPathCommandsNV = (PFNGLPATHCOMMANDSNVPROC)0xdeadbeef;
	PFNGLPATHCOORDSNVPROC ext_glPathCoordsNV = (PFNGLPATHCOORDSNVPROC)0xdeadbeef;
	PFNGLPATHSUBCOMMANDSNVPROC ext_glPathSubCommandsNV = (PFNGLPATHSUBCOMMANDSNVPROC)0xdeadbeef;
	PFNGLPATHSUBCOORDSNVPROC ext_glPathSubCoordsNV = (PFNGLPATHSUBCOORDSNVPROC)0xdeadbeef;
	PFNGLPATHSTRINGNVPROC ext_glPathStringNV = (PFNGLPATHSTRINGNVPROC)0xdeadbeef;
	PFNGLPATHGLYPHSNVPROC ext_glPathGlyphsNV = (PFNGLPATHGLYPHSNVPROC)0xdeadbeef;
	PFNGLPATHGLYPHRANGENVPROC ext_glPathGlyphRangeNV = (PFNGLPATHGLYPHRANGENVPROC)0xdeadbeef;
	PFNGLWEIGHTPATHSNVPROC ext_glWeightPathsNV = (PFNGLWEIGHTPATHSNVPROC)0xdeadbeef;
	PFNGLCOPYPATHNVPROC ext_glCopyPathNV = (PFNGLCOPYPATHNVPROC)0xdeadbeef;
	PFNGLINTERPOLATEPATHSNVPROC ext_glInterpolatePathsNV = (PFNGLINTERPOLATEPATHSNVPROC)0xdeadbeef;
	PFNGLTRANSFORMPATHNVPROC ext_glTransformPathNV = (PFNGLTRANSFORMPATHNVPROC)0xdeadbeef;
	PFNGLPATHPARAMETERIVNVPROC ext_glPathParameterivNV = (PFNGLPATHPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLPATHPARAMETERINVPROC ext_glPathParameteriNV = (PFNGLPATHPARAMETERINVPROC)0xdeadbeef;
	PFNGLPATHPARAMETERFVNVPROC ext_glPathParameterfvNV = (PFNGLPATHPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLPATHPARAMETERFNVPROC ext_glPathParameterfNV = (PFNGLPATHPARAMETERFNVPROC)0xdeadbeef;
	PFNGLPATHDASHARRAYNVPROC ext_glPathDashArrayNV = (PFNGLPATHDASHARRAYNVPROC)0xdeadbeef;
	PFNGLPATHSTENCILFUNCNVPROC ext_glPathStencilFuncNV = (PFNGLPATHSTENCILFUNCNVPROC)0xdeadbeef;
	PFNGLPATHSTENCILDEPTHOFFSETNVPROC ext_glPathStencilDepthOffsetNV = (PFNGLPATHSTENCILDEPTHOFFSETNVPROC)0xdeadbeef;
	PFNGLSTENCILFILLPATHNVPROC ext_glStencilFillPathNV = (PFNGLSTENCILFILLPATHNVPROC)0xdeadbeef;
	PFNGLSTENCILSTROKEPATHNVPROC ext_glStencilStrokePathNV = (PFNGLSTENCILSTROKEPATHNVPROC)0xdeadbeef;
	PFNGLSTENCILFILLPATHINSTANCEDNVPROC ext_glStencilFillPathInstancedNV = (PFNGLSTENCILFILLPATHINSTANCEDNVPROC)0xdeadbeef;
	PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC ext_glStencilStrokePathInstancedNV = (PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC)0xdeadbeef;
	PFNGLPATHCOVERDEPTHFUNCNVPROC ext_glPathCoverDepthFuncNV = (PFNGLPATHCOVERDEPTHFUNCNVPROC)0xdeadbeef;
	PFNGLPATHCOLORGENNVPROC ext_glPathColorGenNV = (PFNGLPATHCOLORGENNVPROC)0xdeadbeef;
	PFNGLPATHTEXGENNVPROC ext_glPathTexGenNV = (PFNGLPATHTEXGENNVPROC)0xdeadbeef;
	PFNGLPATHFOGGENNVPROC ext_glPathFogGenNV = (PFNGLPATHFOGGENNVPROC)0xdeadbeef;
	PFNGLCOVERFILLPATHNVPROC ext_glCoverFillPathNV = (PFNGLCOVERFILLPATHNVPROC)0xdeadbeef;
	PFNGLCOVERSTROKEPATHNVPROC ext_glCoverStrokePathNV = (PFNGLCOVERSTROKEPATHNVPROC)0xdeadbeef;
	PFNGLCOVERFILLPATHINSTANCEDNVPROC ext_glCoverFillPathInstancedNV = (PFNGLCOVERFILLPATHINSTANCEDNVPROC)0xdeadbeef;
	PFNGLCOVERSTROKEPATHINSTANCEDNVPROC ext_glCoverStrokePathInstancedNV = (PFNGLCOVERSTROKEPATHINSTANCEDNVPROC)0xdeadbeef;
	PFNGLGETPATHPARAMETERIVNVPROC ext_glGetPathParameterivNV = (PFNGLGETPATHPARAMETERIVNVPROC)0xdeadbeef;
	PFNGLGETPATHPARAMETERFVNVPROC ext_glGetPathParameterfvNV = (PFNGLGETPATHPARAMETERFVNVPROC)0xdeadbeef;
	PFNGLGETPATHCOMMANDSNVPROC ext_glGetPathCommandsNV = (PFNGLGETPATHCOMMANDSNVPROC)0xdeadbeef;
	PFNGLGETPATHCOORDSNVPROC ext_glGetPathCoordsNV = (PFNGLGETPATHCOORDSNVPROC)0xdeadbeef;
	PFNGLGETPATHDASHARRAYNVPROC ext_glGetPathDashArrayNV = (PFNGLGETPATHDASHARRAYNVPROC)0xdeadbeef;
	PFNGLGETPATHMETRICSNVPROC ext_glGetPathMetricsNV = (PFNGLGETPATHMETRICSNVPROC)0xdeadbeef;
	PFNGLGETPATHMETRICRANGENVPROC ext_glGetPathMetricRangeNV = (PFNGLGETPATHMETRICRANGENVPROC)0xdeadbeef;
	PFNGLGETPATHSPACINGNVPROC ext_glGetPathSpacingNV = (PFNGLGETPATHSPACINGNVPROC)0xdeadbeef;
	PFNGLGETPATHCOLORGENIVNVPROC ext_glGetPathColorGenivNV = (PFNGLGETPATHCOLORGENIVNVPROC)0xdeadbeef;
	PFNGLGETPATHCOLORGENFVNVPROC ext_glGetPathColorGenfvNV = (PFNGLGETPATHCOLORGENFVNVPROC)0xdeadbeef;
	PFNGLGETPATHTEXGENIVNVPROC ext_glGetPathTexGenivNV = (PFNGLGETPATHTEXGENIVNVPROC)0xdeadbeef;
	PFNGLGETPATHTEXGENFVNVPROC ext_glGetPathTexGenfvNV = (PFNGLGETPATHTEXGENFVNVPROC)0xdeadbeef;
	PFNGLISPOINTINFILLPATHNVPROC ext_glIsPointInFillPathNV = (PFNGLISPOINTINFILLPATHNVPROC)0xdeadbeef;
	PFNGLISPOINTINSTROKEPATHNVPROC ext_glIsPointInStrokePathNV = (PFNGLISPOINTINSTROKEPATHNVPROC)0xdeadbeef;
	PFNGLGETPATHLENGTHNVPROC ext_glGetPathLengthNV = (PFNGLGETPATHLENGTHNVPROC)0xdeadbeef;
	PFNGLPOINTALONGPATHNVPROC ext_glPointAlongPathNV = (PFNGLPOINTALONGPATHNVPROC)0xdeadbeef;
	PFNGLSTENCILOPVALUEAMDPROC ext_glStencilOpValueAMD = (PFNGLSTENCILOPVALUEAMDPROC)0xdeadbeef;
	PFNGLGETTEXTUREHANDLENVPROC ext_glGetTextureHandleNV = (PFNGLGETTEXTUREHANDLENVPROC)0xdeadbeef;
	PFNGLGETTEXTURESAMPLERHANDLENVPROC ext_glGetTextureSamplerHandleNV = (PFNGLGETTEXTURESAMPLERHANDLENVPROC)0xdeadbeef;
	PFNGLMAKETEXTUREHANDLERESIDENTNVPROC ext_glMakeTextureHandleResidentNV = (PFNGLMAKETEXTUREHANDLERESIDENTNVPROC)0xdeadbeef;
	PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC ext_glMakeTextureHandleNonResidentNV = (PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC)0xdeadbeef;
	PFNGLGETIMAGEHANDLENVPROC ext_glGetImageHandleNV = (PFNGLGETIMAGEHANDLENVPROC)0xdeadbeef;
	PFNGLMAKEIMAGEHANDLERESIDENTNVPROC ext_glMakeImageHandleResidentNV = (PFNGLMAKEIMAGEHANDLERESIDENTNVPROC)0xdeadbeef;
	PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC ext_glMakeImageHandleNonResidentNV = (PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC)0xdeadbeef;
	PFNGLUNIFORMHANDLEUI64NVPROC ext_glUniformHandleui64NV = (PFNGLUNIFORMHANDLEUI64NVPROC)0xdeadbeef;
	PFNGLUNIFORMHANDLEUI64VNVPROC ext_glUniformHandleui64vNV = (PFNGLUNIFORMHANDLEUI64VNVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC ext_glProgramUniformHandleui64NV = (PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC)0xdeadbeef;
	PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC ext_glProgramUniformHandleui64vNV = (PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC)0xdeadbeef;
	PFNGLISTEXTUREHANDLERESIDENTNVPROC ext_glIsTextureHandleResidentNV = (PFNGLISTEXTUREHANDLERESIDENTNVPROC)0xdeadbeef;
	PFNGLISIMAGEHANDLERESIDENTNVPROC ext_glIsImageHandleResidentNV = (PFNGLISIMAGEHANDLERESIDENTNVPROC)0xdeadbeef;
	PFNGLBEGINCONDITIONALRENDERNVXPROC ext_glBeginConditionalRenderNVX = (PFNGLBEGINCONDITIONALRENDERNVXPROC)0xdeadbeef;
	PFNGLENDCONDITIONALRENDERNVXPROC ext_glEndConditionalRenderNVX = (PFNGLENDCONDITIONALRENDERNVXPROC)0xdeadbeef;
	PFNGLTEXSTORAGESPARSEAMDPROC ext_glTexStorageSparseAMD = (PFNGLTEXSTORAGESPARSEAMDPROC)0xdeadbeef;
	PFNGLTEXTURESTORAGESPARSEAMDPROC ext_glTextureStorageSparseAMD = (PFNGLTEXTURESTORAGESPARSEAMDPROC)0xdeadbeef;
	PFNGLSYNCTEXTUREINTELPROC ext_glSyncTextureINTEL = (PFNGLSYNCTEXTUREINTELPROC)0xdeadbeef;
	PFNGLUNMAPTEXTURE2DINTELPROC ext_glUnmapTexture2DINTEL = (PFNGLUNMAPTEXTURE2DINTELPROC)0xdeadbeef;
	PFNGLMAPTEXTURE2DINTELPROC ext_glMapTexture2DINTEL = (PFNGLMAPTEXTURE2DINTELPROC)0xdeadbeef;
	PFNGLDRAWTEXTURENVPROC ext_glDrawTextureNV = (PFNGLDRAWTEXTURENVPROC)0xdeadbeef;
	static int initialized = 0;	JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_init(JNIEnv* env, jclass clazz) {


//@line:7090

		if(initialized) return;
		initialized = -1;
		ext_glBlendColor = (PFNGLBLENDCOLORPROC)glfwGetProcAddress("glBlendColor");
		ext_glBlendEquation = (PFNGLBLENDEQUATIONPROC)glfwGetProcAddress("glBlendEquation");
		ext_glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC)glfwGetProcAddress("glDrawRangeElements");
		ext_glTexImage3D = (PFNGLTEXIMAGE3DPROC)glfwGetProcAddress("glTexImage3D");
		ext_glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)glfwGetProcAddress("glTexSubImage3D");
		ext_glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC)glfwGetProcAddress("glCopyTexSubImage3D");
		ext_glColorTable = (PFNGLCOLORTABLEPROC)glfwGetProcAddress("glColorTable");
		ext_glColorTableParameterfv = (PFNGLCOLORTABLEPARAMETERFVPROC)glfwGetProcAddress("glColorTableParameterfv");
		ext_glColorTableParameteriv = (PFNGLCOLORTABLEPARAMETERIVPROC)glfwGetProcAddress("glColorTableParameteriv");
		ext_glCopyColorTable = (PFNGLCOPYCOLORTABLEPROC)glfwGetProcAddress("glCopyColorTable");
		ext_glGetColorTable = (PFNGLGETCOLORTABLEPROC)glfwGetProcAddress("glGetColorTable");
		ext_glGetColorTableParameterfv = (PFNGLGETCOLORTABLEPARAMETERFVPROC)glfwGetProcAddress("glGetColorTableParameterfv");
		ext_glGetColorTableParameteriv = (PFNGLGETCOLORTABLEPARAMETERIVPROC)glfwGetProcAddress("glGetColorTableParameteriv");
		ext_glColorSubTable = (PFNGLCOLORSUBTABLEPROC)glfwGetProcAddress("glColorSubTable");
		ext_glCopyColorSubTable = (PFNGLCOPYCOLORSUBTABLEPROC)glfwGetProcAddress("glCopyColorSubTable");
		ext_glConvolutionFilter1D = (PFNGLCONVOLUTIONFILTER1DPROC)glfwGetProcAddress("glConvolutionFilter1D");
		ext_glConvolutionFilter2D = (PFNGLCONVOLUTIONFILTER2DPROC)glfwGetProcAddress("glConvolutionFilter2D");
		ext_glConvolutionParameterf = (PFNGLCONVOLUTIONPARAMETERFPROC)glfwGetProcAddress("glConvolutionParameterf");
		ext_glConvolutionParameterfv = (PFNGLCONVOLUTIONPARAMETERFVPROC)glfwGetProcAddress("glConvolutionParameterfv");
		ext_glConvolutionParameteri = (PFNGLCONVOLUTIONPARAMETERIPROC)glfwGetProcAddress("glConvolutionParameteri");
		ext_glConvolutionParameteriv = (PFNGLCONVOLUTIONPARAMETERIVPROC)glfwGetProcAddress("glConvolutionParameteriv");
		ext_glCopyConvolutionFilter1D = (PFNGLCOPYCONVOLUTIONFILTER1DPROC)glfwGetProcAddress("glCopyConvolutionFilter1D");
		ext_glCopyConvolutionFilter2D = (PFNGLCOPYCONVOLUTIONFILTER2DPROC)glfwGetProcAddress("glCopyConvolutionFilter2D");
		ext_glGetConvolutionFilter = (PFNGLGETCONVOLUTIONFILTERPROC)glfwGetProcAddress("glGetConvolutionFilter");
		ext_glGetConvolutionParameterfv = (PFNGLGETCONVOLUTIONPARAMETERFVPROC)glfwGetProcAddress("glGetConvolutionParameterfv");
		ext_glGetConvolutionParameteriv = (PFNGLGETCONVOLUTIONPARAMETERIVPROC)glfwGetProcAddress("glGetConvolutionParameteriv");
		ext_glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC)glfwGetProcAddress("glGetSeparableFilter");
		ext_glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC)glfwGetProcAddress("glSeparableFilter2D");
		ext_glGetHistogram = (PFNGLGETHISTOGRAMPROC)glfwGetProcAddress("glGetHistogram");
		ext_glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC)glfwGetProcAddress("glGetHistogramParameterfv");
		ext_glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC)glfwGetProcAddress("glGetHistogramParameteriv");
		ext_glGetMinmax = (PFNGLGETMINMAXPROC)glfwGetProcAddress("glGetMinmax");
		ext_glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC)glfwGetProcAddress("glGetMinmaxParameterfv");
		ext_glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC)glfwGetProcAddress("glGetMinmaxParameteriv");
		ext_glHistogram = (PFNGLHISTOGRAMPROC)glfwGetProcAddress("glHistogram");
		ext_glMinmax = (PFNGLMINMAXPROC)glfwGetProcAddress("glMinmax");
		ext_glResetHistogram = (PFNGLRESETHISTOGRAMPROC)glfwGetProcAddress("glResetHistogram");
		ext_glResetMinmax = (PFNGLRESETMINMAXPROC)glfwGetProcAddress("glResetMinmax");
		ext_glActiveTexture = (PFNGLACTIVETEXTUREPROC)glfwGetProcAddress("glActiveTexture");
		ext_glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)glfwGetProcAddress("glSampleCoverage");
		ext_glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)glfwGetProcAddress("glCompressedTexImage3D");
		ext_glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)glfwGetProcAddress("glCompressedTexImage2D");
		ext_glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)glfwGetProcAddress("glCompressedTexImage1D");
		ext_glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)glfwGetProcAddress("glCompressedTexSubImage3D");
		ext_glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)glfwGetProcAddress("glCompressedTexSubImage2D");
		ext_glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)glfwGetProcAddress("glCompressedTexSubImage1D");
		ext_glGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC)glfwGetProcAddress("glGetCompressedTexImage");
		ext_glClientActiveTexture = (PFNGLCLIENTACTIVETEXTUREPROC)glfwGetProcAddress("glClientActiveTexture");
		ext_glMultiTexCoord1d = (PFNGLMULTITEXCOORD1DPROC)glfwGetProcAddress("glMultiTexCoord1d");
		ext_glMultiTexCoord1dv = (PFNGLMULTITEXCOORD1DVPROC)glfwGetProcAddress("glMultiTexCoord1dv");
		ext_glMultiTexCoord1f = (PFNGLMULTITEXCOORD1FPROC)glfwGetProcAddress("glMultiTexCoord1f");
		ext_glMultiTexCoord1fv = (PFNGLMULTITEXCOORD1FVPROC)glfwGetProcAddress("glMultiTexCoord1fv");
		ext_glMultiTexCoord1i = (PFNGLMULTITEXCOORD1IPROC)glfwGetProcAddress("glMultiTexCoord1i");
		ext_glMultiTexCoord1iv = (PFNGLMULTITEXCOORD1IVPROC)glfwGetProcAddress("glMultiTexCoord1iv");
		ext_glMultiTexCoord1s = (PFNGLMULTITEXCOORD1SPROC)glfwGetProcAddress("glMultiTexCoord1s");
		ext_glMultiTexCoord1sv = (PFNGLMULTITEXCOORD1SVPROC)glfwGetProcAddress("glMultiTexCoord1sv");
		ext_glMultiTexCoord2d = (PFNGLMULTITEXCOORD2DPROC)glfwGetProcAddress("glMultiTexCoord2d");
		ext_glMultiTexCoord2dv = (PFNGLMULTITEXCOORD2DVPROC)glfwGetProcAddress("glMultiTexCoord2dv");
		ext_glMultiTexCoord2f = (PFNGLMULTITEXCOORD2FPROC)glfwGetProcAddress("glMultiTexCoord2f");
		ext_glMultiTexCoord2fv = (PFNGLMULTITEXCOORD2FVPROC)glfwGetProcAddress("glMultiTexCoord2fv");
		ext_glMultiTexCoord2i = (PFNGLMULTITEXCOORD2IPROC)glfwGetProcAddress("glMultiTexCoord2i");
		ext_glMultiTexCoord2iv = (PFNGLMULTITEXCOORD2IVPROC)glfwGetProcAddress("glMultiTexCoord2iv");
		ext_glMultiTexCoord2s = (PFNGLMULTITEXCOORD2SPROC)glfwGetProcAddress("glMultiTexCoord2s");
		ext_glMultiTexCoord2sv = (PFNGLMULTITEXCOORD2SVPROC)glfwGetProcAddress("glMultiTexCoord2sv");
		ext_glMultiTexCoord3d = (PFNGLMULTITEXCOORD3DPROC)glfwGetProcAddress("glMultiTexCoord3d");
		ext_glMultiTexCoord3dv = (PFNGLMULTITEXCOORD3DVPROC)glfwGetProcAddress("glMultiTexCoord3dv");
		ext_glMultiTexCoord3f = (PFNGLMULTITEXCOORD3FPROC)glfwGetProcAddress("glMultiTexCoord3f");
		ext_glMultiTexCoord3fv = (PFNGLMULTITEXCOORD3FVPROC)glfwGetProcAddress("glMultiTexCoord3fv");
		ext_glMultiTexCoord3i = (PFNGLMULTITEXCOORD3IPROC)glfwGetProcAddress("glMultiTexCoord3i");
		ext_glMultiTexCoord3iv = (PFNGLMULTITEXCOORD3IVPROC)glfwGetProcAddress("glMultiTexCoord3iv");
		ext_glMultiTexCoord3s = (PFNGLMULTITEXCOORD3SPROC)glfwGetProcAddress("glMultiTexCoord3s");
		ext_glMultiTexCoord3sv = (PFNGLMULTITEXCOORD3SVPROC)glfwGetProcAddress("glMultiTexCoord3sv");
		ext_glMultiTexCoord4d = (PFNGLMULTITEXCOORD4DPROC)glfwGetProcAddress("glMultiTexCoord4d");
		ext_glMultiTexCoord4dv = (PFNGLMULTITEXCOORD4DVPROC)glfwGetProcAddress("glMultiTexCoord4dv");
		ext_glMultiTexCoord4f = (PFNGLMULTITEXCOORD4FPROC)glfwGetProcAddress("glMultiTexCoord4f");
		ext_glMultiTexCoord4fv = (PFNGLMULTITEXCOORD4FVPROC)glfwGetProcAddress("glMultiTexCoord4fv");
		ext_glMultiTexCoord4i = (PFNGLMULTITEXCOORD4IPROC)glfwGetProcAddress("glMultiTexCoord4i");
		ext_glMultiTexCoord4iv = (PFNGLMULTITEXCOORD4IVPROC)glfwGetProcAddress("glMultiTexCoord4iv");
		ext_glMultiTexCoord4s = (PFNGLMULTITEXCOORD4SPROC)glfwGetProcAddress("glMultiTexCoord4s");
		ext_glMultiTexCoord4sv = (PFNGLMULTITEXCOORD4SVPROC)glfwGetProcAddress("glMultiTexCoord4sv");
		ext_glLoadTransposeMatrixf = (PFNGLLOADTRANSPOSEMATRIXFPROC)glfwGetProcAddress("glLoadTransposeMatrixf");
		ext_glLoadTransposeMatrixd = (PFNGLLOADTRANSPOSEMATRIXDPROC)glfwGetProcAddress("glLoadTransposeMatrixd");
		ext_glMultTransposeMatrixf = (PFNGLMULTTRANSPOSEMATRIXFPROC)glfwGetProcAddress("glMultTransposeMatrixf");
		ext_glMultTransposeMatrixd = (PFNGLMULTTRANSPOSEMATRIXDPROC)glfwGetProcAddress("glMultTransposeMatrixd");
		ext_glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC)glfwGetProcAddress("glBlendFuncSeparate");
		ext_glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)glfwGetProcAddress("glMultiDrawArrays");
		ext_glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC)glfwGetProcAddress("glMultiDrawElements");
		ext_glPointParameterf = (PFNGLPOINTPARAMETERFPROC)glfwGetProcAddress("glPointParameterf");
		ext_glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC)glfwGetProcAddress("glPointParameterfv");
		ext_glPointParameteri = (PFNGLPOINTPARAMETERIPROC)glfwGetProcAddress("glPointParameteri");
		ext_glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC)glfwGetProcAddress("glPointParameteriv");
		ext_glFogCoordf = (PFNGLFOGCOORDFPROC)glfwGetProcAddress("glFogCoordf");
		ext_glFogCoordfv = (PFNGLFOGCOORDFVPROC)glfwGetProcAddress("glFogCoordfv");
		ext_glFogCoordd = (PFNGLFOGCOORDDPROC)glfwGetProcAddress("glFogCoordd");
		ext_glFogCoorddv = (PFNGLFOGCOORDDVPROC)glfwGetProcAddress("glFogCoorddv");
		ext_glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC)glfwGetProcAddress("glFogCoordPointer");
		ext_glSecondaryColor3b = (PFNGLSECONDARYCOLOR3BPROC)glfwGetProcAddress("glSecondaryColor3b");
		ext_glSecondaryColor3bv = (PFNGLSECONDARYCOLOR3BVPROC)glfwGetProcAddress("glSecondaryColor3bv");
		ext_glSecondaryColor3d = (PFNGLSECONDARYCOLOR3DPROC)glfwGetProcAddress("glSecondaryColor3d");
		ext_glSecondaryColor3dv = (PFNGLSECONDARYCOLOR3DVPROC)glfwGetProcAddress("glSecondaryColor3dv");
		ext_glSecondaryColor3f = (PFNGLSECONDARYCOLOR3FPROC)glfwGetProcAddress("glSecondaryColor3f");
		ext_glSecondaryColor3fv = (PFNGLSECONDARYCOLOR3FVPROC)glfwGetProcAddress("glSecondaryColor3fv");
		ext_glSecondaryColor3i = (PFNGLSECONDARYCOLOR3IPROC)glfwGetProcAddress("glSecondaryColor3i");
		ext_glSecondaryColor3iv = (PFNGLSECONDARYCOLOR3IVPROC)glfwGetProcAddress("glSecondaryColor3iv");
		ext_glSecondaryColor3s = (PFNGLSECONDARYCOLOR3SPROC)glfwGetProcAddress("glSecondaryColor3s");
		ext_glSecondaryColor3sv = (PFNGLSECONDARYCOLOR3SVPROC)glfwGetProcAddress("glSecondaryColor3sv");
		ext_glSecondaryColor3ub = (PFNGLSECONDARYCOLOR3UBPROC)glfwGetProcAddress("glSecondaryColor3ub");
		ext_glSecondaryColor3ubv = (PFNGLSECONDARYCOLOR3UBVPROC)glfwGetProcAddress("glSecondaryColor3ubv");
		ext_glSecondaryColor3ui = (PFNGLSECONDARYCOLOR3UIPROC)glfwGetProcAddress("glSecondaryColor3ui");
		ext_glSecondaryColor3uiv = (PFNGLSECONDARYCOLOR3UIVPROC)glfwGetProcAddress("glSecondaryColor3uiv");
		ext_glSecondaryColor3us = (PFNGLSECONDARYCOLOR3USPROC)glfwGetProcAddress("glSecondaryColor3us");
		ext_glSecondaryColor3usv = (PFNGLSECONDARYCOLOR3USVPROC)glfwGetProcAddress("glSecondaryColor3usv");
		ext_glSecondaryColorPointer = (PFNGLSECONDARYCOLORPOINTERPROC)glfwGetProcAddress("glSecondaryColorPointer");
		ext_glWindowPos2d = (PFNGLWINDOWPOS2DPROC)glfwGetProcAddress("glWindowPos2d");
		ext_glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC)glfwGetProcAddress("glWindowPos2dv");
		ext_glWindowPos2f = (PFNGLWINDOWPOS2FPROC)glfwGetProcAddress("glWindowPos2f");
		ext_glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC)glfwGetProcAddress("glWindowPos2fv");
		ext_glWindowPos2i = (PFNGLWINDOWPOS2IPROC)glfwGetProcAddress("glWindowPos2i");
		ext_glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC)glfwGetProcAddress("glWindowPos2iv");
		ext_glWindowPos2s = (PFNGLWINDOWPOS2SPROC)glfwGetProcAddress("glWindowPos2s");
		ext_glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC)glfwGetProcAddress("glWindowPos2sv");
		ext_glWindowPos3d = (PFNGLWINDOWPOS3DPROC)glfwGetProcAddress("glWindowPos3d");
		ext_glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC)glfwGetProcAddress("glWindowPos3dv");
		ext_glWindowPos3f = (PFNGLWINDOWPOS3FPROC)glfwGetProcAddress("glWindowPos3f");
		ext_glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC)glfwGetProcAddress("glWindowPos3fv");
		ext_glWindowPos3i = (PFNGLWINDOWPOS3IPROC)glfwGetProcAddress("glWindowPos3i");
		ext_glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC)glfwGetProcAddress("glWindowPos3iv");
		ext_glWindowPos3s = (PFNGLWINDOWPOS3SPROC)glfwGetProcAddress("glWindowPos3s");
		ext_glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC)glfwGetProcAddress("glWindowPos3sv");
		ext_glGenQueries = (PFNGLGENQUERIESPROC)glfwGetProcAddress("glGenQueries");
		ext_glDeleteQueries = (PFNGLDELETEQUERIESPROC)glfwGetProcAddress("glDeleteQueries");
		ext_glIsQuery = (PFNGLISQUERYPROC)glfwGetProcAddress("glIsQuery");
		ext_glBeginQuery = (PFNGLBEGINQUERYPROC)glfwGetProcAddress("glBeginQuery");
		ext_glEndQuery = (PFNGLENDQUERYPROC)glfwGetProcAddress("glEndQuery");
		ext_glGetQueryiv = (PFNGLGETQUERYIVPROC)glfwGetProcAddress("glGetQueryiv");
		ext_glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC)glfwGetProcAddress("glGetQueryObjectiv");
		ext_glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC)glfwGetProcAddress("glGetQueryObjectuiv");
		ext_glBindBuffer = (PFNGLBINDBUFFERPROC)glfwGetProcAddress("glBindBuffer");
		ext_glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)glfwGetProcAddress("glDeleteBuffers");
		ext_glGenBuffers = (PFNGLGENBUFFERSPROC)glfwGetProcAddress("glGenBuffers");
		ext_glIsBuffer = (PFNGLISBUFFERPROC)glfwGetProcAddress("glIsBuffer");
		ext_glBufferData = (PFNGLBUFFERDATAPROC)glfwGetProcAddress("glBufferData");
		ext_glBufferSubData = (PFNGLBUFFERSUBDATAPROC)glfwGetProcAddress("glBufferSubData");
		ext_glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC)glfwGetProcAddress("glGetBufferSubData");
		ext_glMapBuffer = (PFNGLMAPBUFFERPROC)glfwGetProcAddress("glMapBuffer");
		ext_glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)glfwGetProcAddress("glUnmapBuffer");
		ext_glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC)glfwGetProcAddress("glGetBufferParameteriv");
		ext_glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC)glfwGetProcAddress("glGetBufferPointerv");
		ext_glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC)glfwGetProcAddress("glBlendEquationSeparate");
		ext_glDrawBuffers = (PFNGLDRAWBUFFERSPROC)glfwGetProcAddress("glDrawBuffers");
		ext_glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC)glfwGetProcAddress("glStencilOpSeparate");
		ext_glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC)glfwGetProcAddress("glStencilFuncSeparate");
		ext_glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC)glfwGetProcAddress("glStencilMaskSeparate");
		ext_glAttachShader = (PFNGLATTACHSHADERPROC)glfwGetProcAddress("glAttachShader");
		ext_glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC)glfwGetProcAddress("glBindAttribLocation");
		ext_glCompileShader = (PFNGLCOMPILESHADERPROC)glfwGetProcAddress("glCompileShader");
		ext_glCreateProgram = (PFNGLCREATEPROGRAMPROC)glfwGetProcAddress("glCreateProgram");
		ext_glCreateShader = (PFNGLCREATESHADERPROC)glfwGetProcAddress("glCreateShader");
		ext_glDeleteProgram = (PFNGLDELETEPROGRAMPROC)glfwGetProcAddress("glDeleteProgram");
		ext_glDeleteShader = (PFNGLDELETESHADERPROC)glfwGetProcAddress("glDeleteShader");
		ext_glDetachShader = (PFNGLDETACHSHADERPROC)glfwGetProcAddress("glDetachShader");
		ext_glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)glfwGetProcAddress("glDisableVertexAttribArray");
		ext_glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC)glfwGetProcAddress("glEnableVertexAttribArray");
		ext_glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)glfwGetProcAddress("glGetActiveAttrib");
		ext_glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC)glfwGetProcAddress("glGetActiveUniform");
		ext_glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)glfwGetProcAddress("glGetAttachedShaders");
		ext_glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)glfwGetProcAddress("glGetAttribLocation");
		ext_glGetProgramiv = (PFNGLGETPROGRAMIVPROC)glfwGetProcAddress("glGetProgramiv");
		ext_glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)glfwGetProcAddress("glGetProgramInfoLog");
		ext_glGetShaderiv = (PFNGLGETSHADERIVPROC)glfwGetProcAddress("glGetShaderiv");
		ext_glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)glfwGetProcAddress("glGetShaderInfoLog");
		ext_glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)glfwGetProcAddress("glGetShaderSource");
		ext_glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC)glfwGetProcAddress("glGetUniformLocation");
		ext_glGetUniformfv = (PFNGLGETUNIFORMFVPROC)glfwGetProcAddress("glGetUniformfv");
		ext_glGetUniformiv = (PFNGLGETUNIFORMIVPROC)glfwGetProcAddress("glGetUniformiv");
		ext_glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC)glfwGetProcAddress("glGetVertexAttribdv");
		ext_glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC)glfwGetProcAddress("glGetVertexAttribfv");
		ext_glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC)glfwGetProcAddress("glGetVertexAttribiv");
		ext_glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC)glfwGetProcAddress("glGetVertexAttribPointerv");
		ext_glIsProgram = (PFNGLISPROGRAMPROC)glfwGetProcAddress("glIsProgram");
		ext_glIsShader = (PFNGLISSHADERPROC)glfwGetProcAddress("glIsShader");
		ext_glLinkProgram = (PFNGLLINKPROGRAMPROC)glfwGetProcAddress("glLinkProgram");
		ext_glShaderSource = (PFNGLSHADERSOURCEPROC)glfwGetProcAddress("glShaderSource");
		ext_glUseProgram = (PFNGLUSEPROGRAMPROC)glfwGetProcAddress("glUseProgram");
		ext_glUniform1f = (PFNGLUNIFORM1FPROC)glfwGetProcAddress("glUniform1f");
		ext_glUniform2f = (PFNGLUNIFORM2FPROC)glfwGetProcAddress("glUniform2f");
		ext_glUniform3f = (PFNGLUNIFORM3FPROC)glfwGetProcAddress("glUniform3f");
		ext_glUniform4f = (PFNGLUNIFORM4FPROC)glfwGetProcAddress("glUniform4f");
		ext_glUniform1i = (PFNGLUNIFORM1IPROC)glfwGetProcAddress("glUniform1i");
		ext_glUniform2i = (PFNGLUNIFORM2IPROC)glfwGetProcAddress("glUniform2i");
		ext_glUniform3i = (PFNGLUNIFORM3IPROC)glfwGetProcAddress("glUniform3i");
		ext_glUniform4i = (PFNGLUNIFORM4IPROC)glfwGetProcAddress("glUniform4i");
		ext_glUniform1fv = (PFNGLUNIFORM1FVPROC)glfwGetProcAddress("glUniform1fv");
		ext_glUniform2fv = (PFNGLUNIFORM2FVPROC)glfwGetProcAddress("glUniform2fv");
		ext_glUniform3fv = (PFNGLUNIFORM3FVPROC)glfwGetProcAddress("glUniform3fv");
		ext_glUniform4fv = (PFNGLUNIFORM4FVPROC)glfwGetProcAddress("glUniform4fv");
		ext_glUniform1iv = (PFNGLUNIFORM1IVPROC)glfwGetProcAddress("glUniform1iv");
		ext_glUniform2iv = (PFNGLUNIFORM2IVPROC)glfwGetProcAddress("glUniform2iv");
		ext_glUniform3iv = (PFNGLUNIFORM3IVPROC)glfwGetProcAddress("glUniform3iv");
		ext_glUniform4iv = (PFNGLUNIFORM4IVPROC)glfwGetProcAddress("glUniform4iv");
		ext_glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC)glfwGetProcAddress("glUniformMatrix2fv");
		ext_glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC)glfwGetProcAddress("glUniformMatrix3fv");
		ext_glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)glfwGetProcAddress("glUniformMatrix4fv");
		ext_glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)glfwGetProcAddress("glValidateProgram");
		ext_glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)glfwGetProcAddress("glVertexAttrib1d");
		ext_glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)glfwGetProcAddress("glVertexAttrib1dv");
		ext_glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)glfwGetProcAddress("glVertexAttrib1f");
		ext_glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)glfwGetProcAddress("glVertexAttrib1fv");
		ext_glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)glfwGetProcAddress("glVertexAttrib1s");
		ext_glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)glfwGetProcAddress("glVertexAttrib1sv");
		ext_glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)glfwGetProcAddress("glVertexAttrib2d");
		ext_glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)glfwGetProcAddress("glVertexAttrib2dv");
		ext_glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)glfwGetProcAddress("glVertexAttrib2f");
		ext_glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)glfwGetProcAddress("glVertexAttrib2fv");
		ext_glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)glfwGetProcAddress("glVertexAttrib2s");
		ext_glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)glfwGetProcAddress("glVertexAttrib2sv");
		ext_glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)glfwGetProcAddress("glVertexAttrib3d");
		ext_glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)glfwGetProcAddress("glVertexAttrib3dv");
		ext_glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)glfwGetProcAddress("glVertexAttrib3f");
		ext_glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)glfwGetProcAddress("glVertexAttrib3fv");
		ext_glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)glfwGetProcAddress("glVertexAttrib3s");
		ext_glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)glfwGetProcAddress("glVertexAttrib3sv");
		ext_glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC)glfwGetProcAddress("glVertexAttrib4Nbv");
		ext_glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC)glfwGetProcAddress("glVertexAttrib4Niv");
		ext_glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC)glfwGetProcAddress("glVertexAttrib4Nsv");
		ext_glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC)glfwGetProcAddress("glVertexAttrib4Nub");
		ext_glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC)glfwGetProcAddress("glVertexAttrib4Nubv");
		ext_glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC)glfwGetProcAddress("glVertexAttrib4Nuiv");
		ext_glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC)glfwGetProcAddress("glVertexAttrib4Nusv");
		ext_glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)glfwGetProcAddress("glVertexAttrib4bv");
		ext_glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)glfwGetProcAddress("glVertexAttrib4d");
		ext_glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)glfwGetProcAddress("glVertexAttrib4dv");
		ext_glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)glfwGetProcAddress("glVertexAttrib4f");
		ext_glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)glfwGetProcAddress("glVertexAttrib4fv");
		ext_glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)glfwGetProcAddress("glVertexAttrib4iv");
		ext_glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)glfwGetProcAddress("glVertexAttrib4s");
		ext_glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)glfwGetProcAddress("glVertexAttrib4sv");
		ext_glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC)glfwGetProcAddress("glVertexAttrib4ubv");
		ext_glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC)glfwGetProcAddress("glVertexAttrib4uiv");
		ext_glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC)glfwGetProcAddress("glVertexAttrib4usv");
		ext_glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC)glfwGetProcAddress("glVertexAttribPointer");
		ext_glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC)glfwGetProcAddress("glUniformMatrix2x3fv");
		ext_glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC)glfwGetProcAddress("glUniformMatrix3x2fv");
		ext_glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC)glfwGetProcAddress("glUniformMatrix2x4fv");
		ext_glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC)glfwGetProcAddress("glUniformMatrix4x2fv");
		ext_glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC)glfwGetProcAddress("glUniformMatrix3x4fv");
		ext_glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC)glfwGetProcAddress("glUniformMatrix4x3fv");
		ext_glColorMaski = (PFNGLCOLORMASKIPROC)glfwGetProcAddress("glColorMaski");
		ext_glEnablei = (PFNGLENABLEIPROC)glfwGetProcAddress("glEnablei");
		ext_glDisablei = (PFNGLDISABLEIPROC)glfwGetProcAddress("glDisablei");
		ext_glIsEnabledi = (PFNGLISENABLEDIPROC)glfwGetProcAddress("glIsEnabledi");
		ext_glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC)glfwGetProcAddress("glBeginTransformFeedback");
		ext_glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC)glfwGetProcAddress("glEndTransformFeedback");
		ext_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)glfwGetProcAddress("glBindBufferRange");
		ext_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)glfwGetProcAddress("glBindBufferBase");
		ext_glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)glfwGetProcAddress("glTransformFeedbackVaryings");
		ext_glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)glfwGetProcAddress("glGetTransformFeedbackVarying");
		ext_glClampColor = (PFNGLCLAMPCOLORPROC)glfwGetProcAddress("glClampColor");
		ext_glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC)glfwGetProcAddress("glBeginConditionalRender");
		ext_glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC)glfwGetProcAddress("glEndConditionalRender");
		ext_glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC)glfwGetProcAddress("glVertexAttribIPointer");
		ext_glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC)glfwGetProcAddress("glGetVertexAttribIiv");
		ext_glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC)glfwGetProcAddress("glGetVertexAttribIuiv");
		ext_glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)glfwGetProcAddress("glVertexAttribI1i");
		ext_glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)glfwGetProcAddress("glVertexAttribI2i");
		ext_glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)glfwGetProcAddress("glVertexAttribI3i");
		ext_glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)glfwGetProcAddress("glVertexAttribI4i");
		ext_glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC)glfwGetProcAddress("glVertexAttribI1ui");
		ext_glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC)glfwGetProcAddress("glVertexAttribI2ui");
		ext_glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC)glfwGetProcAddress("glVertexAttribI3ui");
		ext_glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC)glfwGetProcAddress("glVertexAttribI4ui");
		ext_glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC)glfwGetProcAddress("glVertexAttribI1iv");
		ext_glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC)glfwGetProcAddress("glVertexAttribI2iv");
		ext_glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC)glfwGetProcAddress("glVertexAttribI3iv");
		ext_glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC)glfwGetProcAddress("glVertexAttribI4iv");
		ext_glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC)glfwGetProcAddress("glVertexAttribI1uiv");
		ext_glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC)glfwGetProcAddress("glVertexAttribI2uiv");
		ext_glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC)glfwGetProcAddress("glVertexAttribI3uiv");
		ext_glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC)glfwGetProcAddress("glVertexAttribI4uiv");
		ext_glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC)glfwGetProcAddress("glVertexAttribI4bv");
		ext_glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC)glfwGetProcAddress("glVertexAttribI4sv");
		ext_glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC)glfwGetProcAddress("glVertexAttribI4ubv");
		ext_glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC)glfwGetProcAddress("glVertexAttribI4usv");
		ext_glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)glfwGetProcAddress("glGetUniformuiv");
		ext_glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC)glfwGetProcAddress("glBindFragDataLocation");
		ext_glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC)glfwGetProcAddress("glGetFragDataLocation");
		ext_glUniform1ui = (PFNGLUNIFORM1UIPROC)glfwGetProcAddress("glUniform1ui");
		ext_glUniform2ui = (PFNGLUNIFORM2UIPROC)glfwGetProcAddress("glUniform2ui");
		ext_glUniform3ui = (PFNGLUNIFORM3UIPROC)glfwGetProcAddress("glUniform3ui");
		ext_glUniform4ui = (PFNGLUNIFORM4UIPROC)glfwGetProcAddress("glUniform4ui");
		ext_glUniform1uiv = (PFNGLUNIFORM1UIVPROC)glfwGetProcAddress("glUniform1uiv");
		ext_glUniform2uiv = (PFNGLUNIFORM2UIVPROC)glfwGetProcAddress("glUniform2uiv");
		ext_glUniform3uiv = (PFNGLUNIFORM3UIVPROC)glfwGetProcAddress("glUniform3uiv");
		ext_glUniform4uiv = (PFNGLUNIFORM4UIVPROC)glfwGetProcAddress("glUniform4uiv");
		ext_glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)glfwGetProcAddress("glTexParameterIiv");
		ext_glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC)glfwGetProcAddress("glTexParameterIuiv");
		ext_glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC)glfwGetProcAddress("glGetTexParameterIiv");
		ext_glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC)glfwGetProcAddress("glGetTexParameterIuiv");
		ext_glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)glfwGetProcAddress("glClearBufferiv");
		ext_glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)glfwGetProcAddress("glClearBufferuiv");
		ext_glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)glfwGetProcAddress("glClearBufferfv");
		ext_glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)glfwGetProcAddress("glClearBufferfi");
		ext_glGetStringi = (PFNGLGETSTRINGIPROC)glfwGetProcAddress("glGetStringi");
		ext_glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC)glfwGetProcAddress("glDrawArraysInstanced");
		ext_glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC)glfwGetProcAddress("glDrawElementsInstanced");
		ext_glTexBuffer = (PFNGLTEXBUFFERPROC)glfwGetProcAddress("glTexBuffer");
		ext_glPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC)glfwGetProcAddress("glPrimitiveRestartIndex");
		ext_glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC)glfwGetProcAddress("glGetBufferParameteri64v");
		ext_glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC)glfwGetProcAddress("glFramebufferTexture");
		ext_glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC)glfwGetProcAddress("glVertexAttribDivisor");
		ext_glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)glfwGetProcAddress("glMinSampleShading");
		ext_glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)glfwGetProcAddress("glBlendEquationi");
		ext_glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC)glfwGetProcAddress("glBlendEquationSeparatei");
		ext_glBlendFunci = (PFNGLBLENDFUNCIPROC)glfwGetProcAddress("glBlendFunci");
		ext_glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)glfwGetProcAddress("glBlendFuncSeparatei");
		ext_glActiveTextureARB = (PFNGLACTIVETEXTUREARBPROC)glfwGetProcAddress("glActiveTextureARB");
		ext_glClientActiveTextureARB = (PFNGLCLIENTACTIVETEXTUREARBPROC)glfwGetProcAddress("glClientActiveTextureARB");
		ext_glMultiTexCoord1dARB = (PFNGLMULTITEXCOORD1DARBPROC)glfwGetProcAddress("glMultiTexCoord1dARB");
		ext_glMultiTexCoord1dvARB = (PFNGLMULTITEXCOORD1DVARBPROC)glfwGetProcAddress("glMultiTexCoord1dvARB");
		ext_glMultiTexCoord1fARB = (PFNGLMULTITEXCOORD1FARBPROC)glfwGetProcAddress("glMultiTexCoord1fARB");
		ext_glMultiTexCoord1fvARB = (PFNGLMULTITEXCOORD1FVARBPROC)glfwGetProcAddress("glMultiTexCoord1fvARB");
		ext_glMultiTexCoord1iARB = (PFNGLMULTITEXCOORD1IARBPROC)glfwGetProcAddress("glMultiTexCoord1iARB");
		ext_glMultiTexCoord1ivARB = (PFNGLMULTITEXCOORD1IVARBPROC)glfwGetProcAddress("glMultiTexCoord1ivARB");
		ext_glMultiTexCoord1sARB = (PFNGLMULTITEXCOORD1SARBPROC)glfwGetProcAddress("glMultiTexCoord1sARB");
		ext_glMultiTexCoord1svARB = (PFNGLMULTITEXCOORD1SVARBPROC)glfwGetProcAddress("glMultiTexCoord1svARB");
		ext_glMultiTexCoord2dARB = (PFNGLMULTITEXCOORD2DARBPROC)glfwGetProcAddress("glMultiTexCoord2dARB");
		ext_glMultiTexCoord2dvARB = (PFNGLMULTITEXCOORD2DVARBPROC)glfwGetProcAddress("glMultiTexCoord2dvARB");
		ext_glMultiTexCoord2fARB = (PFNGLMULTITEXCOORD2FARBPROC)glfwGetProcAddress("glMultiTexCoord2fARB");
		ext_glMultiTexCoord2fvARB = (PFNGLMULTITEXCOORD2FVARBPROC)glfwGetProcAddress("glMultiTexCoord2fvARB");
		ext_glMultiTexCoord2iARB = (PFNGLMULTITEXCOORD2IARBPROC)glfwGetProcAddress("glMultiTexCoord2iARB");
		ext_glMultiTexCoord2ivARB = (PFNGLMULTITEXCOORD2IVARBPROC)glfwGetProcAddress("glMultiTexCoord2ivARB");
		ext_glMultiTexCoord2sARB = (PFNGLMULTITEXCOORD2SARBPROC)glfwGetProcAddress("glMultiTexCoord2sARB");
		ext_glMultiTexCoord2svARB = (PFNGLMULTITEXCOORD2SVARBPROC)glfwGetProcAddress("glMultiTexCoord2svARB");
		ext_glMultiTexCoord3dARB = (PFNGLMULTITEXCOORD3DARBPROC)glfwGetProcAddress("glMultiTexCoord3dARB");
		ext_glMultiTexCoord3dvARB = (PFNGLMULTITEXCOORD3DVARBPROC)glfwGetProcAddress("glMultiTexCoord3dvARB");
		ext_glMultiTexCoord3fARB = (PFNGLMULTITEXCOORD3FARBPROC)glfwGetProcAddress("glMultiTexCoord3fARB");
		ext_glMultiTexCoord3fvARB = (PFNGLMULTITEXCOORD3FVARBPROC)glfwGetProcAddress("glMultiTexCoord3fvARB");
		ext_glMultiTexCoord3iARB = (PFNGLMULTITEXCOORD3IARBPROC)glfwGetProcAddress("glMultiTexCoord3iARB");
		ext_glMultiTexCoord3ivARB = (PFNGLMULTITEXCOORD3IVARBPROC)glfwGetProcAddress("glMultiTexCoord3ivARB");
		ext_glMultiTexCoord3sARB = (PFNGLMULTITEXCOORD3SARBPROC)glfwGetProcAddress("glMultiTexCoord3sARB");
		ext_glMultiTexCoord3svARB = (PFNGLMULTITEXCOORD3SVARBPROC)glfwGetProcAddress("glMultiTexCoord3svARB");
		ext_glMultiTexCoord4dARB = (PFNGLMULTITEXCOORD4DARBPROC)glfwGetProcAddress("glMultiTexCoord4dARB");
		ext_glMultiTexCoord4dvARB = (PFNGLMULTITEXCOORD4DVARBPROC)glfwGetProcAddress("glMultiTexCoord4dvARB");
		ext_glMultiTexCoord4fARB = (PFNGLMULTITEXCOORD4FARBPROC)glfwGetProcAddress("glMultiTexCoord4fARB");
		ext_glMultiTexCoord4fvARB = (PFNGLMULTITEXCOORD4FVARBPROC)glfwGetProcAddress("glMultiTexCoord4fvARB");
		ext_glMultiTexCoord4iARB = (PFNGLMULTITEXCOORD4IARBPROC)glfwGetProcAddress("glMultiTexCoord4iARB");
		ext_glMultiTexCoord4ivARB = (PFNGLMULTITEXCOORD4IVARBPROC)glfwGetProcAddress("glMultiTexCoord4ivARB");
		ext_glMultiTexCoord4sARB = (PFNGLMULTITEXCOORD4SARBPROC)glfwGetProcAddress("glMultiTexCoord4sARB");
		ext_glMultiTexCoord4svARB = (PFNGLMULTITEXCOORD4SVARBPROC)glfwGetProcAddress("glMultiTexCoord4svARB");
		ext_glLoadTransposeMatrixfARB = (PFNGLLOADTRANSPOSEMATRIXFARBPROC)glfwGetProcAddress("glLoadTransposeMatrixfARB");
		ext_glLoadTransposeMatrixdARB = (PFNGLLOADTRANSPOSEMATRIXDARBPROC)glfwGetProcAddress("glLoadTransposeMatrixdARB");
		ext_glMultTransposeMatrixfARB = (PFNGLMULTTRANSPOSEMATRIXFARBPROC)glfwGetProcAddress("glMultTransposeMatrixfARB");
		ext_glMultTransposeMatrixdARB = (PFNGLMULTTRANSPOSEMATRIXDARBPROC)glfwGetProcAddress("glMultTransposeMatrixdARB");
		ext_glSampleCoverageARB = (PFNGLSAMPLECOVERAGEARBPROC)glfwGetProcAddress("glSampleCoverageARB");
		ext_glCompressedTexImage3DARB = (PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)glfwGetProcAddress("glCompressedTexImage3DARB");
		ext_glCompressedTexImage2DARB = (PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)glfwGetProcAddress("glCompressedTexImage2DARB");
		ext_glCompressedTexImage1DARB = (PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)glfwGetProcAddress("glCompressedTexImage1DARB");
		ext_glCompressedTexSubImage3DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)glfwGetProcAddress("glCompressedTexSubImage3DARB");
		ext_glCompressedTexSubImage2DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)glfwGetProcAddress("glCompressedTexSubImage2DARB");
		ext_glCompressedTexSubImage1DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)glfwGetProcAddress("glCompressedTexSubImage1DARB");
		ext_glGetCompressedTexImageARB = (PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)glfwGetProcAddress("glGetCompressedTexImageARB");
		ext_glPointParameterfARB = (PFNGLPOINTPARAMETERFARBPROC)glfwGetProcAddress("glPointParameterfARB");
		ext_glPointParameterfvARB = (PFNGLPOINTPARAMETERFVARBPROC)glfwGetProcAddress("glPointParameterfvARB");
		ext_glWeightbvARB = (PFNGLWEIGHTBVARBPROC)glfwGetProcAddress("glWeightbvARB");
		ext_glWeightsvARB = (PFNGLWEIGHTSVARBPROC)glfwGetProcAddress("glWeightsvARB");
		ext_glWeightivARB = (PFNGLWEIGHTIVARBPROC)glfwGetProcAddress("glWeightivARB");
		ext_glWeightfvARB = (PFNGLWEIGHTFVARBPROC)glfwGetProcAddress("glWeightfvARB");
		ext_glWeightdvARB = (PFNGLWEIGHTDVARBPROC)glfwGetProcAddress("glWeightdvARB");
		ext_glWeightubvARB = (PFNGLWEIGHTUBVARBPROC)glfwGetProcAddress("glWeightubvARB");
		ext_glWeightusvARB = (PFNGLWEIGHTUSVARBPROC)glfwGetProcAddress("glWeightusvARB");
		ext_glWeightuivARB = (PFNGLWEIGHTUIVARBPROC)glfwGetProcAddress("glWeightuivARB");
		ext_glWeightPointerARB = (PFNGLWEIGHTPOINTERARBPROC)glfwGetProcAddress("glWeightPointerARB");
		ext_glVertexBlendARB = (PFNGLVERTEXBLENDARBPROC)glfwGetProcAddress("glVertexBlendARB");
		ext_glCurrentPaletteMatrixARB = (PFNGLCURRENTPALETTEMATRIXARBPROC)glfwGetProcAddress("glCurrentPaletteMatrixARB");
		ext_glMatrixIndexubvARB = (PFNGLMATRIXINDEXUBVARBPROC)glfwGetProcAddress("glMatrixIndexubvARB");
		ext_glMatrixIndexusvARB = (PFNGLMATRIXINDEXUSVARBPROC)glfwGetProcAddress("glMatrixIndexusvARB");
		ext_glMatrixIndexuivARB = (PFNGLMATRIXINDEXUIVARBPROC)glfwGetProcAddress("glMatrixIndexuivARB");
		ext_glMatrixIndexPointerARB = (PFNGLMATRIXINDEXPOINTERARBPROC)glfwGetProcAddress("glMatrixIndexPointerARB");
		ext_glWindowPos2dARB = (PFNGLWINDOWPOS2DARBPROC)glfwGetProcAddress("glWindowPos2dARB");
		ext_glWindowPos2dvARB = (PFNGLWINDOWPOS2DVARBPROC)glfwGetProcAddress("glWindowPos2dvARB");
		ext_glWindowPos2fARB = (PFNGLWINDOWPOS2FARBPROC)glfwGetProcAddress("glWindowPos2fARB");
		ext_glWindowPos2fvARB = (PFNGLWINDOWPOS2FVARBPROC)glfwGetProcAddress("glWindowPos2fvARB");
		ext_glWindowPos2iARB = (PFNGLWINDOWPOS2IARBPROC)glfwGetProcAddress("glWindowPos2iARB");
		ext_glWindowPos2ivARB = (PFNGLWINDOWPOS2IVARBPROC)glfwGetProcAddress("glWindowPos2ivARB");
		ext_glWindowPos2sARB = (PFNGLWINDOWPOS2SARBPROC)glfwGetProcAddress("glWindowPos2sARB");
		ext_glWindowPos2svARB = (PFNGLWINDOWPOS2SVARBPROC)glfwGetProcAddress("glWindowPos2svARB");
		ext_glWindowPos3dARB = (PFNGLWINDOWPOS3DARBPROC)glfwGetProcAddress("glWindowPos3dARB");
		ext_glWindowPos3dvARB = (PFNGLWINDOWPOS3DVARBPROC)glfwGetProcAddress("glWindowPos3dvARB");
		ext_glWindowPos3fARB = (PFNGLWINDOWPOS3FARBPROC)glfwGetProcAddress("glWindowPos3fARB");
		ext_glWindowPos3fvARB = (PFNGLWINDOWPOS3FVARBPROC)glfwGetProcAddress("glWindowPos3fvARB");
		ext_glWindowPos3iARB = (PFNGLWINDOWPOS3IARBPROC)glfwGetProcAddress("glWindowPos3iARB");
		ext_glWindowPos3ivARB = (PFNGLWINDOWPOS3IVARBPROC)glfwGetProcAddress("glWindowPos3ivARB");
		ext_glWindowPos3sARB = (PFNGLWINDOWPOS3SARBPROC)glfwGetProcAddress("glWindowPos3sARB");
		ext_glWindowPos3svARB = (PFNGLWINDOWPOS3SVARBPROC)glfwGetProcAddress("glWindowPos3svARB");
		ext_glVertexAttrib1dARB = (PFNGLVERTEXATTRIB1DARBPROC)glfwGetProcAddress("glVertexAttrib1dARB");
		ext_glVertexAttrib1dvARB = (PFNGLVERTEXATTRIB1DVARBPROC)glfwGetProcAddress("glVertexAttrib1dvARB");
		ext_glVertexAttrib1fARB = (PFNGLVERTEXATTRIB1FARBPROC)glfwGetProcAddress("glVertexAttrib1fARB");
		ext_glVertexAttrib1fvARB = (PFNGLVERTEXATTRIB1FVARBPROC)glfwGetProcAddress("glVertexAttrib1fvARB");
		ext_glVertexAttrib1sARB = (PFNGLVERTEXATTRIB1SARBPROC)glfwGetProcAddress("glVertexAttrib1sARB");
		ext_glVertexAttrib1svARB = (PFNGLVERTEXATTRIB1SVARBPROC)glfwGetProcAddress("glVertexAttrib1svARB");
		ext_glVertexAttrib2dARB = (PFNGLVERTEXATTRIB2DARBPROC)glfwGetProcAddress("glVertexAttrib2dARB");
		ext_glVertexAttrib2dvARB = (PFNGLVERTEXATTRIB2DVARBPROC)glfwGetProcAddress("glVertexAttrib2dvARB");
		ext_glVertexAttrib2fARB = (PFNGLVERTEXATTRIB2FARBPROC)glfwGetProcAddress("glVertexAttrib2fARB");
		ext_glVertexAttrib2fvARB = (PFNGLVERTEXATTRIB2FVARBPROC)glfwGetProcAddress("glVertexAttrib2fvARB");
		ext_glVertexAttrib2sARB = (PFNGLVERTEXATTRIB2SARBPROC)glfwGetProcAddress("glVertexAttrib2sARB");
		ext_glVertexAttrib2svARB = (PFNGLVERTEXATTRIB2SVARBPROC)glfwGetProcAddress("glVertexAttrib2svARB");
		ext_glVertexAttrib3dARB = (PFNGLVERTEXATTRIB3DARBPROC)glfwGetProcAddress("glVertexAttrib3dARB");
		ext_glVertexAttrib3dvARB = (PFNGLVERTEXATTRIB3DVARBPROC)glfwGetProcAddress("glVertexAttrib3dvARB");
		ext_glVertexAttrib3fARB = (PFNGLVERTEXATTRIB3FARBPROC)glfwGetProcAddress("glVertexAttrib3fARB");
		ext_glVertexAttrib3fvARB = (PFNGLVERTEXATTRIB3FVARBPROC)glfwGetProcAddress("glVertexAttrib3fvARB");
		ext_glVertexAttrib3sARB = (PFNGLVERTEXATTRIB3SARBPROC)glfwGetProcAddress("glVertexAttrib3sARB");
		ext_glVertexAttrib3svARB = (PFNGLVERTEXATTRIB3SVARBPROC)glfwGetProcAddress("glVertexAttrib3svARB");
		ext_glVertexAttrib4NbvARB = (PFNGLVERTEXATTRIB4NBVARBPROC)glfwGetProcAddress("glVertexAttrib4NbvARB");
		ext_glVertexAttrib4NivARB = (PFNGLVERTEXATTRIB4NIVARBPROC)glfwGetProcAddress("glVertexAttrib4NivARB");
		ext_glVertexAttrib4NsvARB = (PFNGLVERTEXATTRIB4NSVARBPROC)glfwGetProcAddress("glVertexAttrib4NsvARB");
		ext_glVertexAttrib4NubARB = (PFNGLVERTEXATTRIB4NUBARBPROC)glfwGetProcAddress("glVertexAttrib4NubARB");
		ext_glVertexAttrib4NubvARB = (PFNGLVERTEXATTRIB4NUBVARBPROC)glfwGetProcAddress("glVertexAttrib4NubvARB");
		ext_glVertexAttrib4NuivARB = (PFNGLVERTEXATTRIB4NUIVARBPROC)glfwGetProcAddress("glVertexAttrib4NuivARB");
		ext_glVertexAttrib4NusvARB = (PFNGLVERTEXATTRIB4NUSVARBPROC)glfwGetProcAddress("glVertexAttrib4NusvARB");
		ext_glVertexAttrib4bvARB = (PFNGLVERTEXATTRIB4BVARBPROC)glfwGetProcAddress("glVertexAttrib4bvARB");
		ext_glVertexAttrib4dARB = (PFNGLVERTEXATTRIB4DARBPROC)glfwGetProcAddress("glVertexAttrib4dARB");
		ext_glVertexAttrib4dvARB = (PFNGLVERTEXATTRIB4DVARBPROC)glfwGetProcAddress("glVertexAttrib4dvARB");
		ext_glVertexAttrib4fARB = (PFNGLVERTEXATTRIB4FARBPROC)glfwGetProcAddress("glVertexAttrib4fARB");
		ext_glVertexAttrib4fvARB = (PFNGLVERTEXATTRIB4FVARBPROC)glfwGetProcAddress("glVertexAttrib4fvARB");
		ext_glVertexAttrib4ivARB = (PFNGLVERTEXATTRIB4IVARBPROC)glfwGetProcAddress("glVertexAttrib4ivARB");
		ext_glVertexAttrib4sARB = (PFNGLVERTEXATTRIB4SARBPROC)glfwGetProcAddress("glVertexAttrib4sARB");
		ext_glVertexAttrib4svARB = (PFNGLVERTEXATTRIB4SVARBPROC)glfwGetProcAddress("glVertexAttrib4svARB");
		ext_glVertexAttrib4ubvARB = (PFNGLVERTEXATTRIB4UBVARBPROC)glfwGetProcAddress("glVertexAttrib4ubvARB");
		ext_glVertexAttrib4uivARB = (PFNGLVERTEXATTRIB4UIVARBPROC)glfwGetProcAddress("glVertexAttrib4uivARB");
		ext_glVertexAttrib4usvARB = (PFNGLVERTEXATTRIB4USVARBPROC)glfwGetProcAddress("glVertexAttrib4usvARB");
		ext_glVertexAttribPointerARB = (PFNGLVERTEXATTRIBPOINTERARBPROC)glfwGetProcAddress("glVertexAttribPointerARB");
		ext_glEnableVertexAttribArrayARB = (PFNGLENABLEVERTEXATTRIBARRAYARBPROC)glfwGetProcAddress("glEnableVertexAttribArrayARB");
		ext_glDisableVertexAttribArrayARB = (PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)glfwGetProcAddress("glDisableVertexAttribArrayARB");
		ext_glProgramStringARB = (PFNGLPROGRAMSTRINGARBPROC)glfwGetProcAddress("glProgramStringARB");
		ext_glBindProgramARB = (PFNGLBINDPROGRAMARBPROC)glfwGetProcAddress("glBindProgramARB");
		ext_glDeleteProgramsARB = (PFNGLDELETEPROGRAMSARBPROC)glfwGetProcAddress("glDeleteProgramsARB");
		ext_glGenProgramsARB = (PFNGLGENPROGRAMSARBPROC)glfwGetProcAddress("glGenProgramsARB");
		ext_glProgramEnvParameter4dARB = (PFNGLPROGRAMENVPARAMETER4DARBPROC)glfwGetProcAddress("glProgramEnvParameter4dARB");
		ext_glProgramEnvParameter4dvARB = (PFNGLPROGRAMENVPARAMETER4DVARBPROC)glfwGetProcAddress("glProgramEnvParameter4dvARB");
		ext_glProgramEnvParameter4fARB = (PFNGLPROGRAMENVPARAMETER4FARBPROC)glfwGetProcAddress("glProgramEnvParameter4fARB");
		ext_glProgramEnvParameter4fvARB = (PFNGLPROGRAMENVPARAMETER4FVARBPROC)glfwGetProcAddress("glProgramEnvParameter4fvARB");
		ext_glProgramLocalParameter4dARB = (PFNGLPROGRAMLOCALPARAMETER4DARBPROC)glfwGetProcAddress("glProgramLocalParameter4dARB");
		ext_glProgramLocalParameter4dvARB = (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)glfwGetProcAddress("glProgramLocalParameter4dvARB");
		ext_glProgramLocalParameter4fARB = (PFNGLPROGRAMLOCALPARAMETER4FARBPROC)glfwGetProcAddress("glProgramLocalParameter4fARB");
		ext_glProgramLocalParameter4fvARB = (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)glfwGetProcAddress("glProgramLocalParameter4fvARB");
		ext_glGetProgramEnvParameterdvARB = (PFNGLGETPROGRAMENVPARAMETERDVARBPROC)glfwGetProcAddress("glGetProgramEnvParameterdvARB");
		ext_glGetProgramEnvParameterfvARB = (PFNGLGETPROGRAMENVPARAMETERFVARBPROC)glfwGetProcAddress("glGetProgramEnvParameterfvARB");
		ext_glGetProgramLocalParameterdvARB = (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)glfwGetProcAddress("glGetProgramLocalParameterdvARB");
		ext_glGetProgramLocalParameterfvARB = (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)glfwGetProcAddress("glGetProgramLocalParameterfvARB");
		ext_glGetProgramivARB = (PFNGLGETPROGRAMIVARBPROC)glfwGetProcAddress("glGetProgramivARB");
		ext_glGetProgramStringARB = (PFNGLGETPROGRAMSTRINGARBPROC)glfwGetProcAddress("glGetProgramStringARB");
		ext_glGetVertexAttribdvARB = (PFNGLGETVERTEXATTRIBDVARBPROC)glfwGetProcAddress("glGetVertexAttribdvARB");
		ext_glGetVertexAttribfvARB = (PFNGLGETVERTEXATTRIBFVARBPROC)glfwGetProcAddress("glGetVertexAttribfvARB");
		ext_glGetVertexAttribivARB = (PFNGLGETVERTEXATTRIBIVARBPROC)glfwGetProcAddress("glGetVertexAttribivARB");
		ext_glGetVertexAttribPointervARB = (PFNGLGETVERTEXATTRIBPOINTERVARBPROC)glfwGetProcAddress("glGetVertexAttribPointervARB");
		ext_glIsProgramARB = (PFNGLISPROGRAMARBPROC)glfwGetProcAddress("glIsProgramARB");
		ext_glBindBufferARB = (PFNGLBINDBUFFERARBPROC)glfwGetProcAddress("glBindBufferARB");
		ext_glDeleteBuffersARB = (PFNGLDELETEBUFFERSARBPROC)glfwGetProcAddress("glDeleteBuffersARB");
		ext_glGenBuffersARB = (PFNGLGENBUFFERSARBPROC)glfwGetProcAddress("glGenBuffersARB");
		ext_glIsBufferARB = (PFNGLISBUFFERARBPROC)glfwGetProcAddress("glIsBufferARB");
		ext_glBufferDataARB = (PFNGLBUFFERDATAARBPROC)glfwGetProcAddress("glBufferDataARB");
		ext_glBufferSubDataARB = (PFNGLBUFFERSUBDATAARBPROC)glfwGetProcAddress("glBufferSubDataARB");
		ext_glGetBufferSubDataARB = (PFNGLGETBUFFERSUBDATAARBPROC)glfwGetProcAddress("glGetBufferSubDataARB");
		ext_glMapBufferARB = (PFNGLMAPBUFFERARBPROC)glfwGetProcAddress("glMapBufferARB");
		ext_glUnmapBufferARB = (PFNGLUNMAPBUFFERARBPROC)glfwGetProcAddress("glUnmapBufferARB");
		ext_glGetBufferParameterivARB = (PFNGLGETBUFFERPARAMETERIVARBPROC)glfwGetProcAddress("glGetBufferParameterivARB");
		ext_glGetBufferPointervARB = (PFNGLGETBUFFERPOINTERVARBPROC)glfwGetProcAddress("glGetBufferPointervARB");
		ext_glGenQueriesARB = (PFNGLGENQUERIESARBPROC)glfwGetProcAddress("glGenQueriesARB");
		ext_glDeleteQueriesARB = (PFNGLDELETEQUERIESARBPROC)glfwGetProcAddress("glDeleteQueriesARB");
		ext_glIsQueryARB = (PFNGLISQUERYARBPROC)glfwGetProcAddress("glIsQueryARB");
		ext_glBeginQueryARB = (PFNGLBEGINQUERYARBPROC)glfwGetProcAddress("glBeginQueryARB");
		ext_glEndQueryARB = (PFNGLENDQUERYARBPROC)glfwGetProcAddress("glEndQueryARB");
		ext_glGetQueryivARB = (PFNGLGETQUERYIVARBPROC)glfwGetProcAddress("glGetQueryivARB");
		ext_glGetQueryObjectivARB = (PFNGLGETQUERYOBJECTIVARBPROC)glfwGetProcAddress("glGetQueryObjectivARB");
		ext_glGetQueryObjectuivARB = (PFNGLGETQUERYOBJECTUIVARBPROC)glfwGetProcAddress("glGetQueryObjectuivARB");
		ext_glDeleteObjectARB = (PFNGLDELETEOBJECTARBPROC)glfwGetProcAddress("glDeleteObjectARB");
		ext_glGetHandleARB = (PFNGLGETHANDLEARBPROC)glfwGetProcAddress("glGetHandleARB");
		ext_glDetachObjectARB = (PFNGLDETACHOBJECTARBPROC)glfwGetProcAddress("glDetachObjectARB");
		ext_glCreateShaderObjectARB = (PFNGLCREATESHADEROBJECTARBPROC)glfwGetProcAddress("glCreateShaderObjectARB");
		ext_glShaderSourceARB = (PFNGLSHADERSOURCEARBPROC)glfwGetProcAddress("glShaderSourceARB");
		ext_glCompileShaderARB = (PFNGLCOMPILESHADERARBPROC)glfwGetProcAddress("glCompileShaderARB");
		ext_glCreateProgramObjectARB = (PFNGLCREATEPROGRAMOBJECTARBPROC)glfwGetProcAddress("glCreateProgramObjectARB");
		ext_glAttachObjectARB = (PFNGLATTACHOBJECTARBPROC)glfwGetProcAddress("glAttachObjectARB");
		ext_glLinkProgramARB = (PFNGLLINKPROGRAMARBPROC)glfwGetProcAddress("glLinkProgramARB");
		ext_glUseProgramObjectARB = (PFNGLUSEPROGRAMOBJECTARBPROC)glfwGetProcAddress("glUseProgramObjectARB");
		ext_glValidateProgramARB = (PFNGLVALIDATEPROGRAMARBPROC)glfwGetProcAddress("glValidateProgramARB");
		ext_glUniform1fARB = (PFNGLUNIFORM1FARBPROC)glfwGetProcAddress("glUniform1fARB");
		ext_glUniform2fARB = (PFNGLUNIFORM2FARBPROC)glfwGetProcAddress("glUniform2fARB");
		ext_glUniform3fARB = (PFNGLUNIFORM3FARBPROC)glfwGetProcAddress("glUniform3fARB");
		ext_glUniform4fARB = (PFNGLUNIFORM4FARBPROC)glfwGetProcAddress("glUniform4fARB");
		ext_glUniform1iARB = (PFNGLUNIFORM1IARBPROC)glfwGetProcAddress("glUniform1iARB");
		ext_glUniform2iARB = (PFNGLUNIFORM2IARBPROC)glfwGetProcAddress("glUniform2iARB");
		ext_glUniform3iARB = (PFNGLUNIFORM3IARBPROC)glfwGetProcAddress("glUniform3iARB");
		ext_glUniform4iARB = (PFNGLUNIFORM4IARBPROC)glfwGetProcAddress("glUniform4iARB");
		ext_glUniform1fvARB = (PFNGLUNIFORM1FVARBPROC)glfwGetProcAddress("glUniform1fvARB");
		ext_glUniform2fvARB = (PFNGLUNIFORM2FVARBPROC)glfwGetProcAddress("glUniform2fvARB");
		ext_glUniform3fvARB = (PFNGLUNIFORM3FVARBPROC)glfwGetProcAddress("glUniform3fvARB");
		ext_glUniform4fvARB = (PFNGLUNIFORM4FVARBPROC)glfwGetProcAddress("glUniform4fvARB");
		ext_glUniform1ivARB = (PFNGLUNIFORM1IVARBPROC)glfwGetProcAddress("glUniform1ivARB");
		ext_glUniform2ivARB = (PFNGLUNIFORM2IVARBPROC)glfwGetProcAddress("glUniform2ivARB");
		ext_glUniform3ivARB = (PFNGLUNIFORM3IVARBPROC)glfwGetProcAddress("glUniform3ivARB");
		ext_glUniform4ivARB = (PFNGLUNIFORM4IVARBPROC)glfwGetProcAddress("glUniform4ivARB");
		ext_glUniformMatrix2fvARB = (PFNGLUNIFORMMATRIX2FVARBPROC)glfwGetProcAddress("glUniformMatrix2fvARB");
		ext_glUniformMatrix3fvARB = (PFNGLUNIFORMMATRIX3FVARBPROC)glfwGetProcAddress("glUniformMatrix3fvARB");
		ext_glUniformMatrix4fvARB = (PFNGLUNIFORMMATRIX4FVARBPROC)glfwGetProcAddress("glUniformMatrix4fvARB");
		ext_glGetObjectParameterfvARB = (PFNGLGETOBJECTPARAMETERFVARBPROC)glfwGetProcAddress("glGetObjectParameterfvARB");
		ext_glGetObjectParameterivARB = (PFNGLGETOBJECTPARAMETERIVARBPROC)glfwGetProcAddress("glGetObjectParameterivARB");
		ext_glGetInfoLogARB = (PFNGLGETINFOLOGARBPROC)glfwGetProcAddress("glGetInfoLogARB");
		ext_glGetAttachedObjectsARB = (PFNGLGETATTACHEDOBJECTSARBPROC)glfwGetProcAddress("glGetAttachedObjectsARB");
		ext_glGetUniformLocationARB = (PFNGLGETUNIFORMLOCATIONARBPROC)glfwGetProcAddress("glGetUniformLocationARB");
		ext_glGetActiveUniformARB = (PFNGLGETACTIVEUNIFORMARBPROC)glfwGetProcAddress("glGetActiveUniformARB");
		ext_glGetUniformfvARB = (PFNGLGETUNIFORMFVARBPROC)glfwGetProcAddress("glGetUniformfvARB");
		ext_glGetUniformivARB = (PFNGLGETUNIFORMIVARBPROC)glfwGetProcAddress("glGetUniformivARB");
		ext_glGetShaderSourceARB = (PFNGLGETSHADERSOURCEARBPROC)glfwGetProcAddress("glGetShaderSourceARB");
		ext_glBindAttribLocationARB = (PFNGLBINDATTRIBLOCATIONARBPROC)glfwGetProcAddress("glBindAttribLocationARB");
		ext_glGetActiveAttribARB = (PFNGLGETACTIVEATTRIBARBPROC)glfwGetProcAddress("glGetActiveAttribARB");
		ext_glGetAttribLocationARB = (PFNGLGETATTRIBLOCATIONARBPROC)glfwGetProcAddress("glGetAttribLocationARB");
		ext_glDrawBuffersARB = (PFNGLDRAWBUFFERSARBPROC)glfwGetProcAddress("glDrawBuffersARB");
		ext_glClampColorARB = (PFNGLCLAMPCOLORARBPROC)glfwGetProcAddress("glClampColorARB");
		ext_glDrawArraysInstancedARB = (PFNGLDRAWARRAYSINSTANCEDARBPROC)glfwGetProcAddress("glDrawArraysInstancedARB");
		ext_glDrawElementsInstancedARB = (PFNGLDRAWELEMENTSINSTANCEDARBPROC)glfwGetProcAddress("glDrawElementsInstancedARB");
		ext_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)glfwGetProcAddress("glIsRenderbuffer");
		ext_glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)glfwGetProcAddress("glBindRenderbuffer");
		ext_glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)glfwGetProcAddress("glDeleteRenderbuffers");
		ext_glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)glfwGetProcAddress("glGenRenderbuffers");
		ext_glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)glfwGetProcAddress("glRenderbufferStorage");
		ext_glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)glfwGetProcAddress("glGetRenderbufferParameteriv");
		ext_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)glfwGetProcAddress("glIsFramebuffer");
		ext_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)glfwGetProcAddress("glBindFramebuffer");
		ext_glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)glfwGetProcAddress("glDeleteFramebuffers");
		ext_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)glfwGetProcAddress("glGenFramebuffers");
		ext_glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)glfwGetProcAddress("glCheckFramebufferStatus");
		ext_glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC)glfwGetProcAddress("glFramebufferTexture1D");
		ext_glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC)glfwGetProcAddress("glFramebufferTexture2D");
		ext_glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC)glfwGetProcAddress("glFramebufferTexture3D");
		ext_glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)glfwGetProcAddress("glFramebufferRenderbuffer");
		ext_glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)glfwGetProcAddress("glGetFramebufferAttachmentParameteriv");
		ext_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)glfwGetProcAddress("glGenerateMipmap");
		ext_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)glfwGetProcAddress("glBlitFramebuffer");
		ext_glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)glfwGetProcAddress("glRenderbufferStorageMultisample");
		ext_glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)glfwGetProcAddress("glFramebufferTextureLayer");
		ext_glProgramParameteriARB = (PFNGLPROGRAMPARAMETERIARBPROC)glfwGetProcAddress("glProgramParameteriARB");
		ext_glFramebufferTextureARB = (PFNGLFRAMEBUFFERTEXTUREARBPROC)glfwGetProcAddress("glFramebufferTextureARB");
		ext_glFramebufferTextureLayerARB = (PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)glfwGetProcAddress("glFramebufferTextureLayerARB");
		ext_glFramebufferTextureFaceARB = (PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)glfwGetProcAddress("glFramebufferTextureFaceARB");
		ext_glVertexAttribDivisorARB = (PFNGLVERTEXATTRIBDIVISORARBPROC)glfwGetProcAddress("glVertexAttribDivisorARB");
		ext_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)glfwGetProcAddress("glMapBufferRange");
		ext_glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)glfwGetProcAddress("glFlushMappedBufferRange");
		ext_glTexBufferARB = (PFNGLTEXBUFFERARBPROC)glfwGetProcAddress("glTexBufferARB");
		ext_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)glfwGetProcAddress("glBindVertexArray");
		ext_glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)glfwGetProcAddress("glDeleteVertexArrays");
		ext_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)glfwGetProcAddress("glGenVertexArrays");
		ext_glIsVertexArray = (PFNGLISVERTEXARRAYPROC)glfwGetProcAddress("glIsVertexArray");
		ext_glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)glfwGetProcAddress("glGetUniformIndices");
		ext_glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC)glfwGetProcAddress("glGetActiveUniformsiv");
		ext_glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC)glfwGetProcAddress("glGetActiveUniformName");
		ext_glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)glfwGetProcAddress("glGetUniformBlockIndex");
		ext_glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)glfwGetProcAddress("glGetActiveUniformBlockiv");
		ext_glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)glfwGetProcAddress("glGetActiveUniformBlockName");
		ext_glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)glfwGetProcAddress("glUniformBlockBinding");
		ext_glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC)glfwGetProcAddress("glCopyBufferSubData");
		ext_glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)glfwGetProcAddress("glDrawElementsBaseVertex");
		ext_glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)glfwGetProcAddress("glDrawRangeElementsBaseVertex");
		ext_glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)glfwGetProcAddress("glDrawElementsInstancedBaseVertex");
		ext_glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)glfwGetProcAddress("glMultiDrawElementsBaseVertex");
		ext_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)glfwGetProcAddress("glProvokingVertex");
		ext_glFenceSync = (PFNGLFENCESYNCPROC)glfwGetProcAddress("glFenceSync");
		ext_glIsSync = (PFNGLISSYNCPROC)glfwGetProcAddress("glIsSync");
		ext_glDeleteSync = (PFNGLDELETESYNCPROC)glfwGetProcAddress("glDeleteSync");
		ext_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)glfwGetProcAddress("glClientWaitSync");
		ext_glWaitSync = (PFNGLWAITSYNCPROC)glfwGetProcAddress("glWaitSync");
		ext_glGetInteger64v = (PFNGLGETINTEGER64VPROC)glfwGetProcAddress("glGetInteger64v");
		ext_glGetSynciv = (PFNGLGETSYNCIVPROC)glfwGetProcAddress("glGetSynciv");
		ext_glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)glfwGetProcAddress("glTexImage2DMultisample");
		ext_glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)glfwGetProcAddress("glTexImage3DMultisample");
		ext_glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC)glfwGetProcAddress("glGetMultisamplefv");
		ext_glSampleMaski = (PFNGLSAMPLEMASKIPROC)glfwGetProcAddress("glSampleMaski");
		ext_glBlendEquationiARB = (PFNGLBLENDEQUATIONIARBPROC)glfwGetProcAddress("glBlendEquationiARB");
		ext_glBlendEquationSeparateiARB = (PFNGLBLENDEQUATIONSEPARATEIARBPROC)glfwGetProcAddress("glBlendEquationSeparateiARB");
		ext_glBlendFunciARB = (PFNGLBLENDFUNCIARBPROC)glfwGetProcAddress("glBlendFunciARB");
		ext_glBlendFuncSeparateiARB = (PFNGLBLENDFUNCSEPARATEIARBPROC)glfwGetProcAddress("glBlendFuncSeparateiARB");
		ext_glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC)glfwGetProcAddress("glMinSampleShadingARB");
		ext_glNamedStringARB = (PFNGLNAMEDSTRINGARBPROC)glfwGetProcAddress("glNamedStringARB");
		ext_glDeleteNamedStringARB = (PFNGLDELETENAMEDSTRINGARBPROC)glfwGetProcAddress("glDeleteNamedStringARB");
		ext_glCompileShaderIncludeARB = (PFNGLCOMPILESHADERINCLUDEARBPROC)glfwGetProcAddress("glCompileShaderIncludeARB");
		ext_glIsNamedStringARB = (PFNGLISNAMEDSTRINGARBPROC)glfwGetProcAddress("glIsNamedStringARB");
		ext_glGetNamedStringARB = (PFNGLGETNAMEDSTRINGARBPROC)glfwGetProcAddress("glGetNamedStringARB");
		ext_glGetNamedStringivARB = (PFNGLGETNAMEDSTRINGIVARBPROC)glfwGetProcAddress("glGetNamedStringivARB");
		ext_glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)glfwGetProcAddress("glBindFragDataLocationIndexed");
		ext_glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC)glfwGetProcAddress("glGetFragDataIndex");
		ext_glGenSamplers = (PFNGLGENSAMPLERSPROC)glfwGetProcAddress("glGenSamplers");
		ext_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)glfwGetProcAddress("glDeleteSamplers");
		ext_glIsSampler = (PFNGLISSAMPLERPROC)glfwGetProcAddress("glIsSampler");
		ext_glBindSampler = (PFNGLBINDSAMPLERPROC)glfwGetProcAddress("glBindSampler");
		ext_glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC)glfwGetProcAddress("glSamplerParameteri");
		ext_glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC)glfwGetProcAddress("glSamplerParameteriv");
		ext_glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC)glfwGetProcAddress("glSamplerParameterf");
		ext_glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC)glfwGetProcAddress("glSamplerParameterfv");
		ext_glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC)glfwGetProcAddress("glSamplerParameterIiv");
		ext_glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC)glfwGetProcAddress("glSamplerParameterIuiv");
		ext_glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC)glfwGetProcAddress("glGetSamplerParameteriv");
		ext_glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC)glfwGetProcAddress("glGetSamplerParameterIiv");
		ext_glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC)glfwGetProcAddress("glGetSamplerParameterfv");
		ext_glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC)glfwGetProcAddress("glGetSamplerParameterIuiv");
		ext_glQueryCounter = (PFNGLQUERYCOUNTERPROC)glfwGetProcAddress("glQueryCounter");
		ext_glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC)glfwGetProcAddress("glGetQueryObjecti64v");
		ext_glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)glfwGetProcAddress("glGetQueryObjectui64v");
		ext_glVertexP2ui = (PFNGLVERTEXP2UIPROC)glfwGetProcAddress("glVertexP2ui");
		ext_glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)glfwGetProcAddress("glVertexP2uiv");
		ext_glVertexP3ui = (PFNGLVERTEXP3UIPROC)glfwGetProcAddress("glVertexP3ui");
		ext_glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)glfwGetProcAddress("glVertexP3uiv");
		ext_glVertexP4ui = (PFNGLVERTEXP4UIPROC)glfwGetProcAddress("glVertexP4ui");
		ext_glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)glfwGetProcAddress("glVertexP4uiv");
		ext_glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)glfwGetProcAddress("glTexCoordP1ui");
		ext_glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)glfwGetProcAddress("glTexCoordP1uiv");
		ext_glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)glfwGetProcAddress("glTexCoordP2ui");
		ext_glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)glfwGetProcAddress("glTexCoordP2uiv");
		ext_glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)glfwGetProcAddress("glTexCoordP3ui");
		ext_glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)glfwGetProcAddress("glTexCoordP3uiv");
		ext_glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)glfwGetProcAddress("glTexCoordP4ui");
		ext_glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)glfwGetProcAddress("glTexCoordP4uiv");
		ext_glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC)glfwGetProcAddress("glMultiTexCoordP1ui");
		ext_glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC)glfwGetProcAddress("glMultiTexCoordP1uiv");
		ext_glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC)glfwGetProcAddress("glMultiTexCoordP2ui");
		ext_glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC)glfwGetProcAddress("glMultiTexCoordP2uiv");
		ext_glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC)glfwGetProcAddress("glMultiTexCoordP3ui");
		ext_glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC)glfwGetProcAddress("glMultiTexCoordP3uiv");
		ext_glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC)glfwGetProcAddress("glMultiTexCoordP4ui");
		ext_glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC)glfwGetProcAddress("glMultiTexCoordP4uiv");
		ext_glNormalP3ui = (PFNGLNORMALP3UIPROC)glfwGetProcAddress("glNormalP3ui");
		ext_glNormalP3uiv = (PFNGLNORMALP3UIVPROC)glfwGetProcAddress("glNormalP3uiv");
		ext_glColorP3ui = (PFNGLCOLORP3UIPROC)glfwGetProcAddress("glColorP3ui");
		ext_glColorP3uiv = (PFNGLCOLORP3UIVPROC)glfwGetProcAddress("glColorP3uiv");
		ext_glColorP4ui = (PFNGLCOLORP4UIPROC)glfwGetProcAddress("glColorP4ui");
		ext_glColorP4uiv = (PFNGLCOLORP4UIVPROC)glfwGetProcAddress("glColorP4uiv");
		ext_glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC)glfwGetProcAddress("glSecondaryColorP3ui");
		ext_glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC)glfwGetProcAddress("glSecondaryColorP3uiv");
		ext_glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC)glfwGetProcAddress("glVertexAttribP1ui");
		ext_glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC)glfwGetProcAddress("glVertexAttribP1uiv");
		ext_glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC)glfwGetProcAddress("glVertexAttribP2ui");
		ext_glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC)glfwGetProcAddress("glVertexAttribP2uiv");
		ext_glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC)glfwGetProcAddress("glVertexAttribP3ui");
		ext_glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC)glfwGetProcAddress("glVertexAttribP3uiv");
		ext_glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC)glfwGetProcAddress("glVertexAttribP4ui");
		ext_glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC)glfwGetProcAddress("glVertexAttribP4uiv");
		ext_glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC)glfwGetProcAddress("glDrawArraysIndirect");
		ext_glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC)glfwGetProcAddress("glDrawElementsIndirect");
		ext_glUniform1d = (PFNGLUNIFORM1DPROC)glfwGetProcAddress("glUniform1d");
		ext_glUniform2d = (PFNGLUNIFORM2DPROC)glfwGetProcAddress("glUniform2d");
		ext_glUniform3d = (PFNGLUNIFORM3DPROC)glfwGetProcAddress("glUniform3d");
		ext_glUniform4d = (PFNGLUNIFORM4DPROC)glfwGetProcAddress("glUniform4d");
		ext_glUniform1dv = (PFNGLUNIFORM1DVPROC)glfwGetProcAddress("glUniform1dv");
		ext_glUniform2dv = (PFNGLUNIFORM2DVPROC)glfwGetProcAddress("glUniform2dv");
		ext_glUniform3dv = (PFNGLUNIFORM3DVPROC)glfwGetProcAddress("glUniform3dv");
		ext_glUniform4dv = (PFNGLUNIFORM4DVPROC)glfwGetProcAddress("glUniform4dv");
		ext_glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC)glfwGetProcAddress("glUniformMatrix2dv");
		ext_glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC)glfwGetProcAddress("glUniformMatrix3dv");
		ext_glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC)glfwGetProcAddress("glUniformMatrix4dv");
		ext_glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC)glfwGetProcAddress("glUniformMatrix2x3dv");
		ext_glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC)glfwGetProcAddress("glUniformMatrix2x4dv");
		ext_glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC)glfwGetProcAddress("glUniformMatrix3x2dv");
		ext_glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC)glfwGetProcAddress("glUniformMatrix3x4dv");
		ext_glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC)glfwGetProcAddress("glUniformMatrix4x2dv");
		ext_glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC)glfwGetProcAddress("glUniformMatrix4x3dv");
		ext_glGetUniformdv = (PFNGLGETUNIFORMDVPROC)glfwGetProcAddress("glGetUniformdv");
		ext_glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)glfwGetProcAddress("glGetSubroutineUniformLocation");
		ext_glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC)glfwGetProcAddress("glGetSubroutineIndex");
		ext_glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)glfwGetProcAddress("glGetActiveSubroutineUniformiv");
		ext_glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)glfwGetProcAddress("glGetActiveSubroutineUniformName");
		ext_glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC)glfwGetProcAddress("glGetActiveSubroutineName");
		ext_glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC)glfwGetProcAddress("glUniformSubroutinesuiv");
		ext_glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)glfwGetProcAddress("glGetUniformSubroutineuiv");
		ext_glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC)glfwGetProcAddress("glGetProgramStageiv");
		ext_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)glfwGetProcAddress("glPatchParameteri");
		ext_glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC)glfwGetProcAddress("glPatchParameterfv");
		ext_glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC)glfwGetProcAddress("glBindTransformFeedback");
		ext_glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC)glfwGetProcAddress("glDeleteTransformFeedbacks");
		ext_glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC)glfwGetProcAddress("glGenTransformFeedbacks");
		ext_glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC)glfwGetProcAddress("glIsTransformFeedback");
		ext_glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC)glfwGetProcAddress("glPauseTransformFeedback");
		ext_glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC)glfwGetProcAddress("glResumeTransformFeedback");
		ext_glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC)glfwGetProcAddress("glDrawTransformFeedback");
		ext_glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)glfwGetProcAddress("glDrawTransformFeedbackStream");
		ext_glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC)glfwGetProcAddress("glBeginQueryIndexed");
		ext_glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)glfwGetProcAddress("glEndQueryIndexed");
		ext_glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC)glfwGetProcAddress("glGetQueryIndexediv");
		ext_glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC)glfwGetProcAddress("glReleaseShaderCompiler");
		ext_glShaderBinary = (PFNGLSHADERBINARYPROC)glfwGetProcAddress("glShaderBinary");
		ext_glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC)glfwGetProcAddress("glGetShaderPrecisionFormat");
		ext_glDepthRangef = (PFNGLDEPTHRANGEFPROC)glfwGetProcAddress("glDepthRangef");
		ext_glClearDepthf = (PFNGLCLEARDEPTHFPROC)glfwGetProcAddress("glClearDepthf");
		ext_glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC)glfwGetProcAddress("glGetProgramBinary");
		ext_glProgramBinary = (PFNGLPROGRAMBINARYPROC)glfwGetProcAddress("glProgramBinary");
		ext_glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC)glfwGetProcAddress("glProgramParameteri");
		ext_glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC)glfwGetProcAddress("glUseProgramStages");
		ext_glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC)glfwGetProcAddress("glActiveShaderProgram");
		ext_glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC)glfwGetProcAddress("glCreateShaderProgramv");
		ext_glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC)glfwGetProcAddress("glBindProgramPipeline");
		ext_glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC)glfwGetProcAddress("glDeleteProgramPipelines");
		ext_glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC)glfwGetProcAddress("glGenProgramPipelines");
		ext_glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC)glfwGetProcAddress("glIsProgramPipeline");
		ext_glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC)glfwGetProcAddress("glGetProgramPipelineiv");
		ext_glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC)glfwGetProcAddress("glProgramUniform1i");
		ext_glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC)glfwGetProcAddress("glProgramUniform1iv");
		ext_glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC)glfwGetProcAddress("glProgramUniform1f");
		ext_glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC)glfwGetProcAddress("glProgramUniform1fv");
		ext_glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC)glfwGetProcAddress("glProgramUniform1d");
		ext_glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC)glfwGetProcAddress("glProgramUniform1dv");
		ext_glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC)glfwGetProcAddress("glProgramUniform1ui");
		ext_glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC)glfwGetProcAddress("glProgramUniform1uiv");
		ext_glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC)glfwGetProcAddress("glProgramUniform2i");
		ext_glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC)glfwGetProcAddress("glProgramUniform2iv");
		ext_glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC)glfwGetProcAddress("glProgramUniform2f");
		ext_glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC)glfwGetProcAddress("glProgramUniform2fv");
		ext_glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC)glfwGetProcAddress("glProgramUniform2d");
		ext_glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC)glfwGetProcAddress("glProgramUniform2dv");
		ext_glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC)glfwGetProcAddress("glProgramUniform2ui");
		ext_glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC)glfwGetProcAddress("glProgramUniform2uiv");
		ext_glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC)glfwGetProcAddress("glProgramUniform3i");
		ext_glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC)glfwGetProcAddress("glProgramUniform3iv");
		ext_glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC)glfwGetProcAddress("glProgramUniform3f");
		ext_glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC)glfwGetProcAddress("glProgramUniform3fv");
		ext_glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC)glfwGetProcAddress("glProgramUniform3d");
		ext_glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC)glfwGetProcAddress("glProgramUniform3dv");
		ext_glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC)glfwGetProcAddress("glProgramUniform3ui");
		ext_glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC)glfwGetProcAddress("glProgramUniform3uiv");
		ext_glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC)glfwGetProcAddress("glProgramUniform4i");
		ext_glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC)glfwGetProcAddress("glProgramUniform4iv");
		ext_glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC)glfwGetProcAddress("glProgramUniform4f");
		ext_glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC)glfwGetProcAddress("glProgramUniform4fv");
		ext_glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC)glfwGetProcAddress("glProgramUniform4d");
		ext_glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC)glfwGetProcAddress("glProgramUniform4dv");
		ext_glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC)glfwGetProcAddress("glProgramUniform4ui");
		ext_glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC)glfwGetProcAddress("glProgramUniform4uiv");
		ext_glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)glfwGetProcAddress("glProgramUniformMatrix2fv");
		ext_glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)glfwGetProcAddress("glProgramUniformMatrix3fv");
		ext_glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)glfwGetProcAddress("glProgramUniformMatrix4fv");
		ext_glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)glfwGetProcAddress("glProgramUniformMatrix2dv");
		ext_glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)glfwGetProcAddress("glProgramUniformMatrix3dv");
		ext_glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)glfwGetProcAddress("glProgramUniformMatrix4dv");
		ext_glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)glfwGetProcAddress("glProgramUniformMatrix2x3fv");
		ext_glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)glfwGetProcAddress("glProgramUniformMatrix3x2fv");
		ext_glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)glfwGetProcAddress("glProgramUniformMatrix2x4fv");
		ext_glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)glfwGetProcAddress("glProgramUniformMatrix4x2fv");
		ext_glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)glfwGetProcAddress("glProgramUniformMatrix3x4fv");
		ext_glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)glfwGetProcAddress("glProgramUniformMatrix4x3fv");
		ext_glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)glfwGetProcAddress("glProgramUniformMatrix2x3dv");
		ext_glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)glfwGetProcAddress("glProgramUniformMatrix3x2dv");
		ext_glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)glfwGetProcAddress("glProgramUniformMatrix2x4dv");
		ext_glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)glfwGetProcAddress("glProgramUniformMatrix4x2dv");
		ext_glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)glfwGetProcAddress("glProgramUniformMatrix3x4dv");
		ext_glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)glfwGetProcAddress("glProgramUniformMatrix4x3dv");
		ext_glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC)glfwGetProcAddress("glValidateProgramPipeline");
		ext_glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)glfwGetProcAddress("glGetProgramPipelineInfoLog");
		ext_glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)glfwGetProcAddress("glVertexAttribL1d");
		ext_glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)glfwGetProcAddress("glVertexAttribL2d");
		ext_glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)glfwGetProcAddress("glVertexAttribL3d");
		ext_glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)glfwGetProcAddress("glVertexAttribL4d");
		ext_glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC)glfwGetProcAddress("glVertexAttribL1dv");
		ext_glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC)glfwGetProcAddress("glVertexAttribL2dv");
		ext_glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC)glfwGetProcAddress("glVertexAttribL3dv");
		ext_glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC)glfwGetProcAddress("glVertexAttribL4dv");
		ext_glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC)glfwGetProcAddress("glVertexAttribLPointer");
		ext_glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC)glfwGetProcAddress("glGetVertexAttribLdv");
		ext_glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)glfwGetProcAddress("glViewportArrayv");
		ext_glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)glfwGetProcAddress("glViewportIndexedf");
		ext_glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)glfwGetProcAddress("glViewportIndexedfv");
		ext_glScissorArrayv = (PFNGLSCISSORARRAYVPROC)glfwGetProcAddress("glScissorArrayv");
		ext_glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)glfwGetProcAddress("glScissorIndexed");
		ext_glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)glfwGetProcAddress("glScissorIndexedv");
		ext_glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC)glfwGetProcAddress("glDepthRangeArrayv");
		ext_glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC)glfwGetProcAddress("glDepthRangeIndexed");
		ext_glCreateSyncFromCLeventARB = (PFNGLCREATESYNCFROMCLEVENTARBPROC)glfwGetProcAddress("glCreateSyncFromCLeventARB");
		ext_glGetDebugMessageLogARB = (PFNGLGETDEBUGMESSAGELOGARBPROC)glfwGetProcAddress("glGetDebugMessageLogARB");
		ext_glGetGraphicsResetStatusARB = (PFNGLGETGRAPHICSRESETSTATUSARBPROC)glfwGetProcAddress("glGetGraphicsResetStatusARB");
		ext_glGetnMapdvARB = (PFNGLGETNMAPDVARBPROC)glfwGetProcAddress("glGetnMapdvARB");
		ext_glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC)glfwGetProcAddress("glGetnMapfvARB");
		ext_glGetnMapivARB = (PFNGLGETNMAPIVARBPROC)glfwGetProcAddress("glGetnMapivARB");
		ext_glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC)glfwGetProcAddress("glGetnPixelMapfvARB");
		ext_glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC)glfwGetProcAddress("glGetnPixelMapuivARB");
		ext_glGetnPixelMapusvARB = (PFNGLGETNPIXELMAPUSVARBPROC)glfwGetProcAddress("glGetnPixelMapusvARB");
		ext_glGetnPolygonStippleARB = (PFNGLGETNPOLYGONSTIPPLEARBPROC)glfwGetProcAddress("glGetnPolygonStippleARB");
		ext_glGetnColorTableARB = (PFNGLGETNCOLORTABLEARBPROC)glfwGetProcAddress("glGetnColorTableARB");
		ext_glGetnConvolutionFilterARB = (PFNGLGETNCONVOLUTIONFILTERARBPROC)glfwGetProcAddress("glGetnConvolutionFilterARB");
		ext_glGetnSeparableFilterARB = (PFNGLGETNSEPARABLEFILTERARBPROC)glfwGetProcAddress("glGetnSeparableFilterARB");
		ext_glGetnHistogramARB = (PFNGLGETNHISTOGRAMARBPROC)glfwGetProcAddress("glGetnHistogramARB");
		ext_glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC)glfwGetProcAddress("glGetnMinmaxARB");
		ext_glGetnTexImageARB = (PFNGLGETNTEXIMAGEARBPROC)glfwGetProcAddress("glGetnTexImageARB");
		ext_glReadnPixelsARB = (PFNGLREADNPIXELSARBPROC)glfwGetProcAddress("glReadnPixelsARB");
		ext_glGetnCompressedTexImageARB = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)glfwGetProcAddress("glGetnCompressedTexImageARB");
		ext_glGetnUniformfvARB = (PFNGLGETNUNIFORMFVARBPROC)glfwGetProcAddress("glGetnUniformfvARB");
		ext_glGetnUniformivARB = (PFNGLGETNUNIFORMIVARBPROC)glfwGetProcAddress("glGetnUniformivARB");
		ext_glGetnUniformuivARB = (PFNGLGETNUNIFORMUIVARBPROC)glfwGetProcAddress("glGetnUniformuivARB");
		ext_glGetnUniformdvARB = (PFNGLGETNUNIFORMDVARBPROC)glfwGetProcAddress("glGetnUniformdvARB");
		ext_glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)glfwGetProcAddress("glDrawArraysInstancedBaseInstance");
		ext_glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)glfwGetProcAddress("glDrawElementsInstancedBaseInstance");
		ext_glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)glfwGetProcAddress("glDrawElementsInstancedBaseVertexBaseInstance");
		ext_glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)glfwGetProcAddress("glDrawTransformFeedbackInstanced");
		ext_glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)glfwGetProcAddress("glDrawTransformFeedbackStreamInstanced");
		ext_glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC)glfwGetProcAddress("glGetInternalformativ");
		ext_glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)glfwGetProcAddress("glGetActiveAtomicCounterBufferiv");
		ext_glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC)glfwGetProcAddress("glBindImageTexture");
		ext_glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)glfwGetProcAddress("glMemoryBarrier");
		ext_glTexStorage1D = (PFNGLTEXSTORAGE1DPROC)glfwGetProcAddress("glTexStorage1D");
		ext_glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)glfwGetProcAddress("glTexStorage2D");
		ext_glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)glfwGetProcAddress("glTexStorage3D");
		ext_glTextureStorage1DEXT = (PFNGLTEXTURESTORAGE1DEXTPROC)glfwGetProcAddress("glTextureStorage1DEXT");
		ext_glTextureStorage2DEXT = (PFNGLTEXTURESTORAGE2DEXTPROC)glfwGetProcAddress("glTextureStorage2DEXT");
		ext_glTextureStorage3DEXT = (PFNGLTEXTURESTORAGE3DEXTPROC)glfwGetProcAddress("glTextureStorage3DEXT");
		ext_glGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC)glfwGetProcAddress("glGetDebugMessageLog");
		ext_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)glfwGetProcAddress("glPushDebugGroup");
		ext_glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)glfwGetProcAddress("glPopDebugGroup");
		ext_glObjectLabel = (PFNGLOBJECTLABELPROC)glfwGetProcAddress("glObjectLabel");
		ext_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)glfwGetProcAddress("glGetObjectLabel");
		ext_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)glfwGetProcAddress("glObjectPtrLabel");
		ext_glGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC)glfwGetProcAddress("glGetObjectPtrLabel");
		ext_glClearBufferData = (PFNGLCLEARBUFFERDATAPROC)glfwGetProcAddress("glClearBufferData");
		ext_glClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC)glfwGetProcAddress("glClearBufferSubData");
		ext_glClearNamedBufferDataEXT = (PFNGLCLEARNAMEDBUFFERDATAEXTPROC)glfwGetProcAddress("glClearNamedBufferDataEXT");
		ext_glClearNamedBufferSubDataEXT = (PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC)glfwGetProcAddress("glClearNamedBufferSubDataEXT");
		ext_glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)glfwGetProcAddress("glDispatchCompute");
		ext_glDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC)glfwGetProcAddress("glDispatchComputeIndirect");
		ext_glCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC)glfwGetProcAddress("glCopyImageSubData");
		ext_glTextureView = (PFNGLTEXTUREVIEWPROC)glfwGetProcAddress("glTextureView");
		ext_glBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC)glfwGetProcAddress("glBindVertexBuffer");
		ext_glVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC)glfwGetProcAddress("glVertexAttribFormat");
		ext_glVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC)glfwGetProcAddress("glVertexAttribIFormat");
		ext_glVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC)glfwGetProcAddress("glVertexAttribLFormat");
		ext_glVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC)glfwGetProcAddress("glVertexAttribBinding");
		ext_glVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC)glfwGetProcAddress("glVertexBindingDivisor");
		ext_glVertexArrayBindVertexBufferEXT = (PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC)glfwGetProcAddress("glVertexArrayBindVertexBufferEXT");
		ext_glVertexArrayVertexAttribFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC)glfwGetProcAddress("glVertexArrayVertexAttribFormatEXT");
		ext_glVertexArrayVertexAttribIFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC)glfwGetProcAddress("glVertexArrayVertexAttribIFormatEXT");
		ext_glVertexArrayVertexAttribLFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC)glfwGetProcAddress("glVertexArrayVertexAttribLFormatEXT");
		ext_glVertexArrayVertexAttribBindingEXT = (PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC)glfwGetProcAddress("glVertexArrayVertexAttribBindingEXT");
		ext_glVertexArrayVertexBindingDivisorEXT = (PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC)glfwGetProcAddress("glVertexArrayVertexBindingDivisorEXT");
		ext_glFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC)glfwGetProcAddress("glFramebufferParameteri");
		ext_glGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)glfwGetProcAddress("glGetFramebufferParameteriv");
		ext_glNamedFramebufferParameteriEXT = (PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC)glfwGetProcAddress("glNamedFramebufferParameteriEXT");
		ext_glGetNamedFramebufferParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC)glfwGetProcAddress("glGetNamedFramebufferParameterivEXT");
		ext_glGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC)glfwGetProcAddress("glGetInternalformati64v");
		ext_glInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC)glfwGetProcAddress("glInvalidateTexSubImage");
		ext_glInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC)glfwGetProcAddress("glInvalidateTexImage");
		ext_glInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC)glfwGetProcAddress("glInvalidateBufferSubData");
		ext_glInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC)glfwGetProcAddress("glInvalidateBufferData");
		ext_glInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC)glfwGetProcAddress("glInvalidateFramebuffer");
		ext_glInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC)glfwGetProcAddress("glInvalidateSubFramebuffer");
		ext_glMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC)glfwGetProcAddress("glMultiDrawArraysIndirect");
		ext_glMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)glfwGetProcAddress("glMultiDrawElementsIndirect");
		ext_glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC)glfwGetProcAddress("glGetProgramInterfaceiv");
		ext_glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC)glfwGetProcAddress("glGetProgramResourceIndex");
		ext_glGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC)glfwGetProcAddress("glGetProgramResourceName");
		ext_glGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC)glfwGetProcAddress("glGetProgramResourceiv");
		ext_glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)glfwGetProcAddress("glGetProgramResourceLocation");
		ext_glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)glfwGetProcAddress("glGetProgramResourceLocationIndex");
		ext_glShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)glfwGetProcAddress("glShaderStorageBlockBinding");
		ext_glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)glfwGetProcAddress("glTexBufferRange");
		ext_glTextureBufferRangeEXT = (PFNGLTEXTUREBUFFERRANGEEXTPROC)glfwGetProcAddress("glTextureBufferRangeEXT");
		ext_glTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)glfwGetProcAddress("glTexStorage2DMultisample");
		ext_glTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)glfwGetProcAddress("glTexStorage3DMultisample");
		ext_glTextureStorage2DMultisampleEXT = (PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC)glfwGetProcAddress("glTextureStorage2DMultisampleEXT");
		ext_glTextureStorage3DMultisampleEXT = (PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC)glfwGetProcAddress("glTextureStorage3DMultisampleEXT");
		ext_glBlendColorEXT = (PFNGLBLENDCOLOREXTPROC)glfwGetProcAddress("glBlendColorEXT");
		ext_glPolygonOffsetEXT = (PFNGLPOLYGONOFFSETEXTPROC)glfwGetProcAddress("glPolygonOffsetEXT");
		ext_glTexImage3DEXT = (PFNGLTEXIMAGE3DEXTPROC)glfwGetProcAddress("glTexImage3DEXT");
		ext_glTexSubImage3DEXT = (PFNGLTEXSUBIMAGE3DEXTPROC)glfwGetProcAddress("glTexSubImage3DEXT");
		ext_glGetTexFilterFuncSGIS = (PFNGLGETTEXFILTERFUNCSGISPROC)glfwGetProcAddress("glGetTexFilterFuncSGIS");
		ext_glTexFilterFuncSGIS = (PFNGLTEXFILTERFUNCSGISPROC)glfwGetProcAddress("glTexFilterFuncSGIS");
		ext_glTexSubImage1DEXT = (PFNGLTEXSUBIMAGE1DEXTPROC)glfwGetProcAddress("glTexSubImage1DEXT");
		ext_glTexSubImage2DEXT = (PFNGLTEXSUBIMAGE2DEXTPROC)glfwGetProcAddress("glTexSubImage2DEXT");
		ext_glCopyTexImage1DEXT = (PFNGLCOPYTEXIMAGE1DEXTPROC)glfwGetProcAddress("glCopyTexImage1DEXT");
		ext_glCopyTexImage2DEXT = (PFNGLCOPYTEXIMAGE2DEXTPROC)glfwGetProcAddress("glCopyTexImage2DEXT");
		ext_glCopyTexSubImage1DEXT = (PFNGLCOPYTEXSUBIMAGE1DEXTPROC)glfwGetProcAddress("glCopyTexSubImage1DEXT");
		ext_glCopyTexSubImage2DEXT = (PFNGLCOPYTEXSUBIMAGE2DEXTPROC)glfwGetProcAddress("glCopyTexSubImage2DEXT");
		ext_glCopyTexSubImage3DEXT = (PFNGLCOPYTEXSUBIMAGE3DEXTPROC)glfwGetProcAddress("glCopyTexSubImage3DEXT");
		ext_glGetHistogramEXT = (PFNGLGETHISTOGRAMEXTPROC)glfwGetProcAddress("glGetHistogramEXT");
		ext_glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)glfwGetProcAddress("glGetHistogramParameterfvEXT");
		ext_glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)glfwGetProcAddress("glGetHistogramParameterivEXT");
		ext_glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC)glfwGetProcAddress("glGetMinmaxEXT");
		ext_glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC)glfwGetProcAddress("glGetMinmaxParameterfvEXT");
		ext_glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC)glfwGetProcAddress("glGetMinmaxParameterivEXT");
		ext_glHistogramEXT = (PFNGLHISTOGRAMEXTPROC)glfwGetProcAddress("glHistogramEXT");
		ext_glMinmaxEXT = (PFNGLMINMAXEXTPROC)glfwGetProcAddress("glMinmaxEXT");
		ext_glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC)glfwGetProcAddress("glResetHistogramEXT");
		ext_glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC)glfwGetProcAddress("glResetMinmaxEXT");
		ext_glConvolutionFilter1DEXT = (PFNGLCONVOLUTIONFILTER1DEXTPROC)glfwGetProcAddress("glConvolutionFilter1DEXT");
		ext_glConvolutionFilter2DEXT = (PFNGLCONVOLUTIONFILTER2DEXTPROC)glfwGetProcAddress("glConvolutionFilter2DEXT");
		ext_glConvolutionParameterfEXT = (PFNGLCONVOLUTIONPARAMETERFEXTPROC)glfwGetProcAddress("glConvolutionParameterfEXT");
		ext_glConvolutionParameterfvEXT = (PFNGLCONVOLUTIONPARAMETERFVEXTPROC)glfwGetProcAddress("glConvolutionParameterfvEXT");
		ext_glConvolutionParameteriEXT = (PFNGLCONVOLUTIONPARAMETERIEXTPROC)glfwGetProcAddress("glConvolutionParameteriEXT");
		ext_glConvolutionParameterivEXT = (PFNGLCONVOLUTIONPARAMETERIVEXTPROC)glfwGetProcAddress("glConvolutionParameterivEXT");
		ext_glCopyConvolutionFilter1DEXT = (PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)glfwGetProcAddress("glCopyConvolutionFilter1DEXT");
		ext_glCopyConvolutionFilter2DEXT = (PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)glfwGetProcAddress("glCopyConvolutionFilter2DEXT");
		ext_glGetConvolutionFilterEXT = (PFNGLGETCONVOLUTIONFILTEREXTPROC)glfwGetProcAddress("glGetConvolutionFilterEXT");
		ext_glGetConvolutionParameterfvEXT = (PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)glfwGetProcAddress("glGetConvolutionParameterfvEXT");
		ext_glGetConvolutionParameterivEXT = (PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)glfwGetProcAddress("glGetConvolutionParameterivEXT");
		ext_glGetSeparableFilterEXT = (PFNGLGETSEPARABLEFILTEREXTPROC)glfwGetProcAddress("glGetSeparableFilterEXT");
		ext_glSeparableFilter2DEXT = (PFNGLSEPARABLEFILTER2DEXTPROC)glfwGetProcAddress("glSeparableFilter2DEXT");
		ext_glColorTableSGI = (PFNGLCOLORTABLESGIPROC)glfwGetProcAddress("glColorTableSGI");
		ext_glColorTableParameterfvSGI = (PFNGLCOLORTABLEPARAMETERFVSGIPROC)glfwGetProcAddress("glColorTableParameterfvSGI");
		ext_glColorTableParameterivSGI = (PFNGLCOLORTABLEPARAMETERIVSGIPROC)glfwGetProcAddress("glColorTableParameterivSGI");
		ext_glCopyColorTableSGI = (PFNGLCOPYCOLORTABLESGIPROC)glfwGetProcAddress("glCopyColorTableSGI");
		ext_glGetColorTableSGI = (PFNGLGETCOLORTABLESGIPROC)glfwGetProcAddress("glGetColorTableSGI");
		ext_glGetColorTableParameterfvSGI = (PFNGLGETCOLORTABLEPARAMETERFVSGIPROC)glfwGetProcAddress("glGetColorTableParameterfvSGI");
		ext_glGetColorTableParameterivSGI = (PFNGLGETCOLORTABLEPARAMETERIVSGIPROC)glfwGetProcAddress("glGetColorTableParameterivSGI");
		ext_glPixelTexGenSGIX = (PFNGLPIXELTEXGENSGIXPROC)glfwGetProcAddress("glPixelTexGenSGIX");
		ext_glPixelTexGenParameteriSGIS = (PFNGLPIXELTEXGENPARAMETERISGISPROC)glfwGetProcAddress("glPixelTexGenParameteriSGIS");
		ext_glPixelTexGenParameterivSGIS = (PFNGLPIXELTEXGENPARAMETERIVSGISPROC)glfwGetProcAddress("glPixelTexGenParameterivSGIS");
		ext_glPixelTexGenParameterfSGIS = (PFNGLPIXELTEXGENPARAMETERFSGISPROC)glfwGetProcAddress("glPixelTexGenParameterfSGIS");
		ext_glPixelTexGenParameterfvSGIS = (PFNGLPIXELTEXGENPARAMETERFVSGISPROC)glfwGetProcAddress("glPixelTexGenParameterfvSGIS");
		ext_glGetPixelTexGenParameterivSGIS = (PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC)glfwGetProcAddress("glGetPixelTexGenParameterivSGIS");
		ext_glGetPixelTexGenParameterfvSGIS = (PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC)glfwGetProcAddress("glGetPixelTexGenParameterfvSGIS");
		ext_glTexImage4DSGIS = (PFNGLTEXIMAGE4DSGISPROC)glfwGetProcAddress("glTexImage4DSGIS");
		ext_glTexSubImage4DSGIS = (PFNGLTEXSUBIMAGE4DSGISPROC)glfwGetProcAddress("glTexSubImage4DSGIS");
		ext_glAreTexturesResidentEXT = (PFNGLARETEXTURESRESIDENTEXTPROC)glfwGetProcAddress("glAreTexturesResidentEXT");
		ext_glBindTextureEXT = (PFNGLBINDTEXTUREEXTPROC)glfwGetProcAddress("glBindTextureEXT");
		ext_glDeleteTexturesEXT = (PFNGLDELETETEXTURESEXTPROC)glfwGetProcAddress("glDeleteTexturesEXT");
		ext_glGenTexturesEXT = (PFNGLGENTEXTURESEXTPROC)glfwGetProcAddress("glGenTexturesEXT");
		ext_glIsTextureEXT = (PFNGLISTEXTUREEXTPROC)glfwGetProcAddress("glIsTextureEXT");
		ext_glPrioritizeTexturesEXT = (PFNGLPRIORITIZETEXTURESEXTPROC)glfwGetProcAddress("glPrioritizeTexturesEXT");
		ext_glDetailTexFuncSGIS = (PFNGLDETAILTEXFUNCSGISPROC)glfwGetProcAddress("glDetailTexFuncSGIS");
		ext_glGetDetailTexFuncSGIS = (PFNGLGETDETAILTEXFUNCSGISPROC)glfwGetProcAddress("glGetDetailTexFuncSGIS");
		ext_glSharpenTexFuncSGIS = (PFNGLSHARPENTEXFUNCSGISPROC)glfwGetProcAddress("glSharpenTexFuncSGIS");
		ext_glGetSharpenTexFuncSGIS = (PFNGLGETSHARPENTEXFUNCSGISPROC)glfwGetProcAddress("glGetSharpenTexFuncSGIS");
		ext_glSampleMaskSGIS = (PFNGLSAMPLEMASKSGISPROC)glfwGetProcAddress("glSampleMaskSGIS");
		ext_glSamplePatternSGIS = (PFNGLSAMPLEPATTERNSGISPROC)glfwGetProcAddress("glSamplePatternSGIS");
		ext_glArrayElementEXT = (PFNGLARRAYELEMENTEXTPROC)glfwGetProcAddress("glArrayElementEXT");
		ext_glColorPointerEXT = (PFNGLCOLORPOINTEREXTPROC)glfwGetProcAddress("glColorPointerEXT");
		ext_glDrawArraysEXT = (PFNGLDRAWARRAYSEXTPROC)glfwGetProcAddress("glDrawArraysEXT");
		ext_glEdgeFlagPointerEXT = (PFNGLEDGEFLAGPOINTEREXTPROC)glfwGetProcAddress("glEdgeFlagPointerEXT");
		ext_glIndexPointerEXT = (PFNGLINDEXPOINTEREXTPROC)glfwGetProcAddress("glIndexPointerEXT");
		ext_glNormalPointerEXT = (PFNGLNORMALPOINTEREXTPROC)glfwGetProcAddress("glNormalPointerEXT");
		ext_glTexCoordPointerEXT = (PFNGLTEXCOORDPOINTEREXTPROC)glfwGetProcAddress("glTexCoordPointerEXT");
		ext_glVertexPointerEXT = (PFNGLVERTEXPOINTEREXTPROC)glfwGetProcAddress("glVertexPointerEXT");
		ext_glBlendEquationEXT = (PFNGLBLENDEQUATIONEXTPROC)glfwGetProcAddress("glBlendEquationEXT");
		ext_glSpriteParameterfSGIX = (PFNGLSPRITEPARAMETERFSGIXPROC)glfwGetProcAddress("glSpriteParameterfSGIX");
		ext_glSpriteParameterfvSGIX = (PFNGLSPRITEPARAMETERFVSGIXPROC)glfwGetProcAddress("glSpriteParameterfvSGIX");
		ext_glSpriteParameteriSGIX = (PFNGLSPRITEPARAMETERISGIXPROC)glfwGetProcAddress("glSpriteParameteriSGIX");
		ext_glSpriteParameterivSGIX = (PFNGLSPRITEPARAMETERIVSGIXPROC)glfwGetProcAddress("glSpriteParameterivSGIX");
		ext_glPointParameterfEXT = (PFNGLPOINTPARAMETERFEXTPROC)glfwGetProcAddress("glPointParameterfEXT");
		ext_glPointParameterfvEXT = (PFNGLPOINTPARAMETERFVEXTPROC)glfwGetProcAddress("glPointParameterfvEXT");
		ext_glPointParameterfSGIS = (PFNGLPOINTPARAMETERFSGISPROC)glfwGetProcAddress("glPointParameterfSGIS");
		ext_glPointParameterfvSGIS = (PFNGLPOINTPARAMETERFVSGISPROC)glfwGetProcAddress("glPointParameterfvSGIS");
		ext_glGetInstrumentsSGIX = (PFNGLGETINSTRUMENTSSGIXPROC)glfwGetProcAddress("glGetInstrumentsSGIX");
		ext_glInstrumentsBufferSGIX = (PFNGLINSTRUMENTSBUFFERSGIXPROC)glfwGetProcAddress("glInstrumentsBufferSGIX");
		ext_glPollInstrumentsSGIX = (PFNGLPOLLINSTRUMENTSSGIXPROC)glfwGetProcAddress("glPollInstrumentsSGIX");
		ext_glReadInstrumentsSGIX = (PFNGLREADINSTRUMENTSSGIXPROC)glfwGetProcAddress("glReadInstrumentsSGIX");
		ext_glStartInstrumentsSGIX = (PFNGLSTARTINSTRUMENTSSGIXPROC)glfwGetProcAddress("glStartInstrumentsSGIX");
		ext_glStopInstrumentsSGIX = (PFNGLSTOPINSTRUMENTSSGIXPROC)glfwGetProcAddress("glStopInstrumentsSGIX");
		ext_glFrameZoomSGIX = (PFNGLFRAMEZOOMSGIXPROC)glfwGetProcAddress("glFrameZoomSGIX");
		ext_glTagSampleBufferSGIX = (PFNGLTAGSAMPLEBUFFERSGIXPROC)glfwGetProcAddress("glTagSampleBufferSGIX");
		ext_glDeformationMap3dSGIX = (PFNGLDEFORMATIONMAP3DSGIXPROC)glfwGetProcAddress("glDeformationMap3dSGIX");
		ext_glDeformationMap3fSGIX = (PFNGLDEFORMATIONMAP3FSGIXPROC)glfwGetProcAddress("glDeformationMap3fSGIX");
		ext_glDeformSGIX = (PFNGLDEFORMSGIXPROC)glfwGetProcAddress("glDeformSGIX");
		ext_glLoadIdentityDeformationMapSGIX = (PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC)glfwGetProcAddress("glLoadIdentityDeformationMapSGIX");
		ext_glReferencePlaneSGIX = (PFNGLREFERENCEPLANESGIXPROC)glfwGetProcAddress("glReferencePlaneSGIX");
		ext_glFlushRasterSGIX = (PFNGLFLUSHRASTERSGIXPROC)glfwGetProcAddress("glFlushRasterSGIX");
		ext_glFogFuncSGIS = (PFNGLFOGFUNCSGISPROC)glfwGetProcAddress("glFogFuncSGIS");
		ext_glGetFogFuncSGIS = (PFNGLGETFOGFUNCSGISPROC)glfwGetProcAddress("glGetFogFuncSGIS");
		ext_glImageTransformParameteriHP = (PFNGLIMAGETRANSFORMPARAMETERIHPPROC)glfwGetProcAddress("glImageTransformParameteriHP");
		ext_glImageTransformParameterfHP = (PFNGLIMAGETRANSFORMPARAMETERFHPPROC)glfwGetProcAddress("glImageTransformParameterfHP");
		ext_glImageTransformParameterivHP = (PFNGLIMAGETRANSFORMPARAMETERIVHPPROC)glfwGetProcAddress("glImageTransformParameterivHP");
		ext_glImageTransformParameterfvHP = (PFNGLIMAGETRANSFORMPARAMETERFVHPPROC)glfwGetProcAddress("glImageTransformParameterfvHP");
		ext_glGetImageTransformParameterivHP = (PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC)glfwGetProcAddress("glGetImageTransformParameterivHP");
		ext_glGetImageTransformParameterfvHP = (PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC)glfwGetProcAddress("glGetImageTransformParameterfvHP");
		ext_glColorSubTableEXT = (PFNGLCOLORSUBTABLEEXTPROC)glfwGetProcAddress("glColorSubTableEXT");
		ext_glCopyColorSubTableEXT = (PFNGLCOPYCOLORSUBTABLEEXTPROC)glfwGetProcAddress("glCopyColorSubTableEXT");
		ext_glHintPGI = (PFNGLHINTPGIPROC)glfwGetProcAddress("glHintPGI");
		ext_glColorTableEXT = (PFNGLCOLORTABLEEXTPROC)glfwGetProcAddress("glColorTableEXT");
		ext_glGetColorTableEXT = (PFNGLGETCOLORTABLEEXTPROC)glfwGetProcAddress("glGetColorTableEXT");
		ext_glGetColorTableParameterivEXT = (PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)glfwGetProcAddress("glGetColorTableParameterivEXT");
		ext_glGetColorTableParameterfvEXT = (PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)glfwGetProcAddress("glGetColorTableParameterfvEXT");
		ext_glGetListParameterfvSGIX = (PFNGLGETLISTPARAMETERFVSGIXPROC)glfwGetProcAddress("glGetListParameterfvSGIX");
		ext_glGetListParameterivSGIX = (PFNGLGETLISTPARAMETERIVSGIXPROC)glfwGetProcAddress("glGetListParameterivSGIX");
		ext_glListParameterfSGIX = (PFNGLLISTPARAMETERFSGIXPROC)glfwGetProcAddress("glListParameterfSGIX");
		ext_glListParameterfvSGIX = (PFNGLLISTPARAMETERFVSGIXPROC)glfwGetProcAddress("glListParameterfvSGIX");
		ext_glListParameteriSGIX = (PFNGLLISTPARAMETERISGIXPROC)glfwGetProcAddress("glListParameteriSGIX");
		ext_glListParameterivSGIX = (PFNGLLISTPARAMETERIVSGIXPROC)glfwGetProcAddress("glListParameterivSGIX");
		ext_glIndexMaterialEXT = (PFNGLINDEXMATERIALEXTPROC)glfwGetProcAddress("glIndexMaterialEXT");
		ext_glIndexFuncEXT = (PFNGLINDEXFUNCEXTPROC)glfwGetProcAddress("glIndexFuncEXT");
		ext_glLockArraysEXT = (PFNGLLOCKARRAYSEXTPROC)glfwGetProcAddress("glLockArraysEXT");
		ext_glUnlockArraysEXT = (PFNGLUNLOCKARRAYSEXTPROC)glfwGetProcAddress("glUnlockArraysEXT");
		ext_glCullParameterdvEXT = (PFNGLCULLPARAMETERDVEXTPROC)glfwGetProcAddress("glCullParameterdvEXT");
		ext_glCullParameterfvEXT = (PFNGLCULLPARAMETERFVEXTPROC)glfwGetProcAddress("glCullParameterfvEXT");
		ext_glFragmentColorMaterialSGIX = (PFNGLFRAGMENTCOLORMATERIALSGIXPROC)glfwGetProcAddress("glFragmentColorMaterialSGIX");
		ext_glFragmentLightfSGIX = (PFNGLFRAGMENTLIGHTFSGIXPROC)glfwGetProcAddress("glFragmentLightfSGIX");
		ext_glFragmentLightfvSGIX = (PFNGLFRAGMENTLIGHTFVSGIXPROC)glfwGetProcAddress("glFragmentLightfvSGIX");
		ext_glFragmentLightiSGIX = (PFNGLFRAGMENTLIGHTISGIXPROC)glfwGetProcAddress("glFragmentLightiSGIX");
		ext_glFragmentLightivSGIX = (PFNGLFRAGMENTLIGHTIVSGIXPROC)glfwGetProcAddress("glFragmentLightivSGIX");
		ext_glFragmentLightModelfSGIX = (PFNGLFRAGMENTLIGHTMODELFSGIXPROC)glfwGetProcAddress("glFragmentLightModelfSGIX");
		ext_glFragmentLightModelfvSGIX = (PFNGLFRAGMENTLIGHTMODELFVSGIXPROC)glfwGetProcAddress("glFragmentLightModelfvSGIX");
		ext_glFragmentLightModeliSGIX = (PFNGLFRAGMENTLIGHTMODELISGIXPROC)glfwGetProcAddress("glFragmentLightModeliSGIX");
		ext_glFragmentLightModelivSGIX = (PFNGLFRAGMENTLIGHTMODELIVSGIXPROC)glfwGetProcAddress("glFragmentLightModelivSGIX");
		ext_glFragmentMaterialfSGIX = (PFNGLFRAGMENTMATERIALFSGIXPROC)glfwGetProcAddress("glFragmentMaterialfSGIX");
		ext_glFragmentMaterialfvSGIX = (PFNGLFRAGMENTMATERIALFVSGIXPROC)glfwGetProcAddress("glFragmentMaterialfvSGIX");
		ext_glFragmentMaterialiSGIX = (PFNGLFRAGMENTMATERIALISGIXPROC)glfwGetProcAddress("glFragmentMaterialiSGIX");
		ext_glFragmentMaterialivSGIX = (PFNGLFRAGMENTMATERIALIVSGIXPROC)glfwGetProcAddress("glFragmentMaterialivSGIX");
		ext_glGetFragmentLightfvSGIX = (PFNGLGETFRAGMENTLIGHTFVSGIXPROC)glfwGetProcAddress("glGetFragmentLightfvSGIX");
		ext_glGetFragmentLightivSGIX = (PFNGLGETFRAGMENTLIGHTIVSGIXPROC)glfwGetProcAddress("glGetFragmentLightivSGIX");
		ext_glGetFragmentMaterialfvSGIX = (PFNGLGETFRAGMENTMATERIALFVSGIXPROC)glfwGetProcAddress("glGetFragmentMaterialfvSGIX");
		ext_glGetFragmentMaterialivSGIX = (PFNGLGETFRAGMENTMATERIALIVSGIXPROC)glfwGetProcAddress("glGetFragmentMaterialivSGIX");
		ext_glLightEnviSGIX = (PFNGLLIGHTENVISGIXPROC)glfwGetProcAddress("glLightEnviSGIX");
		ext_glDrawRangeElementsEXT = (PFNGLDRAWRANGEELEMENTSEXTPROC)glfwGetProcAddress("glDrawRangeElementsEXT");
		ext_glApplyTextureEXT = (PFNGLAPPLYTEXTUREEXTPROC)glfwGetProcAddress("glApplyTextureEXT");
		ext_glTextureLightEXT = (PFNGLTEXTURELIGHTEXTPROC)glfwGetProcAddress("glTextureLightEXT");
		ext_glTextureMaterialEXT = (PFNGLTEXTUREMATERIALEXTPROC)glfwGetProcAddress("glTextureMaterialEXT");
		ext_glAsyncMarkerSGIX = (PFNGLASYNCMARKERSGIXPROC)glfwGetProcAddress("glAsyncMarkerSGIX");
		ext_glFinishAsyncSGIX = (PFNGLFINISHASYNCSGIXPROC)glfwGetProcAddress("glFinishAsyncSGIX");
		ext_glPollAsyncSGIX = (PFNGLPOLLASYNCSGIXPROC)glfwGetProcAddress("glPollAsyncSGIX");
		ext_glGenAsyncMarkersSGIX = (PFNGLGENASYNCMARKERSSGIXPROC)glfwGetProcAddress("glGenAsyncMarkersSGIX");
		ext_glDeleteAsyncMarkersSGIX = (PFNGLDELETEASYNCMARKERSSGIXPROC)glfwGetProcAddress("glDeleteAsyncMarkersSGIX");
		ext_glIsAsyncMarkerSGIX = (PFNGLISASYNCMARKERSGIXPROC)glfwGetProcAddress("glIsAsyncMarkerSGIX");
		ext_glVertexPointervINTEL = (PFNGLVERTEXPOINTERVINTELPROC)glfwGetProcAddress("glVertexPointervINTEL");
		ext_glNormalPointervINTEL = (PFNGLNORMALPOINTERVINTELPROC)glfwGetProcAddress("glNormalPointervINTEL");
		ext_glColorPointervINTEL = (PFNGLCOLORPOINTERVINTELPROC)glfwGetProcAddress("glColorPointervINTEL");
		ext_glTexCoordPointervINTEL = (PFNGLTEXCOORDPOINTERVINTELPROC)glfwGetProcAddress("glTexCoordPointervINTEL");
		ext_glPixelTransformParameteriEXT = (PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)glfwGetProcAddress("glPixelTransformParameteriEXT");
		ext_glPixelTransformParameterfEXT = (PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)glfwGetProcAddress("glPixelTransformParameterfEXT");
		ext_glPixelTransformParameterivEXT = (PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)glfwGetProcAddress("glPixelTransformParameterivEXT");
		ext_glPixelTransformParameterfvEXT = (PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)glfwGetProcAddress("glPixelTransformParameterfvEXT");
		ext_glGetPixelTransformParameterivEXT = (PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC)glfwGetProcAddress("glGetPixelTransformParameterivEXT");
		ext_glGetPixelTransformParameterfvEXT = (PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC)glfwGetProcAddress("glGetPixelTransformParameterfvEXT");
		ext_glSecondaryColor3bEXT = (PFNGLSECONDARYCOLOR3BEXTPROC)glfwGetProcAddress("glSecondaryColor3bEXT");
		ext_glSecondaryColor3bvEXT = (PFNGLSECONDARYCOLOR3BVEXTPROC)glfwGetProcAddress("glSecondaryColor3bvEXT");
		ext_glSecondaryColor3dEXT = (PFNGLSECONDARYCOLOR3DEXTPROC)glfwGetProcAddress("glSecondaryColor3dEXT");
		ext_glSecondaryColor3dvEXT = (PFNGLSECONDARYCOLOR3DVEXTPROC)glfwGetProcAddress("glSecondaryColor3dvEXT");
		ext_glSecondaryColor3fEXT = (PFNGLSECONDARYCOLOR3FEXTPROC)glfwGetProcAddress("glSecondaryColor3fEXT");
		ext_glSecondaryColor3fvEXT = (PFNGLSECONDARYCOLOR3FVEXTPROC)glfwGetProcAddress("glSecondaryColor3fvEXT");
		ext_glSecondaryColor3iEXT = (PFNGLSECONDARYCOLOR3IEXTPROC)glfwGetProcAddress("glSecondaryColor3iEXT");
		ext_glSecondaryColor3ivEXT = (PFNGLSECONDARYCOLOR3IVEXTPROC)glfwGetProcAddress("glSecondaryColor3ivEXT");
		ext_glSecondaryColor3sEXT = (PFNGLSECONDARYCOLOR3SEXTPROC)glfwGetProcAddress("glSecondaryColor3sEXT");
		ext_glSecondaryColor3svEXT = (PFNGLSECONDARYCOLOR3SVEXTPROC)glfwGetProcAddress("glSecondaryColor3svEXT");
		ext_glSecondaryColor3ubEXT = (PFNGLSECONDARYCOLOR3UBEXTPROC)glfwGetProcAddress("glSecondaryColor3ubEXT");
		ext_glSecondaryColor3ubvEXT = (PFNGLSECONDARYCOLOR3UBVEXTPROC)glfwGetProcAddress("glSecondaryColor3ubvEXT");
		ext_glSecondaryColor3uiEXT = (PFNGLSECONDARYCOLOR3UIEXTPROC)glfwGetProcAddress("glSecondaryColor3uiEXT");
		ext_glSecondaryColor3uivEXT = (PFNGLSECONDARYCOLOR3UIVEXTPROC)glfwGetProcAddress("glSecondaryColor3uivEXT");
		ext_glSecondaryColor3usEXT = (PFNGLSECONDARYCOLOR3USEXTPROC)glfwGetProcAddress("glSecondaryColor3usEXT");
		ext_glSecondaryColor3usvEXT = (PFNGLSECONDARYCOLOR3USVEXTPROC)glfwGetProcAddress("glSecondaryColor3usvEXT");
		ext_glSecondaryColorPointerEXT = (PFNGLSECONDARYCOLORPOINTEREXTPROC)glfwGetProcAddress("glSecondaryColorPointerEXT");
		ext_glTextureNormalEXT = (PFNGLTEXTURENORMALEXTPROC)glfwGetProcAddress("glTextureNormalEXT");
		ext_glMultiDrawArraysEXT = (PFNGLMULTIDRAWARRAYSEXTPROC)glfwGetProcAddress("glMultiDrawArraysEXT");
		ext_glMultiDrawElementsEXT = (PFNGLMULTIDRAWELEMENTSEXTPROC)glfwGetProcAddress("glMultiDrawElementsEXT");
		ext_glFogCoordfEXT = (PFNGLFOGCOORDFEXTPROC)glfwGetProcAddress("glFogCoordfEXT");
		ext_glFogCoordfvEXT = (PFNGLFOGCOORDFVEXTPROC)glfwGetProcAddress("glFogCoordfvEXT");
		ext_glFogCoorddEXT = (PFNGLFOGCOORDDEXTPROC)glfwGetProcAddress("glFogCoorddEXT");
		ext_glFogCoorddvEXT = (PFNGLFOGCOORDDVEXTPROC)glfwGetProcAddress("glFogCoorddvEXT");
		ext_glFogCoordPointerEXT = (PFNGLFOGCOORDPOINTEREXTPROC)glfwGetProcAddress("glFogCoordPointerEXT");
		ext_glTangent3bEXT = (PFNGLTANGENT3BEXTPROC)glfwGetProcAddress("glTangent3bEXT");
		ext_glTangent3bvEXT = (PFNGLTANGENT3BVEXTPROC)glfwGetProcAddress("glTangent3bvEXT");
		ext_glTangent3dEXT = (PFNGLTANGENT3DEXTPROC)glfwGetProcAddress("glTangent3dEXT");
		ext_glTangent3dvEXT = (PFNGLTANGENT3DVEXTPROC)glfwGetProcAddress("glTangent3dvEXT");
		ext_glTangent3fEXT = (PFNGLTANGENT3FEXTPROC)glfwGetProcAddress("glTangent3fEXT");
		ext_glTangent3fvEXT = (PFNGLTANGENT3FVEXTPROC)glfwGetProcAddress("glTangent3fvEXT");
		ext_glTangent3iEXT = (PFNGLTANGENT3IEXTPROC)glfwGetProcAddress("glTangent3iEXT");
		ext_glTangent3ivEXT = (PFNGLTANGENT3IVEXTPROC)glfwGetProcAddress("glTangent3ivEXT");
		ext_glTangent3sEXT = (PFNGLTANGENT3SEXTPROC)glfwGetProcAddress("glTangent3sEXT");
		ext_glTangent3svEXT = (PFNGLTANGENT3SVEXTPROC)glfwGetProcAddress("glTangent3svEXT");
		ext_glBinormal3bEXT = (PFNGLBINORMAL3BEXTPROC)glfwGetProcAddress("glBinormal3bEXT");
		ext_glBinormal3bvEXT = (PFNGLBINORMAL3BVEXTPROC)glfwGetProcAddress("glBinormal3bvEXT");
		ext_glBinormal3dEXT = (PFNGLBINORMAL3DEXTPROC)glfwGetProcAddress("glBinormal3dEXT");
		ext_glBinormal3dvEXT = (PFNGLBINORMAL3DVEXTPROC)glfwGetProcAddress("glBinormal3dvEXT");
		ext_glBinormal3fEXT = (PFNGLBINORMAL3FEXTPROC)glfwGetProcAddress("glBinormal3fEXT");
		ext_glBinormal3fvEXT = (PFNGLBINORMAL3FVEXTPROC)glfwGetProcAddress("glBinormal3fvEXT");
		ext_glBinormal3iEXT = (PFNGLBINORMAL3IEXTPROC)glfwGetProcAddress("glBinormal3iEXT");
		ext_glBinormal3ivEXT = (PFNGLBINORMAL3IVEXTPROC)glfwGetProcAddress("glBinormal3ivEXT");
		ext_glBinormal3sEXT = (PFNGLBINORMAL3SEXTPROC)glfwGetProcAddress("glBinormal3sEXT");
		ext_glBinormal3svEXT = (PFNGLBINORMAL3SVEXTPROC)glfwGetProcAddress("glBinormal3svEXT");
		ext_glTangentPointerEXT = (PFNGLTANGENTPOINTEREXTPROC)glfwGetProcAddress("glTangentPointerEXT");
		ext_glBinormalPointerEXT = (PFNGLBINORMALPOINTEREXTPROC)glfwGetProcAddress("glBinormalPointerEXT");
		ext_glFinishTextureSUNX = (PFNGLFINISHTEXTURESUNXPROC)glfwGetProcAddress("glFinishTextureSUNX");
		ext_glGlobalAlphaFactorbSUN = (PFNGLGLOBALALPHAFACTORBSUNPROC)glfwGetProcAddress("glGlobalAlphaFactorbSUN");
		ext_glGlobalAlphaFactorsSUN = (PFNGLGLOBALALPHAFACTORSSUNPROC)glfwGetProcAddress("glGlobalAlphaFactorsSUN");
		ext_glGlobalAlphaFactoriSUN = (PFNGLGLOBALALPHAFACTORISUNPROC)glfwGetProcAddress("glGlobalAlphaFactoriSUN");
		ext_glGlobalAlphaFactorfSUN = (PFNGLGLOBALALPHAFACTORFSUNPROC)glfwGetProcAddress("glGlobalAlphaFactorfSUN");
		ext_glGlobalAlphaFactordSUN = (PFNGLGLOBALALPHAFACTORDSUNPROC)glfwGetProcAddress("glGlobalAlphaFactordSUN");
		ext_glGlobalAlphaFactorubSUN = (PFNGLGLOBALALPHAFACTORUBSUNPROC)glfwGetProcAddress("glGlobalAlphaFactorubSUN");
		ext_glGlobalAlphaFactorusSUN = (PFNGLGLOBALALPHAFACTORUSSUNPROC)glfwGetProcAddress("glGlobalAlphaFactorusSUN");
		ext_glGlobalAlphaFactoruiSUN = (PFNGLGLOBALALPHAFACTORUISUNPROC)glfwGetProcAddress("glGlobalAlphaFactoruiSUN");
		ext_glReplacementCodeuiSUN = (PFNGLREPLACEMENTCODEUISUNPROC)glfwGetProcAddress("glReplacementCodeuiSUN");
		ext_glReplacementCodeusSUN = (PFNGLREPLACEMENTCODEUSSUNPROC)glfwGetProcAddress("glReplacementCodeusSUN");
		ext_glReplacementCodeubSUN = (PFNGLREPLACEMENTCODEUBSUNPROC)glfwGetProcAddress("glReplacementCodeubSUN");
		ext_glReplacementCodeuivSUN = (PFNGLREPLACEMENTCODEUIVSUNPROC)glfwGetProcAddress("glReplacementCodeuivSUN");
		ext_glReplacementCodeusvSUN = (PFNGLREPLACEMENTCODEUSVSUNPROC)glfwGetProcAddress("glReplacementCodeusvSUN");
		ext_glReplacementCodeubvSUN = (PFNGLREPLACEMENTCODEUBVSUNPROC)glfwGetProcAddress("glReplacementCodeubvSUN");
		ext_glReplacementCodePointerSUN = (PFNGLREPLACEMENTCODEPOINTERSUNPROC)glfwGetProcAddress("glReplacementCodePointerSUN");
		ext_glColor4ubVertex2fSUN = (PFNGLCOLOR4UBVERTEX2FSUNPROC)glfwGetProcAddress("glColor4ubVertex2fSUN");
		ext_glColor4ubVertex2fvSUN = (PFNGLCOLOR4UBVERTEX2FVSUNPROC)glfwGetProcAddress("glColor4ubVertex2fvSUN");
		ext_glColor4ubVertex3fSUN = (PFNGLCOLOR4UBVERTEX3FSUNPROC)glfwGetProcAddress("glColor4ubVertex3fSUN");
		ext_glColor4ubVertex3fvSUN = (PFNGLCOLOR4UBVERTEX3FVSUNPROC)glfwGetProcAddress("glColor4ubVertex3fvSUN");
		ext_glColor3fVertex3fSUN = (PFNGLCOLOR3FVERTEX3FSUNPROC)glfwGetProcAddress("glColor3fVertex3fSUN");
		ext_glColor3fVertex3fvSUN = (PFNGLCOLOR3FVERTEX3FVSUNPROC)glfwGetProcAddress("glColor3fVertex3fvSUN");
		ext_glNormal3fVertex3fSUN = (PFNGLNORMAL3FVERTEX3FSUNPROC)glfwGetProcAddress("glNormal3fVertex3fSUN");
		ext_glNormal3fVertex3fvSUN = (PFNGLNORMAL3FVERTEX3FVSUNPROC)glfwGetProcAddress("glNormal3fVertex3fvSUN");
		ext_glColor4fNormal3fVertex3fSUN = (PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC)glfwGetProcAddress("glColor4fNormal3fVertex3fSUN");
		ext_glColor4fNormal3fVertex3fvSUN = (PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC)glfwGetProcAddress("glColor4fNormal3fVertex3fvSUN");
		ext_glTexCoord2fVertex3fSUN = (PFNGLTEXCOORD2FVERTEX3FSUNPROC)glfwGetProcAddress("glTexCoord2fVertex3fSUN");
		ext_glTexCoord2fVertex3fvSUN = (PFNGLTEXCOORD2FVERTEX3FVSUNPROC)glfwGetProcAddress("glTexCoord2fVertex3fvSUN");
		ext_glTexCoord4fVertex4fSUN = (PFNGLTEXCOORD4FVERTEX4FSUNPROC)glfwGetProcAddress("glTexCoord4fVertex4fSUN");
		ext_glTexCoord4fVertex4fvSUN = (PFNGLTEXCOORD4FVERTEX4FVSUNPROC)glfwGetProcAddress("glTexCoord4fVertex4fvSUN");
		ext_glTexCoord2fColor4ubVertex3fSUN = (PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC)glfwGetProcAddress("glTexCoord2fColor4ubVertex3fSUN");
		ext_glTexCoord2fColor4ubVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC)glfwGetProcAddress("glTexCoord2fColor4ubVertex3fvSUN");
		ext_glTexCoord2fColor3fVertex3fSUN = (PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC)glfwGetProcAddress("glTexCoord2fColor3fVertex3fSUN");
		ext_glTexCoord2fColor3fVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC)glfwGetProcAddress("glTexCoord2fColor3fVertex3fvSUN");
		ext_glTexCoord2fNormal3fVertex3fSUN = (PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC)glfwGetProcAddress("glTexCoord2fNormal3fVertex3fSUN");
		ext_glTexCoord2fNormal3fVertex3fvSUN = (PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)glfwGetProcAddress("glTexCoord2fNormal3fVertex3fvSUN");
		ext_glTexCoord2fColor4fNormal3fVertex3fSUN = (PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)glfwGetProcAddress("glTexCoord2fColor4fNormal3fVertex3fSUN");
		ext_glTexCoord2fColor4fNormal3fVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)glfwGetProcAddress("glTexCoord2fColor4fNormal3fVertex3fvSUN");
		ext_glTexCoord4fColor4fNormal3fVertex4fSUN = (PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC)glfwGetProcAddress("glTexCoord4fColor4fNormal3fVertex4fSUN");
		ext_glTexCoord4fColor4fNormal3fVertex4fvSUN = (PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC)glfwGetProcAddress("glTexCoord4fColor4fNormal3fVertex4fvSUN");
		ext_glReplacementCodeuiVertex3fSUN = (PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC)glfwGetProcAddress("glReplacementCodeuiVertex3fSUN");
		ext_glReplacementCodeuiVertex3fvSUN = (PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC)glfwGetProcAddress("glReplacementCodeuiVertex3fvSUN");
		ext_glReplacementCodeuiColor4ubVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC)glfwGetProcAddress("glReplacementCodeuiColor4ubVertex3fSUN");
		ext_glReplacementCodeuiColor4ubVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC)glfwGetProcAddress("glReplacementCodeuiColor4ubVertex3fvSUN");
		ext_glReplacementCodeuiColor3fVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC)glfwGetProcAddress("glReplacementCodeuiColor3fVertex3fSUN");
		ext_glReplacementCodeuiColor3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC)glfwGetProcAddress("glReplacementCodeuiColor3fVertex3fvSUN");
		ext_glReplacementCodeuiNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC)glfwGetProcAddress("glReplacementCodeuiNormal3fVertex3fSUN");
		ext_glReplacementCodeuiNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC)glfwGetProcAddress("glReplacementCodeuiNormal3fVertex3fvSUN");
		ext_glReplacementCodeuiColor4fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC)glfwGetProcAddress("glReplacementCodeuiColor4fNormal3fVertex3fSUN");
		ext_glReplacementCodeuiColor4fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC)glfwGetProcAddress("glReplacementCodeuiColor4fNormal3fVertex3fvSUN");
		ext_glReplacementCodeuiTexCoord2fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC)glfwGetProcAddress("glReplacementCodeuiTexCoord2fVertex3fSUN");
		ext_glReplacementCodeuiTexCoord2fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC)glfwGetProcAddress("glReplacementCodeuiTexCoord2fVertex3fvSUN");
		ext_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC)glfwGetProcAddress("glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN");
		ext_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)glfwGetProcAddress("glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN");
		ext_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)glfwGetProcAddress("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN");
		ext_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)glfwGetProcAddress("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN");
		ext_glBlendFuncSeparateEXT = (PFNGLBLENDFUNCSEPARATEEXTPROC)glfwGetProcAddress("glBlendFuncSeparateEXT");
		ext_glBlendFuncSeparateINGR = (PFNGLBLENDFUNCSEPARATEINGRPROC)glfwGetProcAddress("glBlendFuncSeparateINGR");
		ext_glVertexWeightfEXT = (PFNGLVERTEXWEIGHTFEXTPROC)glfwGetProcAddress("glVertexWeightfEXT");
		ext_glVertexWeightfvEXT = (PFNGLVERTEXWEIGHTFVEXTPROC)glfwGetProcAddress("glVertexWeightfvEXT");
		ext_glVertexWeightPointerEXT = (PFNGLVERTEXWEIGHTPOINTEREXTPROC)glfwGetProcAddress("glVertexWeightPointerEXT");
		ext_glFlushVertexArrayRangeNV = (PFNGLFLUSHVERTEXARRAYRANGENVPROC)glfwGetProcAddress("glFlushVertexArrayRangeNV");
		ext_glVertexArrayRangeNV = (PFNGLVERTEXARRAYRANGENVPROC)glfwGetProcAddress("glVertexArrayRangeNV");
		ext_glCombinerParameterfvNV = (PFNGLCOMBINERPARAMETERFVNVPROC)glfwGetProcAddress("glCombinerParameterfvNV");
		ext_glCombinerParameterfNV = (PFNGLCOMBINERPARAMETERFNVPROC)glfwGetProcAddress("glCombinerParameterfNV");
		ext_glCombinerParameterivNV = (PFNGLCOMBINERPARAMETERIVNVPROC)glfwGetProcAddress("glCombinerParameterivNV");
		ext_glCombinerParameteriNV = (PFNGLCOMBINERPARAMETERINVPROC)glfwGetProcAddress("glCombinerParameteriNV");
		ext_glCombinerInputNV = (PFNGLCOMBINERINPUTNVPROC)glfwGetProcAddress("glCombinerInputNV");
		ext_glCombinerOutputNV = (PFNGLCOMBINEROUTPUTNVPROC)glfwGetProcAddress("glCombinerOutputNV");
		ext_glFinalCombinerInputNV = (PFNGLFINALCOMBINERINPUTNVPROC)glfwGetProcAddress("glFinalCombinerInputNV");
		ext_glGetCombinerInputParameterfvNV = (PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC)glfwGetProcAddress("glGetCombinerInputParameterfvNV");
		ext_glGetCombinerInputParameterivNV = (PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC)glfwGetProcAddress("glGetCombinerInputParameterivNV");
		ext_glGetCombinerOutputParameterfvNV = (PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC)glfwGetProcAddress("glGetCombinerOutputParameterfvNV");
		ext_glGetCombinerOutputParameterivNV = (PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC)glfwGetProcAddress("glGetCombinerOutputParameterivNV");
		ext_glGetFinalCombinerInputParameterfvNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC)glfwGetProcAddress("glGetFinalCombinerInputParameterfvNV");
		ext_glGetFinalCombinerInputParameterivNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC)glfwGetProcAddress("glGetFinalCombinerInputParameterivNV");
		ext_glResizeBuffersMESA = (PFNGLRESIZEBUFFERSMESAPROC)glfwGetProcAddress("glResizeBuffersMESA");
		ext_glWindowPos2dMESA = (PFNGLWINDOWPOS2DMESAPROC)glfwGetProcAddress("glWindowPos2dMESA");
		ext_glWindowPos2dvMESA = (PFNGLWINDOWPOS2DVMESAPROC)glfwGetProcAddress("glWindowPos2dvMESA");
		ext_glWindowPos2fMESA = (PFNGLWINDOWPOS2FMESAPROC)glfwGetProcAddress("glWindowPos2fMESA");
		ext_glWindowPos2fvMESA = (PFNGLWINDOWPOS2FVMESAPROC)glfwGetProcAddress("glWindowPos2fvMESA");
		ext_glWindowPos2iMESA = (PFNGLWINDOWPOS2IMESAPROC)glfwGetProcAddress("glWindowPos2iMESA");
		ext_glWindowPos2ivMESA = (PFNGLWINDOWPOS2IVMESAPROC)glfwGetProcAddress("glWindowPos2ivMESA");
		ext_glWindowPos2sMESA = (PFNGLWINDOWPOS2SMESAPROC)glfwGetProcAddress("glWindowPos2sMESA");
		ext_glWindowPos2svMESA = (PFNGLWINDOWPOS2SVMESAPROC)glfwGetProcAddress("glWindowPos2svMESA");
		ext_glWindowPos3dMESA = (PFNGLWINDOWPOS3DMESAPROC)glfwGetProcAddress("glWindowPos3dMESA");
		ext_glWindowPos3dvMESA = (PFNGLWINDOWPOS3DVMESAPROC)glfwGetProcAddress("glWindowPos3dvMESA");
		ext_glWindowPos3fMESA = (PFNGLWINDOWPOS3FMESAPROC)glfwGetProcAddress("glWindowPos3fMESA");
		ext_glWindowPos3fvMESA = (PFNGLWINDOWPOS3FVMESAPROC)glfwGetProcAddress("glWindowPos3fvMESA");
		ext_glWindowPos3iMESA = (PFNGLWINDOWPOS3IMESAPROC)glfwGetProcAddress("glWindowPos3iMESA");
		ext_glWindowPos3ivMESA = (PFNGLWINDOWPOS3IVMESAPROC)glfwGetProcAddress("glWindowPos3ivMESA");
		ext_glWindowPos3sMESA = (PFNGLWINDOWPOS3SMESAPROC)glfwGetProcAddress("glWindowPos3sMESA");
		ext_glWindowPos3svMESA = (PFNGLWINDOWPOS3SVMESAPROC)glfwGetProcAddress("glWindowPos3svMESA");
		ext_glWindowPos4dMESA = (PFNGLWINDOWPOS4DMESAPROC)glfwGetProcAddress("glWindowPos4dMESA");
		ext_glWindowPos4dvMESA = (PFNGLWINDOWPOS4DVMESAPROC)glfwGetProcAddress("glWindowPos4dvMESA");
		ext_glWindowPos4fMESA = (PFNGLWINDOWPOS4FMESAPROC)glfwGetProcAddress("glWindowPos4fMESA");
		ext_glWindowPos4fvMESA = (PFNGLWINDOWPOS4FVMESAPROC)glfwGetProcAddress("glWindowPos4fvMESA");
		ext_glWindowPos4iMESA = (PFNGLWINDOWPOS4IMESAPROC)glfwGetProcAddress("glWindowPos4iMESA");
		ext_glWindowPos4ivMESA = (PFNGLWINDOWPOS4IVMESAPROC)glfwGetProcAddress("glWindowPos4ivMESA");
		ext_glWindowPos4sMESA = (PFNGLWINDOWPOS4SMESAPROC)glfwGetProcAddress("glWindowPos4sMESA");
		ext_glWindowPos4svMESA = (PFNGLWINDOWPOS4SVMESAPROC)glfwGetProcAddress("glWindowPos4svMESA");
		ext_glMultiModeDrawArraysIBM = (PFNGLMULTIMODEDRAWARRAYSIBMPROC)glfwGetProcAddress("glMultiModeDrawArraysIBM");
		ext_glMultiModeDrawElementsIBM = (PFNGLMULTIMODEDRAWELEMENTSIBMPROC)glfwGetProcAddress("glMultiModeDrawElementsIBM");
		ext_glColorPointerListIBM = (PFNGLCOLORPOINTERLISTIBMPROC)glfwGetProcAddress("glColorPointerListIBM");
		ext_glSecondaryColorPointerListIBM = (PFNGLSECONDARYCOLORPOINTERLISTIBMPROC)glfwGetProcAddress("glSecondaryColorPointerListIBM");
		ext_glEdgeFlagPointerListIBM = (PFNGLEDGEFLAGPOINTERLISTIBMPROC)glfwGetProcAddress("glEdgeFlagPointerListIBM");
		ext_glFogCoordPointerListIBM = (PFNGLFOGCOORDPOINTERLISTIBMPROC)glfwGetProcAddress("glFogCoordPointerListIBM");
		ext_glIndexPointerListIBM = (PFNGLINDEXPOINTERLISTIBMPROC)glfwGetProcAddress("glIndexPointerListIBM");
		ext_glNormalPointerListIBM = (PFNGLNORMALPOINTERLISTIBMPROC)glfwGetProcAddress("glNormalPointerListIBM");
		ext_glTexCoordPointerListIBM = (PFNGLTEXCOORDPOINTERLISTIBMPROC)glfwGetProcAddress("glTexCoordPointerListIBM");
		ext_glVertexPointerListIBM = (PFNGLVERTEXPOINTERLISTIBMPROC)glfwGetProcAddress("glVertexPointerListIBM");
		ext_glTbufferMask3DFX = (PFNGLTBUFFERMASK3DFXPROC)glfwGetProcAddress("glTbufferMask3DFX");
		ext_glSampleMaskEXT = (PFNGLSAMPLEMASKEXTPROC)glfwGetProcAddress("glSampleMaskEXT");
		ext_glSamplePatternEXT = (PFNGLSAMPLEPATTERNEXTPROC)glfwGetProcAddress("glSamplePatternEXT");
		ext_glTextureColorMaskSGIS = (PFNGLTEXTURECOLORMASKSGISPROC)glfwGetProcAddress("glTextureColorMaskSGIS");
		ext_glIglooInterfaceSGIX = (PFNGLIGLOOINTERFACESGIXPROC)glfwGetProcAddress("glIglooInterfaceSGIX");
		ext_glDeleteFencesNV = (PFNGLDELETEFENCESNVPROC)glfwGetProcAddress("glDeleteFencesNV");
		ext_glGenFencesNV = (PFNGLGENFENCESNVPROC)glfwGetProcAddress("glGenFencesNV");
		ext_glIsFenceNV = (PFNGLISFENCENVPROC)glfwGetProcAddress("glIsFenceNV");
		ext_glTestFenceNV = (PFNGLTESTFENCENVPROC)glfwGetProcAddress("glTestFenceNV");
		ext_glGetFenceivNV = (PFNGLGETFENCEIVNVPROC)glfwGetProcAddress("glGetFenceivNV");
		ext_glFinishFenceNV = (PFNGLFINISHFENCENVPROC)glfwGetProcAddress("glFinishFenceNV");
		ext_glSetFenceNV = (PFNGLSETFENCENVPROC)glfwGetProcAddress("glSetFenceNV");
		ext_glMapControlPointsNV = (PFNGLMAPCONTROLPOINTSNVPROC)glfwGetProcAddress("glMapControlPointsNV");
		ext_glMapParameterivNV = (PFNGLMAPPARAMETERIVNVPROC)glfwGetProcAddress("glMapParameterivNV");
		ext_glMapParameterfvNV = (PFNGLMAPPARAMETERFVNVPROC)glfwGetProcAddress("glMapParameterfvNV");
		ext_glGetMapControlPointsNV = (PFNGLGETMAPCONTROLPOINTSNVPROC)glfwGetProcAddress("glGetMapControlPointsNV");
		ext_glGetMapParameterivNV = (PFNGLGETMAPPARAMETERIVNVPROC)glfwGetProcAddress("glGetMapParameterivNV");
		ext_glGetMapParameterfvNV = (PFNGLGETMAPPARAMETERFVNVPROC)glfwGetProcAddress("glGetMapParameterfvNV");
		ext_glGetMapAttribParameterivNV = (PFNGLGETMAPATTRIBPARAMETERIVNVPROC)glfwGetProcAddress("glGetMapAttribParameterivNV");
		ext_glGetMapAttribParameterfvNV = (PFNGLGETMAPATTRIBPARAMETERFVNVPROC)glfwGetProcAddress("glGetMapAttribParameterfvNV");
		ext_glEvalMapsNV = (PFNGLEVALMAPSNVPROC)glfwGetProcAddress("glEvalMapsNV");
		ext_glCombinerStageParameterfvNV = (PFNGLCOMBINERSTAGEPARAMETERFVNVPROC)glfwGetProcAddress("glCombinerStageParameterfvNV");
		ext_glGetCombinerStageParameterfvNV = (PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC)glfwGetProcAddress("glGetCombinerStageParameterfvNV");
		ext_glAreProgramsResidentNV = (PFNGLAREPROGRAMSRESIDENTNVPROC)glfwGetProcAddress("glAreProgramsResidentNV");
		ext_glBindProgramNV = (PFNGLBINDPROGRAMNVPROC)glfwGetProcAddress("glBindProgramNV");
		ext_glDeleteProgramsNV = (PFNGLDELETEPROGRAMSNVPROC)glfwGetProcAddress("glDeleteProgramsNV");
		ext_glExecuteProgramNV = (PFNGLEXECUTEPROGRAMNVPROC)glfwGetProcAddress("glExecuteProgramNV");
		ext_glGenProgramsNV = (PFNGLGENPROGRAMSNVPROC)glfwGetProcAddress("glGenProgramsNV");
		ext_glGetProgramParameterdvNV = (PFNGLGETPROGRAMPARAMETERDVNVPROC)glfwGetProcAddress("glGetProgramParameterdvNV");
		ext_glGetProgramParameterfvNV = (PFNGLGETPROGRAMPARAMETERFVNVPROC)glfwGetProcAddress("glGetProgramParameterfvNV");
		ext_glGetProgramivNV = (PFNGLGETPROGRAMIVNVPROC)glfwGetProcAddress("glGetProgramivNV");
		ext_glGetProgramStringNV = (PFNGLGETPROGRAMSTRINGNVPROC)glfwGetProcAddress("glGetProgramStringNV");
		ext_glGetTrackMatrixivNV = (PFNGLGETTRACKMATRIXIVNVPROC)glfwGetProcAddress("glGetTrackMatrixivNV");
		ext_glGetVertexAttribdvNV = (PFNGLGETVERTEXATTRIBDVNVPROC)glfwGetProcAddress("glGetVertexAttribdvNV");
		ext_glGetVertexAttribfvNV = (PFNGLGETVERTEXATTRIBFVNVPROC)glfwGetProcAddress("glGetVertexAttribfvNV");
		ext_glGetVertexAttribivNV = (PFNGLGETVERTEXATTRIBIVNVPROC)glfwGetProcAddress("glGetVertexAttribivNV");
		ext_glGetVertexAttribPointervNV = (PFNGLGETVERTEXATTRIBPOINTERVNVPROC)glfwGetProcAddress("glGetVertexAttribPointervNV");
		ext_glIsProgramNV = (PFNGLISPROGRAMNVPROC)glfwGetProcAddress("glIsProgramNV");
		ext_glLoadProgramNV = (PFNGLLOADPROGRAMNVPROC)glfwGetProcAddress("glLoadProgramNV");
		ext_glProgramParameter4dNV = (PFNGLPROGRAMPARAMETER4DNVPROC)glfwGetProcAddress("glProgramParameter4dNV");
		ext_glProgramParameter4dvNV = (PFNGLPROGRAMPARAMETER4DVNVPROC)glfwGetProcAddress("glProgramParameter4dvNV");
		ext_glProgramParameter4fNV = (PFNGLPROGRAMPARAMETER4FNVPROC)glfwGetProcAddress("glProgramParameter4fNV");
		ext_glProgramParameter4fvNV = (PFNGLPROGRAMPARAMETER4FVNVPROC)glfwGetProcAddress("glProgramParameter4fvNV");
		ext_glProgramParameters4dvNV = (PFNGLPROGRAMPARAMETERS4DVNVPROC)glfwGetProcAddress("glProgramParameters4dvNV");
		ext_glProgramParameters4fvNV = (PFNGLPROGRAMPARAMETERS4FVNVPROC)glfwGetProcAddress("glProgramParameters4fvNV");
		ext_glRequestResidentProgramsNV = (PFNGLREQUESTRESIDENTPROGRAMSNVPROC)glfwGetProcAddress("glRequestResidentProgramsNV");
		ext_glTrackMatrixNV = (PFNGLTRACKMATRIXNVPROC)glfwGetProcAddress("glTrackMatrixNV");
		ext_glVertexAttribPointerNV = (PFNGLVERTEXATTRIBPOINTERNVPROC)glfwGetProcAddress("glVertexAttribPointerNV");
		ext_glVertexAttrib1dNV = (PFNGLVERTEXATTRIB1DNVPROC)glfwGetProcAddress("glVertexAttrib1dNV");
		ext_glVertexAttrib1dvNV = (PFNGLVERTEXATTRIB1DVNVPROC)glfwGetProcAddress("glVertexAttrib1dvNV");
		ext_glVertexAttrib1fNV = (PFNGLVERTEXATTRIB1FNVPROC)glfwGetProcAddress("glVertexAttrib1fNV");
		ext_glVertexAttrib1fvNV = (PFNGLVERTEXATTRIB1FVNVPROC)glfwGetProcAddress("glVertexAttrib1fvNV");
		ext_glVertexAttrib1sNV = (PFNGLVERTEXATTRIB1SNVPROC)glfwGetProcAddress("glVertexAttrib1sNV");
		ext_glVertexAttrib1svNV = (PFNGLVERTEXATTRIB1SVNVPROC)glfwGetProcAddress("glVertexAttrib1svNV");
		ext_glVertexAttrib2dNV = (PFNGLVERTEXATTRIB2DNVPROC)glfwGetProcAddress("glVertexAttrib2dNV");
		ext_glVertexAttrib2dvNV = (PFNGLVERTEXATTRIB2DVNVPROC)glfwGetProcAddress("glVertexAttrib2dvNV");
		ext_glVertexAttrib2fNV = (PFNGLVERTEXATTRIB2FNVPROC)glfwGetProcAddress("glVertexAttrib2fNV");
		ext_glVertexAttrib2fvNV = (PFNGLVERTEXATTRIB2FVNVPROC)glfwGetProcAddress("glVertexAttrib2fvNV");
		ext_glVertexAttrib2sNV = (PFNGLVERTEXATTRIB2SNVPROC)glfwGetProcAddress("glVertexAttrib2sNV");
		ext_glVertexAttrib2svNV = (PFNGLVERTEXATTRIB2SVNVPROC)glfwGetProcAddress("glVertexAttrib2svNV");
		ext_glVertexAttrib3dNV = (PFNGLVERTEXATTRIB3DNVPROC)glfwGetProcAddress("glVertexAttrib3dNV");
		ext_glVertexAttrib3dvNV = (PFNGLVERTEXATTRIB3DVNVPROC)glfwGetProcAddress("glVertexAttrib3dvNV");
		ext_glVertexAttrib3fNV = (PFNGLVERTEXATTRIB3FNVPROC)glfwGetProcAddress("glVertexAttrib3fNV");
		ext_glVertexAttrib3fvNV = (PFNGLVERTEXATTRIB3FVNVPROC)glfwGetProcAddress("glVertexAttrib3fvNV");
		ext_glVertexAttrib3sNV = (PFNGLVERTEXATTRIB3SNVPROC)glfwGetProcAddress("glVertexAttrib3sNV");
		ext_glVertexAttrib3svNV = (PFNGLVERTEXATTRIB3SVNVPROC)glfwGetProcAddress("glVertexAttrib3svNV");
		ext_glVertexAttrib4dNV = (PFNGLVERTEXATTRIB4DNVPROC)glfwGetProcAddress("glVertexAttrib4dNV");
		ext_glVertexAttrib4dvNV = (PFNGLVERTEXATTRIB4DVNVPROC)glfwGetProcAddress("glVertexAttrib4dvNV");
		ext_glVertexAttrib4fNV = (PFNGLVERTEXATTRIB4FNVPROC)glfwGetProcAddress("glVertexAttrib4fNV");
		ext_glVertexAttrib4fvNV = (PFNGLVERTEXATTRIB4FVNVPROC)glfwGetProcAddress("glVertexAttrib4fvNV");
		ext_glVertexAttrib4sNV = (PFNGLVERTEXATTRIB4SNVPROC)glfwGetProcAddress("glVertexAttrib4sNV");
		ext_glVertexAttrib4svNV = (PFNGLVERTEXATTRIB4SVNVPROC)glfwGetProcAddress("glVertexAttrib4svNV");
		ext_glVertexAttrib4ubNV = (PFNGLVERTEXATTRIB4UBNVPROC)glfwGetProcAddress("glVertexAttrib4ubNV");
		ext_glVertexAttrib4ubvNV = (PFNGLVERTEXATTRIB4UBVNVPROC)glfwGetProcAddress("glVertexAttrib4ubvNV");
		ext_glVertexAttribs1dvNV = (PFNGLVERTEXATTRIBS1DVNVPROC)glfwGetProcAddress("glVertexAttribs1dvNV");
		ext_glVertexAttribs1fvNV = (PFNGLVERTEXATTRIBS1FVNVPROC)glfwGetProcAddress("glVertexAttribs1fvNV");
		ext_glVertexAttribs1svNV = (PFNGLVERTEXATTRIBS1SVNVPROC)glfwGetProcAddress("glVertexAttribs1svNV");
		ext_glVertexAttribs2dvNV = (PFNGLVERTEXATTRIBS2DVNVPROC)glfwGetProcAddress("glVertexAttribs2dvNV");
		ext_glVertexAttribs2fvNV = (PFNGLVERTEXATTRIBS2FVNVPROC)glfwGetProcAddress("glVertexAttribs2fvNV");
		ext_glVertexAttribs2svNV = (PFNGLVERTEXATTRIBS2SVNVPROC)glfwGetProcAddress("glVertexAttribs2svNV");
		ext_glVertexAttribs3dvNV = (PFNGLVERTEXATTRIBS3DVNVPROC)glfwGetProcAddress("glVertexAttribs3dvNV");
		ext_glVertexAttribs3fvNV = (PFNGLVERTEXATTRIBS3FVNVPROC)glfwGetProcAddress("glVertexAttribs3fvNV");
		ext_glVertexAttribs3svNV = (PFNGLVERTEXATTRIBS3SVNVPROC)glfwGetProcAddress("glVertexAttribs3svNV");
		ext_glVertexAttribs4dvNV = (PFNGLVERTEXATTRIBS4DVNVPROC)glfwGetProcAddress("glVertexAttribs4dvNV");
		ext_glVertexAttribs4fvNV = (PFNGLVERTEXATTRIBS4FVNVPROC)glfwGetProcAddress("glVertexAttribs4fvNV");
		ext_glVertexAttribs4svNV = (PFNGLVERTEXATTRIBS4SVNVPROC)glfwGetProcAddress("glVertexAttribs4svNV");
		ext_glVertexAttribs4ubvNV = (PFNGLVERTEXATTRIBS4UBVNVPROC)glfwGetProcAddress("glVertexAttribs4ubvNV");
		ext_glTexBumpParameterivATI = (PFNGLTEXBUMPPARAMETERIVATIPROC)glfwGetProcAddress("glTexBumpParameterivATI");
		ext_glTexBumpParameterfvATI = (PFNGLTEXBUMPPARAMETERFVATIPROC)glfwGetProcAddress("glTexBumpParameterfvATI");
		ext_glGetTexBumpParameterivATI = (PFNGLGETTEXBUMPPARAMETERIVATIPROC)glfwGetProcAddress("glGetTexBumpParameterivATI");
		ext_glGetTexBumpParameterfvATI = (PFNGLGETTEXBUMPPARAMETERFVATIPROC)glfwGetProcAddress("glGetTexBumpParameterfvATI");
		ext_glGenFragmentShadersATI = (PFNGLGENFRAGMENTSHADERSATIPROC)glfwGetProcAddress("glGenFragmentShadersATI");
		ext_glBindFragmentShaderATI = (PFNGLBINDFRAGMENTSHADERATIPROC)glfwGetProcAddress("glBindFragmentShaderATI");
		ext_glDeleteFragmentShaderATI = (PFNGLDELETEFRAGMENTSHADERATIPROC)glfwGetProcAddress("glDeleteFragmentShaderATI");
		ext_glBeginFragmentShaderATI = (PFNGLBEGINFRAGMENTSHADERATIPROC)glfwGetProcAddress("glBeginFragmentShaderATI");
		ext_glEndFragmentShaderATI = (PFNGLENDFRAGMENTSHADERATIPROC)glfwGetProcAddress("glEndFragmentShaderATI");
		ext_glPassTexCoordATI = (PFNGLPASSTEXCOORDATIPROC)glfwGetProcAddress("glPassTexCoordATI");
		ext_glSampleMapATI = (PFNGLSAMPLEMAPATIPROC)glfwGetProcAddress("glSampleMapATI");
		ext_glColorFragmentOp1ATI = (PFNGLCOLORFRAGMENTOP1ATIPROC)glfwGetProcAddress("glColorFragmentOp1ATI");
		ext_glColorFragmentOp2ATI = (PFNGLCOLORFRAGMENTOP2ATIPROC)glfwGetProcAddress("glColorFragmentOp2ATI");
		ext_glColorFragmentOp3ATI = (PFNGLCOLORFRAGMENTOP3ATIPROC)glfwGetProcAddress("glColorFragmentOp3ATI");
		ext_glAlphaFragmentOp1ATI = (PFNGLALPHAFRAGMENTOP1ATIPROC)glfwGetProcAddress("glAlphaFragmentOp1ATI");
		ext_glAlphaFragmentOp2ATI = (PFNGLALPHAFRAGMENTOP2ATIPROC)glfwGetProcAddress("glAlphaFragmentOp2ATI");
		ext_glAlphaFragmentOp3ATI = (PFNGLALPHAFRAGMENTOP3ATIPROC)glfwGetProcAddress("glAlphaFragmentOp3ATI");
		ext_glSetFragmentShaderConstantATI = (PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)glfwGetProcAddress("glSetFragmentShaderConstantATI");
		ext_glPNTrianglesiATI = (PFNGLPNTRIANGLESIATIPROC)glfwGetProcAddress("glPNTrianglesiATI");
		ext_glPNTrianglesfATI = (PFNGLPNTRIANGLESFATIPROC)glfwGetProcAddress("glPNTrianglesfATI");
		ext_glNewObjectBufferATI = (PFNGLNEWOBJECTBUFFERATIPROC)glfwGetProcAddress("glNewObjectBufferATI");
		ext_glIsObjectBufferATI = (PFNGLISOBJECTBUFFERATIPROC)glfwGetProcAddress("glIsObjectBufferATI");
		ext_glUpdateObjectBufferATI = (PFNGLUPDATEOBJECTBUFFERATIPROC)glfwGetProcAddress("glUpdateObjectBufferATI");
		ext_glGetObjectBufferfvATI = (PFNGLGETOBJECTBUFFERFVATIPROC)glfwGetProcAddress("glGetObjectBufferfvATI");
		ext_glGetObjectBufferivATI = (PFNGLGETOBJECTBUFFERIVATIPROC)glfwGetProcAddress("glGetObjectBufferivATI");
		ext_glFreeObjectBufferATI = (PFNGLFREEOBJECTBUFFERATIPROC)glfwGetProcAddress("glFreeObjectBufferATI");
		ext_glArrayObjectATI = (PFNGLARRAYOBJECTATIPROC)glfwGetProcAddress("glArrayObjectATI");
		ext_glGetArrayObjectfvATI = (PFNGLGETARRAYOBJECTFVATIPROC)glfwGetProcAddress("glGetArrayObjectfvATI");
		ext_glGetArrayObjectivATI = (PFNGLGETARRAYOBJECTIVATIPROC)glfwGetProcAddress("glGetArrayObjectivATI");
		ext_glVariantArrayObjectATI = (PFNGLVARIANTARRAYOBJECTATIPROC)glfwGetProcAddress("glVariantArrayObjectATI");
		ext_glGetVariantArrayObjectfvATI = (PFNGLGETVARIANTARRAYOBJECTFVATIPROC)glfwGetProcAddress("glGetVariantArrayObjectfvATI");
		ext_glGetVariantArrayObjectivATI = (PFNGLGETVARIANTARRAYOBJECTIVATIPROC)glfwGetProcAddress("glGetVariantArrayObjectivATI");
		ext_glBeginVertexShaderEXT = (PFNGLBEGINVERTEXSHADEREXTPROC)glfwGetProcAddress("glBeginVertexShaderEXT");
		ext_glEndVertexShaderEXT = (PFNGLENDVERTEXSHADEREXTPROC)glfwGetProcAddress("glEndVertexShaderEXT");
		ext_glBindVertexShaderEXT = (PFNGLBINDVERTEXSHADEREXTPROC)glfwGetProcAddress("glBindVertexShaderEXT");
		ext_glGenVertexShadersEXT = (PFNGLGENVERTEXSHADERSEXTPROC)glfwGetProcAddress("glGenVertexShadersEXT");
		ext_glDeleteVertexShaderEXT = (PFNGLDELETEVERTEXSHADEREXTPROC)glfwGetProcAddress("glDeleteVertexShaderEXT");
		ext_glShaderOp1EXT = (PFNGLSHADEROP1EXTPROC)glfwGetProcAddress("glShaderOp1EXT");
		ext_glShaderOp2EXT = (PFNGLSHADEROP2EXTPROC)glfwGetProcAddress("glShaderOp2EXT");
		ext_glShaderOp3EXT = (PFNGLSHADEROP3EXTPROC)glfwGetProcAddress("glShaderOp3EXT");
		ext_glSwizzleEXT = (PFNGLSWIZZLEEXTPROC)glfwGetProcAddress("glSwizzleEXT");
		ext_glWriteMaskEXT = (PFNGLWRITEMASKEXTPROC)glfwGetProcAddress("glWriteMaskEXT");
		ext_glInsertComponentEXT = (PFNGLINSERTCOMPONENTEXTPROC)glfwGetProcAddress("glInsertComponentEXT");
		ext_glExtractComponentEXT = (PFNGLEXTRACTCOMPONENTEXTPROC)glfwGetProcAddress("glExtractComponentEXT");
		ext_glGenSymbolsEXT = (PFNGLGENSYMBOLSEXTPROC)glfwGetProcAddress("glGenSymbolsEXT");
		ext_glSetInvariantEXT = (PFNGLSETINVARIANTEXTPROC)glfwGetProcAddress("glSetInvariantEXT");
		ext_glSetLocalConstantEXT = (PFNGLSETLOCALCONSTANTEXTPROC)glfwGetProcAddress("glSetLocalConstantEXT");
		ext_glVariantbvEXT = (PFNGLVARIANTBVEXTPROC)glfwGetProcAddress("glVariantbvEXT");
		ext_glVariantsvEXT = (PFNGLVARIANTSVEXTPROC)glfwGetProcAddress("glVariantsvEXT");
		ext_glVariantivEXT = (PFNGLVARIANTIVEXTPROC)glfwGetProcAddress("glVariantivEXT");
		ext_glVariantfvEXT = (PFNGLVARIANTFVEXTPROC)glfwGetProcAddress("glVariantfvEXT");
		ext_glVariantdvEXT = (PFNGLVARIANTDVEXTPROC)glfwGetProcAddress("glVariantdvEXT");
		ext_glVariantubvEXT = (PFNGLVARIANTUBVEXTPROC)glfwGetProcAddress("glVariantubvEXT");
		ext_glVariantusvEXT = (PFNGLVARIANTUSVEXTPROC)glfwGetProcAddress("glVariantusvEXT");
		ext_glVariantuivEXT = (PFNGLVARIANTUIVEXTPROC)glfwGetProcAddress("glVariantuivEXT");
		ext_glVariantPointerEXT = (PFNGLVARIANTPOINTEREXTPROC)glfwGetProcAddress("glVariantPointerEXT");
		ext_glEnableVariantClientStateEXT = (PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)glfwGetProcAddress("glEnableVariantClientStateEXT");
		ext_glDisableVariantClientStateEXT = (PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)glfwGetProcAddress("glDisableVariantClientStateEXT");
		ext_glBindLightParameterEXT = (PFNGLBINDLIGHTPARAMETEREXTPROC)glfwGetProcAddress("glBindLightParameterEXT");
		ext_glBindMaterialParameterEXT = (PFNGLBINDMATERIALPARAMETEREXTPROC)glfwGetProcAddress("glBindMaterialParameterEXT");
		ext_glBindTexGenParameterEXT = (PFNGLBINDTEXGENPARAMETEREXTPROC)glfwGetProcAddress("glBindTexGenParameterEXT");
		ext_glBindTextureUnitParameterEXT = (PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)glfwGetProcAddress("glBindTextureUnitParameterEXT");
		ext_glBindParameterEXT = (PFNGLBINDPARAMETEREXTPROC)glfwGetProcAddress("glBindParameterEXT");
		ext_glIsVariantEnabledEXT = (PFNGLISVARIANTENABLEDEXTPROC)glfwGetProcAddress("glIsVariantEnabledEXT");
		ext_glGetVariantBooleanvEXT = (PFNGLGETVARIANTBOOLEANVEXTPROC)glfwGetProcAddress("glGetVariantBooleanvEXT");
		ext_glGetVariantIntegervEXT = (PFNGLGETVARIANTINTEGERVEXTPROC)glfwGetProcAddress("glGetVariantIntegervEXT");
		ext_glGetVariantFloatvEXT = (PFNGLGETVARIANTFLOATVEXTPROC)glfwGetProcAddress("glGetVariantFloatvEXT");
		ext_glGetVariantPointervEXT = (PFNGLGETVARIANTPOINTERVEXTPROC)glfwGetProcAddress("glGetVariantPointervEXT");
		ext_glGetInvariantBooleanvEXT = (PFNGLGETINVARIANTBOOLEANVEXTPROC)glfwGetProcAddress("glGetInvariantBooleanvEXT");
		ext_glGetInvariantIntegervEXT = (PFNGLGETINVARIANTINTEGERVEXTPROC)glfwGetProcAddress("glGetInvariantIntegervEXT");
		ext_glGetInvariantFloatvEXT = (PFNGLGETINVARIANTFLOATVEXTPROC)glfwGetProcAddress("glGetInvariantFloatvEXT");
		ext_glGetLocalConstantBooleanvEXT = (PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)glfwGetProcAddress("glGetLocalConstantBooleanvEXT");
		ext_glGetLocalConstantIntegervEXT = (PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)glfwGetProcAddress("glGetLocalConstantIntegervEXT");
		ext_glGetLocalConstantFloatvEXT = (PFNGLGETLOCALCONSTANTFLOATVEXTPROC)glfwGetProcAddress("glGetLocalConstantFloatvEXT");
		ext_glVertexStream1sATI = (PFNGLVERTEXSTREAM1SATIPROC)glfwGetProcAddress("glVertexStream1sATI");
		ext_glVertexStream1svATI = (PFNGLVERTEXSTREAM1SVATIPROC)glfwGetProcAddress("glVertexStream1svATI");
		ext_glVertexStream1iATI = (PFNGLVERTEXSTREAM1IATIPROC)glfwGetProcAddress("glVertexStream1iATI");
		ext_glVertexStream1ivATI = (PFNGLVERTEXSTREAM1IVATIPROC)glfwGetProcAddress("glVertexStream1ivATI");
		ext_glVertexStream1fATI = (PFNGLVERTEXSTREAM1FATIPROC)glfwGetProcAddress("glVertexStream1fATI");
		ext_glVertexStream1fvATI = (PFNGLVERTEXSTREAM1FVATIPROC)glfwGetProcAddress("glVertexStream1fvATI");
		ext_glVertexStream1dATI = (PFNGLVERTEXSTREAM1DATIPROC)glfwGetProcAddress("glVertexStream1dATI");
		ext_glVertexStream1dvATI = (PFNGLVERTEXSTREAM1DVATIPROC)glfwGetProcAddress("glVertexStream1dvATI");
		ext_glVertexStream2sATI = (PFNGLVERTEXSTREAM2SATIPROC)glfwGetProcAddress("glVertexStream2sATI");
		ext_glVertexStream2svATI = (PFNGLVERTEXSTREAM2SVATIPROC)glfwGetProcAddress("glVertexStream2svATI");
		ext_glVertexStream2iATI = (PFNGLVERTEXSTREAM2IATIPROC)glfwGetProcAddress("glVertexStream2iATI");
		ext_glVertexStream2ivATI = (PFNGLVERTEXSTREAM2IVATIPROC)glfwGetProcAddress("glVertexStream2ivATI");
		ext_glVertexStream2fATI = (PFNGLVERTEXSTREAM2FATIPROC)glfwGetProcAddress("glVertexStream2fATI");
		ext_glVertexStream2fvATI = (PFNGLVERTEXSTREAM2FVATIPROC)glfwGetProcAddress("glVertexStream2fvATI");
		ext_glVertexStream2dATI = (PFNGLVERTEXSTREAM2DATIPROC)glfwGetProcAddress("glVertexStream2dATI");
		ext_glVertexStream2dvATI = (PFNGLVERTEXSTREAM2DVATIPROC)glfwGetProcAddress("glVertexStream2dvATI");
		ext_glVertexStream3sATI = (PFNGLVERTEXSTREAM3SATIPROC)glfwGetProcAddress("glVertexStream3sATI");
		ext_glVertexStream3svATI = (PFNGLVERTEXSTREAM3SVATIPROC)glfwGetProcAddress("glVertexStream3svATI");
		ext_glVertexStream3iATI = (PFNGLVERTEXSTREAM3IATIPROC)glfwGetProcAddress("glVertexStream3iATI");
		ext_glVertexStream3ivATI = (PFNGLVERTEXSTREAM3IVATIPROC)glfwGetProcAddress("glVertexStream3ivATI");
		ext_glVertexStream3fATI = (PFNGLVERTEXSTREAM3FATIPROC)glfwGetProcAddress("glVertexStream3fATI");
		ext_glVertexStream3fvATI = (PFNGLVERTEXSTREAM3FVATIPROC)glfwGetProcAddress("glVertexStream3fvATI");
		ext_glVertexStream3dATI = (PFNGLVERTEXSTREAM3DATIPROC)glfwGetProcAddress("glVertexStream3dATI");
		ext_glVertexStream3dvATI = (PFNGLVERTEXSTREAM3DVATIPROC)glfwGetProcAddress("glVertexStream3dvATI");
		ext_glVertexStream4sATI = (PFNGLVERTEXSTREAM4SATIPROC)glfwGetProcAddress("glVertexStream4sATI");
		ext_glVertexStream4svATI = (PFNGLVERTEXSTREAM4SVATIPROC)glfwGetProcAddress("glVertexStream4svATI");
		ext_glVertexStream4iATI = (PFNGLVERTEXSTREAM4IATIPROC)glfwGetProcAddress("glVertexStream4iATI");
		ext_glVertexStream4ivATI = (PFNGLVERTEXSTREAM4IVATIPROC)glfwGetProcAddress("glVertexStream4ivATI");
		ext_glVertexStream4fATI = (PFNGLVERTEXSTREAM4FATIPROC)glfwGetProcAddress("glVertexStream4fATI");
		ext_glVertexStream4fvATI = (PFNGLVERTEXSTREAM4FVATIPROC)glfwGetProcAddress("glVertexStream4fvATI");
		ext_glVertexStream4dATI = (PFNGLVERTEXSTREAM4DATIPROC)glfwGetProcAddress("glVertexStream4dATI");
		ext_glVertexStream4dvATI = (PFNGLVERTEXSTREAM4DVATIPROC)glfwGetProcAddress("glVertexStream4dvATI");
		ext_glNormalStream3bATI = (PFNGLNORMALSTREAM3BATIPROC)glfwGetProcAddress("glNormalStream3bATI");
		ext_glNormalStream3bvATI = (PFNGLNORMALSTREAM3BVATIPROC)glfwGetProcAddress("glNormalStream3bvATI");
		ext_glNormalStream3sATI = (PFNGLNORMALSTREAM3SATIPROC)glfwGetProcAddress("glNormalStream3sATI");
		ext_glNormalStream3svATI = (PFNGLNORMALSTREAM3SVATIPROC)glfwGetProcAddress("glNormalStream3svATI");
		ext_glNormalStream3iATI = (PFNGLNORMALSTREAM3IATIPROC)glfwGetProcAddress("glNormalStream3iATI");
		ext_glNormalStream3ivATI = (PFNGLNORMALSTREAM3IVATIPROC)glfwGetProcAddress("glNormalStream3ivATI");
		ext_glNormalStream3fATI = (PFNGLNORMALSTREAM3FATIPROC)glfwGetProcAddress("glNormalStream3fATI");
		ext_glNormalStream3fvATI = (PFNGLNORMALSTREAM3FVATIPROC)glfwGetProcAddress("glNormalStream3fvATI");
		ext_glNormalStream3dATI = (PFNGLNORMALSTREAM3DATIPROC)glfwGetProcAddress("glNormalStream3dATI");
		ext_glNormalStream3dvATI = (PFNGLNORMALSTREAM3DVATIPROC)glfwGetProcAddress("glNormalStream3dvATI");
		ext_glClientActiveVertexStreamATI = (PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC)glfwGetProcAddress("glClientActiveVertexStreamATI");
		ext_glVertexBlendEnviATI = (PFNGLVERTEXBLENDENVIATIPROC)glfwGetProcAddress("glVertexBlendEnviATI");
		ext_glVertexBlendEnvfATI = (PFNGLVERTEXBLENDENVFATIPROC)glfwGetProcAddress("glVertexBlendEnvfATI");
		ext_glElementPointerATI = (PFNGLELEMENTPOINTERATIPROC)glfwGetProcAddress("glElementPointerATI");
		ext_glDrawElementArrayATI = (PFNGLDRAWELEMENTARRAYATIPROC)glfwGetProcAddress("glDrawElementArrayATI");
		ext_glDrawRangeElementArrayATI = (PFNGLDRAWRANGEELEMENTARRAYATIPROC)glfwGetProcAddress("glDrawRangeElementArrayATI");
		ext_glDrawMeshArraysSUN = (PFNGLDRAWMESHARRAYSSUNPROC)glfwGetProcAddress("glDrawMeshArraysSUN");
		ext_glGenOcclusionQueriesNV = (PFNGLGENOCCLUSIONQUERIESNVPROC)glfwGetProcAddress("glGenOcclusionQueriesNV");
		ext_glDeleteOcclusionQueriesNV = (PFNGLDELETEOCCLUSIONQUERIESNVPROC)glfwGetProcAddress("glDeleteOcclusionQueriesNV");
		ext_glIsOcclusionQueryNV = (PFNGLISOCCLUSIONQUERYNVPROC)glfwGetProcAddress("glIsOcclusionQueryNV");
		ext_glBeginOcclusionQueryNV = (PFNGLBEGINOCCLUSIONQUERYNVPROC)glfwGetProcAddress("glBeginOcclusionQueryNV");
		ext_glEndOcclusionQueryNV = (PFNGLENDOCCLUSIONQUERYNVPROC)glfwGetProcAddress("glEndOcclusionQueryNV");
		ext_glGetOcclusionQueryivNV = (PFNGLGETOCCLUSIONQUERYIVNVPROC)glfwGetProcAddress("glGetOcclusionQueryivNV");
		ext_glGetOcclusionQueryuivNV = (PFNGLGETOCCLUSIONQUERYUIVNVPROC)glfwGetProcAddress("glGetOcclusionQueryuivNV");
		ext_glPointParameteriNV = (PFNGLPOINTPARAMETERINVPROC)glfwGetProcAddress("glPointParameteriNV");
		ext_glPointParameterivNV = (PFNGLPOINTPARAMETERIVNVPROC)glfwGetProcAddress("glPointParameterivNV");
		ext_glActiveStencilFaceEXT = (PFNGLACTIVESTENCILFACEEXTPROC)glfwGetProcAddress("glActiveStencilFaceEXT");
		ext_glElementPointerAPPLE = (PFNGLELEMENTPOINTERAPPLEPROC)glfwGetProcAddress("glElementPointerAPPLE");
		ext_glDrawElementArrayAPPLE = (PFNGLDRAWELEMENTARRAYAPPLEPROC)glfwGetProcAddress("glDrawElementArrayAPPLE");
		ext_glDrawRangeElementArrayAPPLE = (PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC)glfwGetProcAddress("glDrawRangeElementArrayAPPLE");
		ext_glMultiDrawElementArrayAPPLE = (PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC)glfwGetProcAddress("glMultiDrawElementArrayAPPLE");
		ext_glMultiDrawRangeElementArrayAPPLE = (PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC)glfwGetProcAddress("glMultiDrawRangeElementArrayAPPLE");
		ext_glGenFencesAPPLE = (PFNGLGENFENCESAPPLEPROC)glfwGetProcAddress("glGenFencesAPPLE");
		ext_glDeleteFencesAPPLE = (PFNGLDELETEFENCESAPPLEPROC)glfwGetProcAddress("glDeleteFencesAPPLE");
		ext_glSetFenceAPPLE = (PFNGLSETFENCEAPPLEPROC)glfwGetProcAddress("glSetFenceAPPLE");
		ext_glIsFenceAPPLE = (PFNGLISFENCEAPPLEPROC)glfwGetProcAddress("glIsFenceAPPLE");
		ext_glTestFenceAPPLE = (PFNGLTESTFENCEAPPLEPROC)glfwGetProcAddress("glTestFenceAPPLE");
		ext_glFinishFenceAPPLE = (PFNGLFINISHFENCEAPPLEPROC)glfwGetProcAddress("glFinishFenceAPPLE");
		ext_glTestObjectAPPLE = (PFNGLTESTOBJECTAPPLEPROC)glfwGetProcAddress("glTestObjectAPPLE");
		ext_glFinishObjectAPPLE = (PFNGLFINISHOBJECTAPPLEPROC)glfwGetProcAddress("glFinishObjectAPPLE");
		ext_glBindVertexArrayAPPLE = (PFNGLBINDVERTEXARRAYAPPLEPROC)glfwGetProcAddress("glBindVertexArrayAPPLE");
		ext_glDeleteVertexArraysAPPLE = (PFNGLDELETEVERTEXARRAYSAPPLEPROC)glfwGetProcAddress("glDeleteVertexArraysAPPLE");
		ext_glGenVertexArraysAPPLE = (PFNGLGENVERTEXARRAYSAPPLEPROC)glfwGetProcAddress("glGenVertexArraysAPPLE");
		ext_glIsVertexArrayAPPLE = (PFNGLISVERTEXARRAYAPPLEPROC)glfwGetProcAddress("glIsVertexArrayAPPLE");
		ext_glVertexArrayRangeAPPLE = (PFNGLVERTEXARRAYRANGEAPPLEPROC)glfwGetProcAddress("glVertexArrayRangeAPPLE");
		ext_glFlushVertexArrayRangeAPPLE = (PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC)glfwGetProcAddress("glFlushVertexArrayRangeAPPLE");
		ext_glVertexArrayParameteriAPPLE = (PFNGLVERTEXARRAYPARAMETERIAPPLEPROC)glfwGetProcAddress("glVertexArrayParameteriAPPLE");
		ext_glDrawBuffersATI = (PFNGLDRAWBUFFERSATIPROC)glfwGetProcAddress("glDrawBuffersATI");
		ext_glProgramNamedParameter4fNV = (PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)glfwGetProcAddress("glProgramNamedParameter4fNV");
		ext_glProgramNamedParameter4fvNV = (PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)glfwGetProcAddress("glProgramNamedParameter4fvNV");
		ext_glProgramNamedParameter4dNV = (PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)glfwGetProcAddress("glProgramNamedParameter4dNV");
		ext_glProgramNamedParameter4dvNV = (PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)glfwGetProcAddress("glProgramNamedParameter4dvNV");
		ext_glGetProgramNamedParameterfvNV = (PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)glfwGetProcAddress("glGetProgramNamedParameterfvNV");
		ext_glGetProgramNamedParameterdvNV = (PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)glfwGetProcAddress("glGetProgramNamedParameterdvNV");
		ext_glVertex2hNV = (PFNGLVERTEX2HNVPROC)glfwGetProcAddress("glVertex2hNV");
		ext_glVertex2hvNV = (PFNGLVERTEX2HVNVPROC)glfwGetProcAddress("glVertex2hvNV");
		ext_glVertex3hNV = (PFNGLVERTEX3HNVPROC)glfwGetProcAddress("glVertex3hNV");
		ext_glVertex3hvNV = (PFNGLVERTEX3HVNVPROC)glfwGetProcAddress("glVertex3hvNV");
		ext_glVertex4hNV = (PFNGLVERTEX4HNVPROC)glfwGetProcAddress("glVertex4hNV");
		ext_glVertex4hvNV = (PFNGLVERTEX4HVNVPROC)glfwGetProcAddress("glVertex4hvNV");
		ext_glNormal3hNV = (PFNGLNORMAL3HNVPROC)glfwGetProcAddress("glNormal3hNV");
		ext_glNormal3hvNV = (PFNGLNORMAL3HVNVPROC)glfwGetProcAddress("glNormal3hvNV");
		ext_glColor3hNV = (PFNGLCOLOR3HNVPROC)glfwGetProcAddress("glColor3hNV");
		ext_glColor3hvNV = (PFNGLCOLOR3HVNVPROC)glfwGetProcAddress("glColor3hvNV");
		ext_glColor4hNV = (PFNGLCOLOR4HNVPROC)glfwGetProcAddress("glColor4hNV");
		ext_glColor4hvNV = (PFNGLCOLOR4HVNVPROC)glfwGetProcAddress("glColor4hvNV");
		ext_glTexCoord1hNV = (PFNGLTEXCOORD1HNVPROC)glfwGetProcAddress("glTexCoord1hNV");
		ext_glTexCoord1hvNV = (PFNGLTEXCOORD1HVNVPROC)glfwGetProcAddress("glTexCoord1hvNV");
		ext_glTexCoord2hNV = (PFNGLTEXCOORD2HNVPROC)glfwGetProcAddress("glTexCoord2hNV");
		ext_glTexCoord2hvNV = (PFNGLTEXCOORD2HVNVPROC)glfwGetProcAddress("glTexCoord2hvNV");
		ext_glTexCoord3hNV = (PFNGLTEXCOORD3HNVPROC)glfwGetProcAddress("glTexCoord3hNV");
		ext_glTexCoord3hvNV = (PFNGLTEXCOORD3HVNVPROC)glfwGetProcAddress("glTexCoord3hvNV");
		ext_glTexCoord4hNV = (PFNGLTEXCOORD4HNVPROC)glfwGetProcAddress("glTexCoord4hNV");
		ext_glTexCoord4hvNV = (PFNGLTEXCOORD4HVNVPROC)glfwGetProcAddress("glTexCoord4hvNV");
		ext_glMultiTexCoord1hNV = (PFNGLMULTITEXCOORD1HNVPROC)glfwGetProcAddress("glMultiTexCoord1hNV");
		ext_glMultiTexCoord1hvNV = (PFNGLMULTITEXCOORD1HVNVPROC)glfwGetProcAddress("glMultiTexCoord1hvNV");
		ext_glMultiTexCoord2hNV = (PFNGLMULTITEXCOORD2HNVPROC)glfwGetProcAddress("glMultiTexCoord2hNV");
		ext_glMultiTexCoord2hvNV = (PFNGLMULTITEXCOORD2HVNVPROC)glfwGetProcAddress("glMultiTexCoord2hvNV");
		ext_glMultiTexCoord3hNV = (PFNGLMULTITEXCOORD3HNVPROC)glfwGetProcAddress("glMultiTexCoord3hNV");
		ext_glMultiTexCoord3hvNV = (PFNGLMULTITEXCOORD3HVNVPROC)glfwGetProcAddress("glMultiTexCoord3hvNV");
		ext_glMultiTexCoord4hNV = (PFNGLMULTITEXCOORD4HNVPROC)glfwGetProcAddress("glMultiTexCoord4hNV");
		ext_glMultiTexCoord4hvNV = (PFNGLMULTITEXCOORD4HVNVPROC)glfwGetProcAddress("glMultiTexCoord4hvNV");
		ext_glFogCoordhNV = (PFNGLFOGCOORDHNVPROC)glfwGetProcAddress("glFogCoordhNV");
		ext_glFogCoordhvNV = (PFNGLFOGCOORDHVNVPROC)glfwGetProcAddress("glFogCoordhvNV");
		ext_glSecondaryColor3hNV = (PFNGLSECONDARYCOLOR3HNVPROC)glfwGetProcAddress("glSecondaryColor3hNV");
		ext_glSecondaryColor3hvNV = (PFNGLSECONDARYCOLOR3HVNVPROC)glfwGetProcAddress("glSecondaryColor3hvNV");
		ext_glVertexWeighthNV = (PFNGLVERTEXWEIGHTHNVPROC)glfwGetProcAddress("glVertexWeighthNV");
		ext_glVertexWeighthvNV = (PFNGLVERTEXWEIGHTHVNVPROC)glfwGetProcAddress("glVertexWeighthvNV");
		ext_glVertexAttrib1hNV = (PFNGLVERTEXATTRIB1HNVPROC)glfwGetProcAddress("glVertexAttrib1hNV");
		ext_glVertexAttrib1hvNV = (PFNGLVERTEXATTRIB1HVNVPROC)glfwGetProcAddress("glVertexAttrib1hvNV");
		ext_glVertexAttrib2hNV = (PFNGLVERTEXATTRIB2HNVPROC)glfwGetProcAddress("glVertexAttrib2hNV");
		ext_glVertexAttrib2hvNV = (PFNGLVERTEXATTRIB2HVNVPROC)glfwGetProcAddress("glVertexAttrib2hvNV");
		ext_glVertexAttrib3hNV = (PFNGLVERTEXATTRIB3HNVPROC)glfwGetProcAddress("glVertexAttrib3hNV");
		ext_glVertexAttrib3hvNV = (PFNGLVERTEXATTRIB3HVNVPROC)glfwGetProcAddress("glVertexAttrib3hvNV");
		ext_glVertexAttrib4hNV = (PFNGLVERTEXATTRIB4HNVPROC)glfwGetProcAddress("glVertexAttrib4hNV");
		ext_glVertexAttrib4hvNV = (PFNGLVERTEXATTRIB4HVNVPROC)glfwGetProcAddress("glVertexAttrib4hvNV");
		ext_glVertexAttribs1hvNV = (PFNGLVERTEXATTRIBS1HVNVPROC)glfwGetProcAddress("glVertexAttribs1hvNV");
		ext_glVertexAttribs2hvNV = (PFNGLVERTEXATTRIBS2HVNVPROC)glfwGetProcAddress("glVertexAttribs2hvNV");
		ext_glVertexAttribs3hvNV = (PFNGLVERTEXATTRIBS3HVNVPROC)glfwGetProcAddress("glVertexAttribs3hvNV");
		ext_glVertexAttribs4hvNV = (PFNGLVERTEXATTRIBS4HVNVPROC)glfwGetProcAddress("glVertexAttribs4hvNV");
		ext_glPixelDataRangeNV = (PFNGLPIXELDATARANGENVPROC)glfwGetProcAddress("glPixelDataRangeNV");
		ext_glFlushPixelDataRangeNV = (PFNGLFLUSHPIXELDATARANGENVPROC)glfwGetProcAddress("glFlushPixelDataRangeNV");
		ext_glPrimitiveRestartNV = (PFNGLPRIMITIVERESTARTNVPROC)glfwGetProcAddress("glPrimitiveRestartNV");
		ext_glPrimitiveRestartIndexNV = (PFNGLPRIMITIVERESTARTINDEXNVPROC)glfwGetProcAddress("glPrimitiveRestartIndexNV");
		ext_glMapObjectBufferATI = (PFNGLMAPOBJECTBUFFERATIPROC)glfwGetProcAddress("glMapObjectBufferATI");
		ext_glUnmapObjectBufferATI = (PFNGLUNMAPOBJECTBUFFERATIPROC)glfwGetProcAddress("glUnmapObjectBufferATI");
		ext_glStencilOpSeparateATI = (PFNGLSTENCILOPSEPARATEATIPROC)glfwGetProcAddress("glStencilOpSeparateATI");
		ext_glStencilFuncSeparateATI = (PFNGLSTENCILFUNCSEPARATEATIPROC)glfwGetProcAddress("glStencilFuncSeparateATI");
		ext_glVertexAttribArrayObjectATI = (PFNGLVERTEXATTRIBARRAYOBJECTATIPROC)glfwGetProcAddress("glVertexAttribArrayObjectATI");
		ext_glGetVertexAttribArrayObjectfvATI = (PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC)glfwGetProcAddress("glGetVertexAttribArrayObjectfvATI");
		ext_glGetVertexAttribArrayObjectivATI = (PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC)glfwGetProcAddress("glGetVertexAttribArrayObjectivATI");
		ext_glMultiTexCoord1bOES = (PFNGLMULTITEXCOORD1BOESPROC)glfwGetProcAddress("glMultiTexCoord1bOES");
		ext_glMultiTexCoord1bvOES = (PFNGLMULTITEXCOORD1BVOESPROC)glfwGetProcAddress("glMultiTexCoord1bvOES");
		ext_glMultiTexCoord2bOES = (PFNGLMULTITEXCOORD2BOESPROC)glfwGetProcAddress("glMultiTexCoord2bOES");
		ext_glMultiTexCoord2bvOES = (PFNGLMULTITEXCOORD2BVOESPROC)glfwGetProcAddress("glMultiTexCoord2bvOES");
		ext_glMultiTexCoord3bOES = (PFNGLMULTITEXCOORD3BOESPROC)glfwGetProcAddress("glMultiTexCoord3bOES");
		ext_glMultiTexCoord3bvOES = (PFNGLMULTITEXCOORD3BVOESPROC)glfwGetProcAddress("glMultiTexCoord3bvOES");
		ext_glMultiTexCoord4bOES = (PFNGLMULTITEXCOORD4BOESPROC)glfwGetProcAddress("glMultiTexCoord4bOES");
		ext_glMultiTexCoord4bvOES = (PFNGLMULTITEXCOORD4BVOESPROC)glfwGetProcAddress("glMultiTexCoord4bvOES");
		ext_glTexCoord1bOES = (PFNGLTEXCOORD1BOESPROC)glfwGetProcAddress("glTexCoord1bOES");
		ext_glTexCoord1bvOES = (PFNGLTEXCOORD1BVOESPROC)glfwGetProcAddress("glTexCoord1bvOES");
		ext_glTexCoord2bOES = (PFNGLTEXCOORD2BOESPROC)glfwGetProcAddress("glTexCoord2bOES");
		ext_glTexCoord2bvOES = (PFNGLTEXCOORD2BVOESPROC)glfwGetProcAddress("glTexCoord2bvOES");
		ext_glTexCoord3bOES = (PFNGLTEXCOORD3BOESPROC)glfwGetProcAddress("glTexCoord3bOES");
		ext_glTexCoord3bvOES = (PFNGLTEXCOORD3BVOESPROC)glfwGetProcAddress("glTexCoord3bvOES");
		ext_glTexCoord4bOES = (PFNGLTEXCOORD4BOESPROC)glfwGetProcAddress("glTexCoord4bOES");
		ext_glTexCoord4bvOES = (PFNGLTEXCOORD4BVOESPROC)glfwGetProcAddress("glTexCoord4bvOES");
		ext_glVertex2bOES = (PFNGLVERTEX2BOESPROC)glfwGetProcAddress("glVertex2bOES");
		ext_glVertex2bvOES = (PFNGLVERTEX2BVOESPROC)glfwGetProcAddress("glVertex2bvOES");
		ext_glVertex3bOES = (PFNGLVERTEX3BOESPROC)glfwGetProcAddress("glVertex3bOES");
		ext_glVertex3bvOES = (PFNGLVERTEX3BVOESPROC)glfwGetProcAddress("glVertex3bvOES");
		ext_glVertex4bOES = (PFNGLVERTEX4BOESPROC)glfwGetProcAddress("glVertex4bOES");
		ext_glVertex4bvOES = (PFNGLVERTEX4BVOESPROC)glfwGetProcAddress("glVertex4bvOES");
		ext_glAccumxOES = (PFNGLACCUMXOESPROC)glfwGetProcAddress("glAccumxOES");
		ext_glAlphaFuncxOES = (PFNGLALPHAFUNCXOESPROC)glfwGetProcAddress("glAlphaFuncxOES");
		ext_glBitmapxOES = (PFNGLBITMAPXOESPROC)glfwGetProcAddress("glBitmapxOES");
		ext_glBlendColorxOES = (PFNGLBLENDCOLORXOESPROC)glfwGetProcAddress("glBlendColorxOES");
		ext_glClearAccumxOES = (PFNGLCLEARACCUMXOESPROC)glfwGetProcAddress("glClearAccumxOES");
		ext_glClearColorxOES = (PFNGLCLEARCOLORXOESPROC)glfwGetProcAddress("glClearColorxOES");
		ext_glClearDepthxOES = (PFNGLCLEARDEPTHXOESPROC)glfwGetProcAddress("glClearDepthxOES");
		ext_glClipPlanexOES = (PFNGLCLIPPLANEXOESPROC)glfwGetProcAddress("glClipPlanexOES");
		ext_glColor3xOES = (PFNGLCOLOR3XOESPROC)glfwGetProcAddress("glColor3xOES");
		ext_glColor4xOES = (PFNGLCOLOR4XOESPROC)glfwGetProcAddress("glColor4xOES");
		ext_glColor3xvOES = (PFNGLCOLOR3XVOESPROC)glfwGetProcAddress("glColor3xvOES");
		ext_glColor4xvOES = (PFNGLCOLOR4XVOESPROC)glfwGetProcAddress("glColor4xvOES");
		ext_glConvolutionParameterxOES = (PFNGLCONVOLUTIONPARAMETERXOESPROC)glfwGetProcAddress("glConvolutionParameterxOES");
		ext_glConvolutionParameterxvOES = (PFNGLCONVOLUTIONPARAMETERXVOESPROC)glfwGetProcAddress("glConvolutionParameterxvOES");
		ext_glDepthRangexOES = (PFNGLDEPTHRANGEXOESPROC)glfwGetProcAddress("glDepthRangexOES");
		ext_glEvalCoord1xOES = (PFNGLEVALCOORD1XOESPROC)glfwGetProcAddress("glEvalCoord1xOES");
		ext_glEvalCoord2xOES = (PFNGLEVALCOORD2XOESPROC)glfwGetProcAddress("glEvalCoord2xOES");
		ext_glEvalCoord1xvOES = (PFNGLEVALCOORD1XVOESPROC)glfwGetProcAddress("glEvalCoord1xvOES");
		ext_glEvalCoord2xvOES = (PFNGLEVALCOORD2XVOESPROC)glfwGetProcAddress("glEvalCoord2xvOES");
		ext_glFeedbackBufferxOES = (PFNGLFEEDBACKBUFFERXOESPROC)glfwGetProcAddress("glFeedbackBufferxOES");
		ext_glFogxOES = (PFNGLFOGXOESPROC)glfwGetProcAddress("glFogxOES");
		ext_glFogxvOES = (PFNGLFOGXVOESPROC)glfwGetProcAddress("glFogxvOES");
		ext_glFrustumxOES = (PFNGLFRUSTUMXOESPROC)glfwGetProcAddress("glFrustumxOES");
		ext_glGetClipPlanexOES = (PFNGLGETCLIPPLANEXOESPROC)glfwGetProcAddress("glGetClipPlanexOES");
		ext_glGetConvolutionParameterxvOES = (PFNGLGETCONVOLUTIONPARAMETERXVOESPROC)glfwGetProcAddress("glGetConvolutionParameterxvOES");
		ext_glGetFixedvOES = (PFNGLGETFIXEDVOESPROC)glfwGetProcAddress("glGetFixedvOES");
		ext_glGetHistogramParameterxvOES = (PFNGLGETHISTOGRAMPARAMETERXVOESPROC)glfwGetProcAddress("glGetHistogramParameterxvOES");
		ext_glGetLightxOES = (PFNGLGETLIGHTXOESPROC)glfwGetProcAddress("glGetLightxOES");
		ext_glGetMapxvOES = (PFNGLGETMAPXVOESPROC)glfwGetProcAddress("glGetMapxvOES");
		ext_glGetMaterialxOES = (PFNGLGETMATERIALXOESPROC)glfwGetProcAddress("glGetMaterialxOES");
		ext_glGetPixelMapxv = (PFNGLGETPIXELMAPXVPROC)glfwGetProcAddress("glGetPixelMapxv");
		ext_glGetTexEnvxvOES = (PFNGLGETTEXENVXVOESPROC)glfwGetProcAddress("glGetTexEnvxvOES");
		ext_glGetTexGenxvOES = (PFNGLGETTEXGENXVOESPROC)glfwGetProcAddress("glGetTexGenxvOES");
		ext_glGetTexLevelParameterxvOES = (PFNGLGETTEXLEVELPARAMETERXVOESPROC)glfwGetProcAddress("glGetTexLevelParameterxvOES");
		ext_glGetTexParameterxvOES = (PFNGLGETTEXPARAMETERXVOESPROC)glfwGetProcAddress("glGetTexParameterxvOES");
		ext_glIndexxOES = (PFNGLINDEXXOESPROC)glfwGetProcAddress("glIndexxOES");
		ext_glIndexxvOES = (PFNGLINDEXXVOESPROC)glfwGetProcAddress("glIndexxvOES");
		ext_glLightModelxOES = (PFNGLLIGHTMODELXOESPROC)glfwGetProcAddress("glLightModelxOES");
		ext_glLightModelxvOES = (PFNGLLIGHTMODELXVOESPROC)glfwGetProcAddress("glLightModelxvOES");
		ext_glLightxOES = (PFNGLLIGHTXOESPROC)glfwGetProcAddress("glLightxOES");
		ext_glLightxvOES = (PFNGLLIGHTXVOESPROC)glfwGetProcAddress("glLightxvOES");
		ext_glLineWidthxOES = (PFNGLLINEWIDTHXOESPROC)glfwGetProcAddress("glLineWidthxOES");
		ext_glLoadMatrixxOES = (PFNGLLOADMATRIXXOESPROC)glfwGetProcAddress("glLoadMatrixxOES");
		ext_glLoadTransposeMatrixxOES = (PFNGLLOADTRANSPOSEMATRIXXOESPROC)glfwGetProcAddress("glLoadTransposeMatrixxOES");
		ext_glMap1xOES = (PFNGLMAP1XOESPROC)glfwGetProcAddress("glMap1xOES");
		ext_glMap2xOES = (PFNGLMAP2XOESPROC)glfwGetProcAddress("glMap2xOES");
		ext_glMapGrid1xOES = (PFNGLMAPGRID1XOESPROC)glfwGetProcAddress("glMapGrid1xOES");
		ext_glMapGrid2xOES = (PFNGLMAPGRID2XOESPROC)glfwGetProcAddress("glMapGrid2xOES");
		ext_glMaterialxOES = (PFNGLMATERIALXOESPROC)glfwGetProcAddress("glMaterialxOES");
		ext_glMaterialxvOES = (PFNGLMATERIALXVOESPROC)glfwGetProcAddress("glMaterialxvOES");
		ext_glMultMatrixxOES = (PFNGLMULTMATRIXXOESPROC)glfwGetProcAddress("glMultMatrixxOES");
		ext_glMultTransposeMatrixxOES = (PFNGLMULTTRANSPOSEMATRIXXOESPROC)glfwGetProcAddress("glMultTransposeMatrixxOES");
		ext_glMultiTexCoord1xOES = (PFNGLMULTITEXCOORD1XOESPROC)glfwGetProcAddress("glMultiTexCoord1xOES");
		ext_glMultiTexCoord2xOES = (PFNGLMULTITEXCOORD2XOESPROC)glfwGetProcAddress("glMultiTexCoord2xOES");
		ext_glMultiTexCoord3xOES = (PFNGLMULTITEXCOORD3XOESPROC)glfwGetProcAddress("glMultiTexCoord3xOES");
		ext_glMultiTexCoord4xOES = (PFNGLMULTITEXCOORD4XOESPROC)glfwGetProcAddress("glMultiTexCoord4xOES");
		ext_glMultiTexCoord1xvOES = (PFNGLMULTITEXCOORD1XVOESPROC)glfwGetProcAddress("glMultiTexCoord1xvOES");
		ext_glMultiTexCoord2xvOES = (PFNGLMULTITEXCOORD2XVOESPROC)glfwGetProcAddress("glMultiTexCoord2xvOES");
		ext_glMultiTexCoord3xvOES = (PFNGLMULTITEXCOORD3XVOESPROC)glfwGetProcAddress("glMultiTexCoord3xvOES");
		ext_glMultiTexCoord4xvOES = (PFNGLMULTITEXCOORD4XVOESPROC)glfwGetProcAddress("glMultiTexCoord4xvOES");
		ext_glNormal3xOES = (PFNGLNORMAL3XOESPROC)glfwGetProcAddress("glNormal3xOES");
		ext_glNormal3xvOES = (PFNGLNORMAL3XVOESPROC)glfwGetProcAddress("glNormal3xvOES");
		ext_glOrthoxOES = (PFNGLORTHOXOESPROC)glfwGetProcAddress("glOrthoxOES");
		ext_glPassThroughxOES = (PFNGLPASSTHROUGHXOESPROC)glfwGetProcAddress("glPassThroughxOES");
		ext_glPixelMapx = (PFNGLPIXELMAPXPROC)glfwGetProcAddress("glPixelMapx");
		ext_glPixelStorex = (PFNGLPIXELSTOREXPROC)glfwGetProcAddress("glPixelStorex");
		ext_glPixelTransferxOES = (PFNGLPIXELTRANSFERXOESPROC)glfwGetProcAddress("glPixelTransferxOES");
		ext_glPixelZoomxOES = (PFNGLPIXELZOOMXOESPROC)glfwGetProcAddress("glPixelZoomxOES");
		ext_glPointParameterxvOES = (PFNGLPOINTPARAMETERXVOESPROC)glfwGetProcAddress("glPointParameterxvOES");
		ext_glPointSizexOES = (PFNGLPOINTSIZEXOESPROC)glfwGetProcAddress("glPointSizexOES");
		ext_glPolygonOffsetxOES = (PFNGLPOLYGONOFFSETXOESPROC)glfwGetProcAddress("glPolygonOffsetxOES");
		ext_glPrioritizeTexturesxOES = (PFNGLPRIORITIZETEXTURESXOESPROC)glfwGetProcAddress("glPrioritizeTexturesxOES");
		ext_glRasterPos2xOES = (PFNGLRASTERPOS2XOESPROC)glfwGetProcAddress("glRasterPos2xOES");
		ext_glRasterPos3xOES = (PFNGLRASTERPOS3XOESPROC)glfwGetProcAddress("glRasterPos3xOES");
		ext_glRasterPos4xOES = (PFNGLRASTERPOS4XOESPROC)glfwGetProcAddress("glRasterPos4xOES");
		ext_glRasterPos2xvOES = (PFNGLRASTERPOS2XVOESPROC)glfwGetProcAddress("glRasterPos2xvOES");
		ext_glRasterPos3xvOES = (PFNGLRASTERPOS3XVOESPROC)glfwGetProcAddress("glRasterPos3xvOES");
		ext_glRasterPos4xvOES = (PFNGLRASTERPOS4XVOESPROC)glfwGetProcAddress("glRasterPos4xvOES");
		ext_glRectxOES = (PFNGLRECTXOESPROC)glfwGetProcAddress("glRectxOES");
		ext_glRectxvOES = (PFNGLRECTXVOESPROC)glfwGetProcAddress("glRectxvOES");
		ext_glRotatexOES = (PFNGLROTATEXOESPROC)glfwGetProcAddress("glRotatexOES");
		ext_glSampleCoverageOES = (PFNGLSAMPLECOVERAGEOESPROC)glfwGetProcAddress("glSampleCoverageOES");
		ext_glScalexOES = (PFNGLSCALEXOESPROC)glfwGetProcAddress("glScalexOES");
		ext_glTexCoord1xOES = (PFNGLTEXCOORD1XOESPROC)glfwGetProcAddress("glTexCoord1xOES");
		ext_glTexCoord2xOES = (PFNGLTEXCOORD2XOESPROC)glfwGetProcAddress("glTexCoord2xOES");
		ext_glTexCoord3xOES = (PFNGLTEXCOORD3XOESPROC)glfwGetProcAddress("glTexCoord3xOES");
		ext_glTexCoord4xOES = (PFNGLTEXCOORD4XOESPROC)glfwGetProcAddress("glTexCoord4xOES");
		ext_glTexCoord1xvOES = (PFNGLTEXCOORD1XVOESPROC)glfwGetProcAddress("glTexCoord1xvOES");
		ext_glTexCoord2xvOES = (PFNGLTEXCOORD2XVOESPROC)glfwGetProcAddress("glTexCoord2xvOES");
		ext_glTexCoord3xvOES = (PFNGLTEXCOORD3XVOESPROC)glfwGetProcAddress("glTexCoord3xvOES");
		ext_glTexCoord4xvOES = (PFNGLTEXCOORD4XVOESPROC)glfwGetProcAddress("glTexCoord4xvOES");
		ext_glTexEnvxOES = (PFNGLTEXENVXOESPROC)glfwGetProcAddress("glTexEnvxOES");
		ext_glTexEnvxvOES = (PFNGLTEXENVXVOESPROC)glfwGetProcAddress("glTexEnvxvOES");
		ext_glTexGenxOES = (PFNGLTEXGENXOESPROC)glfwGetProcAddress("glTexGenxOES");
		ext_glTexGenxvOES = (PFNGLTEXGENXVOESPROC)glfwGetProcAddress("glTexGenxvOES");
		ext_glTexParameterxOES = (PFNGLTEXPARAMETERXOESPROC)glfwGetProcAddress("glTexParameterxOES");
		ext_glTexParameterxvOES = (PFNGLTEXPARAMETERXVOESPROC)glfwGetProcAddress("glTexParameterxvOES");
		ext_glTranslatexOES = (PFNGLTRANSLATEXOESPROC)glfwGetProcAddress("glTranslatexOES");
		ext_glVertex2xOES = (PFNGLVERTEX2XOESPROC)glfwGetProcAddress("glVertex2xOES");
		ext_glVertex3xOES = (PFNGLVERTEX3XOESPROC)glfwGetProcAddress("glVertex3xOES");
		ext_glVertex4xOES = (PFNGLVERTEX4XOESPROC)glfwGetProcAddress("glVertex4xOES");
		ext_glVertex2xvOES = (PFNGLVERTEX2XVOESPROC)glfwGetProcAddress("glVertex2xvOES");
		ext_glVertex3xvOES = (PFNGLVERTEX3XVOESPROC)glfwGetProcAddress("glVertex3xvOES");
		ext_glVertex4xvOES = (PFNGLVERTEX4XVOESPROC)glfwGetProcAddress("glVertex4xvOES");
		ext_glDepthRangefOES = (PFNGLDEPTHRANGEFOESPROC)glfwGetProcAddress("glDepthRangefOES");
		ext_glFrustumfOES = (PFNGLFRUSTUMFOESPROC)glfwGetProcAddress("glFrustumfOES");
		ext_glOrthofOES = (PFNGLORTHOFOESPROC)glfwGetProcAddress("glOrthofOES");
		ext_glClipPlanefOES = (PFNGLCLIPPLANEFOESPROC)glfwGetProcAddress("glClipPlanefOES");
		ext_glClearDepthfOES = (PFNGLCLEARDEPTHFOESPROC)glfwGetProcAddress("glClearDepthfOES");
		ext_glGetClipPlanefOES = (PFNGLGETCLIPPLANEFOESPROC)glfwGetProcAddress("glGetClipPlanefOES");
		ext_glQueryMatrixxOES = (PFNGLQUERYMATRIXXOESPROC)glfwGetProcAddress("glQueryMatrixxOES");
		ext_glDepthBoundsEXT = (PFNGLDEPTHBOUNDSEXTPROC)glfwGetProcAddress("glDepthBoundsEXT");
		ext_glBlendEquationSeparateEXT = (PFNGLBLENDEQUATIONSEPARATEEXTPROC)glfwGetProcAddress("glBlendEquationSeparateEXT");
		ext_glIsRenderbufferEXT = (PFNGLISRENDERBUFFEREXTPROC)glfwGetProcAddress("glIsRenderbufferEXT");
		ext_glBindRenderbufferEXT = (PFNGLBINDRENDERBUFFEREXTPROC)glfwGetProcAddress("glBindRenderbufferEXT");
		ext_glDeleteRenderbuffersEXT = (PFNGLDELETERENDERBUFFERSEXTPROC)glfwGetProcAddress("glDeleteRenderbuffersEXT");
		ext_glGenRenderbuffersEXT = (PFNGLGENRENDERBUFFERSEXTPROC)glfwGetProcAddress("glGenRenderbuffersEXT");
		ext_glRenderbufferStorageEXT = (PFNGLRENDERBUFFERSTORAGEEXTPROC)glfwGetProcAddress("glRenderbufferStorageEXT");
		ext_glGetRenderbufferParameterivEXT = (PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)glfwGetProcAddress("glGetRenderbufferParameterivEXT");
		ext_glIsFramebufferEXT = (PFNGLISFRAMEBUFFEREXTPROC)glfwGetProcAddress("glIsFramebufferEXT");
		ext_glBindFramebufferEXT = (PFNGLBINDFRAMEBUFFEREXTPROC)glfwGetProcAddress("glBindFramebufferEXT");
		ext_glDeleteFramebuffersEXT = (PFNGLDELETEFRAMEBUFFERSEXTPROC)glfwGetProcAddress("glDeleteFramebuffersEXT");
		ext_glGenFramebuffersEXT = (PFNGLGENFRAMEBUFFERSEXTPROC)glfwGetProcAddress("glGenFramebuffersEXT");
		ext_glCheckFramebufferStatusEXT = (PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)glfwGetProcAddress("glCheckFramebufferStatusEXT");
		ext_glFramebufferTexture1DEXT = (PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)glfwGetProcAddress("glFramebufferTexture1DEXT");
		ext_glFramebufferTexture2DEXT = (PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)glfwGetProcAddress("glFramebufferTexture2DEXT");
		ext_glFramebufferTexture3DEXT = (PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)glfwGetProcAddress("glFramebufferTexture3DEXT");
		ext_glFramebufferRenderbufferEXT = (PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)glfwGetProcAddress("glFramebufferRenderbufferEXT");
		ext_glGetFramebufferAttachmentParameterivEXT = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)glfwGetProcAddress("glGetFramebufferAttachmentParameterivEXT");
		ext_glGenerateMipmapEXT = (PFNGLGENERATEMIPMAPEXTPROC)glfwGetProcAddress("glGenerateMipmapEXT");
		ext_glStringMarkerGREMEDY = (PFNGLSTRINGMARKERGREMEDYPROC)glfwGetProcAddress("glStringMarkerGREMEDY");
		ext_glStencilClearTagEXT = (PFNGLSTENCILCLEARTAGEXTPROC)glfwGetProcAddress("glStencilClearTagEXT");
		ext_glBlitFramebufferEXT = (PFNGLBLITFRAMEBUFFEREXTPROC)glfwGetProcAddress("glBlitFramebufferEXT");
		ext_glRenderbufferStorageMultisampleEXT = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)glfwGetProcAddress("glRenderbufferStorageMultisampleEXT");
		ext_glGetQueryObjecti64vEXT = (PFNGLGETQUERYOBJECTI64VEXTPROC)glfwGetProcAddress("glGetQueryObjecti64vEXT");
		ext_glGetQueryObjectui64vEXT = (PFNGLGETQUERYOBJECTUI64VEXTPROC)glfwGetProcAddress("glGetQueryObjectui64vEXT");
		ext_glProgramEnvParameters4fvEXT = (PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)glfwGetProcAddress("glProgramEnvParameters4fvEXT");
		ext_glProgramLocalParameters4fvEXT = (PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)glfwGetProcAddress("glProgramLocalParameters4fvEXT");
		ext_glBufferParameteriAPPLE = (PFNGLBUFFERPARAMETERIAPPLEPROC)glfwGetProcAddress("glBufferParameteriAPPLE");
		ext_glFlushMappedBufferRangeAPPLE = (PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)glfwGetProcAddress("glFlushMappedBufferRangeAPPLE");
		ext_glProgramLocalParameterI4iNV = (PFNGLPROGRAMLOCALPARAMETERI4INVPROC)glfwGetProcAddress("glProgramLocalParameterI4iNV");
		ext_glProgramLocalParameterI4ivNV = (PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC)glfwGetProcAddress("glProgramLocalParameterI4ivNV");
		ext_glProgramLocalParametersI4ivNV = (PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC)glfwGetProcAddress("glProgramLocalParametersI4ivNV");
		ext_glProgramLocalParameterI4uiNV = (PFNGLPROGRAMLOCALPARAMETERI4UINVPROC)glfwGetProcAddress("glProgramLocalParameterI4uiNV");
		ext_glProgramLocalParameterI4uivNV = (PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC)glfwGetProcAddress("glProgramLocalParameterI4uivNV");
		ext_glProgramLocalParametersI4uivNV = (PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC)glfwGetProcAddress("glProgramLocalParametersI4uivNV");
		ext_glProgramEnvParameterI4iNV = (PFNGLPROGRAMENVPARAMETERI4INVPROC)glfwGetProcAddress("glProgramEnvParameterI4iNV");
		ext_glProgramEnvParameterI4ivNV = (PFNGLPROGRAMENVPARAMETERI4IVNVPROC)glfwGetProcAddress("glProgramEnvParameterI4ivNV");
		ext_glProgramEnvParametersI4ivNV = (PFNGLPROGRAMENVPARAMETERSI4IVNVPROC)glfwGetProcAddress("glProgramEnvParametersI4ivNV");
		ext_glProgramEnvParameterI4uiNV = (PFNGLPROGRAMENVPARAMETERI4UINVPROC)glfwGetProcAddress("glProgramEnvParameterI4uiNV");
		ext_glProgramEnvParameterI4uivNV = (PFNGLPROGRAMENVPARAMETERI4UIVNVPROC)glfwGetProcAddress("glProgramEnvParameterI4uivNV");
		ext_glProgramEnvParametersI4uivNV = (PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC)glfwGetProcAddress("glProgramEnvParametersI4uivNV");
		ext_glGetProgramLocalParameterIivNV = (PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC)glfwGetProcAddress("glGetProgramLocalParameterIivNV");
		ext_glGetProgramLocalParameterIuivNV = (PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC)glfwGetProcAddress("glGetProgramLocalParameterIuivNV");
		ext_glGetProgramEnvParameterIivNV = (PFNGLGETPROGRAMENVPARAMETERIIVNVPROC)glfwGetProcAddress("glGetProgramEnvParameterIivNV");
		ext_glGetProgramEnvParameterIuivNV = (PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC)glfwGetProcAddress("glGetProgramEnvParameterIuivNV");
		ext_glProgramVertexLimitNV = (PFNGLPROGRAMVERTEXLIMITNVPROC)glfwGetProcAddress("glProgramVertexLimitNV");
		ext_glFramebufferTextureEXT = (PFNGLFRAMEBUFFERTEXTUREEXTPROC)glfwGetProcAddress("glFramebufferTextureEXT");
		ext_glFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)glfwGetProcAddress("glFramebufferTextureLayerEXT");
		ext_glFramebufferTextureFaceEXT = (PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC)glfwGetProcAddress("glFramebufferTextureFaceEXT");
		ext_glProgramParameteriEXT = (PFNGLPROGRAMPARAMETERIEXTPROC)glfwGetProcAddress("glProgramParameteriEXT");
		ext_glVertexAttribI1iEXT = (PFNGLVERTEXATTRIBI1IEXTPROC)glfwGetProcAddress("glVertexAttribI1iEXT");
		ext_glVertexAttribI2iEXT = (PFNGLVERTEXATTRIBI2IEXTPROC)glfwGetProcAddress("glVertexAttribI2iEXT");
		ext_glVertexAttribI3iEXT = (PFNGLVERTEXATTRIBI3IEXTPROC)glfwGetProcAddress("glVertexAttribI3iEXT");
		ext_glVertexAttribI4iEXT = (PFNGLVERTEXATTRIBI4IEXTPROC)glfwGetProcAddress("glVertexAttribI4iEXT");
		ext_glVertexAttribI1uiEXT = (PFNGLVERTEXATTRIBI1UIEXTPROC)glfwGetProcAddress("glVertexAttribI1uiEXT");
		ext_glVertexAttribI2uiEXT = (PFNGLVERTEXATTRIBI2UIEXTPROC)glfwGetProcAddress("glVertexAttribI2uiEXT");
		ext_glVertexAttribI3uiEXT = (PFNGLVERTEXATTRIBI3UIEXTPROC)glfwGetProcAddress("glVertexAttribI3uiEXT");
		ext_glVertexAttribI4uiEXT = (PFNGLVERTEXATTRIBI4UIEXTPROC)glfwGetProcAddress("glVertexAttribI4uiEXT");
		ext_glVertexAttribI1ivEXT = (PFNGLVERTEXATTRIBI1IVEXTPROC)glfwGetProcAddress("glVertexAttribI1ivEXT");
		ext_glVertexAttribI2ivEXT = (PFNGLVERTEXATTRIBI2IVEXTPROC)glfwGetProcAddress("glVertexAttribI2ivEXT");
		ext_glVertexAttribI3ivEXT = (PFNGLVERTEXATTRIBI3IVEXTPROC)glfwGetProcAddress("glVertexAttribI3ivEXT");
		ext_glVertexAttribI4ivEXT = (PFNGLVERTEXATTRIBI4IVEXTPROC)glfwGetProcAddress("glVertexAttribI4ivEXT");
		ext_glVertexAttribI1uivEXT = (PFNGLVERTEXATTRIBI1UIVEXTPROC)glfwGetProcAddress("glVertexAttribI1uivEXT");
		ext_glVertexAttribI2uivEXT = (PFNGLVERTEXATTRIBI2UIVEXTPROC)glfwGetProcAddress("glVertexAttribI2uivEXT");
		ext_glVertexAttribI3uivEXT = (PFNGLVERTEXATTRIBI3UIVEXTPROC)glfwGetProcAddress("glVertexAttribI3uivEXT");
		ext_glVertexAttribI4uivEXT = (PFNGLVERTEXATTRIBI4UIVEXTPROC)glfwGetProcAddress("glVertexAttribI4uivEXT");
		ext_glVertexAttribI4bvEXT = (PFNGLVERTEXATTRIBI4BVEXTPROC)glfwGetProcAddress("glVertexAttribI4bvEXT");
		ext_glVertexAttribI4svEXT = (PFNGLVERTEXATTRIBI4SVEXTPROC)glfwGetProcAddress("glVertexAttribI4svEXT");
		ext_glVertexAttribI4ubvEXT = (PFNGLVERTEXATTRIBI4UBVEXTPROC)glfwGetProcAddress("glVertexAttribI4ubvEXT");
		ext_glVertexAttribI4usvEXT = (PFNGLVERTEXATTRIBI4USVEXTPROC)glfwGetProcAddress("glVertexAttribI4usvEXT");
		ext_glVertexAttribIPointerEXT = (PFNGLVERTEXATTRIBIPOINTEREXTPROC)glfwGetProcAddress("glVertexAttribIPointerEXT");
		ext_glGetVertexAttribIivEXT = (PFNGLGETVERTEXATTRIBIIVEXTPROC)glfwGetProcAddress("glGetVertexAttribIivEXT");
		ext_glGetVertexAttribIuivEXT = (PFNGLGETVERTEXATTRIBIUIVEXTPROC)glfwGetProcAddress("glGetVertexAttribIuivEXT");
		ext_glGetUniformuivEXT = (PFNGLGETUNIFORMUIVEXTPROC)glfwGetProcAddress("glGetUniformuivEXT");
		ext_glBindFragDataLocationEXT = (PFNGLBINDFRAGDATALOCATIONEXTPROC)glfwGetProcAddress("glBindFragDataLocationEXT");
		ext_glGetFragDataLocationEXT = (PFNGLGETFRAGDATALOCATIONEXTPROC)glfwGetProcAddress("glGetFragDataLocationEXT");
		ext_glUniform1uiEXT = (PFNGLUNIFORM1UIEXTPROC)glfwGetProcAddress("glUniform1uiEXT");
		ext_glUniform2uiEXT = (PFNGLUNIFORM2UIEXTPROC)glfwGetProcAddress("glUniform2uiEXT");
		ext_glUniform3uiEXT = (PFNGLUNIFORM3UIEXTPROC)glfwGetProcAddress("glUniform3uiEXT");
		ext_glUniform4uiEXT = (PFNGLUNIFORM4UIEXTPROC)glfwGetProcAddress("glUniform4uiEXT");
		ext_glUniform1uivEXT = (PFNGLUNIFORM1UIVEXTPROC)glfwGetProcAddress("glUniform1uivEXT");
		ext_glUniform2uivEXT = (PFNGLUNIFORM2UIVEXTPROC)glfwGetProcAddress("glUniform2uivEXT");
		ext_glUniform3uivEXT = (PFNGLUNIFORM3UIVEXTPROC)glfwGetProcAddress("glUniform3uivEXT");
		ext_glUniform4uivEXT = (PFNGLUNIFORM4UIVEXTPROC)glfwGetProcAddress("glUniform4uivEXT");
		ext_glDrawArraysInstancedEXT = (PFNGLDRAWARRAYSINSTANCEDEXTPROC)glfwGetProcAddress("glDrawArraysInstancedEXT");
		ext_glDrawElementsInstancedEXT = (PFNGLDRAWELEMENTSINSTANCEDEXTPROC)glfwGetProcAddress("glDrawElementsInstancedEXT");
		ext_glTexBufferEXT = (PFNGLTEXBUFFEREXTPROC)glfwGetProcAddress("glTexBufferEXT");
		ext_glDepthRangedNV = (PFNGLDEPTHRANGEDNVPROC)glfwGetProcAddress("glDepthRangedNV");
		ext_glClearDepthdNV = (PFNGLCLEARDEPTHDNVPROC)glfwGetProcAddress("glClearDepthdNV");
		ext_glDepthBoundsdNV = (PFNGLDEPTHBOUNDSDNVPROC)glfwGetProcAddress("glDepthBoundsdNV");
		ext_glRenderbufferStorageMultisampleCoverageNV = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC)glfwGetProcAddress("glRenderbufferStorageMultisampleCoverageNV");
		ext_glProgramBufferParametersfvNV = (PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC)glfwGetProcAddress("glProgramBufferParametersfvNV");
		ext_glProgramBufferParametersIivNV = (PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC)glfwGetProcAddress("glProgramBufferParametersIivNV");
		ext_glProgramBufferParametersIuivNV = (PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC)glfwGetProcAddress("glProgramBufferParametersIuivNV");
		ext_glColorMaskIndexedEXT = (PFNGLCOLORMASKINDEXEDEXTPROC)glfwGetProcAddress("glColorMaskIndexedEXT");
		ext_glGetBooleanIndexedvEXT = (PFNGLGETBOOLEANINDEXEDVEXTPROC)glfwGetProcAddress("glGetBooleanIndexedvEXT");
		ext_glGetIntegerIndexedvEXT = (PFNGLGETINTEGERINDEXEDVEXTPROC)glfwGetProcAddress("glGetIntegerIndexedvEXT");
		ext_glEnableIndexedEXT = (PFNGLENABLEINDEXEDEXTPROC)glfwGetProcAddress("glEnableIndexedEXT");
		ext_glDisableIndexedEXT = (PFNGLDISABLEINDEXEDEXTPROC)glfwGetProcAddress("glDisableIndexedEXT");
		ext_glIsEnabledIndexedEXT = (PFNGLISENABLEDINDEXEDEXTPROC)glfwGetProcAddress("glIsEnabledIndexedEXT");
		ext_glBeginTransformFeedbackNV = (PFNGLBEGINTRANSFORMFEEDBACKNVPROC)glfwGetProcAddress("glBeginTransformFeedbackNV");
		ext_glEndTransformFeedbackNV = (PFNGLENDTRANSFORMFEEDBACKNVPROC)glfwGetProcAddress("glEndTransformFeedbackNV");
		ext_glTransformFeedbackAttribsNV = (PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC)glfwGetProcAddress("glTransformFeedbackAttribsNV");
		ext_glBindBufferRangeNV = (PFNGLBINDBUFFERRANGENVPROC)glfwGetProcAddress("glBindBufferRangeNV");
		ext_glBindBufferOffsetNV = (PFNGLBINDBUFFEROFFSETNVPROC)glfwGetProcAddress("glBindBufferOffsetNV");
		ext_glBindBufferBaseNV = (PFNGLBINDBUFFERBASENVPROC)glfwGetProcAddress("glBindBufferBaseNV");
		ext_glTransformFeedbackVaryingsNV = (PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC)glfwGetProcAddress("glTransformFeedbackVaryingsNV");
		ext_glActiveVaryingNV = (PFNGLACTIVEVARYINGNVPROC)glfwGetProcAddress("glActiveVaryingNV");
		ext_glGetVaryingLocationNV = (PFNGLGETVARYINGLOCATIONNVPROC)glfwGetProcAddress("glGetVaryingLocationNV");
		ext_glGetActiveVaryingNV = (PFNGLGETACTIVEVARYINGNVPROC)glfwGetProcAddress("glGetActiveVaryingNV");
		ext_glGetTransformFeedbackVaryingNV = (PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC)glfwGetProcAddress("glGetTransformFeedbackVaryingNV");
		ext_glTransformFeedbackStreamAttribsNV = (PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC)glfwGetProcAddress("glTransformFeedbackStreamAttribsNV");
		ext_glUniformBufferEXT = (PFNGLUNIFORMBUFFEREXTPROC)glfwGetProcAddress("glUniformBufferEXT");
		ext_glGetUniformBufferSizeEXT = (PFNGLGETUNIFORMBUFFERSIZEEXTPROC)glfwGetProcAddress("glGetUniformBufferSizeEXT");
		ext_glGetUniformOffsetEXT = (PFNGLGETUNIFORMOFFSETEXTPROC)glfwGetProcAddress("glGetUniformOffsetEXT");
		ext_glTexParameterIivEXT = (PFNGLTEXPARAMETERIIVEXTPROC)glfwGetProcAddress("glTexParameterIivEXT");
		ext_glTexParameterIuivEXT = (PFNGLTEXPARAMETERIUIVEXTPROC)glfwGetProcAddress("glTexParameterIuivEXT");
		ext_glGetTexParameterIivEXT = (PFNGLGETTEXPARAMETERIIVEXTPROC)glfwGetProcAddress("glGetTexParameterIivEXT");
		ext_glGetTexParameterIuivEXT = (PFNGLGETTEXPARAMETERIUIVEXTPROC)glfwGetProcAddress("glGetTexParameterIuivEXT");
		ext_glClearColorIiEXT = (PFNGLCLEARCOLORIIEXTPROC)glfwGetProcAddress("glClearColorIiEXT");
		ext_glClearColorIuiEXT = (PFNGLCLEARCOLORIUIEXTPROC)glfwGetProcAddress("glClearColorIuiEXT");
		ext_glFrameTerminatorGREMEDY = (PFNGLFRAMETERMINATORGREMEDYPROC)glfwGetProcAddress("glFrameTerminatorGREMEDY");
		ext_glBeginConditionalRenderNV = (PFNGLBEGINCONDITIONALRENDERNVPROC)glfwGetProcAddress("glBeginConditionalRenderNV");
		ext_glEndConditionalRenderNV = (PFNGLENDCONDITIONALRENDERNVPROC)glfwGetProcAddress("glEndConditionalRenderNV");
		ext_glPresentFrameKeyedNV = (PFNGLPRESENTFRAMEKEYEDNVPROC)glfwGetProcAddress("glPresentFrameKeyedNV");
		ext_glPresentFrameDualFillNV = (PFNGLPRESENTFRAMEDUALFILLNVPROC)glfwGetProcAddress("glPresentFrameDualFillNV");
		ext_glGetVideoivNV = (PFNGLGETVIDEOIVNVPROC)glfwGetProcAddress("glGetVideoivNV");
		ext_glGetVideouivNV = (PFNGLGETVIDEOUIVNVPROC)glfwGetProcAddress("glGetVideouivNV");
		ext_glGetVideoi64vNV = (PFNGLGETVIDEOI64VNVPROC)glfwGetProcAddress("glGetVideoi64vNV");
		ext_glGetVideoui64vNV = (PFNGLGETVIDEOUI64VNVPROC)glfwGetProcAddress("glGetVideoui64vNV");
		ext_glBeginTransformFeedbackEXT = (PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)glfwGetProcAddress("glBeginTransformFeedbackEXT");
		ext_glEndTransformFeedbackEXT = (PFNGLENDTRANSFORMFEEDBACKEXTPROC)glfwGetProcAddress("glEndTransformFeedbackEXT");
		ext_glBindBufferRangeEXT = (PFNGLBINDBUFFERRANGEEXTPROC)glfwGetProcAddress("glBindBufferRangeEXT");
		ext_glBindBufferOffsetEXT = (PFNGLBINDBUFFEROFFSETEXTPROC)glfwGetProcAddress("glBindBufferOffsetEXT");
		ext_glBindBufferBaseEXT = (PFNGLBINDBUFFERBASEEXTPROC)glfwGetProcAddress("glBindBufferBaseEXT");
		ext_glTransformFeedbackVaryingsEXT = (PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)glfwGetProcAddress("glTransformFeedbackVaryingsEXT");
		ext_glGetTransformFeedbackVaryingEXT = (PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)glfwGetProcAddress("glGetTransformFeedbackVaryingEXT");
		ext_glClientAttribDefaultEXT = (PFNGLCLIENTATTRIBDEFAULTEXTPROC)glfwGetProcAddress("glClientAttribDefaultEXT");
		ext_glPushClientAttribDefaultEXT = (PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)glfwGetProcAddress("glPushClientAttribDefaultEXT");
		ext_glMatrixLoadfEXT = (PFNGLMATRIXLOADFEXTPROC)glfwGetProcAddress("glMatrixLoadfEXT");
		ext_glMatrixLoaddEXT = (PFNGLMATRIXLOADDEXTPROC)glfwGetProcAddress("glMatrixLoaddEXT");
		ext_glMatrixMultfEXT = (PFNGLMATRIXMULTFEXTPROC)glfwGetProcAddress("glMatrixMultfEXT");
		ext_glMatrixMultdEXT = (PFNGLMATRIXMULTDEXTPROC)glfwGetProcAddress("glMatrixMultdEXT");
		ext_glMatrixLoadIdentityEXT = (PFNGLMATRIXLOADIDENTITYEXTPROC)glfwGetProcAddress("glMatrixLoadIdentityEXT");
		ext_glMatrixRotatefEXT = (PFNGLMATRIXROTATEFEXTPROC)glfwGetProcAddress("glMatrixRotatefEXT");
		ext_glMatrixRotatedEXT = (PFNGLMATRIXROTATEDEXTPROC)glfwGetProcAddress("glMatrixRotatedEXT");
		ext_glMatrixScalefEXT = (PFNGLMATRIXSCALEFEXTPROC)glfwGetProcAddress("glMatrixScalefEXT");
		ext_glMatrixScaledEXT = (PFNGLMATRIXSCALEDEXTPROC)glfwGetProcAddress("glMatrixScaledEXT");
		ext_glMatrixTranslatefEXT = (PFNGLMATRIXTRANSLATEFEXTPROC)glfwGetProcAddress("glMatrixTranslatefEXT");
		ext_glMatrixTranslatedEXT = (PFNGLMATRIXTRANSLATEDEXTPROC)glfwGetProcAddress("glMatrixTranslatedEXT");
		ext_glMatrixFrustumEXT = (PFNGLMATRIXFRUSTUMEXTPROC)glfwGetProcAddress("glMatrixFrustumEXT");
		ext_glMatrixOrthoEXT = (PFNGLMATRIXORTHOEXTPROC)glfwGetProcAddress("glMatrixOrthoEXT");
		ext_glMatrixPopEXT = (PFNGLMATRIXPOPEXTPROC)glfwGetProcAddress("glMatrixPopEXT");
		ext_glMatrixPushEXT = (PFNGLMATRIXPUSHEXTPROC)glfwGetProcAddress("glMatrixPushEXT");
		ext_glMatrixLoadTransposefEXT = (PFNGLMATRIXLOADTRANSPOSEFEXTPROC)glfwGetProcAddress("glMatrixLoadTransposefEXT");
		ext_glMatrixLoadTransposedEXT = (PFNGLMATRIXLOADTRANSPOSEDEXTPROC)glfwGetProcAddress("glMatrixLoadTransposedEXT");
		ext_glMatrixMultTransposefEXT = (PFNGLMATRIXMULTTRANSPOSEFEXTPROC)glfwGetProcAddress("glMatrixMultTransposefEXT");
		ext_glMatrixMultTransposedEXT = (PFNGLMATRIXMULTTRANSPOSEDEXTPROC)glfwGetProcAddress("glMatrixMultTransposedEXT");
		ext_glTextureParameterfEXT = (PFNGLTEXTUREPARAMETERFEXTPROC)glfwGetProcAddress("glTextureParameterfEXT");
		ext_glTextureParameterfvEXT = (PFNGLTEXTUREPARAMETERFVEXTPROC)glfwGetProcAddress("glTextureParameterfvEXT");
		ext_glTextureParameteriEXT = (PFNGLTEXTUREPARAMETERIEXTPROC)glfwGetProcAddress("glTextureParameteriEXT");
		ext_glTextureParameterivEXT = (PFNGLTEXTUREPARAMETERIVEXTPROC)glfwGetProcAddress("glTextureParameterivEXT");
		ext_glTextureImage1DEXT = (PFNGLTEXTUREIMAGE1DEXTPROC)glfwGetProcAddress("glTextureImage1DEXT");
		ext_glTextureImage2DEXT = (PFNGLTEXTUREIMAGE2DEXTPROC)glfwGetProcAddress("glTextureImage2DEXT");
		ext_glTextureSubImage1DEXT = (PFNGLTEXTURESUBIMAGE1DEXTPROC)glfwGetProcAddress("glTextureSubImage1DEXT");
		ext_glTextureSubImage2DEXT = (PFNGLTEXTURESUBIMAGE2DEXTPROC)glfwGetProcAddress("glTextureSubImage2DEXT");
		ext_glCopyTextureImage1DEXT = (PFNGLCOPYTEXTUREIMAGE1DEXTPROC)glfwGetProcAddress("glCopyTextureImage1DEXT");
		ext_glCopyTextureImage2DEXT = (PFNGLCOPYTEXTUREIMAGE2DEXTPROC)glfwGetProcAddress("glCopyTextureImage2DEXT");
		ext_glCopyTextureSubImage1DEXT = (PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)glfwGetProcAddress("glCopyTextureSubImage1DEXT");
		ext_glCopyTextureSubImage2DEXT = (PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)glfwGetProcAddress("glCopyTextureSubImage2DEXT");
		ext_glGetTextureImageEXT = (PFNGLGETTEXTUREIMAGEEXTPROC)glfwGetProcAddress("glGetTextureImageEXT");
		ext_glGetTextureParameterfvEXT = (PFNGLGETTEXTUREPARAMETERFVEXTPROC)glfwGetProcAddress("glGetTextureParameterfvEXT");
		ext_glGetTextureParameterivEXT = (PFNGLGETTEXTUREPARAMETERIVEXTPROC)glfwGetProcAddress("glGetTextureParameterivEXT");
		ext_glGetTextureLevelParameterfvEXT = (PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)glfwGetProcAddress("glGetTextureLevelParameterfvEXT");
		ext_glGetTextureLevelParameterivEXT = (PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)glfwGetProcAddress("glGetTextureLevelParameterivEXT");
		ext_glTextureImage3DEXT = (PFNGLTEXTUREIMAGE3DEXTPROC)glfwGetProcAddress("glTextureImage3DEXT");
		ext_glTextureSubImage3DEXT = (PFNGLTEXTURESUBIMAGE3DEXTPROC)glfwGetProcAddress("glTextureSubImage3DEXT");
		ext_glCopyTextureSubImage3DEXT = (PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)glfwGetProcAddress("glCopyTextureSubImage3DEXT");
		ext_glMultiTexParameterfEXT = (PFNGLMULTITEXPARAMETERFEXTPROC)glfwGetProcAddress("glMultiTexParameterfEXT");
		ext_glMultiTexParameterfvEXT = (PFNGLMULTITEXPARAMETERFVEXTPROC)glfwGetProcAddress("glMultiTexParameterfvEXT");
		ext_glMultiTexParameteriEXT = (PFNGLMULTITEXPARAMETERIEXTPROC)glfwGetProcAddress("glMultiTexParameteriEXT");
		ext_glMultiTexParameterivEXT = (PFNGLMULTITEXPARAMETERIVEXTPROC)glfwGetProcAddress("glMultiTexParameterivEXT");
		ext_glMultiTexImage1DEXT = (PFNGLMULTITEXIMAGE1DEXTPROC)glfwGetProcAddress("glMultiTexImage1DEXT");
		ext_glMultiTexImage2DEXT = (PFNGLMULTITEXIMAGE2DEXTPROC)glfwGetProcAddress("glMultiTexImage2DEXT");
		ext_glMultiTexSubImage1DEXT = (PFNGLMULTITEXSUBIMAGE1DEXTPROC)glfwGetProcAddress("glMultiTexSubImage1DEXT");
		ext_glMultiTexSubImage2DEXT = (PFNGLMULTITEXSUBIMAGE2DEXTPROC)glfwGetProcAddress("glMultiTexSubImage2DEXT");
		ext_glCopyMultiTexImage1DEXT = (PFNGLCOPYMULTITEXIMAGE1DEXTPROC)glfwGetProcAddress("glCopyMultiTexImage1DEXT");
		ext_glCopyMultiTexImage2DEXT = (PFNGLCOPYMULTITEXIMAGE2DEXTPROC)glfwGetProcAddress("glCopyMultiTexImage2DEXT");
		ext_glCopyMultiTexSubImage1DEXT = (PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)glfwGetProcAddress("glCopyMultiTexSubImage1DEXT");
		ext_glCopyMultiTexSubImage2DEXT = (PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)glfwGetProcAddress("glCopyMultiTexSubImage2DEXT");
		ext_glGetMultiTexImageEXT = (PFNGLGETMULTITEXIMAGEEXTPROC)glfwGetProcAddress("glGetMultiTexImageEXT");
		ext_glGetMultiTexParameterfvEXT = (PFNGLGETMULTITEXPARAMETERFVEXTPROC)glfwGetProcAddress("glGetMultiTexParameterfvEXT");
		ext_glGetMultiTexParameterivEXT = (PFNGLGETMULTITEXPARAMETERIVEXTPROC)glfwGetProcAddress("glGetMultiTexParameterivEXT");
		ext_glGetMultiTexLevelParameterfvEXT = (PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)glfwGetProcAddress("glGetMultiTexLevelParameterfvEXT");
		ext_glGetMultiTexLevelParameterivEXT = (PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)glfwGetProcAddress("glGetMultiTexLevelParameterivEXT");
		ext_glMultiTexImage3DEXT = (PFNGLMULTITEXIMAGE3DEXTPROC)glfwGetProcAddress("glMultiTexImage3DEXT");
		ext_glMultiTexSubImage3DEXT = (PFNGLMULTITEXSUBIMAGE3DEXTPROC)glfwGetProcAddress("glMultiTexSubImage3DEXT");
		ext_glCopyMultiTexSubImage3DEXT = (PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)glfwGetProcAddress("glCopyMultiTexSubImage3DEXT");
		ext_glBindMultiTextureEXT = (PFNGLBINDMULTITEXTUREEXTPROC)glfwGetProcAddress("glBindMultiTextureEXT");
		ext_glEnableClientStateIndexedEXT = (PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)glfwGetProcAddress("glEnableClientStateIndexedEXT");
		ext_glDisableClientStateIndexedEXT = (PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)glfwGetProcAddress("glDisableClientStateIndexedEXT");
		ext_glMultiTexCoordPointerEXT = (PFNGLMULTITEXCOORDPOINTEREXTPROC)glfwGetProcAddress("glMultiTexCoordPointerEXT");
		ext_glMultiTexEnvfEXT = (PFNGLMULTITEXENVFEXTPROC)glfwGetProcAddress("glMultiTexEnvfEXT");
		ext_glMultiTexEnvfvEXT = (PFNGLMULTITEXENVFVEXTPROC)glfwGetProcAddress("glMultiTexEnvfvEXT");
		ext_glMultiTexEnviEXT = (PFNGLMULTITEXENVIEXTPROC)glfwGetProcAddress("glMultiTexEnviEXT");
		ext_glMultiTexEnvivEXT = (PFNGLMULTITEXENVIVEXTPROC)glfwGetProcAddress("glMultiTexEnvivEXT");
		ext_glMultiTexGendEXT = (PFNGLMULTITEXGENDEXTPROC)glfwGetProcAddress("glMultiTexGendEXT");
		ext_glMultiTexGendvEXT = (PFNGLMULTITEXGENDVEXTPROC)glfwGetProcAddress("glMultiTexGendvEXT");
		ext_glMultiTexGenfEXT = (PFNGLMULTITEXGENFEXTPROC)glfwGetProcAddress("glMultiTexGenfEXT");
		ext_glMultiTexGenfvEXT = (PFNGLMULTITEXGENFVEXTPROC)glfwGetProcAddress("glMultiTexGenfvEXT");
		ext_glMultiTexGeniEXT = (PFNGLMULTITEXGENIEXTPROC)glfwGetProcAddress("glMultiTexGeniEXT");
		ext_glMultiTexGenivEXT = (PFNGLMULTITEXGENIVEXTPROC)glfwGetProcAddress("glMultiTexGenivEXT");
		ext_glGetMultiTexEnvfvEXT = (PFNGLGETMULTITEXENVFVEXTPROC)glfwGetProcAddress("glGetMultiTexEnvfvEXT");
		ext_glGetMultiTexEnvivEXT = (PFNGLGETMULTITEXENVIVEXTPROC)glfwGetProcAddress("glGetMultiTexEnvivEXT");
		ext_glGetMultiTexGendvEXT = (PFNGLGETMULTITEXGENDVEXTPROC)glfwGetProcAddress("glGetMultiTexGendvEXT");
		ext_glGetMultiTexGenfvEXT = (PFNGLGETMULTITEXGENFVEXTPROC)glfwGetProcAddress("glGetMultiTexGenfvEXT");
		ext_glGetMultiTexGenivEXT = (PFNGLGETMULTITEXGENIVEXTPROC)glfwGetProcAddress("glGetMultiTexGenivEXT");
		ext_glGetFloatIndexedvEXT = (PFNGLGETFLOATINDEXEDVEXTPROC)glfwGetProcAddress("glGetFloatIndexedvEXT");
		ext_glGetDoubleIndexedvEXT = (PFNGLGETDOUBLEINDEXEDVEXTPROC)glfwGetProcAddress("glGetDoubleIndexedvEXT");
		ext_glGetPointerIndexedvEXT = (PFNGLGETPOINTERINDEXEDVEXTPROC)glfwGetProcAddress("glGetPointerIndexedvEXT");
		ext_glCompressedTextureImage3DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)glfwGetProcAddress("glCompressedTextureImage3DEXT");
		ext_glCompressedTextureImage2DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)glfwGetProcAddress("glCompressedTextureImage2DEXT");
		ext_glCompressedTextureImage1DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)glfwGetProcAddress("glCompressedTextureImage1DEXT");
		ext_glCompressedTextureSubImage3DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)glfwGetProcAddress("glCompressedTextureSubImage3DEXT");
		ext_glCompressedTextureSubImage2DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)glfwGetProcAddress("glCompressedTextureSubImage2DEXT");
		ext_glCompressedTextureSubImage1DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)glfwGetProcAddress("glCompressedTextureSubImage1DEXT");
		ext_glGetCompressedTextureImageEXT = (PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)glfwGetProcAddress("glGetCompressedTextureImageEXT");
		ext_glCompressedMultiTexImage3DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)glfwGetProcAddress("glCompressedMultiTexImage3DEXT");
		ext_glCompressedMultiTexImage2DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)glfwGetProcAddress("glCompressedMultiTexImage2DEXT");
		ext_glCompressedMultiTexImage1DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)glfwGetProcAddress("glCompressedMultiTexImage1DEXT");
		ext_glCompressedMultiTexSubImage3DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)glfwGetProcAddress("glCompressedMultiTexSubImage3DEXT");
		ext_glCompressedMultiTexSubImage2DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)glfwGetProcAddress("glCompressedMultiTexSubImage2DEXT");
		ext_glCompressedMultiTexSubImage1DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)glfwGetProcAddress("glCompressedMultiTexSubImage1DEXT");
		ext_glGetCompressedMultiTexImageEXT = (PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)glfwGetProcAddress("glGetCompressedMultiTexImageEXT");
		ext_glNamedProgramStringEXT = (PFNGLNAMEDPROGRAMSTRINGEXTPROC)glfwGetProcAddress("glNamedProgramStringEXT");
		ext_glNamedProgramLocalParameter4dEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)glfwGetProcAddress("glNamedProgramLocalParameter4dEXT");
		ext_glNamedProgramLocalParameter4dvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)glfwGetProcAddress("glNamedProgramLocalParameter4dvEXT");
		ext_glNamedProgramLocalParameter4fEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)glfwGetProcAddress("glNamedProgramLocalParameter4fEXT");
		ext_glNamedProgramLocalParameter4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)glfwGetProcAddress("glNamedProgramLocalParameter4fvEXT");
		ext_glGetNamedProgramLocalParameterdvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)glfwGetProcAddress("glGetNamedProgramLocalParameterdvEXT");
		ext_glGetNamedProgramLocalParameterfvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)glfwGetProcAddress("glGetNamedProgramLocalParameterfvEXT");
		ext_glGetNamedProgramivEXT = (PFNGLGETNAMEDPROGRAMIVEXTPROC)glfwGetProcAddress("glGetNamedProgramivEXT");
		ext_glGetNamedProgramStringEXT = (PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)glfwGetProcAddress("glGetNamedProgramStringEXT");
		ext_glNamedProgramLocalParameters4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)glfwGetProcAddress("glNamedProgramLocalParameters4fvEXT");
		ext_glNamedProgramLocalParameterI4iEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)glfwGetProcAddress("glNamedProgramLocalParameterI4iEXT");
		ext_glNamedProgramLocalParameterI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)glfwGetProcAddress("glNamedProgramLocalParameterI4ivEXT");
		ext_glNamedProgramLocalParametersI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)glfwGetProcAddress("glNamedProgramLocalParametersI4ivEXT");
		ext_glNamedProgramLocalParameterI4uiEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)glfwGetProcAddress("glNamedProgramLocalParameterI4uiEXT");
		ext_glNamedProgramLocalParameterI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)glfwGetProcAddress("glNamedProgramLocalParameterI4uivEXT");
		ext_glNamedProgramLocalParametersI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)glfwGetProcAddress("glNamedProgramLocalParametersI4uivEXT");
		ext_glGetNamedProgramLocalParameterIivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)glfwGetProcAddress("glGetNamedProgramLocalParameterIivEXT");
		ext_glGetNamedProgramLocalParameterIuivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)glfwGetProcAddress("glGetNamedProgramLocalParameterIuivEXT");
		ext_glTextureParameterIivEXT = (PFNGLTEXTUREPARAMETERIIVEXTPROC)glfwGetProcAddress("glTextureParameterIivEXT");
		ext_glTextureParameterIuivEXT = (PFNGLTEXTUREPARAMETERIUIVEXTPROC)glfwGetProcAddress("glTextureParameterIuivEXT");
		ext_glGetTextureParameterIivEXT = (PFNGLGETTEXTUREPARAMETERIIVEXTPROC)glfwGetProcAddress("glGetTextureParameterIivEXT");
		ext_glGetTextureParameterIuivEXT = (PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)glfwGetProcAddress("glGetTextureParameterIuivEXT");
		ext_glMultiTexParameterIivEXT = (PFNGLMULTITEXPARAMETERIIVEXTPROC)glfwGetProcAddress("glMultiTexParameterIivEXT");
		ext_glMultiTexParameterIuivEXT = (PFNGLMULTITEXPARAMETERIUIVEXTPROC)glfwGetProcAddress("glMultiTexParameterIuivEXT");
		ext_glGetMultiTexParameterIivEXT = (PFNGLGETMULTITEXPARAMETERIIVEXTPROC)glfwGetProcAddress("glGetMultiTexParameterIivEXT");
		ext_glGetMultiTexParameterIuivEXT = (PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)glfwGetProcAddress("glGetMultiTexParameterIuivEXT");
		ext_glProgramUniform1fEXT = (PFNGLPROGRAMUNIFORM1FEXTPROC)glfwGetProcAddress("glProgramUniform1fEXT");
		ext_glProgramUniform2fEXT = (PFNGLPROGRAMUNIFORM2FEXTPROC)glfwGetProcAddress("glProgramUniform2fEXT");
		ext_glProgramUniform3fEXT = (PFNGLPROGRAMUNIFORM3FEXTPROC)glfwGetProcAddress("glProgramUniform3fEXT");
		ext_glProgramUniform4fEXT = (PFNGLPROGRAMUNIFORM4FEXTPROC)glfwGetProcAddress("glProgramUniform4fEXT");
		ext_glProgramUniform1iEXT = (PFNGLPROGRAMUNIFORM1IEXTPROC)glfwGetProcAddress("glProgramUniform1iEXT");
		ext_glProgramUniform2iEXT = (PFNGLPROGRAMUNIFORM2IEXTPROC)glfwGetProcAddress("glProgramUniform2iEXT");
		ext_glProgramUniform3iEXT = (PFNGLPROGRAMUNIFORM3IEXTPROC)glfwGetProcAddress("glProgramUniform3iEXT");
		ext_glProgramUniform4iEXT = (PFNGLPROGRAMUNIFORM4IEXTPROC)glfwGetProcAddress("glProgramUniform4iEXT");
		ext_glProgramUniform1fvEXT = (PFNGLPROGRAMUNIFORM1FVEXTPROC)glfwGetProcAddress("glProgramUniform1fvEXT");
		ext_glProgramUniform2fvEXT = (PFNGLPROGRAMUNIFORM2FVEXTPROC)glfwGetProcAddress("glProgramUniform2fvEXT");
		ext_glProgramUniform3fvEXT = (PFNGLPROGRAMUNIFORM3FVEXTPROC)glfwGetProcAddress("glProgramUniform3fvEXT");
		ext_glProgramUniform4fvEXT = (PFNGLPROGRAMUNIFORM4FVEXTPROC)glfwGetProcAddress("glProgramUniform4fvEXT");
		ext_glProgramUniform1ivEXT = (PFNGLPROGRAMUNIFORM1IVEXTPROC)glfwGetProcAddress("glProgramUniform1ivEXT");
		ext_glProgramUniform2ivEXT = (PFNGLPROGRAMUNIFORM2IVEXTPROC)glfwGetProcAddress("glProgramUniform2ivEXT");
		ext_glProgramUniform3ivEXT = (PFNGLPROGRAMUNIFORM3IVEXTPROC)glfwGetProcAddress("glProgramUniform3ivEXT");
		ext_glProgramUniform4ivEXT = (PFNGLPROGRAMUNIFORM4IVEXTPROC)glfwGetProcAddress("glProgramUniform4ivEXT");
		ext_glProgramUniformMatrix2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix2fvEXT");
		ext_glProgramUniformMatrix3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix3fvEXT");
		ext_glProgramUniformMatrix4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix4fvEXT");
		ext_glProgramUniformMatrix2x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix2x3fvEXT");
		ext_glProgramUniformMatrix3x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix3x2fvEXT");
		ext_glProgramUniformMatrix2x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix2x4fvEXT");
		ext_glProgramUniformMatrix4x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix4x2fvEXT");
		ext_glProgramUniformMatrix3x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix3x4fvEXT");
		ext_glProgramUniformMatrix4x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix4x3fvEXT");
		ext_glProgramUniform1uiEXT = (PFNGLPROGRAMUNIFORM1UIEXTPROC)glfwGetProcAddress("glProgramUniform1uiEXT");
		ext_glProgramUniform2uiEXT = (PFNGLPROGRAMUNIFORM2UIEXTPROC)glfwGetProcAddress("glProgramUniform2uiEXT");
		ext_glProgramUniform3uiEXT = (PFNGLPROGRAMUNIFORM3UIEXTPROC)glfwGetProcAddress("glProgramUniform3uiEXT");
		ext_glProgramUniform4uiEXT = (PFNGLPROGRAMUNIFORM4UIEXTPROC)glfwGetProcAddress("glProgramUniform4uiEXT");
		ext_glProgramUniform1uivEXT = (PFNGLPROGRAMUNIFORM1UIVEXTPROC)glfwGetProcAddress("glProgramUniform1uivEXT");
		ext_glProgramUniform2uivEXT = (PFNGLPROGRAMUNIFORM2UIVEXTPROC)glfwGetProcAddress("glProgramUniform2uivEXT");
		ext_glProgramUniform3uivEXT = (PFNGLPROGRAMUNIFORM3UIVEXTPROC)glfwGetProcAddress("glProgramUniform3uivEXT");
		ext_glProgramUniform4uivEXT = (PFNGLPROGRAMUNIFORM4UIVEXTPROC)glfwGetProcAddress("glProgramUniform4uivEXT");
		ext_glNamedBufferDataEXT = (PFNGLNAMEDBUFFERDATAEXTPROC)glfwGetProcAddress("glNamedBufferDataEXT");
		ext_glNamedBufferSubDataEXT = (PFNGLNAMEDBUFFERSUBDATAEXTPROC)glfwGetProcAddress("glNamedBufferSubDataEXT");
		ext_glMapNamedBufferEXT = (PFNGLMAPNAMEDBUFFEREXTPROC)glfwGetProcAddress("glMapNamedBufferEXT");
		ext_glUnmapNamedBufferEXT = (PFNGLUNMAPNAMEDBUFFEREXTPROC)glfwGetProcAddress("glUnmapNamedBufferEXT");
		ext_glMapNamedBufferRangeEXT = (PFNGLMAPNAMEDBUFFERRANGEEXTPROC)glfwGetProcAddress("glMapNamedBufferRangeEXT");
		ext_glFlushMappedNamedBufferRangeEXT = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)glfwGetProcAddress("glFlushMappedNamedBufferRangeEXT");
		ext_glNamedCopyBufferSubDataEXT = (PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)glfwGetProcAddress("glNamedCopyBufferSubDataEXT");
		ext_glGetNamedBufferParameterivEXT = (PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)glfwGetProcAddress("glGetNamedBufferParameterivEXT");
		ext_glGetNamedBufferPointervEXT = (PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)glfwGetProcAddress("glGetNamedBufferPointervEXT");
		ext_glGetNamedBufferSubDataEXT = (PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)glfwGetProcAddress("glGetNamedBufferSubDataEXT");
		ext_glTextureBufferEXT = (PFNGLTEXTUREBUFFEREXTPROC)glfwGetProcAddress("glTextureBufferEXT");
		ext_glMultiTexBufferEXT = (PFNGLMULTITEXBUFFEREXTPROC)glfwGetProcAddress("glMultiTexBufferEXT");
		ext_glNamedRenderbufferStorageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)glfwGetProcAddress("glNamedRenderbufferStorageEXT");
		ext_glGetNamedRenderbufferParameterivEXT = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)glfwGetProcAddress("glGetNamedRenderbufferParameterivEXT");
		ext_glCheckNamedFramebufferStatusEXT = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)glfwGetProcAddress("glCheckNamedFramebufferStatusEXT");
		ext_glNamedFramebufferTexture1DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)glfwGetProcAddress("glNamedFramebufferTexture1DEXT");
		ext_glNamedFramebufferTexture2DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)glfwGetProcAddress("glNamedFramebufferTexture2DEXT");
		ext_glNamedFramebufferTexture3DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)glfwGetProcAddress("glNamedFramebufferTexture3DEXT");
		ext_glNamedFramebufferRenderbufferEXT = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)glfwGetProcAddress("glNamedFramebufferRenderbufferEXT");
		ext_glGetNamedFramebufferAttachmentParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)glfwGetProcAddress("glGetNamedFramebufferAttachmentParameterivEXT");
		ext_glGenerateTextureMipmapEXT = (PFNGLGENERATETEXTUREMIPMAPEXTPROC)glfwGetProcAddress("glGenerateTextureMipmapEXT");
		ext_glGenerateMultiTexMipmapEXT = (PFNGLGENERATEMULTITEXMIPMAPEXTPROC)glfwGetProcAddress("glGenerateMultiTexMipmapEXT");
		ext_glFramebufferDrawBufferEXT = (PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)glfwGetProcAddress("glFramebufferDrawBufferEXT");
		ext_glFramebufferDrawBuffersEXT = (PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)glfwGetProcAddress("glFramebufferDrawBuffersEXT");
		ext_glFramebufferReadBufferEXT = (PFNGLFRAMEBUFFERREADBUFFEREXTPROC)glfwGetProcAddress("glFramebufferReadBufferEXT");
		ext_glGetFramebufferParameterivEXT = (PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)glfwGetProcAddress("glGetFramebufferParameterivEXT");
		ext_glNamedRenderbufferStorageMultisampleEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)glfwGetProcAddress("glNamedRenderbufferStorageMultisampleEXT");
		ext_glNamedRenderbufferStorageMultisampleCoverageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)glfwGetProcAddress("glNamedRenderbufferStorageMultisampleCoverageEXT");
		ext_glNamedFramebufferTextureEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)glfwGetProcAddress("glNamedFramebufferTextureEXT");
		ext_glNamedFramebufferTextureLayerEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)glfwGetProcAddress("glNamedFramebufferTextureLayerEXT");
		ext_glNamedFramebufferTextureFaceEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)glfwGetProcAddress("glNamedFramebufferTextureFaceEXT");
		ext_glTextureRenderbufferEXT = (PFNGLTEXTURERENDERBUFFEREXTPROC)glfwGetProcAddress("glTextureRenderbufferEXT");
		ext_glMultiTexRenderbufferEXT = (PFNGLMULTITEXRENDERBUFFEREXTPROC)glfwGetProcAddress("glMultiTexRenderbufferEXT");
		ext_glProgramUniform1dEXT = (PFNGLPROGRAMUNIFORM1DEXTPROC)glfwGetProcAddress("glProgramUniform1dEXT");
		ext_glProgramUniform2dEXT = (PFNGLPROGRAMUNIFORM2DEXTPROC)glfwGetProcAddress("glProgramUniform2dEXT");
		ext_glProgramUniform3dEXT = (PFNGLPROGRAMUNIFORM3DEXTPROC)glfwGetProcAddress("glProgramUniform3dEXT");
		ext_glProgramUniform4dEXT = (PFNGLPROGRAMUNIFORM4DEXTPROC)glfwGetProcAddress("glProgramUniform4dEXT");
		ext_glProgramUniform1dvEXT = (PFNGLPROGRAMUNIFORM1DVEXTPROC)glfwGetProcAddress("glProgramUniform1dvEXT");
		ext_glProgramUniform2dvEXT = (PFNGLPROGRAMUNIFORM2DVEXTPROC)glfwGetProcAddress("glProgramUniform2dvEXT");
		ext_glProgramUniform3dvEXT = (PFNGLPROGRAMUNIFORM3DVEXTPROC)glfwGetProcAddress("glProgramUniform3dvEXT");
		ext_glProgramUniform4dvEXT = (PFNGLPROGRAMUNIFORM4DVEXTPROC)glfwGetProcAddress("glProgramUniform4dvEXT");
		ext_glProgramUniformMatrix2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix2dvEXT");
		ext_glProgramUniformMatrix3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix3dvEXT");
		ext_glProgramUniformMatrix4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix4dvEXT");
		ext_glProgramUniformMatrix2x3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix2x3dvEXT");
		ext_glProgramUniformMatrix2x4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix2x4dvEXT");
		ext_glProgramUniformMatrix3x2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix3x2dvEXT");
		ext_glProgramUniformMatrix3x4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix3x4dvEXT");
		ext_glProgramUniformMatrix4x2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix4x2dvEXT");
		ext_glProgramUniformMatrix4x3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC)glfwGetProcAddress("glProgramUniformMatrix4x3dvEXT");
		ext_glGetMultisamplefvNV = (PFNGLGETMULTISAMPLEFVNVPROC)glfwGetProcAddress("glGetMultisamplefvNV");
		ext_glSampleMaskIndexedNV = (PFNGLSAMPLEMASKINDEXEDNVPROC)glfwGetProcAddress("glSampleMaskIndexedNV");
		ext_glTexRenderbufferNV = (PFNGLTEXRENDERBUFFERNVPROC)glfwGetProcAddress("glTexRenderbufferNV");
		ext_glBindTransformFeedbackNV = (PFNGLBINDTRANSFORMFEEDBACKNVPROC)glfwGetProcAddress("glBindTransformFeedbackNV");
		ext_glDeleteTransformFeedbacksNV = (PFNGLDELETETRANSFORMFEEDBACKSNVPROC)glfwGetProcAddress("glDeleteTransformFeedbacksNV");
		ext_glGenTransformFeedbacksNV = (PFNGLGENTRANSFORMFEEDBACKSNVPROC)glfwGetProcAddress("glGenTransformFeedbacksNV");
		ext_glIsTransformFeedbackNV = (PFNGLISTRANSFORMFEEDBACKNVPROC)glfwGetProcAddress("glIsTransformFeedbackNV");
		ext_glPauseTransformFeedbackNV = (PFNGLPAUSETRANSFORMFEEDBACKNVPROC)glfwGetProcAddress("glPauseTransformFeedbackNV");
		ext_glResumeTransformFeedbackNV = (PFNGLRESUMETRANSFORMFEEDBACKNVPROC)glfwGetProcAddress("glResumeTransformFeedbackNV");
		ext_glDrawTransformFeedbackNV = (PFNGLDRAWTRANSFORMFEEDBACKNVPROC)glfwGetProcAddress("glDrawTransformFeedbackNV");
		ext_glGetPerfMonitorGroupsAMD = (PFNGLGETPERFMONITORGROUPSAMDPROC)glfwGetProcAddress("glGetPerfMonitorGroupsAMD");
		ext_glGetPerfMonitorCountersAMD = (PFNGLGETPERFMONITORCOUNTERSAMDPROC)glfwGetProcAddress("glGetPerfMonitorCountersAMD");
		ext_glGetPerfMonitorGroupStringAMD = (PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)glfwGetProcAddress("glGetPerfMonitorGroupStringAMD");
		ext_glGetPerfMonitorCounterStringAMD = (PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)glfwGetProcAddress("glGetPerfMonitorCounterStringAMD");
		ext_glGetPerfMonitorCounterInfoAMD = (PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)glfwGetProcAddress("glGetPerfMonitorCounterInfoAMD");
		ext_glGenPerfMonitorsAMD = (PFNGLGENPERFMONITORSAMDPROC)glfwGetProcAddress("glGenPerfMonitorsAMD");
		ext_glDeletePerfMonitorsAMD = (PFNGLDELETEPERFMONITORSAMDPROC)glfwGetProcAddress("glDeletePerfMonitorsAMD");
		ext_glSelectPerfMonitorCountersAMD = (PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)glfwGetProcAddress("glSelectPerfMonitorCountersAMD");
		ext_glBeginPerfMonitorAMD = (PFNGLBEGINPERFMONITORAMDPROC)glfwGetProcAddress("glBeginPerfMonitorAMD");
		ext_glEndPerfMonitorAMD = (PFNGLENDPERFMONITORAMDPROC)glfwGetProcAddress("glEndPerfMonitorAMD");
		ext_glGetPerfMonitorCounterDataAMD = (PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)glfwGetProcAddress("glGetPerfMonitorCounterDataAMD");
		ext_glTessellationFactorAMD = (PFNGLTESSELLATIONFACTORAMDPROC)glfwGetProcAddress("glTessellationFactorAMD");
		ext_glTessellationModeAMD = (PFNGLTESSELLATIONMODEAMDPROC)glfwGetProcAddress("glTessellationModeAMD");
		ext_glProvokingVertexEXT = (PFNGLPROVOKINGVERTEXEXTPROC)glfwGetProcAddress("glProvokingVertexEXT");
		ext_glBlendFuncIndexedAMD = (PFNGLBLENDFUNCINDEXEDAMDPROC)glfwGetProcAddress("glBlendFuncIndexedAMD");
		ext_glBlendFuncSeparateIndexedAMD = (PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC)glfwGetProcAddress("glBlendFuncSeparateIndexedAMD");
		ext_glBlendEquationIndexedAMD = (PFNGLBLENDEQUATIONINDEXEDAMDPROC)glfwGetProcAddress("glBlendEquationIndexedAMD");
		ext_glBlendEquationSeparateIndexedAMD = (PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC)glfwGetProcAddress("glBlendEquationSeparateIndexedAMD");
		ext_glTextureRangeAPPLE = (PFNGLTEXTURERANGEAPPLEPROC)glfwGetProcAddress("glTextureRangeAPPLE");
		ext_glGetTexParameterPointervAPPLE = (PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC)glfwGetProcAddress("glGetTexParameterPointervAPPLE");
		ext_glEnableVertexAttribAPPLE = (PFNGLENABLEVERTEXATTRIBAPPLEPROC)glfwGetProcAddress("glEnableVertexAttribAPPLE");
		ext_glDisableVertexAttribAPPLE = (PFNGLDISABLEVERTEXATTRIBAPPLEPROC)glfwGetProcAddress("glDisableVertexAttribAPPLE");
		ext_glIsVertexAttribEnabledAPPLE = (PFNGLISVERTEXATTRIBENABLEDAPPLEPROC)glfwGetProcAddress("glIsVertexAttribEnabledAPPLE");
		ext_glMapVertexAttrib1dAPPLE = (PFNGLMAPVERTEXATTRIB1DAPPLEPROC)glfwGetProcAddress("glMapVertexAttrib1dAPPLE");
		ext_glMapVertexAttrib1fAPPLE = (PFNGLMAPVERTEXATTRIB1FAPPLEPROC)glfwGetProcAddress("glMapVertexAttrib1fAPPLE");
		ext_glMapVertexAttrib2dAPPLE = (PFNGLMAPVERTEXATTRIB2DAPPLEPROC)glfwGetProcAddress("glMapVertexAttrib2dAPPLE");
		ext_glMapVertexAttrib2fAPPLE = (PFNGLMAPVERTEXATTRIB2FAPPLEPROC)glfwGetProcAddress("glMapVertexAttrib2fAPPLE");
		ext_glObjectPurgeableAPPLE = (PFNGLOBJECTPURGEABLEAPPLEPROC)glfwGetProcAddress("glObjectPurgeableAPPLE");
		ext_glObjectUnpurgeableAPPLE = (PFNGLOBJECTUNPURGEABLEAPPLEPROC)glfwGetProcAddress("glObjectUnpurgeableAPPLE");
		ext_glGetObjectParameterivAPPLE = (PFNGLGETOBJECTPARAMETERIVAPPLEPROC)glfwGetProcAddress("glGetObjectParameterivAPPLE");
		ext_glBeginVideoCaptureNV = (PFNGLBEGINVIDEOCAPTURENVPROC)glfwGetProcAddress("glBeginVideoCaptureNV");
		ext_glBindVideoCaptureStreamBufferNV = (PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC)glfwGetProcAddress("glBindVideoCaptureStreamBufferNV");
		ext_glBindVideoCaptureStreamTextureNV = (PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC)glfwGetProcAddress("glBindVideoCaptureStreamTextureNV");
		ext_glEndVideoCaptureNV = (PFNGLENDVIDEOCAPTURENVPROC)glfwGetProcAddress("glEndVideoCaptureNV");
		ext_glGetVideoCaptureivNV = (PFNGLGETVIDEOCAPTUREIVNVPROC)glfwGetProcAddress("glGetVideoCaptureivNV");
		ext_glGetVideoCaptureStreamivNV = (PFNGLGETVIDEOCAPTURESTREAMIVNVPROC)glfwGetProcAddress("glGetVideoCaptureStreamivNV");
		ext_glGetVideoCaptureStreamfvNV = (PFNGLGETVIDEOCAPTURESTREAMFVNVPROC)glfwGetProcAddress("glGetVideoCaptureStreamfvNV");
		ext_glGetVideoCaptureStreamdvNV = (PFNGLGETVIDEOCAPTURESTREAMDVNVPROC)glfwGetProcAddress("glGetVideoCaptureStreamdvNV");
		ext_glVideoCaptureNV = (PFNGLVIDEOCAPTURENVPROC)glfwGetProcAddress("glVideoCaptureNV");
		ext_glVideoCaptureStreamParameterivNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC)glfwGetProcAddress("glVideoCaptureStreamParameterivNV");
		ext_glVideoCaptureStreamParameterfvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC)glfwGetProcAddress("glVideoCaptureStreamParameterfvNV");
		ext_glVideoCaptureStreamParameterdvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC)glfwGetProcAddress("glVideoCaptureStreamParameterdvNV");
		ext_glCopyImageSubDataNV = (PFNGLCOPYIMAGESUBDATANVPROC)glfwGetProcAddress("glCopyImageSubDataNV");
		ext_glUseShaderProgramEXT = (PFNGLUSESHADERPROGRAMEXTPROC)glfwGetProcAddress("glUseShaderProgramEXT");
		ext_glActiveProgramEXT = (PFNGLACTIVEPROGRAMEXTPROC)glfwGetProcAddress("glActiveProgramEXT");
		ext_glCreateShaderProgramEXT = (PFNGLCREATESHADERPROGRAMEXTPROC)glfwGetProcAddress("glCreateShaderProgramEXT");
		ext_glMakeBufferResidentNV = (PFNGLMAKEBUFFERRESIDENTNVPROC)glfwGetProcAddress("glMakeBufferResidentNV");
		ext_glMakeBufferNonResidentNV = (PFNGLMAKEBUFFERNONRESIDENTNVPROC)glfwGetProcAddress("glMakeBufferNonResidentNV");
		ext_glIsBufferResidentNV = (PFNGLISBUFFERRESIDENTNVPROC)glfwGetProcAddress("glIsBufferResidentNV");
		ext_glMakeNamedBufferResidentNV = (PFNGLMAKENAMEDBUFFERRESIDENTNVPROC)glfwGetProcAddress("glMakeNamedBufferResidentNV");
		ext_glMakeNamedBufferNonResidentNV = (PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC)glfwGetProcAddress("glMakeNamedBufferNonResidentNV");
		ext_glIsNamedBufferResidentNV = (PFNGLISNAMEDBUFFERRESIDENTNVPROC)glfwGetProcAddress("glIsNamedBufferResidentNV");
		ext_glGetBufferParameterui64vNV = (PFNGLGETBUFFERPARAMETERUI64VNVPROC)glfwGetProcAddress("glGetBufferParameterui64vNV");
		ext_glGetNamedBufferParameterui64vNV = (PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC)glfwGetProcAddress("glGetNamedBufferParameterui64vNV");
		ext_glGetIntegerui64vNV = (PFNGLGETINTEGERUI64VNVPROC)glfwGetProcAddress("glGetIntegerui64vNV");
		ext_glUniformui64NV = (PFNGLUNIFORMUI64NVPROC)glfwGetProcAddress("glUniformui64NV");
		ext_glUniformui64vNV = (PFNGLUNIFORMUI64VNVPROC)glfwGetProcAddress("glUniformui64vNV");
		ext_glGetUniformui64vNV = (PFNGLGETUNIFORMUI64VNVPROC)glfwGetProcAddress("glGetUniformui64vNV");
		ext_glProgramUniformui64NV = (PFNGLPROGRAMUNIFORMUI64NVPROC)glfwGetProcAddress("glProgramUniformui64NV");
		ext_glProgramUniformui64vNV = (PFNGLPROGRAMUNIFORMUI64VNVPROC)glfwGetProcAddress("glProgramUniformui64vNV");
		ext_glBufferAddressRangeNV = (PFNGLBUFFERADDRESSRANGENVPROC)glfwGetProcAddress("glBufferAddressRangeNV");
		ext_glVertexFormatNV = (PFNGLVERTEXFORMATNVPROC)glfwGetProcAddress("glVertexFormatNV");
		ext_glNormalFormatNV = (PFNGLNORMALFORMATNVPROC)glfwGetProcAddress("glNormalFormatNV");
		ext_glColorFormatNV = (PFNGLCOLORFORMATNVPROC)glfwGetProcAddress("glColorFormatNV");
		ext_glIndexFormatNV = (PFNGLINDEXFORMATNVPROC)glfwGetProcAddress("glIndexFormatNV");
		ext_glTexCoordFormatNV = (PFNGLTEXCOORDFORMATNVPROC)glfwGetProcAddress("glTexCoordFormatNV");
		ext_glEdgeFlagFormatNV = (PFNGLEDGEFLAGFORMATNVPROC)glfwGetProcAddress("glEdgeFlagFormatNV");
		ext_glSecondaryColorFormatNV = (PFNGLSECONDARYCOLORFORMATNVPROC)glfwGetProcAddress("glSecondaryColorFormatNV");
		ext_glFogCoordFormatNV = (PFNGLFOGCOORDFORMATNVPROC)glfwGetProcAddress("glFogCoordFormatNV");
		ext_glVertexAttribFormatNV = (PFNGLVERTEXATTRIBFORMATNVPROC)glfwGetProcAddress("glVertexAttribFormatNV");
		ext_glVertexAttribIFormatNV = (PFNGLVERTEXATTRIBIFORMATNVPROC)glfwGetProcAddress("glVertexAttribIFormatNV");
		ext_glTextureBarrierNV = (PFNGLTEXTUREBARRIERNVPROC)glfwGetProcAddress("glTextureBarrierNV");
		ext_glBindImageTextureEXT = (PFNGLBINDIMAGETEXTUREEXTPROC)glfwGetProcAddress("glBindImageTextureEXT");
		ext_glMemoryBarrierEXT = (PFNGLMEMORYBARRIEREXTPROC)glfwGetProcAddress("glMemoryBarrierEXT");
		ext_glVertexAttribL1dEXT = (PFNGLVERTEXATTRIBL1DEXTPROC)glfwGetProcAddress("glVertexAttribL1dEXT");
		ext_glVertexAttribL2dEXT = (PFNGLVERTEXATTRIBL2DEXTPROC)glfwGetProcAddress("glVertexAttribL2dEXT");
		ext_glVertexAttribL3dEXT = (PFNGLVERTEXATTRIBL3DEXTPROC)glfwGetProcAddress("glVertexAttribL3dEXT");
		ext_glVertexAttribL4dEXT = (PFNGLVERTEXATTRIBL4DEXTPROC)glfwGetProcAddress("glVertexAttribL4dEXT");
		ext_glVertexAttribL1dvEXT = (PFNGLVERTEXATTRIBL1DVEXTPROC)glfwGetProcAddress("glVertexAttribL1dvEXT");
		ext_glVertexAttribL2dvEXT = (PFNGLVERTEXATTRIBL2DVEXTPROC)glfwGetProcAddress("glVertexAttribL2dvEXT");
		ext_glVertexAttribL3dvEXT = (PFNGLVERTEXATTRIBL3DVEXTPROC)glfwGetProcAddress("glVertexAttribL3dvEXT");
		ext_glVertexAttribL4dvEXT = (PFNGLVERTEXATTRIBL4DVEXTPROC)glfwGetProcAddress("glVertexAttribL4dvEXT");
		ext_glVertexAttribLPointerEXT = (PFNGLVERTEXATTRIBLPOINTEREXTPROC)glfwGetProcAddress("glVertexAttribLPointerEXT");
		ext_glGetVertexAttribLdvEXT = (PFNGLGETVERTEXATTRIBLDVEXTPROC)glfwGetProcAddress("glGetVertexAttribLdvEXT");
		ext_glVertexArrayVertexAttribLOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)glfwGetProcAddress("glVertexArrayVertexAttribLOffsetEXT");
		ext_glProgramSubroutineParametersuivNV = (PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC)glfwGetProcAddress("glProgramSubroutineParametersuivNV");
		ext_glGetProgramSubroutineParameteruivNV = (PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC)glfwGetProcAddress("glGetProgramSubroutineParameteruivNV");
		ext_glUniform1i64NV = (PFNGLUNIFORM1I64NVPROC)glfwGetProcAddress("glUniform1i64NV");
		ext_glUniform2i64NV = (PFNGLUNIFORM2I64NVPROC)glfwGetProcAddress("glUniform2i64NV");
		ext_glUniform3i64NV = (PFNGLUNIFORM3I64NVPROC)glfwGetProcAddress("glUniform3i64NV");
		ext_glUniform4i64NV = (PFNGLUNIFORM4I64NVPROC)glfwGetProcAddress("glUniform4i64NV");
		ext_glUniform1i64vNV = (PFNGLUNIFORM1I64VNVPROC)glfwGetProcAddress("glUniform1i64vNV");
		ext_glUniform2i64vNV = (PFNGLUNIFORM2I64VNVPROC)glfwGetProcAddress("glUniform2i64vNV");
		ext_glUniform3i64vNV = (PFNGLUNIFORM3I64VNVPROC)glfwGetProcAddress("glUniform3i64vNV");
		ext_glUniform4i64vNV = (PFNGLUNIFORM4I64VNVPROC)glfwGetProcAddress("glUniform4i64vNV");
		ext_glUniform1ui64NV = (PFNGLUNIFORM1UI64NVPROC)glfwGetProcAddress("glUniform1ui64NV");
		ext_glUniform2ui64NV = (PFNGLUNIFORM2UI64NVPROC)glfwGetProcAddress("glUniform2ui64NV");
		ext_glUniform3ui64NV = (PFNGLUNIFORM3UI64NVPROC)glfwGetProcAddress("glUniform3ui64NV");
		ext_glUniform4ui64NV = (PFNGLUNIFORM4UI64NVPROC)glfwGetProcAddress("glUniform4ui64NV");
		ext_glUniform1ui64vNV = (PFNGLUNIFORM1UI64VNVPROC)glfwGetProcAddress("glUniform1ui64vNV");
		ext_glUniform2ui64vNV = (PFNGLUNIFORM2UI64VNVPROC)glfwGetProcAddress("glUniform2ui64vNV");
		ext_glUniform3ui64vNV = (PFNGLUNIFORM3UI64VNVPROC)glfwGetProcAddress("glUniform3ui64vNV");
		ext_glUniform4ui64vNV = (PFNGLUNIFORM4UI64VNVPROC)glfwGetProcAddress("glUniform4ui64vNV");
		ext_glGetUniformi64vNV = (PFNGLGETUNIFORMI64VNVPROC)glfwGetProcAddress("glGetUniformi64vNV");
		ext_glProgramUniform1i64NV = (PFNGLPROGRAMUNIFORM1I64NVPROC)glfwGetProcAddress("glProgramUniform1i64NV");
		ext_glProgramUniform2i64NV = (PFNGLPROGRAMUNIFORM2I64NVPROC)glfwGetProcAddress("glProgramUniform2i64NV");
		ext_glProgramUniform3i64NV = (PFNGLPROGRAMUNIFORM3I64NVPROC)glfwGetProcAddress("glProgramUniform3i64NV");
		ext_glProgramUniform4i64NV = (PFNGLPROGRAMUNIFORM4I64NVPROC)glfwGetProcAddress("glProgramUniform4i64NV");
		ext_glProgramUniform1i64vNV = (PFNGLPROGRAMUNIFORM1I64VNVPROC)glfwGetProcAddress("glProgramUniform1i64vNV");
		ext_glProgramUniform2i64vNV = (PFNGLPROGRAMUNIFORM2I64VNVPROC)glfwGetProcAddress("glProgramUniform2i64vNV");
		ext_glProgramUniform3i64vNV = (PFNGLPROGRAMUNIFORM3I64VNVPROC)glfwGetProcAddress("glProgramUniform3i64vNV");
		ext_glProgramUniform4i64vNV = (PFNGLPROGRAMUNIFORM4I64VNVPROC)glfwGetProcAddress("glProgramUniform4i64vNV");
		ext_glProgramUniform1ui64NV = (PFNGLPROGRAMUNIFORM1UI64NVPROC)glfwGetProcAddress("glProgramUniform1ui64NV");
		ext_glProgramUniform2ui64NV = (PFNGLPROGRAMUNIFORM2UI64NVPROC)glfwGetProcAddress("glProgramUniform2ui64NV");
		ext_glProgramUniform3ui64NV = (PFNGLPROGRAMUNIFORM3UI64NVPROC)glfwGetProcAddress("glProgramUniform3ui64NV");
		ext_glProgramUniform4ui64NV = (PFNGLPROGRAMUNIFORM4UI64NVPROC)glfwGetProcAddress("glProgramUniform4ui64NV");
		ext_glProgramUniform1ui64vNV = (PFNGLPROGRAMUNIFORM1UI64VNVPROC)glfwGetProcAddress("glProgramUniform1ui64vNV");
		ext_glProgramUniform2ui64vNV = (PFNGLPROGRAMUNIFORM2UI64VNVPROC)glfwGetProcAddress("glProgramUniform2ui64vNV");
		ext_glProgramUniform3ui64vNV = (PFNGLPROGRAMUNIFORM3UI64VNVPROC)glfwGetProcAddress("glProgramUniform3ui64vNV");
		ext_glProgramUniform4ui64vNV = (PFNGLPROGRAMUNIFORM4UI64VNVPROC)glfwGetProcAddress("glProgramUniform4ui64vNV");
		ext_glVertexAttribL1i64NV = (PFNGLVERTEXATTRIBL1I64NVPROC)glfwGetProcAddress("glVertexAttribL1i64NV");
		ext_glVertexAttribL2i64NV = (PFNGLVERTEXATTRIBL2I64NVPROC)glfwGetProcAddress("glVertexAttribL2i64NV");
		ext_glVertexAttribL3i64NV = (PFNGLVERTEXATTRIBL3I64NVPROC)glfwGetProcAddress("glVertexAttribL3i64NV");
		ext_glVertexAttribL4i64NV = (PFNGLVERTEXATTRIBL4I64NVPROC)glfwGetProcAddress("glVertexAttribL4i64NV");
		ext_glVertexAttribL1i64vNV = (PFNGLVERTEXATTRIBL1I64VNVPROC)glfwGetProcAddress("glVertexAttribL1i64vNV");
		ext_glVertexAttribL2i64vNV = (PFNGLVERTEXATTRIBL2I64VNVPROC)glfwGetProcAddress("glVertexAttribL2i64vNV");
		ext_glVertexAttribL3i64vNV = (PFNGLVERTEXATTRIBL3I64VNVPROC)glfwGetProcAddress("glVertexAttribL3i64vNV");
		ext_glVertexAttribL4i64vNV = (PFNGLVERTEXATTRIBL4I64VNVPROC)glfwGetProcAddress("glVertexAttribL4i64vNV");
		ext_glVertexAttribL1ui64NV = (PFNGLVERTEXATTRIBL1UI64NVPROC)glfwGetProcAddress("glVertexAttribL1ui64NV");
		ext_glVertexAttribL2ui64NV = (PFNGLVERTEXATTRIBL2UI64NVPROC)glfwGetProcAddress("glVertexAttribL2ui64NV");
		ext_glVertexAttribL3ui64NV = (PFNGLVERTEXATTRIBL3UI64NVPROC)glfwGetProcAddress("glVertexAttribL3ui64NV");
		ext_glVertexAttribL4ui64NV = (PFNGLVERTEXATTRIBL4UI64NVPROC)glfwGetProcAddress("glVertexAttribL4ui64NV");
		ext_glVertexAttribL1ui64vNV = (PFNGLVERTEXATTRIBL1UI64VNVPROC)glfwGetProcAddress("glVertexAttribL1ui64vNV");
		ext_glVertexAttribL2ui64vNV = (PFNGLVERTEXATTRIBL2UI64VNVPROC)glfwGetProcAddress("glVertexAttribL2ui64vNV");
		ext_glVertexAttribL3ui64vNV = (PFNGLVERTEXATTRIBL3UI64VNVPROC)glfwGetProcAddress("glVertexAttribL3ui64vNV");
		ext_glVertexAttribL4ui64vNV = (PFNGLVERTEXATTRIBL4UI64VNVPROC)glfwGetProcAddress("glVertexAttribL4ui64vNV");
		ext_glGetVertexAttribLi64vNV = (PFNGLGETVERTEXATTRIBLI64VNVPROC)glfwGetProcAddress("glGetVertexAttribLi64vNV");
		ext_glGetVertexAttribLui64vNV = (PFNGLGETVERTEXATTRIBLUI64VNVPROC)glfwGetProcAddress("glGetVertexAttribLui64vNV");
		ext_glVertexAttribLFormatNV = (PFNGLVERTEXATTRIBLFORMATNVPROC)glfwGetProcAddress("glVertexAttribLFormatNV");
		ext_glGenNamesAMD = (PFNGLGENNAMESAMDPROC)glfwGetProcAddress("glGenNamesAMD");
		ext_glDeleteNamesAMD = (PFNGLDELETENAMESAMDPROC)glfwGetProcAddress("glDeleteNamesAMD");
		ext_glIsNameAMD = (PFNGLISNAMEAMDPROC)glfwGetProcAddress("glIsNameAMD");
		ext_glGetDebugMessageLogAMD = (PFNGLGETDEBUGMESSAGELOGAMDPROC)glfwGetProcAddress("glGetDebugMessageLogAMD");
		ext_glVDPAUInitNV = (PFNGLVDPAUINITNVPROC)glfwGetProcAddress("glVDPAUInitNV");
		ext_glVDPAUFiniNV = (PFNGLVDPAUFININVPROC)glfwGetProcAddress("glVDPAUFiniNV");
		ext_glVDPAURegisterVideoSurfaceNV = (PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)glfwGetProcAddress("glVDPAURegisterVideoSurfaceNV");
		ext_glVDPAURegisterOutputSurfaceNV = (PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)glfwGetProcAddress("glVDPAURegisterOutputSurfaceNV");
		ext_glVDPAUIsSurfaceNV = (PFNGLVDPAUISSURFACENVPROC)glfwGetProcAddress("glVDPAUIsSurfaceNV");
		ext_glVDPAUUnregisterSurfaceNV = (PFNGLVDPAUUNREGISTERSURFACENVPROC)glfwGetProcAddress("glVDPAUUnregisterSurfaceNV");
		ext_glVDPAUGetSurfaceivNV = (PFNGLVDPAUGETSURFACEIVNVPROC)glfwGetProcAddress("glVDPAUGetSurfaceivNV");
		ext_glVDPAUSurfaceAccessNV = (PFNGLVDPAUSURFACEACCESSNVPROC)glfwGetProcAddress("glVDPAUSurfaceAccessNV");
		ext_glVDPAUMapSurfacesNV = (PFNGLVDPAUMAPSURFACESNVPROC)glfwGetProcAddress("glVDPAUMapSurfacesNV");
		ext_glVDPAUUnmapSurfacesNV = (PFNGLVDPAUUNMAPSURFACESNVPROC)glfwGetProcAddress("glVDPAUUnmapSurfacesNV");
		ext_glTexImage2DMultisampleCoverageNV = (PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC)glfwGetProcAddress("glTexImage2DMultisampleCoverageNV");
		ext_glTexImage3DMultisampleCoverageNV = (PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC)glfwGetProcAddress("glTexImage3DMultisampleCoverageNV");
		ext_glTextureImage2DMultisampleNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC)glfwGetProcAddress("glTextureImage2DMultisampleNV");
		ext_glTextureImage3DMultisampleNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC)glfwGetProcAddress("glTextureImage3DMultisampleNV");
		ext_glTextureImage2DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC)glfwGetProcAddress("glTextureImage2DMultisampleCoverageNV");
		ext_glTextureImage3DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC)glfwGetProcAddress("glTextureImage3DMultisampleCoverageNV");
		ext_glSetMultisamplefvAMD = (PFNGLSETMULTISAMPLEFVAMDPROC)glfwGetProcAddress("glSetMultisamplefvAMD");
		ext_glImportSyncEXT = (PFNGLIMPORTSYNCEXTPROC)glfwGetProcAddress("glImportSyncEXT");
		ext_glMultiDrawArraysIndirectAMD = (PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC)glfwGetProcAddress("glMultiDrawArraysIndirectAMD");
		ext_glMultiDrawElementsIndirectAMD = (PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC)glfwGetProcAddress("glMultiDrawElementsIndirectAMD");
		ext_glGenPathsNV = (PFNGLGENPATHSNVPROC)glfwGetProcAddress("glGenPathsNV");
		ext_glDeletePathsNV = (PFNGLDELETEPATHSNVPROC)glfwGetProcAddress("glDeletePathsNV");
		ext_glIsPathNV = (PFNGLISPATHNVPROC)glfwGetProcAddress("glIsPathNV");
		ext_glPathCommandsNV = (PFNGLPATHCOMMANDSNVPROC)glfwGetProcAddress("glPathCommandsNV");
		ext_glPathCoordsNV = (PFNGLPATHCOORDSNVPROC)glfwGetProcAddress("glPathCoordsNV");
		ext_glPathSubCommandsNV = (PFNGLPATHSUBCOMMANDSNVPROC)glfwGetProcAddress("glPathSubCommandsNV");
		ext_glPathSubCoordsNV = (PFNGLPATHSUBCOORDSNVPROC)glfwGetProcAddress("glPathSubCoordsNV");
		ext_glPathStringNV = (PFNGLPATHSTRINGNVPROC)glfwGetProcAddress("glPathStringNV");
		ext_glPathGlyphsNV = (PFNGLPATHGLYPHSNVPROC)glfwGetProcAddress("glPathGlyphsNV");
		ext_glPathGlyphRangeNV = (PFNGLPATHGLYPHRANGENVPROC)glfwGetProcAddress("glPathGlyphRangeNV");
		ext_glWeightPathsNV = (PFNGLWEIGHTPATHSNVPROC)glfwGetProcAddress("glWeightPathsNV");
		ext_glCopyPathNV = (PFNGLCOPYPATHNVPROC)glfwGetProcAddress("glCopyPathNV");
		ext_glInterpolatePathsNV = (PFNGLINTERPOLATEPATHSNVPROC)glfwGetProcAddress("glInterpolatePathsNV");
		ext_glTransformPathNV = (PFNGLTRANSFORMPATHNVPROC)glfwGetProcAddress("glTransformPathNV");
		ext_glPathParameterivNV = (PFNGLPATHPARAMETERIVNVPROC)glfwGetProcAddress("glPathParameterivNV");
		ext_glPathParameteriNV = (PFNGLPATHPARAMETERINVPROC)glfwGetProcAddress("glPathParameteriNV");
		ext_glPathParameterfvNV = (PFNGLPATHPARAMETERFVNVPROC)glfwGetProcAddress("glPathParameterfvNV");
		ext_glPathParameterfNV = (PFNGLPATHPARAMETERFNVPROC)glfwGetProcAddress("glPathParameterfNV");
		ext_glPathDashArrayNV = (PFNGLPATHDASHARRAYNVPROC)glfwGetProcAddress("glPathDashArrayNV");
		ext_glPathStencilFuncNV = (PFNGLPATHSTENCILFUNCNVPROC)glfwGetProcAddress("glPathStencilFuncNV");
		ext_glPathStencilDepthOffsetNV = (PFNGLPATHSTENCILDEPTHOFFSETNVPROC)glfwGetProcAddress("glPathStencilDepthOffsetNV");
		ext_glStencilFillPathNV = (PFNGLSTENCILFILLPATHNVPROC)glfwGetProcAddress("glStencilFillPathNV");
		ext_glStencilStrokePathNV = (PFNGLSTENCILSTROKEPATHNVPROC)glfwGetProcAddress("glStencilStrokePathNV");
		ext_glStencilFillPathInstancedNV = (PFNGLSTENCILFILLPATHINSTANCEDNVPROC)glfwGetProcAddress("glStencilFillPathInstancedNV");
		ext_glStencilStrokePathInstancedNV = (PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC)glfwGetProcAddress("glStencilStrokePathInstancedNV");
		ext_glPathCoverDepthFuncNV = (PFNGLPATHCOVERDEPTHFUNCNVPROC)glfwGetProcAddress("glPathCoverDepthFuncNV");
		ext_glPathColorGenNV = (PFNGLPATHCOLORGENNVPROC)glfwGetProcAddress("glPathColorGenNV");
		ext_glPathTexGenNV = (PFNGLPATHTEXGENNVPROC)glfwGetProcAddress("glPathTexGenNV");
		ext_glPathFogGenNV = (PFNGLPATHFOGGENNVPROC)glfwGetProcAddress("glPathFogGenNV");
		ext_glCoverFillPathNV = (PFNGLCOVERFILLPATHNVPROC)glfwGetProcAddress("glCoverFillPathNV");
		ext_glCoverStrokePathNV = (PFNGLCOVERSTROKEPATHNVPROC)glfwGetProcAddress("glCoverStrokePathNV");
		ext_glCoverFillPathInstancedNV = (PFNGLCOVERFILLPATHINSTANCEDNVPROC)glfwGetProcAddress("glCoverFillPathInstancedNV");
		ext_glCoverStrokePathInstancedNV = (PFNGLCOVERSTROKEPATHINSTANCEDNVPROC)glfwGetProcAddress("glCoverStrokePathInstancedNV");
		ext_glGetPathParameterivNV = (PFNGLGETPATHPARAMETERIVNVPROC)glfwGetProcAddress("glGetPathParameterivNV");
		ext_glGetPathParameterfvNV = (PFNGLGETPATHPARAMETERFVNVPROC)glfwGetProcAddress("glGetPathParameterfvNV");
		ext_glGetPathCommandsNV = (PFNGLGETPATHCOMMANDSNVPROC)glfwGetProcAddress("glGetPathCommandsNV");
		ext_glGetPathCoordsNV = (PFNGLGETPATHCOORDSNVPROC)glfwGetProcAddress("glGetPathCoordsNV");
		ext_glGetPathDashArrayNV = (PFNGLGETPATHDASHARRAYNVPROC)glfwGetProcAddress("glGetPathDashArrayNV");
		ext_glGetPathMetricsNV = (PFNGLGETPATHMETRICSNVPROC)glfwGetProcAddress("glGetPathMetricsNV");
		ext_glGetPathMetricRangeNV = (PFNGLGETPATHMETRICRANGENVPROC)glfwGetProcAddress("glGetPathMetricRangeNV");
		ext_glGetPathSpacingNV = (PFNGLGETPATHSPACINGNVPROC)glfwGetProcAddress("glGetPathSpacingNV");
		ext_glGetPathColorGenivNV = (PFNGLGETPATHCOLORGENIVNVPROC)glfwGetProcAddress("glGetPathColorGenivNV");
		ext_glGetPathColorGenfvNV = (PFNGLGETPATHCOLORGENFVNVPROC)glfwGetProcAddress("glGetPathColorGenfvNV");
		ext_glGetPathTexGenivNV = (PFNGLGETPATHTEXGENIVNVPROC)glfwGetProcAddress("glGetPathTexGenivNV");
		ext_glGetPathTexGenfvNV = (PFNGLGETPATHTEXGENFVNVPROC)glfwGetProcAddress("glGetPathTexGenfvNV");
		ext_glIsPointInFillPathNV = (PFNGLISPOINTINFILLPATHNVPROC)glfwGetProcAddress("glIsPointInFillPathNV");
		ext_glIsPointInStrokePathNV = (PFNGLISPOINTINSTROKEPATHNVPROC)glfwGetProcAddress("glIsPointInStrokePathNV");
		ext_glGetPathLengthNV = (PFNGLGETPATHLENGTHNVPROC)glfwGetProcAddress("glGetPathLengthNV");
		ext_glPointAlongPathNV = (PFNGLPOINTALONGPATHNVPROC)glfwGetProcAddress("glPointAlongPathNV");
		ext_glStencilOpValueAMD = (PFNGLSTENCILOPVALUEAMDPROC)glfwGetProcAddress("glStencilOpValueAMD");
		ext_glGetTextureHandleNV = (PFNGLGETTEXTUREHANDLENVPROC)glfwGetProcAddress("glGetTextureHandleNV");
		ext_glGetTextureSamplerHandleNV = (PFNGLGETTEXTURESAMPLERHANDLENVPROC)glfwGetProcAddress("glGetTextureSamplerHandleNV");
		ext_glMakeTextureHandleResidentNV = (PFNGLMAKETEXTUREHANDLERESIDENTNVPROC)glfwGetProcAddress("glMakeTextureHandleResidentNV");
		ext_glMakeTextureHandleNonResidentNV = (PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC)glfwGetProcAddress("glMakeTextureHandleNonResidentNV");
		ext_glGetImageHandleNV = (PFNGLGETIMAGEHANDLENVPROC)glfwGetProcAddress("glGetImageHandleNV");
		ext_glMakeImageHandleResidentNV = (PFNGLMAKEIMAGEHANDLERESIDENTNVPROC)glfwGetProcAddress("glMakeImageHandleResidentNV");
		ext_glMakeImageHandleNonResidentNV = (PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC)glfwGetProcAddress("glMakeImageHandleNonResidentNV");
		ext_glUniformHandleui64NV = (PFNGLUNIFORMHANDLEUI64NVPROC)glfwGetProcAddress("glUniformHandleui64NV");
		ext_glUniformHandleui64vNV = (PFNGLUNIFORMHANDLEUI64VNVPROC)glfwGetProcAddress("glUniformHandleui64vNV");
		ext_glProgramUniformHandleui64NV = (PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC)glfwGetProcAddress("glProgramUniformHandleui64NV");
		ext_glProgramUniformHandleui64vNV = (PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC)glfwGetProcAddress("glProgramUniformHandleui64vNV");
		ext_glIsTextureHandleResidentNV = (PFNGLISTEXTUREHANDLERESIDENTNVPROC)glfwGetProcAddress("glIsTextureHandleResidentNV");
		ext_glIsImageHandleResidentNV = (PFNGLISIMAGEHANDLERESIDENTNVPROC)glfwGetProcAddress("glIsImageHandleResidentNV");
		ext_glBeginConditionalRenderNVX = (PFNGLBEGINCONDITIONALRENDERNVXPROC)glfwGetProcAddress("glBeginConditionalRenderNVX");
		ext_glEndConditionalRenderNVX = (PFNGLENDCONDITIONALRENDERNVXPROC)glfwGetProcAddress("glEndConditionalRenderNVX");
		ext_glTexStorageSparseAMD = (PFNGLTEXSTORAGESPARSEAMDPROC)glfwGetProcAddress("glTexStorageSparseAMD");
		ext_glTextureStorageSparseAMD = (PFNGLTEXTURESTORAGESPARSEAMDPROC)glfwGetProcAddress("glTextureStorageSparseAMD");
		ext_glSyncTextureINTEL = (PFNGLSYNCTEXTUREINTELPROC)glfwGetProcAddress("glSyncTextureINTEL");
		ext_glUnmapTexture2DINTEL = (PFNGLUNMAPTEXTURE2DINTELPROC)glfwGetProcAddress("glUnmapTexture2DINTEL");
		ext_glMapTexture2DINTEL = (PFNGLMAPTEXTURE2DINTELPROC)glfwGetProcAddress("glMapTexture2DINTEL");
		ext_glDrawTextureNV = (PFNGLDRAWTEXTURENVPROC)glfwGetProcAddress("glDrawTextureNV");
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearIndex(JNIEnv* env, jclass clazz, jfloat c) {


//@line:9299

		glClearIndex((GLfloat)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearColor(JNIEnv* env, jclass clazz, jfloat red, jfloat green, jfloat blue, jfloat alpha) {


//@line:9303

		glClearColor((GLclampf)red, (GLclampf)green, (GLclampf)blue, (GLclampf)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClear(JNIEnv* env, jclass clazz, jint mask) {


//@line:9307

		glClear((GLbitfield)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexMask(JNIEnv* env, jclass clazz, jint mask) {


//@line:9311

		glIndexMask((GLuint)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorMask(JNIEnv* env, jclass clazz, jboolean red, jboolean green, jboolean blue, jboolean alpha) {


//@line:9315

		glColorMask((GLboolean)red, (GLboolean)green, (GLboolean)blue, (GLboolean)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glAlphaFunc(JNIEnv* env, jclass clazz, jint func, jfloat ref) {


//@line:9319

		glAlphaFunc((GLenum)func, (GLclampf)ref);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendFunc(JNIEnv* env, jclass clazz, jint sfactor, jint dfactor) {


//@line:9323

		glBlendFunc((GLenum)sfactor, (GLenum)dfactor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLogicOp(JNIEnv* env, jclass clazz, jint opcode) {


//@line:9327

		glLogicOp((GLenum)opcode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCullFace(JNIEnv* env, jclass clazz, jint mode) {


//@line:9331

		glCullFace((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFrontFace(JNIEnv* env, jclass clazz, jint mode) {


//@line:9335

		glFrontFace((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointSize(JNIEnv* env, jclass clazz, jfloat size) {


//@line:9339

		glPointSize((GLfloat)size);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLineWidth(JNIEnv* env, jclass clazz, jfloat width) {


//@line:9343

		glLineWidth((GLfloat)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLineStipple(JNIEnv* env, jclass clazz, jint factor, jshort pattern) {


//@line:9347

		glLineStipple((GLint)factor, (GLushort)pattern);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPolygonMode(JNIEnv* env, jclass clazz, jint face, jint mode) {


//@line:9351

		glPolygonMode((GLenum)face, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPolygonOffset(JNIEnv* env, jclass clazz, jfloat factor, jfloat units) {


//@line:9355

		glPolygonOffset((GLfloat)factor, (GLfloat)units);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPolygonStipple__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_mask, jint maskByteOffset) {
	unsigned char* mask = (unsigned char*)(obj_mask?env->GetDirectBufferAddress(obj_mask):0);


//@line:9359

		glPolygonStipple((const GLubyte*)(mask + maskByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPolygonStipple__J(JNIEnv* env, jclass clazz, jlong mask) {


//@line:9363

		glPolygonStipple((const GLubyte*)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPolygonStipple__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_mask, jint maskByteOffset) {
	unsigned char* mask = (unsigned char*)(obj_mask?env->GetDirectBufferAddress(obj_mask):0);


//@line:9367

		glGetPolygonStipple((GLubyte*)(mask + maskByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPolygonStipple__J(JNIEnv* env, jclass clazz, jlong mask) {


//@line:9371

		glGetPolygonStipple((GLubyte*)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEdgeFlag(JNIEnv* env, jclass clazz, jboolean flag) {


//@line:9375

		glEdgeFlag((GLboolean)flag);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEdgeFlagv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_flag, jint flagByteOffset) {
	unsigned char* flag = (unsigned char*)(obj_flag?env->GetDirectBufferAddress(obj_flag):0);


//@line:9379

		glEdgeFlagv((const GLboolean*)(flag + flagByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEdgeFlagv__J(JNIEnv* env, jclass clazz, jlong flag) {


//@line:9383

		glEdgeFlagv((const GLboolean*)flag);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glScissor(JNIEnv* env, jclass clazz, jint x, jint y, jint width, jint height) {


//@line:9387

		glScissor((GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClipPlane__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint plane, jobject obj_equation, jint equationByteOffset) {
	unsigned char* equation = (unsigned char*)(obj_equation?env->GetDirectBufferAddress(obj_equation):0);


//@line:9391

		glClipPlane((GLenum)plane, (const GLdouble*)(equation + equationByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClipPlane__IJ(JNIEnv* env, jclass clazz, jint plane, jlong equation) {


//@line:9395

		glClipPlane((GLenum)plane, (const GLdouble*)equation);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetClipPlane__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint plane, jobject obj_equation, jint equationByteOffset) {
	unsigned char* equation = (unsigned char*)(obj_equation?env->GetDirectBufferAddress(obj_equation):0);


//@line:9399

		glGetClipPlane((GLenum)plane, (GLdouble*)(equation + equationByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetClipPlane__IJ(JNIEnv* env, jclass clazz, jint plane, jlong equation) {


//@line:9403

		glGetClipPlane((GLenum)plane, (GLdouble*)equation);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawBuffer(JNIEnv* env, jclass clazz, jint mode) {


//@line:9407

		glDrawBuffer((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReadBuffer(JNIEnv* env, jclass clazz, jint mode) {


//@line:9411

		glReadBuffer((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEnable(JNIEnv* env, jclass clazz, jint cap) {


//@line:9415

		glEnable((GLenum)cap);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDisable(JNIEnv* env, jclass clazz, jint cap) {


//@line:9419

		glDisable((GLenum)cap);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsEnabled(JNIEnv* env, jclass clazz, jint cap) {


//@line:9423

		return (jboolean)glIsEnabled((GLenum)cap);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEnableClientState(JNIEnv* env, jclass clazz, jint cap) {


//@line:9427

		glEnableClientState((GLenum)cap);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDisableClientState(JNIEnv* env, jclass clazz, jint cap) {


//@line:9431

		glDisableClientState((GLenum)cap);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBooleanv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:9435

		glGetBooleanv((GLenum)pname, (GLboolean*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBooleanv__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:9439

		glGetBooleanv((GLenum)pname, (GLboolean*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDoublev__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:9443

		glGetDoublev((GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDoublev__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:9447

		glGetDoublev((GLenum)pname, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFloatv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:9451

		glGetFloatv((GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFloatv__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:9455

		glGetFloatv((GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetIntegerv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:9459

		glGetIntegerv((GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetIntegerv__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:9463

		glGetIntegerv((GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPushAttrib(JNIEnv* env, jclass clazz, jint mask) {


//@line:9467

		glPushAttrib((GLbitfield)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPopAttrib(JNIEnv* env, jclass clazz) {


//@line:9471

		glPopAttrib();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPushClientAttrib(JNIEnv* env, jclass clazz, jint mask) {


//@line:9475

		glPushClientAttrib((GLbitfield)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPopClientAttrib(JNIEnv* env, jclass clazz) {


//@line:9479

		glPopClientAttrib();
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glRenderMode(JNIEnv* env, jclass clazz, jint mode) {


//@line:9483

		return (jint)glRenderMode((GLenum)mode);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetError(JNIEnv* env, jclass clazz) {


//@line:9487

		return (jint)glGetError();
	

}

JNIEXPORT jstring JNICALL Java_com_badlogic_jglfw_gl_GL_glGetString__I(JNIEnv* env, jclass clazz, jint name) {


//@line:9491

		return env->NewStringUTF((const char*)glGetString((GLenum)name));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFinish(JNIEnv* env, jclass clazz) {


//@line:9495

		glFinish();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFlush(JNIEnv* env, jclass clazz) {


//@line:9499

		glFlush();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glHint(JNIEnv* env, jclass clazz, jint target, jint mode) {


//@line:9503

		glHint((GLenum)target, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearDepth(JNIEnv* env, jclass clazz, jdouble depth) {


//@line:9507

		glClearDepth((GLclampd)depth);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthFunc(JNIEnv* env, jclass clazz, jint func) {


//@line:9511

		glDepthFunc((GLenum)func);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthMask(JNIEnv* env, jclass clazz, jboolean flag) {


//@line:9515

		glDepthMask((GLboolean)flag);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthRange(JNIEnv* env, jclass clazz, jdouble near_val, jdouble far_val) {


//@line:9519

		glDepthRange((GLclampd)near_val, (GLclampd)far_val);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearAccum(JNIEnv* env, jclass clazz, jfloat red, jfloat green, jfloat blue, jfloat alpha) {


//@line:9523

		glClearAccum((GLfloat)red, (GLfloat)green, (GLfloat)blue, (GLfloat)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glAccum(JNIEnv* env, jclass clazz, jint op, jfloat value) {


//@line:9527

		glAccum((GLenum)op, (GLfloat)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixMode(JNIEnv* env, jclass clazz, jint mode) {


//@line:9531

		glMatrixMode((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glOrtho(JNIEnv* env, jclass clazz, jdouble left, jdouble right, jdouble bottom, jdouble top, jdouble near_val, jdouble far_val) {


//@line:9535

		glOrtho((GLdouble)left, (GLdouble)right, (GLdouble)bottom, (GLdouble)top, (GLdouble)near_val, (GLdouble)far_val);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFrustum(JNIEnv* env, jclass clazz, jdouble left, jdouble right, jdouble bottom, jdouble top, jdouble near_val, jdouble far_val) {


//@line:9539

		glFrustum((GLdouble)left, (GLdouble)right, (GLdouble)bottom, (GLdouble)top, (GLdouble)near_val, (GLdouble)far_val);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glViewport(JNIEnv* env, jclass clazz, jint x, jint y, jint width, jint height) {


//@line:9543

		glViewport((GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPushMatrix(JNIEnv* env, jclass clazz) {


//@line:9547

		glPushMatrix();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPopMatrix(JNIEnv* env, jclass clazz) {


//@line:9551

		glPopMatrix();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadIdentity(JNIEnv* env, jclass clazz) {


//@line:9555

		glLoadIdentity();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadMatrixd__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:9559

		glLoadMatrixd((const GLdouble*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadMatrixd__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:9563

		glLoadMatrixd((const GLdouble*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadMatrixf__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:9567

		glLoadMatrixf((const GLfloat*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadMatrixf__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:9571

		glLoadMatrixf((const GLfloat*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultMatrixd__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:9575

		glMultMatrixd((const GLdouble*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultMatrixd__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:9579

		glMultMatrixd((const GLdouble*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultMatrixf__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:9583

		glMultMatrixf((const GLfloat*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultMatrixf__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:9587

		glMultMatrixf((const GLfloat*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRotated(JNIEnv* env, jclass clazz, jdouble angle, jdouble x, jdouble y, jdouble z) {


//@line:9591

		glRotated((GLdouble)angle, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRotatef(JNIEnv* env, jclass clazz, jfloat angle, jfloat x, jfloat y, jfloat z) {


//@line:9595

		glRotatef((GLfloat)angle, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glScaled(JNIEnv* env, jclass clazz, jdouble x, jdouble y, jdouble z) {


//@line:9599

		glScaled((GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glScalef(JNIEnv* env, jclass clazz, jfloat x, jfloat y, jfloat z) {


//@line:9603

		glScalef((GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTranslated(JNIEnv* env, jclass clazz, jdouble x, jdouble y, jdouble z) {


//@line:9607

		glTranslated((GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTranslatef(JNIEnv* env, jclass clazz, jfloat x, jfloat y, jfloat z) {


//@line:9611

		glTranslatef((GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsList(JNIEnv* env, jclass clazz, jint list) {


//@line:9615

		return (jboolean)glIsList((GLuint)list);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteLists(JNIEnv* env, jclass clazz, jint list, jint range) {


//@line:9619

		glDeleteLists((GLuint)list, (GLsizei)range);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGenLists(JNIEnv* env, jclass clazz, jint range) {


//@line:9623

		return (jint)glGenLists((GLsizei)range);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNewList(JNIEnv* env, jclass clazz, jint list, jint mode) {


//@line:9627

		glNewList((GLuint)list, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndList(JNIEnv* env, jclass clazz) {


//@line:9631

		glEndList();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCallList(JNIEnv* env, jclass clazz, jint list) {


//@line:9635

		glCallList((GLuint)list);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCallLists__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jint type, jobject obj_lists, jint listsByteOffset) {
	unsigned char* lists = (unsigned char*)(obj_lists?env->GetDirectBufferAddress(obj_lists):0);


//@line:9639

		glCallLists((GLsizei)n, (GLenum)type, (const GLvoid*)(lists + listsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCallLists__IIJ(JNIEnv* env, jclass clazz, jint n, jint type, jlong lists) {


//@line:9643

		glCallLists((GLsizei)n, (GLenum)type, (const GLvoid*)lists);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glListBase(JNIEnv* env, jclass clazz, jint base) {


//@line:9647

		glListBase((GLuint)base);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBegin(JNIEnv* env, jclass clazz, jint mode) {


//@line:9651

		glBegin((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEnd(JNIEnv* env, jclass clazz) {


//@line:9655

		glEnd();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2d(JNIEnv* env, jclass clazz, jdouble x, jdouble y) {


//@line:9659

		glVertex2d((GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2f(JNIEnv* env, jclass clazz, jfloat x, jfloat y) {


//@line:9663

		glVertex2f((GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2i(JNIEnv* env, jclass clazz, jint x, jint y) {


//@line:9667

		glVertex2i((GLint)x, (GLint)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2s(JNIEnv* env, jclass clazz, jshort x, jshort y) {


//@line:9671

		glVertex2s((GLshort)x, (GLshort)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3d(JNIEnv* env, jclass clazz, jdouble x, jdouble y, jdouble z) {


//@line:9675

		glVertex3d((GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3f(JNIEnv* env, jclass clazz, jfloat x, jfloat y, jfloat z) {


//@line:9679

		glVertex3f((GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3i(JNIEnv* env, jclass clazz, jint x, jint y, jint z) {


//@line:9683

		glVertex3i((GLint)x, (GLint)y, (GLint)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3s(JNIEnv* env, jclass clazz, jshort x, jshort y, jshort z) {


//@line:9687

		glVertex3s((GLshort)x, (GLshort)y, (GLshort)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4d(JNIEnv* env, jclass clazz, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:9691

		glVertex4d((GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4f(JNIEnv* env, jclass clazz, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:9695

		glVertex4f((GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4i(JNIEnv* env, jclass clazz, jint x, jint y, jint z, jint w) {


//@line:9699

		glVertex4i((GLint)x, (GLint)y, (GLint)z, (GLint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4s(JNIEnv* env, jclass clazz, jshort x, jshort y, jshort z, jshort w) {


//@line:9703

		glVertex4s((GLshort)x, (GLshort)y, (GLshort)z, (GLshort)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9707

		glVertex2dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9711

		glVertex2dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9715

		glVertex2fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9719

		glVertex2fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9723

		glVertex2iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9727

		glVertex2iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9731

		glVertex2sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9735

		glVertex2sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9739

		glVertex3dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9743

		glVertex3dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9747

		glVertex3fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9751

		glVertex3fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9755

		glVertex3iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9759

		glVertex3iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9763

		glVertex3sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9767

		glVertex3sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9771

		glVertex4dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9775

		glVertex4dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9779

		glVertex4fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9783

		glVertex4fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9787

		glVertex4iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9791

		glVertex4iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9795

		glVertex4sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9799

		glVertex4sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3b(JNIEnv* env, jclass clazz, jbyte nx, jbyte ny, jbyte nz) {


//@line:9803

		glNormal3b((GLbyte)nx, (GLbyte)ny, (GLbyte)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3d(JNIEnv* env, jclass clazz, jdouble nx, jdouble ny, jdouble nz) {


//@line:9807

		glNormal3d((GLdouble)nx, (GLdouble)ny, (GLdouble)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3f(JNIEnv* env, jclass clazz, jfloat nx, jfloat ny, jfloat nz) {


//@line:9811

		glNormal3f((GLfloat)nx, (GLfloat)ny, (GLfloat)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3i(JNIEnv* env, jclass clazz, jint nx, jint ny, jint nz) {


//@line:9815

		glNormal3i((GLint)nx, (GLint)ny, (GLint)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3s(JNIEnv* env, jclass clazz, jshort nx, jshort ny, jshort nz) {


//@line:9819

		glNormal3s((GLshort)nx, (GLshort)ny, (GLshort)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3bv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9823

		glNormal3bv((const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3bv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9827

		glNormal3bv((const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9831

		glNormal3dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9835

		glNormal3dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9839

		glNormal3fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9843

		glNormal3fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9847

		glNormal3iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9851

		glNormal3iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9855

		glNormal3sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9859

		glNormal3sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexd(JNIEnv* env, jclass clazz, jdouble c) {


//@line:9863

		glIndexd((GLdouble)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexf(JNIEnv* env, jclass clazz, jfloat c) {


//@line:9867

		glIndexf((GLfloat)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexi(JNIEnv* env, jclass clazz, jint c) {


//@line:9871

		glIndexi((GLint)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexs(JNIEnv* env, jclass clazz, jshort c) {


//@line:9875

		glIndexs((GLshort)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexub(JNIEnv* env, jclass clazz, jbyte c) {


//@line:9879

		glIndexub((GLubyte)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexdv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_c, jint cByteOffset) {
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);


//@line:9883

		glIndexdv((const GLdouble*)(c + cByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexdv__J(JNIEnv* env, jclass clazz, jlong c) {


//@line:9887

		glIndexdv((const GLdouble*)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexfv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_c, jint cByteOffset) {
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);


//@line:9891

		glIndexfv((const GLfloat*)(c + cByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexfv__J(JNIEnv* env, jclass clazz, jlong c) {


//@line:9895

		glIndexfv((const GLfloat*)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexiv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_c, jint cByteOffset) {
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);


//@line:9899

		glIndexiv((const GLint*)(c + cByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexiv__J(JNIEnv* env, jclass clazz, jlong c) {


//@line:9903

		glIndexiv((const GLint*)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexsv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_c, jint cByteOffset) {
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);


//@line:9907

		glIndexsv((const GLshort*)(c + cByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexsv__J(JNIEnv* env, jclass clazz, jlong c) {


//@line:9911

		glIndexsv((const GLshort*)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexubv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_c, jint cByteOffset) {
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);


//@line:9915

		glIndexubv((const GLubyte*)(c + cByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexubv__J(JNIEnv* env, jclass clazz, jlong c) {


//@line:9919

		glIndexubv((const GLubyte*)c);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3b(JNIEnv* env, jclass clazz, jbyte red, jbyte green, jbyte blue) {


//@line:9923

		glColor3b((GLbyte)red, (GLbyte)green, (GLbyte)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3d(JNIEnv* env, jclass clazz, jdouble red, jdouble green, jdouble blue) {


//@line:9927

		glColor3d((GLdouble)red, (GLdouble)green, (GLdouble)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3f(JNIEnv* env, jclass clazz, jfloat red, jfloat green, jfloat blue) {


//@line:9931

		glColor3f((GLfloat)red, (GLfloat)green, (GLfloat)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3i(JNIEnv* env, jclass clazz, jint red, jint green, jint blue) {


//@line:9935

		glColor3i((GLint)red, (GLint)green, (GLint)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3s(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue) {


//@line:9939

		glColor3s((GLshort)red, (GLshort)green, (GLshort)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3ub(JNIEnv* env, jclass clazz, jbyte red, jbyte green, jbyte blue) {


//@line:9943

		glColor3ub((GLubyte)red, (GLubyte)green, (GLubyte)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3ui(JNIEnv* env, jclass clazz, jint red, jint green, jint blue) {


//@line:9947

		glColor3ui((GLuint)red, (GLuint)green, (GLuint)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3us(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue) {


//@line:9951

		glColor3us((GLushort)red, (GLushort)green, (GLushort)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4b(JNIEnv* env, jclass clazz, jbyte red, jbyte green, jbyte blue, jbyte alpha) {


//@line:9955

		glColor4b((GLbyte)red, (GLbyte)green, (GLbyte)blue, (GLbyte)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4d(JNIEnv* env, jclass clazz, jdouble red, jdouble green, jdouble blue, jdouble alpha) {


//@line:9959

		glColor4d((GLdouble)red, (GLdouble)green, (GLdouble)blue, (GLdouble)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4f(JNIEnv* env, jclass clazz, jfloat red, jfloat green, jfloat blue, jfloat alpha) {


//@line:9963

		glColor4f((GLfloat)red, (GLfloat)green, (GLfloat)blue, (GLfloat)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4i(JNIEnv* env, jclass clazz, jint red, jint green, jint blue, jint alpha) {


//@line:9967

		glColor4i((GLint)red, (GLint)green, (GLint)blue, (GLint)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4s(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue, jshort alpha) {


//@line:9971

		glColor4s((GLshort)red, (GLshort)green, (GLshort)blue, (GLshort)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4ub(JNIEnv* env, jclass clazz, jbyte red, jbyte green, jbyte blue, jbyte alpha) {


//@line:9975

		glColor4ub((GLubyte)red, (GLubyte)green, (GLubyte)blue, (GLubyte)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4ui(JNIEnv* env, jclass clazz, jint red, jint green, jint blue, jint alpha) {


//@line:9979

		glColor4ui((GLuint)red, (GLuint)green, (GLuint)blue, (GLuint)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4us(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue, jshort alpha) {


//@line:9983

		glColor4us((GLushort)red, (GLushort)green, (GLushort)blue, (GLushort)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3bv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9987

		glColor3bv((const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3bv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9991

		glColor3bv((const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:9995

		glColor3dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:9999

		glColor3dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10003

		glColor3fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10007

		glColor3fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10011

		glColor3iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10015

		glColor3iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10019

		glColor3sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10023

		glColor3sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3ubv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10027

		glColor3ubv((const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3ubv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10031

		glColor3ubv((const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3uiv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10035

		glColor3uiv((const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3uiv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10039

		glColor3uiv((const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3usv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10043

		glColor3usv((const GLushort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3usv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10047

		glColor3usv((const GLushort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4bv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10051

		glColor4bv((const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4bv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10055

		glColor4bv((const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10059

		glColor4dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10063

		glColor4dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10067

		glColor4fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10071

		glColor4fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10075

		glColor4iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10079

		glColor4iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10083

		glColor4sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10087

		glColor4sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4ubv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10091

		glColor4ubv((const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4ubv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10095

		glColor4ubv((const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4uiv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10099

		glColor4uiv((const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4uiv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10103

		glColor4uiv((const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4usv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10107

		glColor4usv((const GLushort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4usv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10111

		glColor4usv((const GLushort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1d(JNIEnv* env, jclass clazz, jdouble s) {


//@line:10115

		glTexCoord1d((GLdouble)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1f(JNIEnv* env, jclass clazz, jfloat s) {


//@line:10119

		glTexCoord1f((GLfloat)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1i(JNIEnv* env, jclass clazz, jint s) {


//@line:10123

		glTexCoord1i((GLint)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1s(JNIEnv* env, jclass clazz, jshort s) {


//@line:10127

		glTexCoord1s((GLshort)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2d(JNIEnv* env, jclass clazz, jdouble s, jdouble t) {


//@line:10131

		glTexCoord2d((GLdouble)s, (GLdouble)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2f(JNIEnv* env, jclass clazz, jfloat s, jfloat t) {


//@line:10135

		glTexCoord2f((GLfloat)s, (GLfloat)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2i(JNIEnv* env, jclass clazz, jint s, jint t) {


//@line:10139

		glTexCoord2i((GLint)s, (GLint)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2s(JNIEnv* env, jclass clazz, jshort s, jshort t) {


//@line:10143

		glTexCoord2s((GLshort)s, (GLshort)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3d(JNIEnv* env, jclass clazz, jdouble s, jdouble t, jdouble r) {


//@line:10147

		glTexCoord3d((GLdouble)s, (GLdouble)t, (GLdouble)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3f(JNIEnv* env, jclass clazz, jfloat s, jfloat t, jfloat r) {


//@line:10151

		glTexCoord3f((GLfloat)s, (GLfloat)t, (GLfloat)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3i(JNIEnv* env, jclass clazz, jint s, jint t, jint r) {


//@line:10155

		glTexCoord3i((GLint)s, (GLint)t, (GLint)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3s(JNIEnv* env, jclass clazz, jshort s, jshort t, jshort r) {


//@line:10159

		glTexCoord3s((GLshort)s, (GLshort)t, (GLshort)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4d(JNIEnv* env, jclass clazz, jdouble s, jdouble t, jdouble r, jdouble q) {


//@line:10163

		glTexCoord4d((GLdouble)s, (GLdouble)t, (GLdouble)r, (GLdouble)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4f(JNIEnv* env, jclass clazz, jfloat s, jfloat t, jfloat r, jfloat q) {


//@line:10167

		glTexCoord4f((GLfloat)s, (GLfloat)t, (GLfloat)r, (GLfloat)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4i(JNIEnv* env, jclass clazz, jint s, jint t, jint r, jint q) {


//@line:10171

		glTexCoord4i((GLint)s, (GLint)t, (GLint)r, (GLint)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4s(JNIEnv* env, jclass clazz, jshort s, jshort t, jshort r, jshort q) {


//@line:10175

		glTexCoord4s((GLshort)s, (GLshort)t, (GLshort)r, (GLshort)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10179

		glTexCoord1dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10183

		glTexCoord1dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10187

		glTexCoord1fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10191

		glTexCoord1fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10195

		glTexCoord1iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10199

		glTexCoord1iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10203

		glTexCoord1sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10207

		glTexCoord1sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10211

		glTexCoord2dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10215

		glTexCoord2dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10219

		glTexCoord2fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10223

		glTexCoord2fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10227

		glTexCoord2iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10231

		glTexCoord2iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10235

		glTexCoord2sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10239

		glTexCoord2sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10243

		glTexCoord3dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10247

		glTexCoord3dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10251

		glTexCoord3fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10255

		glTexCoord3fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10259

		glTexCoord3iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10263

		glTexCoord3iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10267

		glTexCoord3sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10271

		glTexCoord3sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10275

		glTexCoord4dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10279

		glTexCoord4dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10283

		glTexCoord4fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10287

		glTexCoord4fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10291

		glTexCoord4iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10295

		glTexCoord4iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10299

		glTexCoord4sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10303

		glTexCoord4sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2d(JNIEnv* env, jclass clazz, jdouble x, jdouble y) {


//@line:10307

		glRasterPos2d((GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2f(JNIEnv* env, jclass clazz, jfloat x, jfloat y) {


//@line:10311

		glRasterPos2f((GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2i(JNIEnv* env, jclass clazz, jint x, jint y) {


//@line:10315

		glRasterPos2i((GLint)x, (GLint)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2s(JNIEnv* env, jclass clazz, jshort x, jshort y) {


//@line:10319

		glRasterPos2s((GLshort)x, (GLshort)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3d(JNIEnv* env, jclass clazz, jdouble x, jdouble y, jdouble z) {


//@line:10323

		glRasterPos3d((GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3f(JNIEnv* env, jclass clazz, jfloat x, jfloat y, jfloat z) {


//@line:10327

		glRasterPos3f((GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3i(JNIEnv* env, jclass clazz, jint x, jint y, jint z) {


//@line:10331

		glRasterPos3i((GLint)x, (GLint)y, (GLint)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3s(JNIEnv* env, jclass clazz, jshort x, jshort y, jshort z) {


//@line:10335

		glRasterPos3s((GLshort)x, (GLshort)y, (GLshort)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4d(JNIEnv* env, jclass clazz, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:10339

		glRasterPos4d((GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4f(JNIEnv* env, jclass clazz, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:10343

		glRasterPos4f((GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4i(JNIEnv* env, jclass clazz, jint x, jint y, jint z, jint w) {


//@line:10347

		glRasterPos4i((GLint)x, (GLint)y, (GLint)z, (GLint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4s(JNIEnv* env, jclass clazz, jshort x, jshort y, jshort z, jshort w) {


//@line:10351

		glRasterPos4s((GLshort)x, (GLshort)y, (GLshort)z, (GLshort)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10355

		glRasterPos2dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10359

		glRasterPos2dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10363

		glRasterPos2fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10367

		glRasterPos2fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10371

		glRasterPos2iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10375

		glRasterPos2iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10379

		glRasterPos2sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10383

		glRasterPos2sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10387

		glRasterPos3dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10391

		glRasterPos3dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10395

		glRasterPos3fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10399

		glRasterPos3fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10403

		glRasterPos3iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10407

		glRasterPos3iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10411

		glRasterPos3sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10415

		glRasterPos3sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10419

		glRasterPos4dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10423

		glRasterPos4dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10427

		glRasterPos4fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10431

		glRasterPos4fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10435

		glRasterPos4iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10439

		glRasterPos4iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10443

		glRasterPos4sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:10447

		glRasterPos4sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectd(JNIEnv* env, jclass clazz, jdouble x1, jdouble y1, jdouble x2, jdouble y2) {


//@line:10451

		glRectd((GLdouble)x1, (GLdouble)y1, (GLdouble)x2, (GLdouble)y2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectf(JNIEnv* env, jclass clazz, jfloat x1, jfloat y1, jfloat x2, jfloat y2) {


//@line:10455

		glRectf((GLfloat)x1, (GLfloat)y1, (GLfloat)x2, (GLfloat)y2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRecti(JNIEnv* env, jclass clazz, jint x1, jint y1, jint x2, jint y2) {


//@line:10459

		glRecti((GLint)x1, (GLint)y1, (GLint)x2, (GLint)y2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRects(JNIEnv* env, jclass clazz, jshort x1, jshort y1, jshort x2, jshort y2) {


//@line:10463

		glRects((GLshort)x1, (GLshort)y1, (GLshort)x2, (GLshort)y2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectdv__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v1, jint v1ByteOffset, jobject obj_v2, jint v2ByteOffset) {
	unsigned char* v1 = (unsigned char*)(obj_v1?env->GetDirectBufferAddress(obj_v1):0);
	unsigned char* v2 = (unsigned char*)(obj_v2?env->GetDirectBufferAddress(obj_v2):0);


//@line:10467

		glRectdv((const GLdouble*)(v1 + v1ByteOffset), (const GLdouble*)(v2 + v2ByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectdv__JJ(JNIEnv* env, jclass clazz, jlong v1, jlong v2) {


//@line:10471

		glRectdv((const GLdouble*)v1, (const GLdouble*)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectfv__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v1, jint v1ByteOffset, jobject obj_v2, jint v2ByteOffset) {
	unsigned char* v1 = (unsigned char*)(obj_v1?env->GetDirectBufferAddress(obj_v1):0);
	unsigned char* v2 = (unsigned char*)(obj_v2?env->GetDirectBufferAddress(obj_v2):0);


//@line:10475

		glRectfv((const GLfloat*)(v1 + v1ByteOffset), (const GLfloat*)(v2 + v2ByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectfv__JJ(JNIEnv* env, jclass clazz, jlong v1, jlong v2) {


//@line:10479

		glRectfv((const GLfloat*)v1, (const GLfloat*)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectiv__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v1, jint v1ByteOffset, jobject obj_v2, jint v2ByteOffset) {
	unsigned char* v1 = (unsigned char*)(obj_v1?env->GetDirectBufferAddress(obj_v1):0);
	unsigned char* v2 = (unsigned char*)(obj_v2?env->GetDirectBufferAddress(obj_v2):0);


//@line:10483

		glRectiv((const GLint*)(v1 + v1ByteOffset), (const GLint*)(v2 + v2ByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectiv__JJ(JNIEnv* env, jclass clazz, jlong v1, jlong v2) {


//@line:10487

		glRectiv((const GLint*)v1, (const GLint*)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectsv__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v1, jint v1ByteOffset, jobject obj_v2, jint v2ByteOffset) {
	unsigned char* v1 = (unsigned char*)(obj_v1?env->GetDirectBufferAddress(obj_v1):0);
	unsigned char* v2 = (unsigned char*)(obj_v2?env->GetDirectBufferAddress(obj_v2):0);


//@line:10491

		glRectsv((const GLshort*)(v1 + v1ByteOffset), (const GLshort*)(v2 + v2ByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectsv__JJ(JNIEnv* env, jclass clazz, jlong v1, jlong v2) {


//@line:10495

		glRectsv((const GLshort*)v1, (const GLshort*)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glShadeModel(JNIEnv* env, jclass clazz, jint mode) {


//@line:10499

		glShadeModel((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightf(JNIEnv* env, jclass clazz, jint light, jint pname, jfloat param) {


//@line:10503

		glLightf((GLenum)light, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLighti(JNIEnv* env, jclass clazz, jint light, jint pname, jint param) {


//@line:10507

		glLighti((GLenum)light, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint light, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10511

		glLightfv((GLenum)light, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightfv__IIJ(JNIEnv* env, jclass clazz, jint light, jint pname, jlong params) {


//@line:10515

		glLightfv((GLenum)light, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint light, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10519

		glLightiv((GLenum)light, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightiv__IIJ(JNIEnv* env, jclass clazz, jint light, jint pname, jlong params) {


//@line:10523

		glLightiv((GLenum)light, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLightfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint light, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10527

		glGetLightfv((GLenum)light, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLightfv__IIJ(JNIEnv* env, jclass clazz, jint light, jint pname, jlong params) {


//@line:10531

		glGetLightfv((GLenum)light, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLightiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint light, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10535

		glGetLightiv((GLenum)light, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLightiv__IIJ(JNIEnv* env, jclass clazz, jint light, jint pname, jlong params) {


//@line:10539

		glGetLightiv((GLenum)light, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightModelf(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:10543

		glLightModelf((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightModeli(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:10547

		glLightModeli((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightModelfv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10551

		glLightModelfv((GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightModelfv__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:10555

		glLightModelfv((GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightModeliv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10559

		glLightModeliv((GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightModeliv__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:10563

		glLightModeliv((GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMaterialf(JNIEnv* env, jclass clazz, jint face, jint pname, jfloat param) {


//@line:10567

		glMaterialf((GLenum)face, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMateriali(JNIEnv* env, jclass clazz, jint face, jint pname, jint param) {


//@line:10571

		glMateriali((GLenum)face, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMaterialfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint face, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10575

		glMaterialfv((GLenum)face, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMaterialfv__IIJ(JNIEnv* env, jclass clazz, jint face, jint pname, jlong params) {


//@line:10579

		glMaterialfv((GLenum)face, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMaterialiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint face, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10583

		glMaterialiv((GLenum)face, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMaterialiv__IIJ(JNIEnv* env, jclass clazz, jint face, jint pname, jlong params) {


//@line:10587

		glMaterialiv((GLenum)face, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMaterialfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint face, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10591

		glGetMaterialfv((GLenum)face, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMaterialfv__IIJ(JNIEnv* env, jclass clazz, jint face, jint pname, jlong params) {


//@line:10595

		glGetMaterialfv((GLenum)face, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMaterialiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint face, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10599

		glGetMaterialiv((GLenum)face, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMaterialiv__IIJ(JNIEnv* env, jclass clazz, jint face, jint pname, jlong params) {


//@line:10603

		glGetMaterialiv((GLenum)face, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorMaterial(JNIEnv* env, jclass clazz, jint face, jint mode) {


//@line:10607

		glColorMaterial((GLenum)face, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelZoom(JNIEnv* env, jclass clazz, jfloat xfactor, jfloat yfactor) {


//@line:10611

		glPixelZoom((GLfloat)xfactor, (GLfloat)yfactor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelStoref(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:10615

		glPixelStoref((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelStorei(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:10619

		glPixelStorei((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTransferf(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:10623

		glPixelTransferf((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTransferi(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:10627

		glPixelTransferi((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelMapfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jint mapsize, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:10631

		glPixelMapfv((GLenum)map, (GLint)mapsize, (const GLfloat*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelMapfv__IIJ(JNIEnv* env, jclass clazz, jint map, jint mapsize, jlong values) {


//@line:10635

		glPixelMapfv((GLenum)map, (GLint)mapsize, (const GLfloat*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelMapuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jint mapsize, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:10639

		glPixelMapuiv((GLenum)map, (GLint)mapsize, (const GLuint*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelMapuiv__IIJ(JNIEnv* env, jclass clazz, jint map, jint mapsize, jlong values) {


//@line:10643

		glPixelMapuiv((GLenum)map, (GLint)mapsize, (const GLuint*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelMapusv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jint mapsize, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:10647

		glPixelMapusv((GLenum)map, (GLint)mapsize, (const GLushort*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelMapusv__IIJ(JNIEnv* env, jclass clazz, jint map, jint mapsize, jlong values) {


//@line:10651

		glPixelMapusv((GLenum)map, (GLint)mapsize, (const GLushort*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelMapfv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:10655

		glGetPixelMapfv((GLenum)map, (GLfloat*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelMapfv__IJ(JNIEnv* env, jclass clazz, jint map, jlong values) {


//@line:10659

		glGetPixelMapfv((GLenum)map, (GLfloat*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelMapuiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:10663

		glGetPixelMapuiv((GLenum)map, (GLuint*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelMapuiv__IJ(JNIEnv* env, jclass clazz, jint map, jlong values) {


//@line:10667

		glGetPixelMapuiv((GLenum)map, (GLuint*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelMapusv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:10671

		glGetPixelMapusv((GLenum)map, (GLushort*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelMapusv__IJ(JNIEnv* env, jclass clazz, jint map, jlong values) {


//@line:10675

		glGetPixelMapusv((GLenum)map, (GLushort*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBitmap__IIFFFFLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint width, jint height, jfloat xorig, jfloat yorig, jfloat xmove, jfloat ymove, jobject obj_bitmap, jint bitmapByteOffset) {
	unsigned char* bitmap = (unsigned char*)(obj_bitmap?env->GetDirectBufferAddress(obj_bitmap):0);


//@line:10679

		glBitmap((GLsizei)width, (GLsizei)height, (GLfloat)xorig, (GLfloat)yorig, (GLfloat)xmove, (GLfloat)ymove, (const GLubyte*)(bitmap + bitmapByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBitmap__IIFFFFJ(JNIEnv* env, jclass clazz, jint width, jint height, jfloat xorig, jfloat yorig, jfloat xmove, jfloat ymove, jlong bitmap) {


//@line:10683

		glBitmap((GLsizei)width, (GLsizei)height, (GLfloat)xorig, (GLfloat)yorig, (GLfloat)xmove, (GLfloat)ymove, (const GLubyte*)bitmap);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReadPixels__IIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint x, jint y, jint width, jint height, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:10687

		glReadPixels((GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReadPixels__IIIIIIJ(JNIEnv* env, jclass clazz, jint x, jint y, jint width, jint height, jint format, jint type, jlong pixels) {


//@line:10691

		glReadPixels((GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawPixels__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint width, jint height, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:10695

		glDrawPixels((GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawPixels__IIIIJ(JNIEnv* env, jclass clazz, jint width, jint height, jint format, jint type, jlong pixels) {


//@line:10699

		glDrawPixels((GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyPixels(JNIEnv* env, jclass clazz, jint x, jint y, jint width, jint height, jint type) {


//@line:10703

		glCopyPixels((GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height, (GLenum)type);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilFunc(JNIEnv* env, jclass clazz, jint func, jint ref, jint mask) {


//@line:10707

		glStencilFunc((GLenum)func, (GLint)ref, (GLuint)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilMask(JNIEnv* env, jclass clazz, jint mask) {


//@line:10711

		glStencilMask((GLuint)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilOp(JNIEnv* env, jclass clazz, jint fail, jint zfail, jint zpass) {


//@line:10715

		glStencilOp((GLenum)fail, (GLenum)zfail, (GLenum)zpass);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearStencil(JNIEnv* env, jclass clazz, jint s) {


//@line:10719

		glClearStencil((GLint)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGend(JNIEnv* env, jclass clazz, jint coord, jint pname, jdouble param) {


//@line:10723

		glTexGend((GLenum)coord, (GLenum)pname, (GLdouble)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGenf(JNIEnv* env, jclass clazz, jint coord, jint pname, jfloat param) {


//@line:10727

		glTexGenf((GLenum)coord, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGeni(JNIEnv* env, jclass clazz, jint coord, jint pname, jint param) {


//@line:10731

		glTexGeni((GLenum)coord, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGendv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10735

		glTexGendv((GLenum)coord, (GLenum)pname, (const GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGendv__IIJ(JNIEnv* env, jclass clazz, jint coord, jint pname, jlong params) {


//@line:10739

		glTexGendv((GLenum)coord, (GLenum)pname, (const GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGenfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10743

		glTexGenfv((GLenum)coord, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGenfv__IIJ(JNIEnv* env, jclass clazz, jint coord, jint pname, jlong params) {


//@line:10747

		glTexGenfv((GLenum)coord, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGeniv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10751

		glTexGeniv((GLenum)coord, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGeniv__IIJ(JNIEnv* env, jclass clazz, jint coord, jint pname, jlong params) {


//@line:10755

		glTexGeniv((GLenum)coord, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexGendv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10759

		glGetTexGendv((GLenum)coord, (GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexGendv__IIJ(JNIEnv* env, jclass clazz, jint coord, jint pname, jlong params) {


//@line:10763

		glGetTexGendv((GLenum)coord, (GLenum)pname, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexGenfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10767

		glGetTexGenfv((GLenum)coord, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexGenfv__IIJ(JNIEnv* env, jclass clazz, jint coord, jint pname, jlong params) {


//@line:10771

		glGetTexGenfv((GLenum)coord, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexGeniv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10775

		glGetTexGeniv((GLenum)coord, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexGeniv__IIJ(JNIEnv* env, jclass clazz, jint coord, jint pname, jlong params) {


//@line:10779

		glGetTexGeniv((GLenum)coord, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexEnvf(JNIEnv* env, jclass clazz, jint target, jint pname, jfloat param) {


//@line:10783

		glTexEnvf((GLenum)target, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexEnvi(JNIEnv* env, jclass clazz, jint target, jint pname, jint param) {


//@line:10787

		glTexEnvi((GLenum)target, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexEnvfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10791

		glTexEnvfv((GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexEnvfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:10795

		glTexEnvfv((GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexEnviv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10799

		glTexEnviv((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexEnviv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:10803

		glTexEnviv((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexEnvfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10807

		glGetTexEnvfv((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexEnvfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:10811

		glGetTexEnvfv((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexEnviv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10815

		glGetTexEnviv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexEnviv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:10819

		glGetTexEnviv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterf(JNIEnv* env, jclass clazz, jint target, jint pname, jfloat param) {


//@line:10823

		glTexParameterf((GLenum)target, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameteri(JNIEnv* env, jclass clazz, jint target, jint pname, jint param) {


//@line:10827

		glTexParameteri((GLenum)target, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10831

		glTexParameterfv((GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:10835

		glTexParameterfv((GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10839

		glTexParameteriv((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:10843

		glTexParameteriv((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10847

		glGetTexParameterfv((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:10851

		glGetTexParameterfv((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10855

		glGetTexParameteriv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:10859

		glGetTexParameteriv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexLevelParameterfv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10863

		glGetTexLevelParameterfv((GLenum)target, (GLint)level, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexLevelParameterfv__IIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint pname, jlong params) {


//@line:10867

		glGetTexLevelParameterfv((GLenum)target, (GLint)level, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexLevelParameteriv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:10871

		glGetTexLevelParameteriv((GLenum)target, (GLint)level, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexLevelParameteriv__IIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint pname, jlong params) {


//@line:10875

		glGetTexLevelParameteriv((GLenum)target, (GLint)level, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage1D__IIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalFormat, jint width, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:10879

		glTexImage1D((GLenum)target, (GLint)level, (GLint)internalFormat, (GLsizei)width, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage1D__IIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalFormat, jint width, jint border, jint format, jint type, jlong pixels) {


//@line:10883

		glTexImage1D((GLenum)target, (GLint)level, (GLint)internalFormat, (GLsizei)width, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage2D__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalFormat, jint width, jint height, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:10887

		glTexImage2D((GLenum)target, (GLint)level, (GLint)internalFormat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage2D__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalFormat, jint width, jint height, jint border, jint format, jint type, jlong pixels) {


//@line:10891

		glTexImage2D((GLenum)target, (GLint)level, (GLint)internalFormat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexImage__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:10895

		glGetTexImage((GLenum)target, (GLint)level, (GLenum)format, (GLenum)type, (GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexImage__IIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint format, jint type, jlong pixels) {


//@line:10899

		glGetTexImage((GLenum)target, (GLint)level, (GLenum)format, (GLenum)type, (GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMap1d__IDDIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jdouble u1, jdouble u2, jint stride, jint order, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:10903

		glMap1d((GLenum)target, (GLdouble)u1, (GLdouble)u2, (GLint)stride, (GLint)order, (const GLdouble*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMap1d__IDDIIJ(JNIEnv* env, jclass clazz, jint target, jdouble u1, jdouble u2, jint stride, jint order, jlong points) {


//@line:10907

		glMap1d((GLenum)target, (GLdouble)u1, (GLdouble)u2, (GLint)stride, (GLint)order, (const GLdouble*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMap1f__IFFIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jfloat u1, jfloat u2, jint stride, jint order, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:10911

		glMap1f((GLenum)target, (GLfloat)u1, (GLfloat)u2, (GLint)stride, (GLint)order, (const GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMap1f__IFFIIJ(JNIEnv* env, jclass clazz, jint target, jfloat u1, jfloat u2, jint stride, jint order, jlong points) {


//@line:10915

		glMap1f((GLenum)target, (GLfloat)u1, (GLfloat)u2, (GLint)stride, (GLint)order, (const GLfloat*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMap2d__IDDIIDDIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jdouble u1, jdouble u2, jint ustride, jint uorder, jdouble v1, jdouble v2, jint vstride, jint vorder, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:10919

		glMap2d((GLenum)target, (GLdouble)u1, (GLdouble)u2, (GLint)ustride, (GLint)uorder, (GLdouble)v1, (GLdouble)v2, (GLint)vstride, (GLint)vorder, (const GLdouble*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMap2d__IDDIIDDIIJ(JNIEnv* env, jclass clazz, jint target, jdouble u1, jdouble u2, jint ustride, jint uorder, jdouble v1, jdouble v2, jint vstride, jint vorder, jlong points) {


//@line:10923

		glMap2d((GLenum)target, (GLdouble)u1, (GLdouble)u2, (GLint)ustride, (GLint)uorder, (GLdouble)v1, (GLdouble)v2, (GLint)vstride, (GLint)vorder, (const GLdouble*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMap2f__IFFIIFFIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jfloat u1, jfloat u2, jint ustride, jint uorder, jfloat v1, jfloat v2, jint vstride, jint vorder, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:10927

		glMap2f((GLenum)target, (GLfloat)u1, (GLfloat)u2, (GLint)ustride, (GLint)uorder, (GLfloat)v1, (GLfloat)v2, (GLint)vstride, (GLint)vorder, (const GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMap2f__IFFIIFFIIJ(JNIEnv* env, jclass clazz, jint target, jfloat u1, jfloat u2, jint ustride, jint uorder, jfloat v1, jfloat v2, jint vstride, jint vorder, jlong points) {


//@line:10931

		glMap2f((GLenum)target, (GLfloat)u1, (GLfloat)u2, (GLint)ustride, (GLint)uorder, (GLfloat)v1, (GLfloat)v2, (GLint)vstride, (GLint)vorder, (const GLfloat*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapdv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint query, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10935

		glGetMapdv((GLenum)target, (GLenum)query, (GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapdv__IIJ(JNIEnv* env, jclass clazz, jint target, jint query, jlong v) {


//@line:10939

		glGetMapdv((GLenum)target, (GLenum)query, (GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint query, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10943

		glGetMapfv((GLenum)target, (GLenum)query, (GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint query, jlong v) {


//@line:10947

		glGetMapfv((GLenum)target, (GLenum)query, (GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint query, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:10951

		glGetMapiv((GLenum)target, (GLenum)query, (GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapiv__IIJ(JNIEnv* env, jclass clazz, jint target, jint query, jlong v) {


//@line:10955

		glGetMapiv((GLenum)target, (GLenum)query, (GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord1d(JNIEnv* env, jclass clazz, jdouble u) {


//@line:10959

		glEvalCoord1d((GLdouble)u);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord1f(JNIEnv* env, jclass clazz, jfloat u) {


//@line:10963

		glEvalCoord1f((GLfloat)u);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord1dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_u, jint uByteOffset) {
	unsigned char* u = (unsigned char*)(obj_u?env->GetDirectBufferAddress(obj_u):0);


//@line:10967

		glEvalCoord1dv((const GLdouble*)(u + uByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord1dv__J(JNIEnv* env, jclass clazz, jlong u) {


//@line:10971

		glEvalCoord1dv((const GLdouble*)u);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord1fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_u, jint uByteOffset) {
	unsigned char* u = (unsigned char*)(obj_u?env->GetDirectBufferAddress(obj_u):0);


//@line:10975

		glEvalCoord1fv((const GLfloat*)(u + uByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord1fv__J(JNIEnv* env, jclass clazz, jlong u) {


//@line:10979

		glEvalCoord1fv((const GLfloat*)u);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord2d(JNIEnv* env, jclass clazz, jdouble u, jdouble v) {


//@line:10983

		glEvalCoord2d((GLdouble)u, (GLdouble)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord2f(JNIEnv* env, jclass clazz, jfloat u, jfloat v) {


//@line:10987

		glEvalCoord2f((GLfloat)u, (GLfloat)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord2dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_u, jint uByteOffset) {
	unsigned char* u = (unsigned char*)(obj_u?env->GetDirectBufferAddress(obj_u):0);


//@line:10991

		glEvalCoord2dv((const GLdouble*)(u + uByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord2dv__J(JNIEnv* env, jclass clazz, jlong u) {


//@line:10995

		glEvalCoord2dv((const GLdouble*)u);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord2fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_u, jint uByteOffset) {
	unsigned char* u = (unsigned char*)(obj_u?env->GetDirectBufferAddress(obj_u):0);


//@line:10999

		glEvalCoord2fv((const GLfloat*)(u + uByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord2fv__J(JNIEnv* env, jclass clazz, jlong u) {


//@line:11003

		glEvalCoord2fv((const GLfloat*)u);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapGrid1d(JNIEnv* env, jclass clazz, jint un, jdouble u1, jdouble u2) {


//@line:11007

		glMapGrid1d((GLint)un, (GLdouble)u1, (GLdouble)u2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapGrid1f(JNIEnv* env, jclass clazz, jint un, jfloat u1, jfloat u2) {


//@line:11011

		glMapGrid1f((GLint)un, (GLfloat)u1, (GLfloat)u2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapGrid2d(JNIEnv* env, jclass clazz, jint un, jdouble u1, jdouble u2, jint vn, jdouble v1, jdouble v2) {


//@line:11015

		glMapGrid2d((GLint)un, (GLdouble)u1, (GLdouble)u2, (GLint)vn, (GLdouble)v1, (GLdouble)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapGrid2f(JNIEnv* env, jclass clazz, jint un, jfloat u1, jfloat u2, jint vn, jfloat v1, jfloat v2) {


//@line:11019

		glMapGrid2f((GLint)un, (GLfloat)u1, (GLfloat)u2, (GLint)vn, (GLfloat)v1, (GLfloat)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalPoint1(JNIEnv* env, jclass clazz, jint i) {


//@line:11023

		glEvalPoint1((GLint)i);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalPoint2(JNIEnv* env, jclass clazz, jint i, jint j) {


//@line:11027

		glEvalPoint2((GLint)i, (GLint)j);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalMesh1(JNIEnv* env, jclass clazz, jint mode, jint i1, jint i2) {


//@line:11031

		glEvalMesh1((GLenum)mode, (GLint)i1, (GLint)i2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalMesh2(JNIEnv* env, jclass clazz, jint mode, jint i1, jint i2, jint j1, jint j2) {


//@line:11035

		glEvalMesh2((GLenum)mode, (GLint)i1, (GLint)i2, (GLint)j1, (GLint)j2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogf(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:11039

		glFogf((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogi(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:11043

		glFogi((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogfv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11047

		glFogfv((GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogfv__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:11051

		glFogfv((GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11055

		glFogiv((GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogiv__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:11059

		glFogiv((GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFeedbackBuffer__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jobject obj_buffer, jint bufferByteOffset) {
	unsigned char* buffer = (unsigned char*)(obj_buffer?env->GetDirectBufferAddress(obj_buffer):0);


//@line:11063

		glFeedbackBuffer((GLsizei)size, (GLenum)type, (GLfloat*)(buffer + bufferByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFeedbackBuffer__IIJ(JNIEnv* env, jclass clazz, jint size, jint type, jlong buffer) {


//@line:11067

		glFeedbackBuffer((GLsizei)size, (GLenum)type, (GLfloat*)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPassThrough(JNIEnv* env, jclass clazz, jfloat token) {


//@line:11071

		glPassThrough((GLfloat)token);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSelectBuffer__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_buffer, jint bufferByteOffset) {
	unsigned char* buffer = (unsigned char*)(obj_buffer?env->GetDirectBufferAddress(obj_buffer):0);


//@line:11075

		glSelectBuffer((GLsizei)size, (GLuint*)(buffer + bufferByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSelectBuffer__IJ(JNIEnv* env, jclass clazz, jint size, jlong buffer) {


//@line:11079

		glSelectBuffer((GLsizei)size, (GLuint*)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInitNames(JNIEnv* env, jclass clazz) {


//@line:11083

		glInitNames();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadName(JNIEnv* env, jclass clazz, jint name) {


//@line:11087

		glLoadName((GLuint)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPushName(JNIEnv* env, jclass clazz, jint name) {


//@line:11091

		glPushName((GLuint)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPopName(JNIEnv* env, jclass clazz) {


//@line:11095

		glPopName();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenTextures__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset) {
	unsigned char* textures = (unsigned char*)(obj_textures?env->GetDirectBufferAddress(obj_textures):0);


//@line:11099

		glGenTextures((GLsizei)n, (GLuint*)(textures + texturesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenTextures__IJ(JNIEnv* env, jclass clazz, jint n, jlong textures) {


//@line:11103

		glGenTextures((GLsizei)n, (GLuint*)textures);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteTextures__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset) {
	unsigned char* textures = (unsigned char*)(obj_textures?env->GetDirectBufferAddress(obj_textures):0);


//@line:11107

		glDeleteTextures((GLsizei)n, (const GLuint*)(textures + texturesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteTextures__IJ(JNIEnv* env, jclass clazz, jint n, jlong textures) {


//@line:11111

		glDeleteTextures((GLsizei)n, (const GLuint*)textures);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindTexture(JNIEnv* env, jclass clazz, jint target, jint texture) {


//@line:11115

		glBindTexture((GLenum)target, (GLuint)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPrioritizeTextures__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset, jobject obj_priorities, jint prioritiesByteOffset) {
	unsigned char* textures = (unsigned char*)(obj_textures?env->GetDirectBufferAddress(obj_textures):0);
	unsigned char* priorities = (unsigned char*)(obj_priorities?env->GetDirectBufferAddress(obj_priorities):0);


//@line:11119

		glPrioritizeTextures((GLsizei)n, (const GLuint*)(textures + texturesByteOffset), (const GLclampf*)(priorities + prioritiesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPrioritizeTextures__IJJ(JNIEnv* env, jclass clazz, jint n, jlong textures, jlong priorities) {


//@line:11123

		glPrioritizeTextures((GLsizei)n, (const GLuint*)textures, (const GLclampf*)priorities);
	

}

static inline jboolean wrapped_Java_com_badlogic_jglfw_gl_GL_glAreTexturesResident__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset, jobject obj_residences, jint residencesByteOffset, unsigned char* textures, unsigned char* residences) {

//@line:11127

		return (jboolean)glAreTexturesResident((GLsizei)n, (const GLuint*)(textures + texturesByteOffset), (GLboolean*)(residences + residencesByteOffset));
	
}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glAreTexturesResident__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset, jobject obj_residences, jint residencesByteOffset) {
	unsigned char* textures = (unsigned char*)(obj_textures?env->GetDirectBufferAddress(obj_textures):0);
	unsigned char* residences = (unsigned char*)(obj_residences?env->GetDirectBufferAddress(obj_residences):0);

	jboolean JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glAreTexturesResident__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(env, clazz, n, obj_textures, texturesByteOffset, obj_residences, residencesByteOffset, textures, residences);


	return JNI_returnValue;
}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glAreTexturesResident__IJJ(JNIEnv* env, jclass clazz, jint n, jlong textures, jlong residences) {


//@line:11131

		return (jboolean)glAreTexturesResident((GLsizei)n, (const GLuint*)textures, (GLboolean*)residences);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsTexture(JNIEnv* env, jclass clazz, jint texture) {


//@line:11135

		return (jboolean)glIsTexture((GLuint)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage1D__IIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint width, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:11139

		glTexSubImage1D((GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage1D__IIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint width, jint format, jint type, jlong pixels) {


//@line:11143

		glTexSubImage1D((GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage2D__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:11147

		glTexSubImage2D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage2D__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jlong pixels) {


//@line:11151

		glTexSubImage2D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTexImage1D(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint x, jint y, jint width, jint border) {


//@line:11155

		glCopyTexImage1D((GLenum)target, (GLint)level, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width, (GLint)border);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTexImage2D(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint x, jint y, jint width, jint height, jint border) {


//@line:11159

		glCopyTexImage2D((GLenum)target, (GLint)level, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height, (GLint)border);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTexSubImage1D(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint x, jint y, jint width) {


//@line:11163

		glCopyTexSubImage1D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)x, (GLint)y, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTexSubImage2D(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint x, jint y, jint width, jint height) {


//@line:11167

		glCopyTexSubImage2D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexPointer__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_ptr, jint ptrByteOffset) {
	unsigned char* ptr = (unsigned char*)(obj_ptr?env->GetDirectBufferAddress(obj_ptr):0);


//@line:11171

		glVertexPointer((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(ptr + ptrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexPointer__IIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong ptr) {


//@line:11175

		glVertexPointer((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)ptr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalPointer__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint stride, jobject obj_ptr, jint ptrByteOffset) {
	unsigned char* ptr = (unsigned char*)(obj_ptr?env->GetDirectBufferAddress(obj_ptr):0);


//@line:11179

		glNormalPointer((GLenum)type, (GLsizei)stride, (const GLvoid*)(ptr + ptrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalPointer__IIJ(JNIEnv* env, jclass clazz, jint type, jint stride, jlong ptr) {


//@line:11183

		glNormalPointer((GLenum)type, (GLsizei)stride, (const GLvoid*)ptr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorPointer__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_ptr, jint ptrByteOffset) {
	unsigned char* ptr = (unsigned char*)(obj_ptr?env->GetDirectBufferAddress(obj_ptr):0);


//@line:11187

		glColorPointer((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(ptr + ptrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorPointer__IIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong ptr) {


//@line:11191

		glColorPointer((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)ptr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexPointer__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint stride, jobject obj_ptr, jint ptrByteOffset) {
	unsigned char* ptr = (unsigned char*)(obj_ptr?env->GetDirectBufferAddress(obj_ptr):0);


//@line:11195

		glIndexPointer((GLenum)type, (GLsizei)stride, (const GLvoid*)(ptr + ptrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexPointer__IIJ(JNIEnv* env, jclass clazz, jint type, jint stride, jlong ptr) {


//@line:11199

		glIndexPointer((GLenum)type, (GLsizei)stride, (const GLvoid*)ptr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordPointer__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_ptr, jint ptrByteOffset) {
	unsigned char* ptr = (unsigned char*)(obj_ptr?env->GetDirectBufferAddress(obj_ptr):0);


//@line:11203

		glTexCoordPointer((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(ptr + ptrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordPointer__IIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong ptr) {


//@line:11207

		glTexCoordPointer((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)ptr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEdgeFlagPointer__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stride, jobject obj_ptr, jint ptrByteOffset) {
	unsigned char* ptr = (unsigned char*)(obj_ptr?env->GetDirectBufferAddress(obj_ptr):0);


//@line:11211

		glEdgeFlagPointer((GLsizei)stride, (const GLvoid*)(ptr + ptrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEdgeFlagPointer__IJ(JNIEnv* env, jclass clazz, jint stride, jlong ptr) {


//@line:11215

		glEdgeFlagPointer((GLsizei)stride, (const GLvoid*)ptr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glArrayElement(JNIEnv* env, jclass clazz, jint i) {


//@line:11219

		glArrayElement((GLint)i);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawArrays(JNIEnv* env, jclass clazz, jint mode, jint first, jint count) {


//@line:11223

		glDrawArrays((GLenum)mode, (GLint)first, (GLsizei)count);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElements__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jobject obj_indices, jint indicesByteOffset) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:11227

		glDrawElements((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)(indices + indicesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElements__IIIJ(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jlong indices) {


//@line:11231

		glDrawElements((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)indices);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInterleavedArrays__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint format, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:11235

		glInterleavedArrays((GLenum)format, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInterleavedArrays__IIJ(JNIEnv* env, jclass clazz, jint format, jint stride, jlong pointer) {


//@line:11239

		glInterleavedArrays((GLenum)format, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendColor(JNIEnv* env, jclass clazz, jfloat red, jfloat green, jfloat blue, jfloat alpha) {


//@line:11243

		ext_glBlendColor((GLfloat)red, (GLfloat)green, (GLfloat)blue, (GLfloat)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendEquation(JNIEnv* env, jclass clazz, jint mode) {


//@line:11247

		ext_glBlendEquation((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawRangeElements__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jint start, jint end, jint count, jint type, jobject obj_indices, jint indicesByteOffset) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:11251

		ext_glDrawRangeElements((GLenum)mode, (GLuint)start, (GLuint)end, (GLsizei)count, (GLenum)type, (const GLvoid*)(indices + indicesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawRangeElements__IIIIIJ(JNIEnv* env, jclass clazz, jint mode, jint start, jint end, jint count, jint type, jlong indices) {


//@line:11255

		ext_glDrawRangeElements((GLenum)mode, (GLuint)start, (GLuint)end, (GLsizei)count, (GLenum)type, (const GLvoid*)indices);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage3D__IIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:11259

		ext_glTexImage3D((GLenum)target, (GLint)level, (GLint)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage3D__IIIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint format, jint type, jlong pixels) {


//@line:11263

		ext_glTexImage3D((GLenum)target, (GLint)level, (GLint)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage3D__IIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:11267

		ext_glTexSubImage3D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage3D__IIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint type, jlong pixels) {


//@line:11271

		ext_glTexSubImage3D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTexSubImage3D(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint x, jint y, jint width, jint height) {


//@line:11275

		ext_glCopyTexSubImage3D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTable__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint format, jint type, jobject obj_table, jint tableByteOffset) {
	unsigned char* table = (unsigned char*)(obj_table?env->GetDirectBufferAddress(obj_table):0);


//@line:11279

		ext_glColorTable((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)(table + tableByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTable__IIIIIJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint format, jint type, jlong table) {


//@line:11283

		ext_glColorTable((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)table);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableParameterfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11287

		ext_glColorTableParameterfv((GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableParameterfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11291

		ext_glColorTableParameterfv((GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11295

		ext_glColorTableParameteriv((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11299

		ext_glColorTableParameteriv((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyColorTable(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint x, jint y, jint width) {


//@line:11303

		ext_glCopyColorTable((GLenum)target, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTable__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jobject obj_table, jint tableByteOffset) {
	unsigned char* table = (unsigned char*)(obj_table?env->GetDirectBufferAddress(obj_table):0);


//@line:11307

		ext_glGetColorTable((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)(table + tableByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTable__IIIJ(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jlong table) {


//@line:11311

		ext_glGetColorTable((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)table);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameterfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11315

		ext_glGetColorTableParameterfv((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameterfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11319

		ext_glGetColorTableParameterfv((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11323

		ext_glGetColorTableParameteriv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11327

		ext_glGetColorTableParameteriv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorSubTable__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint start, jint count, jint format, jint type, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:11331

		ext_glColorSubTable((GLenum)target, (GLsizei)start, (GLsizei)count, (GLenum)format, (GLenum)type, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorSubTable__IIIIIJ(JNIEnv* env, jclass clazz, jint target, jint start, jint count, jint format, jint type, jlong data) {


//@line:11335

		ext_glColorSubTable((GLenum)target, (GLsizei)start, (GLsizei)count, (GLenum)format, (GLenum)type, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyColorSubTable(JNIEnv* env, jclass clazz, jint target, jint start, jint x, jint y, jint width) {


//@line:11339

		ext_glCopyColorSubTable((GLenum)target, (GLsizei)start, (GLint)x, (GLint)y, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionFilter1D__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint format, jint type, jobject obj_image, jint imageByteOffset) {
	unsigned char* image = (unsigned char*)(obj_image?env->GetDirectBufferAddress(obj_image):0);


//@line:11343

		ext_glConvolutionFilter1D((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)(image + imageByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionFilter1D__IIIIIJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint format, jint type, jlong image) {


//@line:11347

		ext_glConvolutionFilter1D((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)image);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionFilter2D__IIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint height, jint format, jint type, jobject obj_image, jint imageByteOffset) {
	unsigned char* image = (unsigned char*)(obj_image?env->GetDirectBufferAddress(obj_image):0);


//@line:11351

		ext_glConvolutionFilter2D((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)(image + imageByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionFilter2D__IIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint height, jint format, jint type, jlong image) {


//@line:11355

		ext_glConvolutionFilter2D((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)image);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterf(JNIEnv* env, jclass clazz, jint target, jint pname, jfloat params) {


//@line:11359

		ext_glConvolutionParameterf((GLenum)target, (GLenum)pname, (GLfloat)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11363

		ext_glConvolutionParameterfv((GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11367

		ext_glConvolutionParameterfv((GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameteri(JNIEnv* env, jclass clazz, jint target, jint pname, jint params) {


//@line:11371

		ext_glConvolutionParameteri((GLenum)target, (GLenum)pname, (GLint)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11375

		ext_glConvolutionParameteriv((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11379

		ext_glConvolutionParameteriv((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyConvolutionFilter1D(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint x, jint y, jint width) {


//@line:11383

		ext_glCopyConvolutionFilter1D((GLenum)target, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyConvolutionFilter2D(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint x, jint y, jint width, jint height) {


//@line:11387

		ext_glCopyConvolutionFilter2D((GLenum)target, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionFilter__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jobject obj_image, jint imageByteOffset) {
	unsigned char* image = (unsigned char*)(obj_image?env->GetDirectBufferAddress(obj_image):0);


//@line:11391

		ext_glGetConvolutionFilter((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)(image + imageByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionFilter__IIIJ(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jlong image) {


//@line:11395

		ext_glGetConvolutionFilter((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)image);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionParameterfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11399

		ext_glGetConvolutionParameterfv((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionParameterfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11403

		ext_glGetConvolutionParameterfv((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11407

		ext_glGetConvolutionParameteriv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11411

		ext_glGetConvolutionParameteriv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSeparableFilter__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jobject obj_row, jint rowByteOffset, jobject obj_column, jint columnByteOffset, jobject obj_span, jint spanByteOffset) {
	unsigned char* row = (unsigned char*)(obj_row?env->GetDirectBufferAddress(obj_row):0);
	unsigned char* column = (unsigned char*)(obj_column?env->GetDirectBufferAddress(obj_column):0);
	unsigned char* span = (unsigned char*)(obj_span?env->GetDirectBufferAddress(obj_span):0);


//@line:11415

		ext_glGetSeparableFilter((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)(row + rowByteOffset), (GLvoid*)(column + columnByteOffset), (GLvoid*)(span + spanByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSeparableFilter__IIIJJJ(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jlong row, jlong column, jlong span) {


//@line:11419

		ext_glGetSeparableFilter((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)row, (GLvoid*)column, (GLvoid*)span);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSeparableFilter2D__IIIIIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint height, jint format, jint type, jobject obj_row, jint rowByteOffset, jobject obj_column, jint columnByteOffset) {
	unsigned char* row = (unsigned char*)(obj_row?env->GetDirectBufferAddress(obj_row):0);
	unsigned char* column = (unsigned char*)(obj_column?env->GetDirectBufferAddress(obj_column):0);


//@line:11423

		ext_glSeparableFilter2D((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)(row + rowByteOffset), (const GLvoid*)(column + columnByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSeparableFilter2D__IIIIIIJJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint height, jint format, jint type, jlong row, jlong column) {


//@line:11427

		ext_glSeparableFilter2D((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)row, (const GLvoid*)column);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogram__IZIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:11431

		ext_glGetHistogram((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLvoid*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogram__IZIIJ(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jlong values) {


//@line:11435

		ext_glGetHistogram((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLvoid*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramParameterfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11439

		ext_glGetHistogramParameterfv((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramParameterfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11443

		ext_glGetHistogramParameterfv((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11447

		ext_glGetHistogramParameteriv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11451

		ext_glGetHistogramParameteriv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmax__IZIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:11455

		ext_glGetMinmax((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLvoid*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmax__IZIIJ(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jlong values) {


//@line:11459

		ext_glGetMinmax((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLvoid*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmaxParameterfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11463

		ext_glGetMinmaxParameterfv((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmaxParameterfv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11467

		ext_glGetMinmaxParameterfv((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmaxParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11471

		ext_glGetMinmaxParameteriv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmaxParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:11475

		ext_glGetMinmaxParameteriv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glHistogram(JNIEnv* env, jclass clazz, jint target, jint width, jint internalformat, jboolean sink) {


//@line:11479

		ext_glHistogram((GLenum)target, (GLsizei)width, (GLenum)internalformat, (GLboolean)sink);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMinmax(JNIEnv* env, jclass clazz, jint target, jint internalformat, jboolean sink) {


//@line:11483

		ext_glMinmax((GLenum)target, (GLenum)internalformat, (GLboolean)sink);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glResetHistogram(JNIEnv* env, jclass clazz, jint target) {


//@line:11487

		ext_glResetHistogram((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glResetMinmax(JNIEnv* env, jclass clazz, jint target) {


//@line:11491

		ext_glResetMinmax((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glActiveTexture(JNIEnv* env, jclass clazz, jint texture) {


//@line:11495

		ext_glActiveTexture((GLenum)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSampleCoverage(JNIEnv* env, jclass clazz, jfloat value, jboolean invert) {


//@line:11499

		ext_glSampleCoverage((GLfloat)value, (GLboolean)invert);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage3D__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:11503

		ext_glCompressedTexImage3D((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage3D__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint imageSize, jlong data) {


//@line:11507

		ext_glCompressedTexImage3D((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage2D__IIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:11511

		ext_glCompressedTexImage2D((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage2D__IIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint imageSize, jlong data) {


//@line:11515

		ext_glCompressedTexImage2D((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage1D__IIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint border, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:11519

		ext_glCompressedTexImage1D((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage1D__IIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint border, jint imageSize, jlong data) {


//@line:11523

		ext_glCompressedTexImage1D((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage3D__IIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:11527

		ext_glCompressedTexSubImage3D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage3D__IIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint imageSize, jlong data) {


//@line:11531

		ext_glCompressedTexSubImage3D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage2D__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:11535

		ext_glCompressedTexSubImage2D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage2D__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jlong data) {


//@line:11539

		ext_glCompressedTexSubImage2D((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage1D__IIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint width, jint format, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:11543

		ext_glCompressedTexSubImage1D((GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage1D__IIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint width, jint format, jint imageSize, jlong data) {


//@line:11547

		ext_glCompressedTexSubImage1D((GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCompressedTexImage__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jobject obj_img, jint imgByteOffset) {
	unsigned char* img = (unsigned char*)(obj_img?env->GetDirectBufferAddress(obj_img):0);


//@line:11551

		ext_glGetCompressedTexImage((GLenum)target, (GLint)level, (GLvoid*)(img + imgByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCompressedTexImage__IIJ(JNIEnv* env, jclass clazz, jint target, jint level, jlong img) {


//@line:11555

		ext_glGetCompressedTexImage((GLenum)target, (GLint)level, (GLvoid*)img);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClientActiveTexture(JNIEnv* env, jclass clazz, jint texture) {


//@line:11559

		ext_glClientActiveTexture((GLenum)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1d(JNIEnv* env, jclass clazz, jint target, jdouble s) {


//@line:11563

		ext_glMultiTexCoord1d((GLenum)target, (GLdouble)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11567

		ext_glMultiTexCoord1dv((GLenum)target, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1dv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11571

		ext_glMultiTexCoord1dv((GLenum)target, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1f(JNIEnv* env, jclass clazz, jint target, jfloat s) {


//@line:11575

		ext_glMultiTexCoord1f((GLenum)target, (GLfloat)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1fv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11579

		ext_glMultiTexCoord1fv((GLenum)target, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1fv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11583

		ext_glMultiTexCoord1fv((GLenum)target, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1i(JNIEnv* env, jclass clazz, jint target, jint s) {


//@line:11587

		ext_glMultiTexCoord1i((GLenum)target, (GLint)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1iv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11591

		ext_glMultiTexCoord1iv((GLenum)target, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1iv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11595

		ext_glMultiTexCoord1iv((GLenum)target, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1s(JNIEnv* env, jclass clazz, jint target, jshort s) {


//@line:11599

		ext_glMultiTexCoord1s((GLenum)target, (GLshort)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1sv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11603

		ext_glMultiTexCoord1sv((GLenum)target, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1sv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11607

		ext_glMultiTexCoord1sv((GLenum)target, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2d(JNIEnv* env, jclass clazz, jint target, jdouble s, jdouble t) {


//@line:11611

		ext_glMultiTexCoord2d((GLenum)target, (GLdouble)s, (GLdouble)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11615

		ext_glMultiTexCoord2dv((GLenum)target, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2dv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11619

		ext_glMultiTexCoord2dv((GLenum)target, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2f(JNIEnv* env, jclass clazz, jint target, jfloat s, jfloat t) {


//@line:11623

		ext_glMultiTexCoord2f((GLenum)target, (GLfloat)s, (GLfloat)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2fv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11627

		ext_glMultiTexCoord2fv((GLenum)target, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2fv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11631

		ext_glMultiTexCoord2fv((GLenum)target, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2i(JNIEnv* env, jclass clazz, jint target, jint s, jint t) {


//@line:11635

		ext_glMultiTexCoord2i((GLenum)target, (GLint)s, (GLint)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2iv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11639

		ext_glMultiTexCoord2iv((GLenum)target, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2iv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11643

		ext_glMultiTexCoord2iv((GLenum)target, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2s(JNIEnv* env, jclass clazz, jint target, jshort s, jshort t) {


//@line:11647

		ext_glMultiTexCoord2s((GLenum)target, (GLshort)s, (GLshort)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2sv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11651

		ext_glMultiTexCoord2sv((GLenum)target, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2sv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11655

		ext_glMultiTexCoord2sv((GLenum)target, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3d(JNIEnv* env, jclass clazz, jint target, jdouble s, jdouble t, jdouble r) {


//@line:11659

		ext_glMultiTexCoord3d((GLenum)target, (GLdouble)s, (GLdouble)t, (GLdouble)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11663

		ext_glMultiTexCoord3dv((GLenum)target, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3dv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11667

		ext_glMultiTexCoord3dv((GLenum)target, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3f(JNIEnv* env, jclass clazz, jint target, jfloat s, jfloat t, jfloat r) {


//@line:11671

		ext_glMultiTexCoord3f((GLenum)target, (GLfloat)s, (GLfloat)t, (GLfloat)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3fv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11675

		ext_glMultiTexCoord3fv((GLenum)target, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3fv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11679

		ext_glMultiTexCoord3fv((GLenum)target, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3i(JNIEnv* env, jclass clazz, jint target, jint s, jint t, jint r) {


//@line:11683

		ext_glMultiTexCoord3i((GLenum)target, (GLint)s, (GLint)t, (GLint)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3iv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11687

		ext_glMultiTexCoord3iv((GLenum)target, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3iv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11691

		ext_glMultiTexCoord3iv((GLenum)target, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3s(JNIEnv* env, jclass clazz, jint target, jshort s, jshort t, jshort r) {


//@line:11695

		ext_glMultiTexCoord3s((GLenum)target, (GLshort)s, (GLshort)t, (GLshort)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3sv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11699

		ext_glMultiTexCoord3sv((GLenum)target, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3sv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11703

		ext_glMultiTexCoord3sv((GLenum)target, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4d(JNIEnv* env, jclass clazz, jint target, jdouble s, jdouble t, jdouble r, jdouble q) {


//@line:11707

		ext_glMultiTexCoord4d((GLenum)target, (GLdouble)s, (GLdouble)t, (GLdouble)r, (GLdouble)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11711

		ext_glMultiTexCoord4dv((GLenum)target, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4dv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11715

		ext_glMultiTexCoord4dv((GLenum)target, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4f(JNIEnv* env, jclass clazz, jint target, jfloat s, jfloat t, jfloat r, jfloat q) {


//@line:11719

		ext_glMultiTexCoord4f((GLenum)target, (GLfloat)s, (GLfloat)t, (GLfloat)r, (GLfloat)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4fv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11723

		ext_glMultiTexCoord4fv((GLenum)target, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4fv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11727

		ext_glMultiTexCoord4fv((GLenum)target, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4i(JNIEnv* env, jclass clazz, jint target, jint s, jint t, jint r, jint q) {


//@line:11731

		ext_glMultiTexCoord4i((GLenum)target, (GLint)s, (GLint)t, (GLint)r, (GLint)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4iv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11735

		ext_glMultiTexCoord4iv((GLenum)target, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4iv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11739

		ext_glMultiTexCoord4iv((GLenum)target, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4s(JNIEnv* env, jclass clazz, jint target, jshort s, jshort t, jshort r, jshort q) {


//@line:11743

		ext_glMultiTexCoord4s((GLenum)target, (GLshort)s, (GLshort)t, (GLshort)r, (GLshort)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4sv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11747

		ext_glMultiTexCoord4sv((GLenum)target, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4sv__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:11751

		ext_glMultiTexCoord4sv((GLenum)target, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadTransposeMatrixf__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:11755

		ext_glLoadTransposeMatrixf((const GLfloat*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadTransposeMatrixf__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:11759

		ext_glLoadTransposeMatrixf((const GLfloat*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadTransposeMatrixd__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:11763

		ext_glLoadTransposeMatrixd((const GLdouble*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadTransposeMatrixd__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:11767

		ext_glLoadTransposeMatrixd((const GLdouble*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultTransposeMatrixf__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:11771

		ext_glMultTransposeMatrixf((const GLfloat*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultTransposeMatrixf__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:11775

		ext_glMultTransposeMatrixf((const GLfloat*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultTransposeMatrixd__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:11779

		ext_glMultTransposeMatrixd((const GLdouble*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultTransposeMatrixd__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:11783

		ext_glMultTransposeMatrixd((const GLdouble*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendFuncSeparate(JNIEnv* env, jclass clazz, jint sfactorRGB, jint dfactorRGB, jint sfactorAlpha, jint dfactorAlpha) {


//@line:11787

		ext_glBlendFuncSeparate((GLenum)sfactorRGB, (GLenum)dfactorRGB, (GLenum)sfactorAlpha, (GLenum)dfactorAlpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawArrays__ILjava_nio_Buffer_2ILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jobject obj_first, jint firstByteOffset, jobject obj_count, jint countByteOffset, jint drawcount) {
	unsigned char* first = (unsigned char*)(obj_first?env->GetDirectBufferAddress(obj_first):0);
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);


//@line:11791

		ext_glMultiDrawArrays((GLenum)mode, (const GLint*)(first + firstByteOffset), (const GLsizei*)(count + countByteOffset), (GLsizei)drawcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawArrays__IJJI(JNIEnv* env, jclass clazz, jint mode, jlong first, jlong count, jint drawcount) {


//@line:11795

		ext_glMultiDrawArrays((GLenum)mode, (const GLint*)first, (const GLsizei*)count, (GLsizei)drawcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElements__ILjava_nio_Buffer_2IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jobject obj_count, jint countByteOffset, jint type, jobject obj_indices, jint indicesByteOffset, jint drawcount) {
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:11799

		ext_glMultiDrawElements((GLenum)mode, (const GLsizei*)(count + countByteOffset), (GLenum)type, (const GLvoid**)(indices + indicesByteOffset), (GLsizei)drawcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElements__IJIJI(JNIEnv* env, jclass clazz, jint mode, jlong count, jint type, jlong indices, jint drawcount) {


//@line:11803

		ext_glMultiDrawElements((GLenum)mode, (const GLsizei*)count, (GLenum)type, (const GLvoid**)indices, (GLsizei)drawcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterf(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:11807

		ext_glPointParameterf((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11811

		ext_glPointParameterfv((GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfv__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:11815

		ext_glPointParameterfv((GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameteri(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:11819

		ext_glPointParameteri((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameteriv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:11823

		ext_glPointParameteriv((GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameteriv__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:11827

		ext_glPointParameteriv((GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordf(JNIEnv* env, jclass clazz, jfloat coord) {


//@line:11831

		ext_glFogCoordf((GLfloat)coord);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordfv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coord, jint coordByteOffset) {
	unsigned char* coord = (unsigned char*)(obj_coord?env->GetDirectBufferAddress(obj_coord):0);


//@line:11835

		ext_glFogCoordfv((const GLfloat*)(coord + coordByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordfv__J(JNIEnv* env, jclass clazz, jlong coord) {


//@line:11839

		ext_glFogCoordfv((const GLfloat*)coord);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordd(JNIEnv* env, jclass clazz, jdouble coord) {


//@line:11843

		ext_glFogCoordd((GLdouble)coord);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoorddv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coord, jint coordByteOffset) {
	unsigned char* coord = (unsigned char*)(obj_coord?env->GetDirectBufferAddress(obj_coord):0);


//@line:11847

		ext_glFogCoorddv((const GLdouble*)(coord + coordByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoorddv__J(JNIEnv* env, jclass clazz, jlong coord) {


//@line:11851

		ext_glFogCoorddv((const GLdouble*)coord);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordPointer__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:11855

		ext_glFogCoordPointer((GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordPointer__IIJ(JNIEnv* env, jclass clazz, jint type, jint stride, jlong pointer) {


//@line:11859

		ext_glFogCoordPointer((GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3b(JNIEnv* env, jclass clazz, jbyte red, jbyte green, jbyte blue) {


//@line:11863

		ext_glSecondaryColor3b((GLbyte)red, (GLbyte)green, (GLbyte)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3bv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11867

		ext_glSecondaryColor3bv((const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3bv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11871

		ext_glSecondaryColor3bv((const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3d(JNIEnv* env, jclass clazz, jdouble red, jdouble green, jdouble blue) {


//@line:11875

		ext_glSecondaryColor3d((GLdouble)red, (GLdouble)green, (GLdouble)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11879

		ext_glSecondaryColor3dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11883

		ext_glSecondaryColor3dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3f(JNIEnv* env, jclass clazz, jfloat red, jfloat green, jfloat blue) {


//@line:11887

		ext_glSecondaryColor3f((GLfloat)red, (GLfloat)green, (GLfloat)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11891

		ext_glSecondaryColor3fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11895

		ext_glSecondaryColor3fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3i(JNIEnv* env, jclass clazz, jint red, jint green, jint blue) {


//@line:11899

		ext_glSecondaryColor3i((GLint)red, (GLint)green, (GLint)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11903

		ext_glSecondaryColor3iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11907

		ext_glSecondaryColor3iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3s(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue) {


//@line:11911

		ext_glSecondaryColor3s((GLshort)red, (GLshort)green, (GLshort)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11915

		ext_glSecondaryColor3sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11919

		ext_glSecondaryColor3sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3ub(JNIEnv* env, jclass clazz, jbyte red, jbyte green, jbyte blue) {


//@line:11923

		ext_glSecondaryColor3ub((GLubyte)red, (GLubyte)green, (GLubyte)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3ubv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11927

		ext_glSecondaryColor3ubv((const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3ubv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11931

		ext_glSecondaryColor3ubv((const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3ui(JNIEnv* env, jclass clazz, jint red, jint green, jint blue) {


//@line:11935

		ext_glSecondaryColor3ui((GLuint)red, (GLuint)green, (GLuint)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3uiv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11939

		ext_glSecondaryColor3uiv((const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3uiv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11943

		ext_glSecondaryColor3uiv((const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3us(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue) {


//@line:11947

		ext_glSecondaryColor3us((GLushort)red, (GLushort)green, (GLushort)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3usv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11951

		ext_glSecondaryColor3usv((const GLushort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3usv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11955

		ext_glSecondaryColor3usv((const GLushort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColorPointer__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:11959

		ext_glSecondaryColorPointer((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColorPointer__IIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong pointer) {


//@line:11963

		ext_glSecondaryColorPointer((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2d(JNIEnv* env, jclass clazz, jdouble x, jdouble y) {


//@line:11967

		ext_glWindowPos2d((GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11971

		ext_glWindowPos2dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11975

		ext_glWindowPos2dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2f(JNIEnv* env, jclass clazz, jfloat x, jfloat y) {


//@line:11979

		ext_glWindowPos2f((GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11983

		ext_glWindowPos2fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11987

		ext_glWindowPos2fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2i(JNIEnv* env, jclass clazz, jint x, jint y) {


//@line:11991

		ext_glWindowPos2i((GLint)x, (GLint)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:11995

		ext_glWindowPos2iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:11999

		ext_glWindowPos2iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2s(JNIEnv* env, jclass clazz, jshort x, jshort y) {


//@line:12003

		ext_glWindowPos2s((GLshort)x, (GLshort)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12007

		ext_glWindowPos2sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:12011

		ext_glWindowPos2sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3d(JNIEnv* env, jclass clazz, jdouble x, jdouble y, jdouble z) {


//@line:12015

		ext_glWindowPos3d((GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3dv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12019

		ext_glWindowPos3dv((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3dv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:12023

		ext_glWindowPos3dv((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3f(JNIEnv* env, jclass clazz, jfloat x, jfloat y, jfloat z) {


//@line:12027

		ext_glWindowPos3f((GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3fv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12031

		ext_glWindowPos3fv((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3fv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:12035

		ext_glWindowPos3fv((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3i(JNIEnv* env, jclass clazz, jint x, jint y, jint z) {


//@line:12039

		ext_glWindowPos3i((GLint)x, (GLint)y, (GLint)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3iv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12043

		ext_glWindowPos3iv((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3iv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:12047

		ext_glWindowPos3iv((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3s(JNIEnv* env, jclass clazz, jshort x, jshort y, jshort z) {


//@line:12051

		ext_glWindowPos3s((GLshort)x, (GLshort)y, (GLshort)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3sv__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12055

		ext_glWindowPos3sv((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3sv__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:12059

		ext_glWindowPos3sv((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenQueries__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_ids, jint idsByteOffset) {
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);


//@line:12063

		ext_glGenQueries((GLsizei)n, (GLuint*)(ids + idsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenQueries__IJ(JNIEnv* env, jclass clazz, jint n, jlong ids) {


//@line:12067

		ext_glGenQueries((GLsizei)n, (GLuint*)ids);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteQueries__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_ids, jint idsByteOffset) {
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);


//@line:12071

		ext_glDeleteQueries((GLsizei)n, (const GLuint*)(ids + idsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteQueries__IJ(JNIEnv* env, jclass clazz, jint n, jlong ids) {


//@line:12075

		ext_glDeleteQueries((GLsizei)n, (const GLuint*)ids);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsQuery(JNIEnv* env, jclass clazz, jint id) {


//@line:12079

		return (jboolean)ext_glIsQuery((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginQuery(JNIEnv* env, jclass clazz, jint target, jint id) {


//@line:12083

		ext_glBeginQuery((GLenum)target, (GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndQuery(JNIEnv* env, jclass clazz, jint target) {


//@line:12087

		ext_glEndQuery((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12091

		ext_glGetQueryiv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryiv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:12095

		ext_glGetQueryiv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12099

		ext_glGetQueryObjectiv((GLuint)id, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectiv__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:12103

		ext_glGetQueryObjectiv((GLuint)id, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12107

		ext_glGetQueryObjectuiv((GLuint)id, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectuiv__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:12111

		ext_glGetQueryObjectuiv((GLuint)id, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindBuffer(JNIEnv* env, jclass clazz, jint target, jint buffer) {


//@line:12115

		ext_glBindBuffer((GLenum)target, (GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteBuffers__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_buffers, jint buffersByteOffset) {
	unsigned char* buffers = (unsigned char*)(obj_buffers?env->GetDirectBufferAddress(obj_buffers):0);


//@line:12119

		ext_glDeleteBuffers((GLsizei)n, (const GLuint*)(buffers + buffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteBuffers__IJ(JNIEnv* env, jclass clazz, jint n, jlong buffers) {


//@line:12123

		ext_glDeleteBuffers((GLsizei)n, (const GLuint*)buffers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenBuffers__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_buffers, jint buffersByteOffset) {
	unsigned char* buffers = (unsigned char*)(obj_buffers?env->GetDirectBufferAddress(obj_buffers):0);


//@line:12127

		ext_glGenBuffers((GLsizei)n, (GLuint*)(buffers + buffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenBuffers__IJ(JNIEnv* env, jclass clazz, jint n, jlong buffers) {


//@line:12131

		ext_glGenBuffers((GLsizei)n, (GLuint*)buffers);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsBuffer(JNIEnv* env, jclass clazz, jint buffer) {


//@line:12135

		return (jboolean)ext_glIsBuffer((GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBufferData__IJLjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint target, jlong size, jobject obj_data, jint dataByteOffset, jint usage) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:12139

		ext_glBufferData((GLenum)target, (GLsizeiptr)size, (const GLvoid*)(data + dataByteOffset), (GLenum)usage);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBufferData__IJJI(JNIEnv* env, jclass clazz, jint target, jlong size, jlong data, jint usage) {


//@line:12143

		ext_glBufferData((GLenum)target, (GLsizeiptr)size, (const GLvoid*)data, (GLenum)usage);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBufferSubData__IJJLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jlong offset, jlong size, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:12147

		ext_glBufferSubData((GLenum)target, (GLintptr)offset, (GLsizeiptr)size, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBufferSubData__IJJJ(JNIEnv* env, jclass clazz, jint target, jlong offset, jlong size, jlong data) {


//@line:12151

		ext_glBufferSubData((GLenum)target, (GLintptr)offset, (GLsizeiptr)size, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferSubData__IJJLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jlong offset, jlong size, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:12155

		ext_glGetBufferSubData((GLenum)target, (GLintptr)offset, (GLsizeiptr)size, (GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferSubData__IJJJ(JNIEnv* env, jclass clazz, jint target, jlong offset, jlong size, jlong data) {


//@line:12159

		ext_glGetBufferSubData((GLenum)target, (GLintptr)offset, (GLsizeiptr)size, (GLvoid*)data);
	

}

JNIEXPORT jobject JNICALL Java_com_badlogic_jglfw_gl_GL_glMapBuffer(JNIEnv* env, jclass clazz, jint target, jint access, jlong bufferSize) {


//@line:12163

		GLvoid* buffer = (GLvoid*)ext_glMapBuffer((GLenum)target, (GLenum)access);
		if(!buffer) return 0;
		return env->NewDirectByteBuffer(buffer, bufferSize);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glUnmapBuffer(JNIEnv* env, jclass clazz, jint target) {


//@line:12169

		return (jboolean)ext_glUnmapBuffer((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12173

		ext_glGetBufferParameteriv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:12177

		ext_glGetBufferParameteriv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferPointerv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12181

		ext_glGetBufferPointerv((GLenum)target, (GLenum)pname, (GLvoid**)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferPointerv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:12185

		ext_glGetBufferPointerv((GLenum)target, (GLenum)pname, (GLvoid**)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendEquationSeparate(JNIEnv* env, jclass clazz, jint modeRGB, jint modeAlpha) {


//@line:12189

		ext_glBlendEquationSeparate((GLenum)modeRGB, (GLenum)modeAlpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawBuffers__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_bufs, jint bufsByteOffset) {
	unsigned char* bufs = (unsigned char*)(obj_bufs?env->GetDirectBufferAddress(obj_bufs):0);


//@line:12193

		ext_glDrawBuffers((GLsizei)n, (const GLenum*)(bufs + bufsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawBuffers__IJ(JNIEnv* env, jclass clazz, jint n, jlong bufs) {


//@line:12197

		ext_glDrawBuffers((GLsizei)n, (const GLenum*)bufs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilOpSeparate(JNIEnv* env, jclass clazz, jint face, jint sfail, jint dpfail, jint dppass) {


//@line:12201

		ext_glStencilOpSeparate((GLenum)face, (GLenum)sfail, (GLenum)dpfail, (GLenum)dppass);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilFuncSeparate(JNIEnv* env, jclass clazz, jint face, jint func, jint ref, jint mask) {


//@line:12205

		ext_glStencilFuncSeparate((GLenum)face, (GLenum)func, (GLint)ref, (GLuint)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilMaskSeparate(JNIEnv* env, jclass clazz, jint face, jint mask) {


//@line:12209

		ext_glStencilMaskSeparate((GLenum)face, (GLuint)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glAttachShader(JNIEnv* env, jclass clazz, jint program, jint shader) {


//@line:12213

		ext_glAttachShader((GLuint)program, (GLuint)shader);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindAttribLocation(JNIEnv* env, jclass clazz, jint program, jint index, jstring obj_name) {
	char* name = (char*)env->GetStringUTFChars(obj_name, 0);


//@line:12217

		ext_glBindAttribLocation((GLuint)program, (GLuint)index, (const GLchar*)(name));
	
	env->ReleaseStringUTFChars(obj_name, name);

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompileShader(JNIEnv* env, jclass clazz, jint shader) {


//@line:12221

		ext_glCompileShader((GLuint)shader);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glCreateProgram(JNIEnv* env, jclass clazz) {


//@line:12225

		return (jint)ext_glCreateProgram();
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glCreateShader(JNIEnv* env, jclass clazz, jint type) {


//@line:12229

		return (jint)ext_glCreateShader((GLenum)type);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteProgram(JNIEnv* env, jclass clazz, jint program) {


//@line:12233

		ext_glDeleteProgram((GLuint)program);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteShader(JNIEnv* env, jclass clazz, jint shader) {


//@line:12237

		ext_glDeleteShader((GLuint)shader);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDetachShader(JNIEnv* env, jclass clazz, jint program, jint shader) {


//@line:12241

		ext_glDetachShader((GLuint)program, (GLuint)shader);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDisableVertexAttribArray(JNIEnv* env, jclass clazz, jint index) {


//@line:12245

		ext_glDisableVertexAttribArray((GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEnableVertexAttribArray(JNIEnv* env, jclass clazz, jint index) {


//@line:12249

		ext_glEnableVertexAttribArray((GLuint)index);
	

}

static inline jstring wrapped_Java_com_badlogic_jglfw_gl_GL_glGetActiveAttrib
(JNIEnv* env, jclass clazz, jint program, jint index, jobject obj_size, jint sizeByteOffset, jobject obj_type, jint typeByteOffset, unsigned char* size, unsigned char* type) {

//@line:12253

        // FIXME 2K limit for attrib names
        char cname[2048];
		ext_glGetActiveAttrib((GLuint)program, (GLuint)index, (GLsizei)2048, 0, (GLint*)(size + sizeByteOffset), (GLenum*)(type + typeByteOffset), cname);
        return env->NewStringUTF( cname );
	
}

JNIEXPORT jstring JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveAttrib(JNIEnv* env, jclass clazz, jint program, jint index, jobject obj_size, jint sizeByteOffset, jobject obj_type, jint typeByteOffset) {
	unsigned char* size = (unsigned char*)(obj_size?env->GetDirectBufferAddress(obj_size):0);
	unsigned char* type = (unsigned char*)(obj_type?env->GetDirectBufferAddress(obj_type):0);

	jstring JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetActiveAttrib(env, clazz, program, index, obj_size, sizeByteOffset, obj_type, typeByteOffset, size, type);


	return JNI_returnValue;
}

static inline jstring wrapped_Java_com_badlogic_jglfw_gl_GL_glGetActiveUniform
(JNIEnv* env, jclass clazz, jint program, jint index, jobject obj_size, jint sizeByteOffset, jobject obj_type, jint typeByteOffset, unsigned char* size, unsigned char* type) {

//@line:12260

        // FIXME 2K limit for uniform names
        char cname[2048];
		ext_glGetActiveUniform((GLuint)program, (GLuint)index, (GLsizei)2048, 0, (GLint*)(size + sizeByteOffset), (GLenum*)(type + typeByteOffset), cname);
        return env->NewStringUTF(cname);
	
}

JNIEXPORT jstring JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniform(JNIEnv* env, jclass clazz, jint program, jint index, jobject obj_size, jint sizeByteOffset, jobject obj_type, jint typeByteOffset) {
	unsigned char* size = (unsigned char*)(obj_size?env->GetDirectBufferAddress(obj_size):0);
	unsigned char* type = (unsigned char*)(obj_type?env->GetDirectBufferAddress(obj_type):0);

	jstring JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetActiveUniform(env, clazz, program, index, obj_size, sizeByteOffset, obj_type, typeByteOffset, size, type);


	return JNI_returnValue;
}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetAttachedShaders__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint maxCount, jobject obj_count, jint countByteOffset, jobject obj_obj, jint objByteOffset) {
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);
	unsigned char* obj = (unsigned char*)(obj_obj?env->GetDirectBufferAddress(obj_obj):0);


//@line:12267

		ext_glGetAttachedShaders((GLuint)program, (GLsizei)maxCount, (GLsizei*)(count + countByteOffset), (GLuint*)(obj + objByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetAttachedShaders__IIJJ(JNIEnv* env, jclass clazz, jint program, jint maxCount, jlong count, jlong obj) {


//@line:12271

		ext_glGetAttachedShaders((GLuint)program, (GLsizei)maxCount, (GLsizei*)count, (GLuint*)obj);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetAttribLocation
(JNIEnv* env, jclass clazz, jint program, jstring obj_name, char* name) {

//@line:12275

		return (jint)ext_glGetAttribLocation((GLuint)program, (const GLchar*)(name));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetAttribLocation(JNIEnv* env, jclass clazz, jint program, jstring obj_name) {
	char* name = (char*)env->GetStringUTFChars(obj_name, 0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetAttribLocation(env, clazz, program, obj_name, name);

	env->ReleaseStringUTFChars(obj_name, name);

	return JNI_returnValue;
}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12279

		ext_glGetProgramiv((GLuint)program, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramiv__IIJ(JNIEnv* env, jclass clazz, jint program, jint pname, jlong params) {


//@line:12283

		ext_glGetProgramiv((GLuint)program, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT jstring JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramInfoLog(JNIEnv* env, jclass clazz, jint program) {


//@line:12287

		// FIXME 10K limit
		char info[1024*10];
		int length = 0;
        ext_glGetProgramInfoLog(program, 1024*10, &length, info);
		return env->NewStringUTF(info);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetShaderiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint shader, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12295

		ext_glGetShaderiv((GLuint)shader, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetShaderiv__IIJ(JNIEnv* env, jclass clazz, jint shader, jint pname, jlong params) {


//@line:12299

		ext_glGetShaderiv((GLuint)shader, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT jstring JNICALL Java_com_badlogic_jglfw_gl_GL_glGetShaderInfoLog(JNIEnv* env, jclass clazz, jint shader) {


//@line:12303

		// FIXME 10K limit
		char info[1024*10];
		int length = 0;
        ext_glGetShaderInfoLog(shader, 1024*10, &length, info);
		return env->NewStringUTF(info);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetShaderSource__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint shader, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_source, jint sourceByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* source = (unsigned char*)(obj_source?env->GetDirectBufferAddress(obj_source):0);


//@line:12311

		ext_glGetShaderSource((GLuint)shader, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(source + sourceByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetShaderSource__IIJJ(JNIEnv* env, jclass clazz, jint shader, jint bufSize, jlong length, jlong source) {


//@line:12315

		ext_glGetShaderSource((GLuint)shader, (GLsizei)bufSize, (GLsizei*)length, (GLchar*)source);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetUniformLocation
(JNIEnv* env, jclass clazz, jint program, jstring obj_name, char* name) {

//@line:12319

		return (jint)ext_glGetUniformLocation((GLuint)program, (const GLchar*)(name));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformLocation(JNIEnv* env, jclass clazz, jint program, jstring obj_name) {
	char* name = (char*)env->GetStringUTFChars(obj_name, 0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetUniformLocation(env, clazz, program, obj_name, name);

	env->ReleaseStringUTFChars(obj_name, name);

	return JNI_returnValue;
}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12323

		ext_glGetUniformfv((GLuint)program, (GLint)location, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformfv__IIJ(JNIEnv* env, jclass clazz, jint program, jint location, jlong params) {


//@line:12327

		ext_glGetUniformfv((GLuint)program, (GLint)location, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12331

		ext_glGetUniformiv((GLuint)program, (GLint)location, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformiv__IIJ(JNIEnv* env, jclass clazz, jint program, jint location, jlong params) {


//@line:12335

		ext_glGetUniformiv((GLuint)program, (GLint)location, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribdv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12339

		ext_glGetVertexAttribdv((GLuint)index, (GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribdv__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:12343

		ext_glGetVertexAttribdv((GLuint)index, (GLenum)pname, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12347

		ext_glGetVertexAttribfv((GLuint)index, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribfv__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:12351

		ext_glGetVertexAttribfv((GLuint)index, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12355

		ext_glGetVertexAttribiv((GLuint)index, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribiv__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:12359

		ext_glGetVertexAttribiv((GLuint)index, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribPointerv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:12363

		ext_glGetVertexAttribPointerv((GLuint)index, (GLenum)pname, (GLvoid**)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribPointerv__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong pointer) {


//@line:12367

		ext_glGetVertexAttribPointerv((GLuint)index, (GLenum)pname, (GLvoid**)pointer);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsProgram(JNIEnv* env, jclass clazz, jint program) {


//@line:12371

		return (jboolean)ext_glIsProgram((GLuint)program);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsShader(JNIEnv* env, jclass clazz, jint shader) {


//@line:12375

		return (jboolean)ext_glIsShader((GLuint)shader);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLinkProgram(JNIEnv* env, jclass clazz, jint program) {


//@line:12379

		ext_glLinkProgram((GLuint)program);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glShaderSource(JNIEnv* env, jclass clazz, jint shader, jstring obj_string) {
	char* string = (char*)env->GetStringUTFChars(obj_string, 0);


//@line:12383

		ext_glShaderSource((GLuint)shader, 1, &string, 0);
	
	env->ReleaseStringUTFChars(obj_string, string);

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUseProgram(JNIEnv* env, jclass clazz, jint program) {


//@line:12387

		ext_glUseProgram((GLuint)program);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1f(JNIEnv* env, jclass clazz, jint location, jfloat v0) {


//@line:12391

		ext_glUniform1f((GLint)location, (GLfloat)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2f(JNIEnv* env, jclass clazz, jint location, jfloat v0, jfloat v1) {


//@line:12395

		ext_glUniform2f((GLint)location, (GLfloat)v0, (GLfloat)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3f(JNIEnv* env, jclass clazz, jint location, jfloat v0, jfloat v1, jfloat v2) {


//@line:12399

		ext_glUniform3f((GLint)location, (GLfloat)v0, (GLfloat)v1, (GLfloat)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4f(JNIEnv* env, jclass clazz, jint location, jfloat v0, jfloat v1, jfloat v2, jfloat v3) {


//@line:12403

		ext_glUniform4f((GLint)location, (GLfloat)v0, (GLfloat)v1, (GLfloat)v2, (GLfloat)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1i(JNIEnv* env, jclass clazz, jint location, jint v0) {


//@line:12407

		ext_glUniform1i((GLint)location, (GLint)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2i(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1) {


//@line:12411

		ext_glUniform2i((GLint)location, (GLint)v0, (GLint)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3i(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1, jint v2) {


//@line:12415

		ext_glUniform3i((GLint)location, (GLint)v0, (GLint)v1, (GLint)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4i(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1, jint v2, jint v3) {


//@line:12419

		ext_glUniform4i((GLint)location, (GLint)v0, (GLint)v1, (GLint)v2, (GLint)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1fv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12423

		ext_glUniform1fv((GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1fv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:12427

		ext_glUniform1fv((GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2fv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12431

		ext_glUniform2fv((GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2fv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:12435

		ext_glUniform2fv((GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3fv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12439

		ext_glUniform3fv((GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3fv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:12443

		ext_glUniform3fv((GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4fv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12447

		ext_glUniform4fv((GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4fv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:12451

		ext_glUniform4fv((GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1iv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12455

		ext_glUniform1iv((GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1iv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:12459

		ext_glUniform1iv((GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2iv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12463

		ext_glUniform2iv((GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2iv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:12467

		ext_glUniform2iv((GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3iv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12471

		ext_glUniform3iv((GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3iv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:12475

		ext_glUniform3iv((GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4iv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12479

		ext_glUniform4iv((GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4iv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:12483

		ext_glUniform4iv((GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2fv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12487

		ext_glUniformMatrix2fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2fv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:12491

		ext_glUniformMatrix2fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3fv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12495

		ext_glUniformMatrix3fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3fv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:12499

		ext_glUniformMatrix3fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4fv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12503

		ext_glUniformMatrix4fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4fv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:12507

		ext_glUniformMatrix4fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glValidateProgram(JNIEnv* env, jclass clazz, jint program) {


//@line:12511

		ext_glValidateProgram((GLuint)program);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1d(JNIEnv* env, jclass clazz, jint index, jdouble x) {


//@line:12515

		ext_glVertexAttrib1d((GLuint)index, (GLdouble)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12519

		ext_glVertexAttrib1dv((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1dv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12523

		ext_glVertexAttrib1dv((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1f(JNIEnv* env, jclass clazz, jint index, jfloat x) {


//@line:12527

		ext_glVertexAttrib1f((GLuint)index, (GLfloat)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1fv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12531

		ext_glVertexAttrib1fv((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1fv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12535

		ext_glVertexAttrib1fv((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1s(JNIEnv* env, jclass clazz, jint index, jshort x) {


//@line:12539

		ext_glVertexAttrib1s((GLuint)index, (GLshort)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1sv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12543

		ext_glVertexAttrib1sv((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1sv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12547

		ext_glVertexAttrib1sv((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2d(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y) {


//@line:12551

		ext_glVertexAttrib2d((GLuint)index, (GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12555

		ext_glVertexAttrib2dv((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2dv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12559

		ext_glVertexAttrib2dv((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2f(JNIEnv* env, jclass clazz, jint index, jfloat x, jfloat y) {


//@line:12563

		ext_glVertexAttrib2f((GLuint)index, (GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2fv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12567

		ext_glVertexAttrib2fv((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2fv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12571

		ext_glVertexAttrib2fv((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2s(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y) {


//@line:12575

		ext_glVertexAttrib2s((GLuint)index, (GLshort)x, (GLshort)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2sv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12579

		ext_glVertexAttrib2sv((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2sv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12583

		ext_glVertexAttrib2sv((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3d(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y, jdouble z) {


//@line:12587

		ext_glVertexAttrib3d((GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12591

		ext_glVertexAttrib3dv((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3dv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12595

		ext_glVertexAttrib3dv((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3f(JNIEnv* env, jclass clazz, jint index, jfloat x, jfloat y, jfloat z) {


//@line:12599

		ext_glVertexAttrib3f((GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3fv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12603

		ext_glVertexAttrib3fv((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3fv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12607

		ext_glVertexAttrib3fv((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3s(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y, jshort z) {


//@line:12611

		ext_glVertexAttrib3s((GLuint)index, (GLshort)x, (GLshort)y, (GLshort)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3sv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12615

		ext_glVertexAttrib3sv((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3sv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12619

		ext_glVertexAttrib3sv((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nbv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12623

		ext_glVertexAttrib4Nbv((GLuint)index, (const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nbv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12627

		ext_glVertexAttrib4Nbv((GLuint)index, (const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Niv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12631

		ext_glVertexAttrib4Niv((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Niv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12635

		ext_glVertexAttrib4Niv((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nsv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12639

		ext_glVertexAttrib4Nsv((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nsv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12643

		ext_glVertexAttrib4Nsv((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nub(JNIEnv* env, jclass clazz, jint index, jbyte x, jbyte y, jbyte z, jbyte w) {


//@line:12647

		ext_glVertexAttrib4Nub((GLuint)index, (GLubyte)x, (GLubyte)y, (GLubyte)z, (GLubyte)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nubv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12651

		ext_glVertexAttrib4Nubv((GLuint)index, (const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nubv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12655

		ext_glVertexAttrib4Nubv((GLuint)index, (const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nuiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12659

		ext_glVertexAttrib4Nuiv((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nuiv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12663

		ext_glVertexAttrib4Nuiv((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nusv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12667

		ext_glVertexAttrib4Nusv((GLuint)index, (const GLushort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4Nusv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12671

		ext_glVertexAttrib4Nusv((GLuint)index, (const GLushort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4bv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12675

		ext_glVertexAttrib4bv((GLuint)index, (const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4bv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12679

		ext_glVertexAttrib4bv((GLuint)index, (const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4d(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:12683

		ext_glVertexAttrib4d((GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12687

		ext_glVertexAttrib4dv((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4dv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12691

		ext_glVertexAttrib4dv((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4f(JNIEnv* env, jclass clazz, jint index, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:12695

		ext_glVertexAttrib4f((GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4fv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12699

		ext_glVertexAttrib4fv((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4fv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12703

		ext_glVertexAttrib4fv((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4iv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12707

		ext_glVertexAttrib4iv((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4iv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12711

		ext_glVertexAttrib4iv((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4s(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y, jshort z, jshort w) {


//@line:12715

		ext_glVertexAttrib4s((GLuint)index, (GLshort)x, (GLshort)y, (GLshort)z, (GLshort)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4sv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12719

		ext_glVertexAttrib4sv((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4sv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12723

		ext_glVertexAttrib4sv((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4ubv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12727

		ext_glVertexAttrib4ubv((GLuint)index, (const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4ubv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12731

		ext_glVertexAttrib4ubv((GLuint)index, (const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12735

		ext_glVertexAttrib4uiv((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4uiv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12739

		ext_glVertexAttrib4uiv((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4usv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12743

		ext_glVertexAttrib4usv((GLuint)index, (const GLushort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4usv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12747

		ext_glVertexAttrib4usv((GLuint)index, (const GLushort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribPointer__IIIZILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jboolean normalized, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:12751

		ext_glVertexAttribPointer((GLuint)index, (GLint)size, (GLenum)type, (GLboolean)normalized, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribPointer__IIIZIJ(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jboolean normalized, jint stride, jlong pointer) {


//@line:12755

		ext_glVertexAttribPointer((GLuint)index, (GLint)size, (GLenum)type, (GLboolean)normalized, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2x3fv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12759

		ext_glUniformMatrix2x3fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2x3fv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:12763

		ext_glUniformMatrix2x3fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3x2fv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12767

		ext_glUniformMatrix3x2fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3x2fv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:12771

		ext_glUniformMatrix3x2fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2x4fv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12775

		ext_glUniformMatrix2x4fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2x4fv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:12779

		ext_glUniformMatrix2x4fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4x2fv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12783

		ext_glUniformMatrix4x2fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4x2fv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:12787

		ext_glUniformMatrix4x2fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3x4fv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12791

		ext_glUniformMatrix3x4fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3x4fv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:12795

		ext_glUniformMatrix3x4fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4x3fv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:12799

		ext_glUniformMatrix4x3fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4x3fv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:12803

		ext_glUniformMatrix4x3fv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorMaski(JNIEnv* env, jclass clazz, jint index, jboolean r, jboolean g, jboolean b, jboolean a) {


//@line:12807

		ext_glColorMaski((GLuint)index, (GLboolean)r, (GLboolean)g, (GLboolean)b, (GLboolean)a);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEnablei(JNIEnv* env, jclass clazz, jint target, jint index) {


//@line:12811

		ext_glEnablei((GLenum)target, (GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDisablei(JNIEnv* env, jclass clazz, jint target, jint index) {


//@line:12815

		ext_glDisablei((GLenum)target, (GLuint)index);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsEnabledi(JNIEnv* env, jclass clazz, jint target, jint index) {


//@line:12819

		return (jboolean)ext_glIsEnabledi((GLenum)target, (GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginTransformFeedback(JNIEnv* env, jclass clazz, jint primitiveMode) {


//@line:12823

		ext_glBeginTransformFeedback((GLenum)primitiveMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndTransformFeedback(JNIEnv* env, jclass clazz) {


//@line:12827

		ext_glEndTransformFeedback();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindBufferRange(JNIEnv* env, jclass clazz, jint target, jint index, jint buffer, jlong offset, jlong size) {


//@line:12831

		ext_glBindBufferRange((GLenum)target, (GLuint)index, (GLuint)buffer, (GLintptr)offset, (GLsizeiptr)size);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindBufferBase(JNIEnv* env, jclass clazz, jint target, jint index, jint buffer) {


//@line:12835

		ext_glBindBufferBase((GLenum)target, (GLuint)index, (GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformFeedbackVaryings__IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint program, jint count, jobject obj_varyings, jint varyingsByteOffset, jint bufferMode) {
	unsigned char* varyings = (unsigned char*)(obj_varyings?env->GetDirectBufferAddress(obj_varyings):0);


//@line:12839

		ext_glTransformFeedbackVaryings((GLuint)program, (GLsizei)count, (const GLchar**)(varyings + varyingsByteOffset), (GLenum)bufferMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformFeedbackVaryings__IIJI(JNIEnv* env, jclass clazz, jint program, jint count, jlong varyings, jint bufferMode) {


//@line:12843

		ext_glTransformFeedbackVaryings((GLuint)program, (GLsizei)count, (const GLchar**)varyings, (GLenum)bufferMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTransformFeedbackVarying__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint index, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_size, jint sizeByteOffset, jobject obj_type, jint typeByteOffset, jobject obj_name, jint nameByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* size = (unsigned char*)(obj_size?env->GetDirectBufferAddress(obj_size):0);
	unsigned char* type = (unsigned char*)(obj_type?env->GetDirectBufferAddress(obj_type):0);
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:12847

		ext_glGetTransformFeedbackVarying((GLuint)program, (GLuint)index, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLsizei*)(size + sizeByteOffset), (GLenum*)(type + typeByteOffset), (GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTransformFeedbackVarying__IIIJJJJ(JNIEnv* env, jclass clazz, jint program, jint index, jint bufSize, jlong length, jlong size, jlong type, jlong name) {


//@line:12851

		ext_glGetTransformFeedbackVarying((GLuint)program, (GLuint)index, (GLsizei)bufSize, (GLsizei*)length, (GLsizei*)size, (GLenum*)type, (GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClampColor(JNIEnv* env, jclass clazz, jint target, jint clamp) {


//@line:12855

		ext_glClampColor((GLenum)target, (GLenum)clamp);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginConditionalRender(JNIEnv* env, jclass clazz, jint id, jint mode) {


//@line:12859

		ext_glBeginConditionalRender((GLuint)id, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndConditionalRender(JNIEnv* env, jclass clazz) {


//@line:12863

		ext_glEndConditionalRender();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribIPointer__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:12867

		ext_glVertexAttribIPointer((GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribIPointer__IIIIJ(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jint stride, jlong pointer) {


//@line:12871

		ext_glVertexAttribIPointer((GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribIiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12875

		ext_glGetVertexAttribIiv((GLuint)index, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribIiv__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:12879

		ext_glGetVertexAttribIiv((GLuint)index, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribIuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:12883

		ext_glGetVertexAttribIuiv((GLuint)index, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribIuiv__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:12887

		ext_glGetVertexAttribIuiv((GLuint)index, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1i(JNIEnv* env, jclass clazz, jint index, jint x) {


//@line:12891

		ext_glVertexAttribI1i((GLuint)index, (GLint)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2i(JNIEnv* env, jclass clazz, jint index, jint x, jint y) {


//@line:12895

		ext_glVertexAttribI2i((GLuint)index, (GLint)x, (GLint)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3i(JNIEnv* env, jclass clazz, jint index, jint x, jint y, jint z) {


//@line:12899

		ext_glVertexAttribI3i((GLuint)index, (GLint)x, (GLint)y, (GLint)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4i(JNIEnv* env, jclass clazz, jint index, jint x, jint y, jint z, jint w) {


//@line:12903

		ext_glVertexAttribI4i((GLuint)index, (GLint)x, (GLint)y, (GLint)z, (GLint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1ui(JNIEnv* env, jclass clazz, jint index, jint x) {


//@line:12907

		ext_glVertexAttribI1ui((GLuint)index, (GLuint)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2ui(JNIEnv* env, jclass clazz, jint index, jint x, jint y) {


//@line:12911

		ext_glVertexAttribI2ui((GLuint)index, (GLuint)x, (GLuint)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3ui(JNIEnv* env, jclass clazz, jint index, jint x, jint y, jint z) {


//@line:12915

		ext_glVertexAttribI3ui((GLuint)index, (GLuint)x, (GLuint)y, (GLuint)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4ui(JNIEnv* env, jclass clazz, jint index, jint x, jint y, jint z, jint w) {


//@line:12919

		ext_glVertexAttribI4ui((GLuint)index, (GLuint)x, (GLuint)y, (GLuint)z, (GLuint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1iv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12923

		ext_glVertexAttribI1iv((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1iv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12927

		ext_glVertexAttribI1iv((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2iv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12931

		ext_glVertexAttribI2iv((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2iv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12935

		ext_glVertexAttribI2iv((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3iv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12939

		ext_glVertexAttribI3iv((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3iv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12943

		ext_glVertexAttribI3iv((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4iv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12947

		ext_glVertexAttribI4iv((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4iv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12951

		ext_glVertexAttribI4iv((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12955

		ext_glVertexAttribI1uiv((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1uiv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12959

		ext_glVertexAttribI1uiv((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12963

		ext_glVertexAttribI2uiv((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2uiv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12967

		ext_glVertexAttribI2uiv((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12971

		ext_glVertexAttribI3uiv((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3uiv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12975

		ext_glVertexAttribI3uiv((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12979

		ext_glVertexAttribI4uiv((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4uiv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12983

		ext_glVertexAttribI4uiv((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4bv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12987

		ext_glVertexAttribI4bv((GLuint)index, (const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4bv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12991

		ext_glVertexAttribI4bv((GLuint)index, (const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4sv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:12995

		ext_glVertexAttribI4sv((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4sv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:12999

		ext_glVertexAttribI4sv((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4ubv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13003

		ext_glVertexAttribI4ubv((GLuint)index, (const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4ubv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13007

		ext_glVertexAttribI4ubv((GLuint)index, (const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4usv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13011

		ext_glVertexAttribI4usv((GLuint)index, (const GLushort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4usv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13015

		ext_glVertexAttribI4usv((GLuint)index, (const GLushort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:13019

		ext_glGetUniformuiv((GLuint)program, (GLint)location, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformuiv__IIJ(JNIEnv* env, jclass clazz, jint program, jint location, jlong params) {


//@line:13023

		ext_glGetUniformuiv((GLuint)program, (GLint)location, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindFragDataLocation__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint color, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:13027

		ext_glBindFragDataLocation((GLuint)program, (GLuint)color, (const GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindFragDataLocation__IIJ(JNIEnv* env, jclass clazz, jint program, jint color, jlong name) {


//@line:13031

		ext_glBindFragDataLocation((GLuint)program, (GLuint)color, (const GLchar*)name);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetFragDataLocation__ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint program, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:13035

		return (jint)ext_glGetFragDataLocation((GLuint)program, (const GLchar*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragDataLocation__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetFragDataLocation__ILjava_nio_Buffer_2I(env, clazz, program, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragDataLocation__IJ(JNIEnv* env, jclass clazz, jint program, jlong name) {


//@line:13039

		return (jint)ext_glGetFragDataLocation((GLuint)program, (const GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1ui(JNIEnv* env, jclass clazz, jint location, jint v0) {


//@line:13043

		ext_glUniform1ui((GLint)location, (GLuint)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2ui(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1) {


//@line:13047

		ext_glUniform2ui((GLint)location, (GLuint)v0, (GLuint)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3ui(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1, jint v2) {


//@line:13051

		ext_glUniform3ui((GLint)location, (GLuint)v0, (GLuint)v1, (GLuint)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4ui(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1, jint v2, jint v3) {


//@line:13055

		ext_glUniform4ui((GLint)location, (GLuint)v0, (GLuint)v1, (GLuint)v2, (GLuint)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1uiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:13059

		ext_glUniform1uiv((GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1uiv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:13063

		ext_glUniform1uiv((GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2uiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:13067

		ext_glUniform2uiv((GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2uiv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:13071

		ext_glUniform2uiv((GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3uiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:13075

		ext_glUniform3uiv((GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3uiv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:13079

		ext_glUniform3uiv((GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4uiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:13083

		ext_glUniform4uiv((GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4uiv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:13087

		ext_glUniform4uiv((GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterIiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:13091

		ext_glTexParameterIiv((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterIiv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:13095

		ext_glTexParameterIiv((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterIuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:13099

		ext_glTexParameterIuiv((GLenum)target, (GLenum)pname, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterIuiv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:13103

		ext_glTexParameterIuiv((GLenum)target, (GLenum)pname, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterIiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:13107

		ext_glGetTexParameterIiv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterIiv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:13111

		ext_glGetTexParameterIiv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterIuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:13115

		ext_glGetTexParameterIuiv((GLenum)target, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterIuiv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:13119

		ext_glGetTexParameterIuiv((GLenum)target, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jint drawbuffer, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:13123

		ext_glClearBufferiv((GLenum)buffer, (GLint)drawbuffer, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferiv__IIJ(JNIEnv* env, jclass clazz, jint buffer, jint drawbuffer, jlong value) {


//@line:13127

		ext_glClearBufferiv((GLenum)buffer, (GLint)drawbuffer, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jint drawbuffer, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:13131

		ext_glClearBufferuiv((GLenum)buffer, (GLint)drawbuffer, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferuiv__IIJ(JNIEnv* env, jclass clazz, jint buffer, jint drawbuffer, jlong value) {


//@line:13135

		ext_glClearBufferuiv((GLenum)buffer, (GLint)drawbuffer, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jint drawbuffer, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:13139

		ext_glClearBufferfv((GLenum)buffer, (GLint)drawbuffer, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferfv__IIJ(JNIEnv* env, jclass clazz, jint buffer, jint drawbuffer, jlong value) {


//@line:13143

		ext_glClearBufferfv((GLenum)buffer, (GLint)drawbuffer, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferfi(JNIEnv* env, jclass clazz, jint buffer, jint drawbuffer, jfloat depth, jint stencil) {


//@line:13147

		ext_glClearBufferfi((GLenum)buffer, (GLint)drawbuffer, (GLfloat)depth, (GLint)stencil);
	

}

JNIEXPORT jstring JNICALL Java_com_badlogic_jglfw_gl_GL_glGetString__II(JNIEnv* env, jclass clazz, jint name, jint index) {


//@line:13151

		return env->NewStringUTF((const char*)ext_glGetStringi((GLenum)name, (GLuint)index));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawArraysInstanced(JNIEnv* env, jclass clazz, jint mode, jint first, jint count, jint instancecount) {


//@line:13155

		ext_glDrawArraysInstanced((GLenum)mode, (GLint)first, (GLsizei)count, (GLsizei)instancecount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstanced__IIILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jobject obj_indices, jint indicesByteOffset, jint instancecount) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:13159

		ext_glDrawElementsInstanced((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)(indices + indicesByteOffset), (GLsizei)instancecount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstanced__IIIJI(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jlong indices, jint instancecount) {


//@line:13163

		ext_glDrawElementsInstanced((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)indices, (GLsizei)instancecount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexBuffer(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint buffer) {


//@line:13167

		ext_glTexBuffer((GLenum)target, (GLenum)internalformat, (GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPrimitiveRestartIndex(JNIEnv* env, jclass clazz, jint index) {


//@line:13171

		ext_glPrimitiveRestartIndex((GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferParameteri64v__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:13175

		ext_glGetBufferParameteri64v((GLenum)target, (GLenum)pname, (GLint64*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferParameteri64v__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:13179

		ext_glGetBufferParameteri64v((GLenum)target, (GLenum)pname, (GLint64*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTexture(JNIEnv* env, jclass clazz, jint target, jint attachment, jint texture, jint level) {


//@line:13183

		ext_glFramebufferTexture((GLenum)target, (GLenum)attachment, (GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribDivisor(JNIEnv* env, jclass clazz, jint index, jint divisor) {


//@line:13187

		ext_glVertexAttribDivisor((GLuint)index, (GLuint)divisor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMinSampleShading(JNIEnv* env, jclass clazz, jfloat value) {


//@line:13191

		ext_glMinSampleShading((GLfloat)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendEquationi(JNIEnv* env, jclass clazz, jint buf, jint mode) {


//@line:13195

		ext_glBlendEquationi((GLuint)buf, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendEquationSeparatei(JNIEnv* env, jclass clazz, jint buf, jint modeRGB, jint modeAlpha) {


//@line:13199

		ext_glBlendEquationSeparatei((GLuint)buf, (GLenum)modeRGB, (GLenum)modeAlpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendFunci(JNIEnv* env, jclass clazz, jint buf, jint src, jint dst) {


//@line:13203

		ext_glBlendFunci((GLuint)buf, (GLenum)src, (GLenum)dst);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendFuncSeparatei(JNIEnv* env, jclass clazz, jint buf, jint srcRGB, jint dstRGB, jint srcAlpha, jint dstAlpha) {


//@line:13207

		ext_glBlendFuncSeparatei((GLuint)buf, (GLenum)srcRGB, (GLenum)dstRGB, (GLenum)srcAlpha, (GLenum)dstAlpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glActiveTextureARB(JNIEnv* env, jclass clazz, jint texture) {


//@line:13211

		ext_glActiveTextureARB((GLenum)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClientActiveTextureARB(JNIEnv* env, jclass clazz, jint texture) {


//@line:13215

		ext_glClientActiveTextureARB((GLenum)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1dARB(JNIEnv* env, jclass clazz, jint target, jdouble s) {


//@line:13219

		ext_glMultiTexCoord1dARB((GLenum)target, (GLdouble)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1dvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13223

		ext_glMultiTexCoord1dvARB((GLenum)target, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1dvARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13227

		ext_glMultiTexCoord1dvARB((GLenum)target, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1fARB(JNIEnv* env, jclass clazz, jint target, jfloat s) {


//@line:13231

		ext_glMultiTexCoord1fARB((GLenum)target, (GLfloat)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1fvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13235

		ext_glMultiTexCoord1fvARB((GLenum)target, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1fvARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13239

		ext_glMultiTexCoord1fvARB((GLenum)target, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1iARB(JNIEnv* env, jclass clazz, jint target, jint s) {


//@line:13243

		ext_glMultiTexCoord1iARB((GLenum)target, (GLint)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1ivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13247

		ext_glMultiTexCoord1ivARB((GLenum)target, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1ivARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13251

		ext_glMultiTexCoord1ivARB((GLenum)target, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1sARB(JNIEnv* env, jclass clazz, jint target, jshort s) {


//@line:13255

		ext_glMultiTexCoord1sARB((GLenum)target, (GLshort)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1svARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13259

		ext_glMultiTexCoord1svARB((GLenum)target, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1svARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13263

		ext_glMultiTexCoord1svARB((GLenum)target, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2dARB(JNIEnv* env, jclass clazz, jint target, jdouble s, jdouble t) {


//@line:13267

		ext_glMultiTexCoord2dARB((GLenum)target, (GLdouble)s, (GLdouble)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2dvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13271

		ext_glMultiTexCoord2dvARB((GLenum)target, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2dvARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13275

		ext_glMultiTexCoord2dvARB((GLenum)target, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2fARB(JNIEnv* env, jclass clazz, jint target, jfloat s, jfloat t) {


//@line:13279

		ext_glMultiTexCoord2fARB((GLenum)target, (GLfloat)s, (GLfloat)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2fvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13283

		ext_glMultiTexCoord2fvARB((GLenum)target, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2fvARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13287

		ext_glMultiTexCoord2fvARB((GLenum)target, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2iARB(JNIEnv* env, jclass clazz, jint target, jint s, jint t) {


//@line:13291

		ext_glMultiTexCoord2iARB((GLenum)target, (GLint)s, (GLint)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2ivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13295

		ext_glMultiTexCoord2ivARB((GLenum)target, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2ivARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13299

		ext_glMultiTexCoord2ivARB((GLenum)target, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2sARB(JNIEnv* env, jclass clazz, jint target, jshort s, jshort t) {


//@line:13303

		ext_glMultiTexCoord2sARB((GLenum)target, (GLshort)s, (GLshort)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2svARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13307

		ext_glMultiTexCoord2svARB((GLenum)target, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2svARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13311

		ext_glMultiTexCoord2svARB((GLenum)target, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3dARB(JNIEnv* env, jclass clazz, jint target, jdouble s, jdouble t, jdouble r) {


//@line:13315

		ext_glMultiTexCoord3dARB((GLenum)target, (GLdouble)s, (GLdouble)t, (GLdouble)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3dvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13319

		ext_glMultiTexCoord3dvARB((GLenum)target, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3dvARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13323

		ext_glMultiTexCoord3dvARB((GLenum)target, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3fARB(JNIEnv* env, jclass clazz, jint target, jfloat s, jfloat t, jfloat r) {


//@line:13327

		ext_glMultiTexCoord3fARB((GLenum)target, (GLfloat)s, (GLfloat)t, (GLfloat)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3fvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13331

		ext_glMultiTexCoord3fvARB((GLenum)target, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3fvARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13335

		ext_glMultiTexCoord3fvARB((GLenum)target, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3iARB(JNIEnv* env, jclass clazz, jint target, jint s, jint t, jint r) {


//@line:13339

		ext_glMultiTexCoord3iARB((GLenum)target, (GLint)s, (GLint)t, (GLint)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3ivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13343

		ext_glMultiTexCoord3ivARB((GLenum)target, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3ivARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13347

		ext_glMultiTexCoord3ivARB((GLenum)target, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3sARB(JNIEnv* env, jclass clazz, jint target, jshort s, jshort t, jshort r) {


//@line:13351

		ext_glMultiTexCoord3sARB((GLenum)target, (GLshort)s, (GLshort)t, (GLshort)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3svARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13355

		ext_glMultiTexCoord3svARB((GLenum)target, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3svARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13359

		ext_glMultiTexCoord3svARB((GLenum)target, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4dARB(JNIEnv* env, jclass clazz, jint target, jdouble s, jdouble t, jdouble r, jdouble q) {


//@line:13363

		ext_glMultiTexCoord4dARB((GLenum)target, (GLdouble)s, (GLdouble)t, (GLdouble)r, (GLdouble)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4dvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13367

		ext_glMultiTexCoord4dvARB((GLenum)target, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4dvARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13371

		ext_glMultiTexCoord4dvARB((GLenum)target, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4fARB(JNIEnv* env, jclass clazz, jint target, jfloat s, jfloat t, jfloat r, jfloat q) {


//@line:13375

		ext_glMultiTexCoord4fARB((GLenum)target, (GLfloat)s, (GLfloat)t, (GLfloat)r, (GLfloat)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4fvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13379

		ext_glMultiTexCoord4fvARB((GLenum)target, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4fvARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13383

		ext_glMultiTexCoord4fvARB((GLenum)target, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4iARB(JNIEnv* env, jclass clazz, jint target, jint s, jint t, jint r, jint q) {


//@line:13387

		ext_glMultiTexCoord4iARB((GLenum)target, (GLint)s, (GLint)t, (GLint)r, (GLint)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4ivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13391

		ext_glMultiTexCoord4ivARB((GLenum)target, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4ivARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13395

		ext_glMultiTexCoord4ivARB((GLenum)target, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4sARB(JNIEnv* env, jclass clazz, jint target, jshort s, jshort t, jshort r, jshort q) {


//@line:13399

		ext_glMultiTexCoord4sARB((GLenum)target, (GLshort)s, (GLshort)t, (GLshort)r, (GLshort)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4svARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13403

		ext_glMultiTexCoord4svARB((GLenum)target, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4svARB__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:13407

		ext_glMultiTexCoord4svARB((GLenum)target, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadTransposeMatrixfARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:13411

		ext_glLoadTransposeMatrixfARB((const GLfloat*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadTransposeMatrixfARB__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:13415

		ext_glLoadTransposeMatrixfARB((const GLfloat*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadTransposeMatrixdARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:13419

		ext_glLoadTransposeMatrixdARB((const GLdouble*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadTransposeMatrixdARB__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:13423

		ext_glLoadTransposeMatrixdARB((const GLdouble*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultTransposeMatrixfARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:13427

		ext_glMultTransposeMatrixfARB((const GLfloat*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultTransposeMatrixfARB__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:13431

		ext_glMultTransposeMatrixfARB((const GLfloat*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultTransposeMatrixdARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:13435

		ext_glMultTransposeMatrixdARB((const GLdouble*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultTransposeMatrixdARB__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:13439

		ext_glMultTransposeMatrixdARB((const GLdouble*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSampleCoverageARB(JNIEnv* env, jclass clazz, jfloat value, jboolean invert) {


//@line:13443

		ext_glSampleCoverageARB((GLfloat)value, (GLboolean)invert);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage3DARB__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:13447

		ext_glCompressedTexImage3DARB((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage3DARB__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint imageSize, jlong data) {


//@line:13451

		ext_glCompressedTexImage3DARB((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage2DARB__IIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:13455

		ext_glCompressedTexImage2DARB((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage2DARB__IIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint imageSize, jlong data) {


//@line:13459

		ext_glCompressedTexImage2DARB((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage1DARB__IIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint border, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:13463

		ext_glCompressedTexImage1DARB((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexImage1DARB__IIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint border, jint imageSize, jlong data) {


//@line:13467

		ext_glCompressedTexImage1DARB((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage3DARB__IIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:13471

		ext_glCompressedTexSubImage3DARB((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage3DARB__IIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint imageSize, jlong data) {


//@line:13475

		ext_glCompressedTexSubImage3DARB((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage2DARB__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:13479

		ext_glCompressedTexSubImage2DARB((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage2DARB__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jlong data) {


//@line:13483

		ext_glCompressedTexSubImage2DARB((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage1DARB__IIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint width, jint format, jint imageSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:13487

		ext_glCompressedTexSubImage1DARB((GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTexSubImage1DARB__IIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint width, jint format, jint imageSize, jlong data) {


//@line:13491

		ext_glCompressedTexSubImage1DARB((GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCompressedTexImageARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jobject obj_img, jint imgByteOffset) {
	unsigned char* img = (unsigned char*)(obj_img?env->GetDirectBufferAddress(obj_img):0);


//@line:13495

		ext_glGetCompressedTexImageARB((GLenum)target, (GLint)level, (GLvoid*)(img + imgByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCompressedTexImageARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint level, jlong img) {


//@line:13499

		ext_glGetCompressedTexImageARB((GLenum)target, (GLint)level, (GLvoid*)img);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfARB(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:13503

		ext_glPointParameterfARB((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:13507

		ext_glPointParameterfvARB((GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfvARB__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:13511

		ext_glPointParameterfvARB((GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightbvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:13515

		ext_glWeightbvARB((GLint)size, (const GLbyte*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightbvARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong weights) {


//@line:13519

		ext_glWeightbvARB((GLint)size, (const GLbyte*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightsvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:13523

		ext_glWeightsvARB((GLint)size, (const GLshort*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightsvARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong weights) {


//@line:13527

		ext_glWeightsvARB((GLint)size, (const GLshort*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:13531

		ext_glWeightivARB((GLint)size, (const GLint*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightivARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong weights) {


//@line:13535

		ext_glWeightivARB((GLint)size, (const GLint*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightfvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:13539

		ext_glWeightfvARB((GLint)size, (const GLfloat*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightfvARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong weights) {


//@line:13543

		ext_glWeightfvARB((GLint)size, (const GLfloat*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightdvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:13547

		ext_glWeightdvARB((GLint)size, (const GLdouble*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightdvARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong weights) {


//@line:13551

		ext_glWeightdvARB((GLint)size, (const GLdouble*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightubvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:13555

		ext_glWeightubvARB((GLint)size, (const GLubyte*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightubvARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong weights) {


//@line:13559

		ext_glWeightubvARB((GLint)size, (const GLubyte*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightusvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:13563

		ext_glWeightusvARB((GLint)size, (const GLushort*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightusvARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong weights) {


//@line:13567

		ext_glWeightusvARB((GLint)size, (const GLushort*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightuivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:13571

		ext_glWeightuivARB((GLint)size, (const GLuint*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightuivARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong weights) {


//@line:13575

		ext_glWeightuivARB((GLint)size, (const GLuint*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightPointerARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:13579

		ext_glWeightPointerARB((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightPointerARB__IIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong pointer) {


//@line:13583

		ext_glWeightPointerARB((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexBlendARB(JNIEnv* env, jclass clazz, jint count) {


//@line:13587

		ext_glVertexBlendARB((GLint)count);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCurrentPaletteMatrixARB(JNIEnv* env, jclass clazz, jint index) {


//@line:13591

		ext_glCurrentPaletteMatrixARB((GLint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixIndexubvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_indices, jint indicesByteOffset) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:13595

		ext_glMatrixIndexubvARB((GLint)size, (const GLubyte*)(indices + indicesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixIndexubvARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong indices) {


//@line:13599

		ext_glMatrixIndexubvARB((GLint)size, (const GLubyte*)indices);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixIndexusvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_indices, jint indicesByteOffset) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:13603

		ext_glMatrixIndexusvARB((GLint)size, (const GLushort*)(indices + indicesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixIndexusvARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong indices) {


//@line:13607

		ext_glMatrixIndexusvARB((GLint)size, (const GLushort*)indices);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixIndexuivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_indices, jint indicesByteOffset) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:13611

		ext_glMatrixIndexuivARB((GLint)size, (const GLuint*)(indices + indicesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixIndexuivARB__IJ(JNIEnv* env, jclass clazz, jint size, jlong indices) {


//@line:13615

		ext_glMatrixIndexuivARB((GLint)size, (const GLuint*)indices);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixIndexPointerARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:13619

		ext_glMatrixIndexPointerARB((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixIndexPointerARB__IIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong pointer) {


//@line:13623

		ext_glMatrixIndexPointerARB((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2dARB(JNIEnv* env, jclass clazz, jdouble x, jdouble y) {


//@line:13627

		ext_glWindowPos2dARB((GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2dvARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13631

		ext_glWindowPos2dvARB((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2dvARB__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:13635

		ext_glWindowPos2dvARB((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2fARB(JNIEnv* env, jclass clazz, jfloat x, jfloat y) {


//@line:13639

		ext_glWindowPos2fARB((GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2fvARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13643

		ext_glWindowPos2fvARB((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2fvARB__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:13647

		ext_glWindowPos2fvARB((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2iARB(JNIEnv* env, jclass clazz, jint x, jint y) {


//@line:13651

		ext_glWindowPos2iARB((GLint)x, (GLint)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2ivARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13655

		ext_glWindowPos2ivARB((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2ivARB__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:13659

		ext_glWindowPos2ivARB((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2sARB(JNIEnv* env, jclass clazz, jshort x, jshort y) {


//@line:13663

		ext_glWindowPos2sARB((GLshort)x, (GLshort)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2svARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13667

		ext_glWindowPos2svARB((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2svARB__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:13671

		ext_glWindowPos2svARB((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3dARB(JNIEnv* env, jclass clazz, jdouble x, jdouble y, jdouble z) {


//@line:13675

		ext_glWindowPos3dARB((GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3dvARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13679

		ext_glWindowPos3dvARB((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3dvARB__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:13683

		ext_glWindowPos3dvARB((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3fARB(JNIEnv* env, jclass clazz, jfloat x, jfloat y, jfloat z) {


//@line:13687

		ext_glWindowPos3fARB((GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3fvARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13691

		ext_glWindowPos3fvARB((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3fvARB__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:13695

		ext_glWindowPos3fvARB((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3iARB(JNIEnv* env, jclass clazz, jint x, jint y, jint z) {


//@line:13699

		ext_glWindowPos3iARB((GLint)x, (GLint)y, (GLint)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3ivARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13703

		ext_glWindowPos3ivARB((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3ivARB__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:13707

		ext_glWindowPos3ivARB((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3sARB(JNIEnv* env, jclass clazz, jshort x, jshort y, jshort z) {


//@line:13711

		ext_glWindowPos3sARB((GLshort)x, (GLshort)y, (GLshort)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3svARB__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13715

		ext_glWindowPos3svARB((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3svARB__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:13719

		ext_glWindowPos3svARB((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1dARB(JNIEnv* env, jclass clazz, jint index, jdouble x) {


//@line:13723

		ext_glVertexAttrib1dARB((GLuint)index, (GLdouble)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1dvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13727

		ext_glVertexAttrib1dvARB((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1dvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13731

		ext_glVertexAttrib1dvARB((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1fARB(JNIEnv* env, jclass clazz, jint index, jfloat x) {


//@line:13735

		ext_glVertexAttrib1fARB((GLuint)index, (GLfloat)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1fvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13739

		ext_glVertexAttrib1fvARB((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1fvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13743

		ext_glVertexAttrib1fvARB((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1sARB(JNIEnv* env, jclass clazz, jint index, jshort x) {


//@line:13747

		ext_glVertexAttrib1sARB((GLuint)index, (GLshort)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1svARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13751

		ext_glVertexAttrib1svARB((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1svARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13755

		ext_glVertexAttrib1svARB((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2dARB(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y) {


//@line:13759

		ext_glVertexAttrib2dARB((GLuint)index, (GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2dvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13763

		ext_glVertexAttrib2dvARB((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2dvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13767

		ext_glVertexAttrib2dvARB((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2fARB(JNIEnv* env, jclass clazz, jint index, jfloat x, jfloat y) {


//@line:13771

		ext_glVertexAttrib2fARB((GLuint)index, (GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2fvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13775

		ext_glVertexAttrib2fvARB((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2fvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13779

		ext_glVertexAttrib2fvARB((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2sARB(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y) {


//@line:13783

		ext_glVertexAttrib2sARB((GLuint)index, (GLshort)x, (GLshort)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2svARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13787

		ext_glVertexAttrib2svARB((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2svARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13791

		ext_glVertexAttrib2svARB((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3dARB(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y, jdouble z) {


//@line:13795

		ext_glVertexAttrib3dARB((GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3dvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13799

		ext_glVertexAttrib3dvARB((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3dvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13803

		ext_glVertexAttrib3dvARB((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3fARB(JNIEnv* env, jclass clazz, jint index, jfloat x, jfloat y, jfloat z) {


//@line:13807

		ext_glVertexAttrib3fARB((GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3fvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13811

		ext_glVertexAttrib3fvARB((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3fvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13815

		ext_glVertexAttrib3fvARB((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3sARB(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y, jshort z) {


//@line:13819

		ext_glVertexAttrib3sARB((GLuint)index, (GLshort)x, (GLshort)y, (GLshort)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3svARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13823

		ext_glVertexAttrib3svARB((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3svARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13827

		ext_glVertexAttrib3svARB((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NbvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13831

		ext_glVertexAttrib4NbvARB((GLuint)index, (const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NbvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13835

		ext_glVertexAttrib4NbvARB((GLuint)index, (const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13839

		ext_glVertexAttrib4NivARB((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NivARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13843

		ext_glVertexAttrib4NivARB((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NsvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13847

		ext_glVertexAttrib4NsvARB((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NsvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13851

		ext_glVertexAttrib4NsvARB((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NubARB(JNIEnv* env, jclass clazz, jint index, jbyte x, jbyte y, jbyte z, jbyte w) {


//@line:13855

		ext_glVertexAttrib4NubARB((GLuint)index, (GLubyte)x, (GLubyte)y, (GLubyte)z, (GLubyte)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NubvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13859

		ext_glVertexAttrib4NubvARB((GLuint)index, (const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NubvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13863

		ext_glVertexAttrib4NubvARB((GLuint)index, (const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NuivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13867

		ext_glVertexAttrib4NuivARB((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NuivARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13871

		ext_glVertexAttrib4NuivARB((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NusvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13875

		ext_glVertexAttrib4NusvARB((GLuint)index, (const GLushort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4NusvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13879

		ext_glVertexAttrib4NusvARB((GLuint)index, (const GLushort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4bvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13883

		ext_glVertexAttrib4bvARB((GLuint)index, (const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4bvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13887

		ext_glVertexAttrib4bvARB((GLuint)index, (const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4dARB(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:13891

		ext_glVertexAttrib4dARB((GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4dvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13895

		ext_glVertexAttrib4dvARB((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4dvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13899

		ext_glVertexAttrib4dvARB((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4fARB(JNIEnv* env, jclass clazz, jint index, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:13903

		ext_glVertexAttrib4fARB((GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4fvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13907

		ext_glVertexAttrib4fvARB((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4fvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13911

		ext_glVertexAttrib4fvARB((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4ivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13915

		ext_glVertexAttrib4ivARB((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4ivARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13919

		ext_glVertexAttrib4ivARB((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4sARB(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y, jshort z, jshort w) {


//@line:13923

		ext_glVertexAttrib4sARB((GLuint)index, (GLshort)x, (GLshort)y, (GLshort)z, (GLshort)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4svARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13927

		ext_glVertexAttrib4svARB((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4svARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13931

		ext_glVertexAttrib4svARB((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4ubvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13935

		ext_glVertexAttrib4ubvARB((GLuint)index, (const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4ubvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13939

		ext_glVertexAttrib4ubvARB((GLuint)index, (const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4uivARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13943

		ext_glVertexAttrib4uivARB((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4uivARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13947

		ext_glVertexAttrib4uivARB((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4usvARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:13951

		ext_glVertexAttrib4usvARB((GLuint)index, (const GLushort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4usvARB__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:13955

		ext_glVertexAttrib4usvARB((GLuint)index, (const GLushort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribPointerARB__IIIZILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jboolean normalized, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:13959

		ext_glVertexAttribPointerARB((GLuint)index, (GLint)size, (GLenum)type, (GLboolean)normalized, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribPointerARB__IIIZIJ(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jboolean normalized, jint stride, jlong pointer) {


//@line:13963

		ext_glVertexAttribPointerARB((GLuint)index, (GLint)size, (GLenum)type, (GLboolean)normalized, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEnableVertexAttribArrayARB(JNIEnv* env, jclass clazz, jint index) {


//@line:13967

		ext_glEnableVertexAttribArrayARB((GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDisableVertexAttribArrayARB(JNIEnv* env, jclass clazz, jint index) {


//@line:13971

		ext_glDisableVertexAttribArrayARB((GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramStringARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint len, jobject obj_string, jint stringByteOffset) {
	unsigned char* string = (unsigned char*)(obj_string?env->GetDirectBufferAddress(obj_string):0);


//@line:13975

		ext_glProgramStringARB((GLenum)target, (GLenum)format, (GLsizei)len, (const GLvoid*)(string + stringByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramStringARB__IIIJ(JNIEnv* env, jclass clazz, jint target, jint format, jint len, jlong string) {


//@line:13979

		ext_glProgramStringARB((GLenum)target, (GLenum)format, (GLsizei)len, (const GLvoid*)string);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindProgramARB(JNIEnv* env, jclass clazz, jint target, jint program) {


//@line:13983

		ext_glBindProgramARB((GLenum)target, (GLuint)program);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteProgramsARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_programs, jint programsByteOffset) {
	unsigned char* programs = (unsigned char*)(obj_programs?env->GetDirectBufferAddress(obj_programs):0);


//@line:13987

		ext_glDeleteProgramsARB((GLsizei)n, (const GLuint*)(programs + programsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteProgramsARB__IJ(JNIEnv* env, jclass clazz, jint n, jlong programs) {


//@line:13991

		ext_glDeleteProgramsARB((GLsizei)n, (const GLuint*)programs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenProgramsARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_programs, jint programsByteOffset) {
	unsigned char* programs = (unsigned char*)(obj_programs?env->GetDirectBufferAddress(obj_programs):0);


//@line:13995

		ext_glGenProgramsARB((GLsizei)n, (GLuint*)(programs + programsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenProgramsARB__IJ(JNIEnv* env, jclass clazz, jint n, jlong programs) {


//@line:13999

		ext_glGenProgramsARB((GLsizei)n, (GLuint*)programs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameter4dARB(JNIEnv* env, jclass clazz, jint target, jint index, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:14003

		ext_glProgramEnvParameter4dARB((GLenum)target, (GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameter4dvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14007

		ext_glProgramEnvParameter4dvARB((GLenum)target, (GLuint)index, (const GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameter4dvARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:14011

		ext_glProgramEnvParameter4dvARB((GLenum)target, (GLuint)index, (const GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameter4fARB(JNIEnv* env, jclass clazz, jint target, jint index, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:14015

		ext_glProgramEnvParameter4fARB((GLenum)target, (GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameter4fvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14019

		ext_glProgramEnvParameter4fvARB((GLenum)target, (GLuint)index, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameter4fvARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:14023

		ext_glProgramEnvParameter4fvARB((GLenum)target, (GLuint)index, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameter4dARB(JNIEnv* env, jclass clazz, jint target, jint index, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:14027

		ext_glProgramLocalParameter4dARB((GLenum)target, (GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameter4dvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14031

		ext_glProgramLocalParameter4dvARB((GLenum)target, (GLuint)index, (const GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameter4dvARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:14035

		ext_glProgramLocalParameter4dvARB((GLenum)target, (GLuint)index, (const GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameter4fARB(JNIEnv* env, jclass clazz, jint target, jint index, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:14039

		ext_glProgramLocalParameter4fARB((GLenum)target, (GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameter4fvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14043

		ext_glProgramLocalParameter4fvARB((GLenum)target, (GLuint)index, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameter4fvARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:14047

		ext_glProgramLocalParameter4fvARB((GLenum)target, (GLuint)index, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramEnvParameterdvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14051

		ext_glGetProgramEnvParameterdvARB((GLenum)target, (GLuint)index, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramEnvParameterdvARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:14055

		ext_glGetProgramEnvParameterdvARB((GLenum)target, (GLuint)index, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramEnvParameterfvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14059

		ext_glGetProgramEnvParameterfvARB((GLenum)target, (GLuint)index, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramEnvParameterfvARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:14063

		ext_glGetProgramEnvParameterfvARB((GLenum)target, (GLuint)index, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramLocalParameterdvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14067

		ext_glGetProgramLocalParameterdvARB((GLenum)target, (GLuint)index, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramLocalParameterdvARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:14071

		ext_glGetProgramLocalParameterdvARB((GLenum)target, (GLuint)index, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramLocalParameterfvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14075

		ext_glGetProgramLocalParameterfvARB((GLenum)target, (GLuint)index, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramLocalParameterfvARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:14079

		ext_glGetProgramLocalParameterfvARB((GLenum)target, (GLuint)index, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14083

		ext_glGetProgramivARB((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramivARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:14087

		ext_glGetProgramivARB((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramStringARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_string, jint stringByteOffset) {
	unsigned char* string = (unsigned char*)(obj_string?env->GetDirectBufferAddress(obj_string):0);


//@line:14091

		ext_glGetProgramStringARB((GLenum)target, (GLenum)pname, (GLvoid*)(string + stringByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramStringARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong string) {


//@line:14095

		ext_glGetProgramStringARB((GLenum)target, (GLenum)pname, (GLvoid*)string);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribdvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14099

		ext_glGetVertexAttribdvARB((GLuint)index, (GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribdvARB__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:14103

		ext_glGetVertexAttribdvARB((GLuint)index, (GLenum)pname, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribfvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14107

		ext_glGetVertexAttribfvARB((GLuint)index, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribfvARB__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:14111

		ext_glGetVertexAttribfvARB((GLuint)index, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14115

		ext_glGetVertexAttribivARB((GLuint)index, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribivARB__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:14119

		ext_glGetVertexAttribivARB((GLuint)index, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribPointervARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:14123

		ext_glGetVertexAttribPointervARB((GLuint)index, (GLenum)pname, (GLvoid**)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribPointervARB__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong pointer) {


//@line:14127

		ext_glGetVertexAttribPointervARB((GLuint)index, (GLenum)pname, (GLvoid**)pointer);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsProgramARB(JNIEnv* env, jclass clazz, jint program) {


//@line:14131

		return (jboolean)ext_glIsProgramARB((GLuint)program);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindBufferARB(JNIEnv* env, jclass clazz, jint target, jint buffer) {


//@line:14135

		ext_glBindBufferARB((GLenum)target, (GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteBuffersARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_buffers, jint buffersByteOffset) {
	unsigned char* buffers = (unsigned char*)(obj_buffers?env->GetDirectBufferAddress(obj_buffers):0);


//@line:14139

		ext_glDeleteBuffersARB((GLsizei)n, (const GLuint*)(buffers + buffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteBuffersARB__IJ(JNIEnv* env, jclass clazz, jint n, jlong buffers) {


//@line:14143

		ext_glDeleteBuffersARB((GLsizei)n, (const GLuint*)buffers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenBuffersARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_buffers, jint buffersByteOffset) {
	unsigned char* buffers = (unsigned char*)(obj_buffers?env->GetDirectBufferAddress(obj_buffers):0);


//@line:14147

		ext_glGenBuffersARB((GLsizei)n, (GLuint*)(buffers + buffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenBuffersARB__IJ(JNIEnv* env, jclass clazz, jint n, jlong buffers) {


//@line:14151

		ext_glGenBuffersARB((GLsizei)n, (GLuint*)buffers);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsBufferARB(JNIEnv* env, jclass clazz, jint buffer) {


//@line:14155

		return (jboolean)ext_glIsBufferARB((GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBufferDataARB__IJLjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint target, jlong size, jobject obj_data, jint dataByteOffset, jint usage) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:14159

		ext_glBufferDataARB((GLenum)target, (GLsizeiptrARB)size, (const GLvoid*)(data + dataByteOffset), (GLenum)usage);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBufferDataARB__IJJI(JNIEnv* env, jclass clazz, jint target, jlong size, jlong data, jint usage) {


//@line:14163

		ext_glBufferDataARB((GLenum)target, (GLsizeiptrARB)size, (const GLvoid*)data, (GLenum)usage);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBufferSubDataARB__IJJLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jlong offset, jlong size, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:14167

		ext_glBufferSubDataARB((GLenum)target, (GLintptrARB)offset, (GLsizeiptrARB)size, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBufferSubDataARB__IJJJ(JNIEnv* env, jclass clazz, jint target, jlong offset, jlong size, jlong data) {


//@line:14171

		ext_glBufferSubDataARB((GLenum)target, (GLintptrARB)offset, (GLsizeiptrARB)size, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferSubDataARB__IJJLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jlong offset, jlong size, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:14175

		ext_glGetBufferSubDataARB((GLenum)target, (GLintptrARB)offset, (GLsizeiptrARB)size, (GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferSubDataARB__IJJJ(JNIEnv* env, jclass clazz, jint target, jlong offset, jlong size, jlong data) {


//@line:14179

		ext_glGetBufferSubDataARB((GLenum)target, (GLintptrARB)offset, (GLsizeiptrARB)size, (GLvoid*)data);
	

}

JNIEXPORT jobject JNICALL Java_com_badlogic_jglfw_gl_GL_glMapBufferARB(JNIEnv* env, jclass clazz, jint target, jint access, jlong bufferSize) {


//@line:14183

		GLvoid* buffer = (GLvoid*)ext_glMapBufferARB((GLenum)target, (GLenum)access);
		if(!buffer) return 0;
		return env->NewDirectByteBuffer(buffer, bufferSize);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glUnmapBufferARB(JNIEnv* env, jclass clazz, jint target) {


//@line:14189

		return (jboolean)ext_glUnmapBufferARB((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferParameterivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14193

		ext_glGetBufferParameterivARB((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferParameterivARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:14197

		ext_glGetBufferParameterivARB((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferPointervARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14201

		ext_glGetBufferPointervARB((GLenum)target, (GLenum)pname, (GLvoid**)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferPointervARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:14205

		ext_glGetBufferPointervARB((GLenum)target, (GLenum)pname, (GLvoid**)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenQueriesARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_ids, jint idsByteOffset) {
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);


//@line:14209

		ext_glGenQueriesARB((GLsizei)n, (GLuint*)(ids + idsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenQueriesARB__IJ(JNIEnv* env, jclass clazz, jint n, jlong ids) {


//@line:14213

		ext_glGenQueriesARB((GLsizei)n, (GLuint*)ids);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteQueriesARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_ids, jint idsByteOffset) {
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);


//@line:14217

		ext_glDeleteQueriesARB((GLsizei)n, (const GLuint*)(ids + idsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteQueriesARB__IJ(JNIEnv* env, jclass clazz, jint n, jlong ids) {


//@line:14221

		ext_glDeleteQueriesARB((GLsizei)n, (const GLuint*)ids);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsQueryARB(JNIEnv* env, jclass clazz, jint id) {


//@line:14225

		return (jboolean)ext_glIsQueryARB((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginQueryARB(JNIEnv* env, jclass clazz, jint target, jint id) {


//@line:14229

		ext_glBeginQueryARB((GLenum)target, (GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndQueryARB(JNIEnv* env, jclass clazz, jint target) {


//@line:14233

		ext_glEndQueryARB((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14237

		ext_glGetQueryivARB((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryivARB__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:14241

		ext_glGetQueryivARB((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14245

		ext_glGetQueryObjectivARB((GLuint)id, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectivARB__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:14249

		ext_glGetQueryObjectivARB((GLuint)id, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectuivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14253

		ext_glGetQueryObjectuivARB((GLuint)id, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectuivARB__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:14257

		ext_glGetQueryObjectuivARB((GLuint)id, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteObjectARB(JNIEnv* env, jclass clazz, jlong obj) {


//@line:14261

		ext_glDeleteObjectARB((GLhandleARB)obj);
	

}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHandleARB(JNIEnv* env, jclass clazz, jint pname) {


//@line:14265

		return (jlong)ext_glGetHandleARB((GLenum)pname);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDetachObjectARB(JNIEnv* env, jclass clazz, jlong containerObj, jlong attachedObj) {


//@line:14269

		ext_glDetachObjectARB((GLhandleARB)containerObj, (GLhandleARB)attachedObj);
	

}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glCreateShaderObjectARB(JNIEnv* env, jclass clazz, jint shaderType) {


//@line:14273

		return (jlong)ext_glCreateShaderObjectARB((GLenum)shaderType);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glShaderSourceARB(JNIEnv* env, jclass clazz, jint shader, jstring obj_string) {
	char* string = (char*)env->GetStringUTFChars(obj_string, 0);


//@line:14277

		ext_glShaderSource((GLuint)shader, 1, &string, 0);
	
	env->ReleaseStringUTFChars(obj_string, string);

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompileShaderARB(JNIEnv* env, jclass clazz, jlong shaderObj) {


//@line:14281

		ext_glCompileShaderARB((GLhandleARB)shaderObj);
	

}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glCreateProgramObjectARB(JNIEnv* env, jclass clazz) {


//@line:14285

		return (jlong)ext_glCreateProgramObjectARB();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glAttachObjectARB(JNIEnv* env, jclass clazz, jlong containerObj, jlong obj) {


//@line:14289

		ext_glAttachObjectARB((GLhandleARB)containerObj, (GLhandleARB)obj);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLinkProgramARB(JNIEnv* env, jclass clazz, jlong programObj) {


//@line:14293

		ext_glLinkProgramARB((GLhandleARB)programObj);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUseProgramObjectARB(JNIEnv* env, jclass clazz, jlong programObj) {


//@line:14297

		ext_glUseProgramObjectARB((GLhandleARB)programObj);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glValidateProgramARB(JNIEnv* env, jclass clazz, jlong programObj) {


//@line:14301

		ext_glValidateProgramARB((GLhandleARB)programObj);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1fARB(JNIEnv* env, jclass clazz, jint location, jfloat v0) {


//@line:14305

		ext_glUniform1fARB((GLint)location, (GLfloat)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2fARB(JNIEnv* env, jclass clazz, jint location, jfloat v0, jfloat v1) {


//@line:14309

		ext_glUniform2fARB((GLint)location, (GLfloat)v0, (GLfloat)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3fARB(JNIEnv* env, jclass clazz, jint location, jfloat v0, jfloat v1, jfloat v2) {


//@line:14313

		ext_glUniform3fARB((GLint)location, (GLfloat)v0, (GLfloat)v1, (GLfloat)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4fARB(JNIEnv* env, jclass clazz, jint location, jfloat v0, jfloat v1, jfloat v2, jfloat v3) {


//@line:14317

		ext_glUniform4fARB((GLint)location, (GLfloat)v0, (GLfloat)v1, (GLfloat)v2, (GLfloat)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1iARB(JNIEnv* env, jclass clazz, jint location, jint v0) {


//@line:14321

		ext_glUniform1iARB((GLint)location, (GLint)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2iARB(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1) {


//@line:14325

		ext_glUniform2iARB((GLint)location, (GLint)v0, (GLint)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3iARB(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1, jint v2) {


//@line:14329

		ext_glUniform3iARB((GLint)location, (GLint)v0, (GLint)v1, (GLint)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4iARB(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1, jint v2, jint v3) {


//@line:14333

		ext_glUniform4iARB((GLint)location, (GLint)v0, (GLint)v1, (GLint)v2, (GLint)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1fvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14337

		ext_glUniform1fvARB((GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1fvARB__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:14341

		ext_glUniform1fvARB((GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2fvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14345

		ext_glUniform2fvARB((GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2fvARB__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:14349

		ext_glUniform2fvARB((GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3fvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14353

		ext_glUniform3fvARB((GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3fvARB__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:14357

		ext_glUniform3fvARB((GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4fvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14361

		ext_glUniform4fvARB((GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4fvARB__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:14365

		ext_glUniform4fvARB((GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1ivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14369

		ext_glUniform1ivARB((GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1ivARB__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:14373

		ext_glUniform1ivARB((GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2ivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14377

		ext_glUniform2ivARB((GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2ivARB__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:14381

		ext_glUniform2ivARB((GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3ivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14385

		ext_glUniform3ivARB((GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3ivARB__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:14389

		ext_glUniform3ivARB((GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4ivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14393

		ext_glUniform4ivARB((GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4ivARB__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:14397

		ext_glUniform4ivARB((GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2fvARB__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14401

		ext_glUniformMatrix2fvARB((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2fvARB__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:14405

		ext_glUniformMatrix2fvARB((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3fvARB__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14409

		ext_glUniformMatrix3fvARB((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3fvARB__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:14413

		ext_glUniformMatrix3fvARB((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4fvARB__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:14417

		ext_glUniformMatrix4fvARB((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4fvARB__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:14421

		ext_glUniformMatrix4fvARB((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectParameterfvARB__JILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong obj, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14425

		ext_glGetObjectParameterfvARB((GLhandleARB)obj, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectParameterfvARB__JIJ(JNIEnv* env, jclass clazz, jlong obj, jint pname, jlong params) {


//@line:14429

		ext_glGetObjectParameterfvARB((GLhandleARB)obj, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectParameterivARB__JILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong obj, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14433

		ext_glGetObjectParameterivARB((GLhandleARB)obj, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectParameterivARB__JIJ(JNIEnv* env, jclass clazz, jlong obj, jint pname, jlong params) {


//@line:14437

		ext_glGetObjectParameterivARB((GLhandleARB)obj, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInfoLogARB__JILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong obj, jint maxLength, jobject obj_length, jint lengthByteOffset, jobject obj_infoLog, jint infoLogByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* infoLog = (unsigned char*)(obj_infoLog?env->GetDirectBufferAddress(obj_infoLog):0);


//@line:14441

		ext_glGetInfoLogARB((GLhandleARB)obj, (GLsizei)maxLength, (GLsizei*)(length + lengthByteOffset), (GLcharARB*)(infoLog + infoLogByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInfoLogARB__JIJJ(JNIEnv* env, jclass clazz, jlong obj, jint maxLength, jlong length, jlong infoLog) {


//@line:14445

		ext_glGetInfoLogARB((GLhandleARB)obj, (GLsizei)maxLength, (GLsizei*)length, (GLcharARB*)infoLog);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetAttachedObjectsARB__JILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong containerObj, jint maxCount, jobject obj_count, jint countByteOffset, jobject obj_obj, jint objByteOffset) {
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);
	unsigned char* obj = (unsigned char*)(obj_obj?env->GetDirectBufferAddress(obj_obj):0);


//@line:14449

		ext_glGetAttachedObjectsARB((GLhandleARB)containerObj, (GLsizei)maxCount, (GLsizei*)(count + countByteOffset), (GLhandleARB*)(obj + objByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetAttachedObjectsARB__JIJJ(JNIEnv* env, jclass clazz, jlong containerObj, jint maxCount, jlong count, jlong obj) {


//@line:14453

		ext_glGetAttachedObjectsARB((GLhandleARB)containerObj, (GLsizei)maxCount, (GLsizei*)count, (GLhandleARB*)obj);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetUniformLocationARB__JLjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jlong programObj, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:14457

		return (jint)ext_glGetUniformLocationARB((GLhandleARB)programObj, (const GLcharARB*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformLocationARB__JLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong programObj, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetUniformLocationARB__JLjava_nio_Buffer_2I(env, clazz, programObj, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformLocationARB__JJ(JNIEnv* env, jclass clazz, jlong programObj, jlong name) {


//@line:14461

		return (jint)ext_glGetUniformLocationARB((GLhandleARB)programObj, (const GLcharARB*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniformARB__JIILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong programObj, jint index, jint maxLength, jobject obj_length, jint lengthByteOffset, jobject obj_size, jint sizeByteOffset, jobject obj_type, jint typeByteOffset, jobject obj_name, jint nameByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* size = (unsigned char*)(obj_size?env->GetDirectBufferAddress(obj_size):0);
	unsigned char* type = (unsigned char*)(obj_type?env->GetDirectBufferAddress(obj_type):0);
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:14465

		ext_glGetActiveUniformARB((GLhandleARB)programObj, (GLuint)index, (GLsizei)maxLength, (GLsizei*)(length + lengthByteOffset), (GLint*)(size + sizeByteOffset), (GLenum*)(type + typeByteOffset), (GLcharARB*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniformARB__JIIJJJJ(JNIEnv* env, jclass clazz, jlong programObj, jint index, jint maxLength, jlong length, jlong size, jlong type, jlong name) {


//@line:14469

		ext_glGetActiveUniformARB((GLhandleARB)programObj, (GLuint)index, (GLsizei)maxLength, (GLsizei*)length, (GLint*)size, (GLenum*)type, (GLcharARB*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformfvARB__JILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong programObj, jint location, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14473

		ext_glGetUniformfvARB((GLhandleARB)programObj, (GLint)location, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformfvARB__JIJ(JNIEnv* env, jclass clazz, jlong programObj, jint location, jlong params) {


//@line:14477

		ext_glGetUniformfvARB((GLhandleARB)programObj, (GLint)location, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformivARB__JILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong programObj, jint location, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14481

		ext_glGetUniformivARB((GLhandleARB)programObj, (GLint)location, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformivARB__JIJ(JNIEnv* env, jclass clazz, jlong programObj, jint location, jlong params) {


//@line:14485

		ext_glGetUniformivARB((GLhandleARB)programObj, (GLint)location, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetShaderSourceARB__JILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong obj, jint maxLength, jobject obj_length, jint lengthByteOffset, jobject obj_source, jint sourceByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* source = (unsigned char*)(obj_source?env->GetDirectBufferAddress(obj_source):0);


//@line:14489

		ext_glGetShaderSourceARB((GLhandleARB)obj, (GLsizei)maxLength, (GLsizei*)(length + lengthByteOffset), (GLcharARB*)(source + sourceByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetShaderSourceARB__JIJJ(JNIEnv* env, jclass clazz, jlong obj, jint maxLength, jlong length, jlong source) {


//@line:14493

		ext_glGetShaderSourceARB((GLhandleARB)obj, (GLsizei)maxLength, (GLsizei*)length, (GLcharARB*)source);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindAttribLocationARB__JILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong programObj, jint index, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:14497

		ext_glBindAttribLocationARB((GLhandleARB)programObj, (GLuint)index, (const GLcharARB*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindAttribLocationARB__JIJ(JNIEnv* env, jclass clazz, jlong programObj, jint index, jlong name) {


//@line:14501

		ext_glBindAttribLocationARB((GLhandleARB)programObj, (GLuint)index, (const GLcharARB*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveAttribARB__JIILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong programObj, jint index, jint maxLength, jobject obj_length, jint lengthByteOffset, jobject obj_size, jint sizeByteOffset, jobject obj_type, jint typeByteOffset, jobject obj_name, jint nameByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* size = (unsigned char*)(obj_size?env->GetDirectBufferAddress(obj_size):0);
	unsigned char* type = (unsigned char*)(obj_type?env->GetDirectBufferAddress(obj_type):0);
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:14505

		ext_glGetActiveAttribARB((GLhandleARB)programObj, (GLuint)index, (GLsizei)maxLength, (GLsizei*)(length + lengthByteOffset), (GLint*)(size + sizeByteOffset), (GLenum*)(type + typeByteOffset), (GLcharARB*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveAttribARB__JIIJJJJ(JNIEnv* env, jclass clazz, jlong programObj, jint index, jint maxLength, jlong length, jlong size, jlong type, jlong name) {


//@line:14509

		ext_glGetActiveAttribARB((GLhandleARB)programObj, (GLuint)index, (GLsizei)maxLength, (GLsizei*)length, (GLint*)size, (GLenum*)type, (GLcharARB*)name);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetAttribLocationARB__JLjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jlong programObj, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:14513

		return (jint)ext_glGetAttribLocationARB((GLhandleARB)programObj, (const GLcharARB*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetAttribLocationARB__JLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong programObj, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetAttribLocationARB__JLjava_nio_Buffer_2I(env, clazz, programObj, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetAttribLocationARB__JJ(JNIEnv* env, jclass clazz, jlong programObj, jlong name) {


//@line:14517

		return (jint)ext_glGetAttribLocationARB((GLhandleARB)programObj, (const GLcharARB*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawBuffersARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_bufs, jint bufsByteOffset) {
	unsigned char* bufs = (unsigned char*)(obj_bufs?env->GetDirectBufferAddress(obj_bufs):0);


//@line:14521

		ext_glDrawBuffersARB((GLsizei)n, (const GLenum*)(bufs + bufsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawBuffersARB__IJ(JNIEnv* env, jclass clazz, jint n, jlong bufs) {


//@line:14525

		ext_glDrawBuffersARB((GLsizei)n, (const GLenum*)bufs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClampColorARB(JNIEnv* env, jclass clazz, jint target, jint clamp) {


//@line:14529

		ext_glClampColorARB((GLenum)target, (GLenum)clamp);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawArraysInstancedARB(JNIEnv* env, jclass clazz, jint mode, jint first, jint count, jint primcount) {


//@line:14533

		ext_glDrawArraysInstancedARB((GLenum)mode, (GLint)first, (GLsizei)count, (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstancedARB__IIILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jobject obj_indices, jint indicesByteOffset, jint primcount) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:14537

		ext_glDrawElementsInstancedARB((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)(indices + indicesByteOffset), (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstancedARB__IIIJI(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jlong indices, jint primcount) {


//@line:14541

		ext_glDrawElementsInstancedARB((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)indices, (GLsizei)primcount);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsRenderbuffer(JNIEnv* env, jclass clazz, jint renderbuffer) {


//@line:14545

		return (jboolean)ext_glIsRenderbuffer((GLuint)renderbuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindRenderbuffer(JNIEnv* env, jclass clazz, jint target, jint renderbuffer) {


//@line:14549

		ext_glBindRenderbuffer((GLenum)target, (GLuint)renderbuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteRenderbuffers__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_renderbuffers, jint renderbuffersByteOffset) {
	unsigned char* renderbuffers = (unsigned char*)(obj_renderbuffers?env->GetDirectBufferAddress(obj_renderbuffers):0);


//@line:14553

		ext_glDeleteRenderbuffers((GLsizei)n, (const GLuint*)(renderbuffers + renderbuffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteRenderbuffers__IJ(JNIEnv* env, jclass clazz, jint n, jlong renderbuffers) {


//@line:14557

		ext_glDeleteRenderbuffers((GLsizei)n, (const GLuint*)renderbuffers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenRenderbuffers__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_renderbuffers, jint renderbuffersByteOffset) {
	unsigned char* renderbuffers = (unsigned char*)(obj_renderbuffers?env->GetDirectBufferAddress(obj_renderbuffers):0);


//@line:14561

		ext_glGenRenderbuffers((GLsizei)n, (GLuint*)(renderbuffers + renderbuffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenRenderbuffers__IJ(JNIEnv* env, jclass clazz, jint n, jlong renderbuffers) {


//@line:14565

		ext_glGenRenderbuffers((GLsizei)n, (GLuint*)renderbuffers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRenderbufferStorage(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint height) {


//@line:14569

		ext_glRenderbufferStorage((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetRenderbufferParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14573

		ext_glGetRenderbufferParameteriv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetRenderbufferParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:14577

		ext_glGetRenderbufferParameteriv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsFramebuffer(JNIEnv* env, jclass clazz, jint framebuffer) {


//@line:14581

		return (jboolean)ext_glIsFramebuffer((GLuint)framebuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindFramebuffer(JNIEnv* env, jclass clazz, jint target, jint framebuffer) {


//@line:14585

		ext_glBindFramebuffer((GLenum)target, (GLuint)framebuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteFramebuffers__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_framebuffers, jint framebuffersByteOffset) {
	unsigned char* framebuffers = (unsigned char*)(obj_framebuffers?env->GetDirectBufferAddress(obj_framebuffers):0);


//@line:14589

		ext_glDeleteFramebuffers((GLsizei)n, (const GLuint*)(framebuffers + framebuffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteFramebuffers__IJ(JNIEnv* env, jclass clazz, jint n, jlong framebuffers) {


//@line:14593

		ext_glDeleteFramebuffers((GLsizei)n, (const GLuint*)framebuffers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenFramebuffers__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_framebuffers, jint framebuffersByteOffset) {
	unsigned char* framebuffers = (unsigned char*)(obj_framebuffers?env->GetDirectBufferAddress(obj_framebuffers):0);


//@line:14597

		ext_glGenFramebuffers((GLsizei)n, (GLuint*)(framebuffers + framebuffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenFramebuffers__IJ(JNIEnv* env, jclass clazz, jint n, jlong framebuffers) {


//@line:14601

		ext_glGenFramebuffers((GLsizei)n, (GLuint*)framebuffers);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glCheckFramebufferStatus(JNIEnv* env, jclass clazz, jint target) {


//@line:14605

		return (jint)ext_glCheckFramebufferStatus((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTexture1D(JNIEnv* env, jclass clazz, jint target, jint attachment, jint textarget, jint texture, jint level) {


//@line:14609

		ext_glFramebufferTexture1D((GLenum)target, (GLenum)attachment, (GLenum)textarget, (GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTexture2D(JNIEnv* env, jclass clazz, jint target, jint attachment, jint textarget, jint texture, jint level) {


//@line:14613

		ext_glFramebufferTexture2D((GLenum)target, (GLenum)attachment, (GLenum)textarget, (GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTexture3D(JNIEnv* env, jclass clazz, jint target, jint attachment, jint textarget, jint texture, jint level, jint zoffset) {


//@line:14617

		ext_glFramebufferTexture3D((GLenum)target, (GLenum)attachment, (GLenum)textarget, (GLuint)texture, (GLint)level, (GLint)zoffset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferRenderbuffer(JNIEnv* env, jclass clazz, jint target, jint attachment, jint renderbuffertarget, jint renderbuffer) {


//@line:14621

		ext_glFramebufferRenderbuffer((GLenum)target, (GLenum)attachment, (GLenum)renderbuffertarget, (GLuint)renderbuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFramebufferAttachmentParameteriv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint attachment, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14625

		ext_glGetFramebufferAttachmentParameteriv((GLenum)target, (GLenum)attachment, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFramebufferAttachmentParameteriv__IIIJ(JNIEnv* env, jclass clazz, jint target, jint attachment, jint pname, jlong params) {


//@line:14629

		ext_glGetFramebufferAttachmentParameteriv((GLenum)target, (GLenum)attachment, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenerateMipmap(JNIEnv* env, jclass clazz, jint target) {


//@line:14633

		ext_glGenerateMipmap((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlitFramebuffer(JNIEnv* env, jclass clazz, jint srcX0, jint srcY0, jint srcX1, jint srcY1, jint dstX0, jint dstY0, jint dstX1, jint dstY1, jint mask, jint filter) {


//@line:14637

		ext_glBlitFramebuffer((GLint)srcX0, (GLint)srcY0, (GLint)srcX1, (GLint)srcY1, (GLint)dstX0, (GLint)dstY0, (GLint)dstX1, (GLint)dstY1, (GLbitfield)mask, (GLenum)filter);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRenderbufferStorageMultisample(JNIEnv* env, jclass clazz, jint target, jint samples, jint internalformat, jint width, jint height) {


//@line:14641

		ext_glRenderbufferStorageMultisample((GLenum)target, (GLsizei)samples, (GLenum)internalformat, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTextureLayer(JNIEnv* env, jclass clazz, jint target, jint attachment, jint texture, jint level, jint layer) {


//@line:14645

		ext_glFramebufferTextureLayer((GLenum)target, (GLenum)attachment, (GLuint)texture, (GLint)level, (GLint)layer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameteriARB(JNIEnv* env, jclass clazz, jint program, jint pname, jint value) {


//@line:14649

		ext_glProgramParameteriARB((GLuint)program, (GLenum)pname, (GLint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTextureARB(JNIEnv* env, jclass clazz, jint target, jint attachment, jint texture, jint level) {


//@line:14653

		ext_glFramebufferTextureARB((GLenum)target, (GLenum)attachment, (GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTextureLayerARB(JNIEnv* env, jclass clazz, jint target, jint attachment, jint texture, jint level, jint layer) {


//@line:14657

		ext_glFramebufferTextureLayerARB((GLenum)target, (GLenum)attachment, (GLuint)texture, (GLint)level, (GLint)layer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTextureFaceARB(JNIEnv* env, jclass clazz, jint target, jint attachment, jint texture, jint level, jint face) {


//@line:14661

		ext_glFramebufferTextureFaceARB((GLenum)target, (GLenum)attachment, (GLuint)texture, (GLint)level, (GLenum)face);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribDivisorARB(JNIEnv* env, jclass clazz, jint index, jint divisor) {


//@line:14665

		ext_glVertexAttribDivisorARB((GLuint)index, (GLuint)divisor);
	

}

JNIEXPORT jobject JNICALL Java_com_badlogic_jglfw_gl_GL_glMapBufferRange(JNIEnv* env, jclass clazz, jint target, jint offset, jint length, jint access, jlong bufferSize) {


//@line:14669

		GLvoid* buffer = (GLvoid*)ext_glMapBufferRange((GLenum)target, (GLintptr)offset, (GLsizeiptr)length, (GLbitfield)access);
		if(!buffer) return 0;
		return env->NewDirectByteBuffer(buffer, bufferSize);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFlushMappedBufferRange(JNIEnv* env, jclass clazz, jint target, jlong offset, jlong length) {


//@line:14675

		ext_glFlushMappedBufferRange((GLenum)target, (GLintptr)offset, (GLsizeiptr)length);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexBufferARB(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint buffer) {


//@line:14679

		ext_glTexBufferARB((GLenum)target, (GLenum)internalformat, (GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindVertexArray(JNIEnv* env, jclass clazz, jint array) {


//@line:14683

		ext_glBindVertexArray((GLuint)array);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteVertexArrays__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_arrays, jint arraysByteOffset) {
	unsigned char* arrays = (unsigned char*)(obj_arrays?env->GetDirectBufferAddress(obj_arrays):0);


//@line:14687

		ext_glDeleteVertexArrays((GLsizei)n, (const GLuint*)(arrays + arraysByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteVertexArrays__IJ(JNIEnv* env, jclass clazz, jint n, jlong arrays) {


//@line:14691

		ext_glDeleteVertexArrays((GLsizei)n, (const GLuint*)arrays);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenVertexArrays__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_arrays, jint arraysByteOffset) {
	unsigned char* arrays = (unsigned char*)(obj_arrays?env->GetDirectBufferAddress(obj_arrays):0);


//@line:14695

		ext_glGenVertexArrays((GLsizei)n, (GLuint*)(arrays + arraysByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenVertexArrays__IJ(JNIEnv* env, jclass clazz, jint n, jlong arrays) {


//@line:14699

		ext_glGenVertexArrays((GLsizei)n, (GLuint*)arrays);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsVertexArray(JNIEnv* env, jclass clazz, jint array) {


//@line:14703

		return (jboolean)ext_glIsVertexArray((GLuint)array);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformIndices__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint uniformCount, jobject obj_uniformNames, jint uniformNamesByteOffset, jobject obj_uniformIndices, jint uniformIndicesByteOffset) {
	unsigned char* uniformNames = (unsigned char*)(obj_uniformNames?env->GetDirectBufferAddress(obj_uniformNames):0);
	unsigned char* uniformIndices = (unsigned char*)(obj_uniformIndices?env->GetDirectBufferAddress(obj_uniformIndices):0);


//@line:14707

		ext_glGetUniformIndices((GLuint)program, (GLsizei)uniformCount, (const GLchar**)(uniformNames + uniformNamesByteOffset), (GLuint*)(uniformIndices + uniformIndicesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformIndices__IIJJ(JNIEnv* env, jclass clazz, jint program, jint uniformCount, jlong uniformNames, jlong uniformIndices) {


//@line:14711

		ext_glGetUniformIndices((GLuint)program, (GLsizei)uniformCount, (const GLchar**)uniformNames, (GLuint*)uniformIndices);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniformsiv__IILjava_nio_Buffer_2IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint uniformCount, jobject obj_uniformIndices, jint uniformIndicesByteOffset, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* uniformIndices = (unsigned char*)(obj_uniformIndices?env->GetDirectBufferAddress(obj_uniformIndices):0);
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14715

		ext_glGetActiveUniformsiv((GLuint)program, (GLsizei)uniformCount, (const GLuint*)(uniformIndices + uniformIndicesByteOffset), (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniformsiv__IIJIJ(JNIEnv* env, jclass clazz, jint program, jint uniformCount, jlong uniformIndices, jint pname, jlong params) {


//@line:14719

		ext_glGetActiveUniformsiv((GLuint)program, (GLsizei)uniformCount, (const GLuint*)uniformIndices, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniformName__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint uniformIndex, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_uniformName, jint uniformNameByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* uniformName = (unsigned char*)(obj_uniformName?env->GetDirectBufferAddress(obj_uniformName):0);


//@line:14723

		ext_glGetActiveUniformName((GLuint)program, (GLuint)uniformIndex, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(uniformName + uniformNameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniformName__IIIJJ(JNIEnv* env, jclass clazz, jint program, jint uniformIndex, jint bufSize, jlong length, jlong uniformName) {


//@line:14727

		ext_glGetActiveUniformName((GLuint)program, (GLuint)uniformIndex, (GLsizei)bufSize, (GLsizei*)length, (GLchar*)uniformName);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetUniformBlockIndex__ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint program, jobject obj_uniformBlockName, jint uniformBlockNameByteOffset, unsigned char* uniformBlockName) {

//@line:14731

		return (jint)ext_glGetUniformBlockIndex((GLuint)program, (const GLchar*)(uniformBlockName + uniformBlockNameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformBlockIndex__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jobject obj_uniformBlockName, jint uniformBlockNameByteOffset) {
	unsigned char* uniformBlockName = (unsigned char*)(obj_uniformBlockName?env->GetDirectBufferAddress(obj_uniformBlockName):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetUniformBlockIndex__ILjava_nio_Buffer_2I(env, clazz, program, obj_uniformBlockName, uniformBlockNameByteOffset, uniformBlockName);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformBlockIndex__IJ(JNIEnv* env, jclass clazz, jint program, jlong uniformBlockName) {


//@line:14735

		return (jint)ext_glGetUniformBlockIndex((GLuint)program, (const GLchar*)uniformBlockName);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniformBlockiv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint uniformBlockIndex, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14739

		ext_glGetActiveUniformBlockiv((GLuint)program, (GLuint)uniformBlockIndex, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniformBlockiv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint uniformBlockIndex, jint pname, jlong params) {


//@line:14743

		ext_glGetActiveUniformBlockiv((GLuint)program, (GLuint)uniformBlockIndex, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniformBlockName__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint uniformBlockIndex, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_uniformBlockName, jint uniformBlockNameByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* uniformBlockName = (unsigned char*)(obj_uniformBlockName?env->GetDirectBufferAddress(obj_uniformBlockName):0);


//@line:14747

		ext_glGetActiveUniformBlockName((GLuint)program, (GLuint)uniformBlockIndex, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(uniformBlockName + uniformBlockNameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveUniformBlockName__IIIJJ(JNIEnv* env, jclass clazz, jint program, jint uniformBlockIndex, jint bufSize, jlong length, jlong uniformBlockName) {


//@line:14751

		ext_glGetActiveUniformBlockName((GLuint)program, (GLuint)uniformBlockIndex, (GLsizei)bufSize, (GLsizei*)length, (GLchar*)uniformBlockName);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformBlockBinding(JNIEnv* env, jclass clazz, jint program, jint uniformBlockIndex, jint uniformBlockBinding) {


//@line:14755

		ext_glUniformBlockBinding((GLuint)program, (GLuint)uniformBlockIndex, (GLuint)uniformBlockBinding);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyBufferSubData(JNIEnv* env, jclass clazz, jint readTarget, jint writeTarget, jlong readOffset, jlong writeOffset, jlong size) {


//@line:14759

		ext_glCopyBufferSubData((GLenum)readTarget, (GLenum)writeTarget, (GLintptr)readOffset, (GLintptr)writeOffset, (GLsizeiptr)size);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsBaseVertex__IIILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jobject obj_indices, jint indicesByteOffset, jint basevertex) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:14763

		ext_glDrawElementsBaseVertex((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)(indices + indicesByteOffset), (GLint)basevertex);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsBaseVertex__IIIJI(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jlong indices, jint basevertex) {


//@line:14767

		ext_glDrawElementsBaseVertex((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)indices, (GLint)basevertex);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawRangeElementsBaseVertex__IIIIILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jint start, jint end, jint count, jint type, jobject obj_indices, jint indicesByteOffset, jint basevertex) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:14771

		ext_glDrawRangeElementsBaseVertex((GLenum)mode, (GLuint)start, (GLuint)end, (GLsizei)count, (GLenum)type, (const GLvoid*)(indices + indicesByteOffset), (GLint)basevertex);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawRangeElementsBaseVertex__IIIIIJI(JNIEnv* env, jclass clazz, jint mode, jint start, jint end, jint count, jint type, jlong indices, jint basevertex) {


//@line:14775

		ext_glDrawRangeElementsBaseVertex((GLenum)mode, (GLuint)start, (GLuint)end, (GLsizei)count, (GLenum)type, (const GLvoid*)indices, (GLint)basevertex);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstancedBaseVertex__IIILjava_nio_Buffer_2III(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jobject obj_indices, jint indicesByteOffset, jint instancecount, jint basevertex) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:14779

		ext_glDrawElementsInstancedBaseVertex((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)(indices + indicesByteOffset), (GLsizei)instancecount, (GLint)basevertex);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstancedBaseVertex__IIIJII(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jlong indices, jint instancecount, jint basevertex) {


//@line:14783

		ext_glDrawElementsInstancedBaseVertex((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)indices, (GLsizei)instancecount, (GLint)basevertex);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElementsBaseVertex__ILjava_nio_Buffer_2IILjava_nio_Buffer_2IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jobject obj_count, jint countByteOffset, jint type, jobject obj_indices, jint indicesByteOffset, jint drawcount, jobject obj_basevertex, jint basevertexByteOffset) {
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);
	unsigned char* basevertex = (unsigned char*)(obj_basevertex?env->GetDirectBufferAddress(obj_basevertex):0);


//@line:14787

		ext_glMultiDrawElementsBaseVertex((GLenum)mode, (const GLsizei*)(count + countByteOffset), (GLenum)type, (const GLvoid**)(indices + indicesByteOffset), (GLsizei)drawcount, (const GLint*)(basevertex + basevertexByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElementsBaseVertex__IJIJIJ(JNIEnv* env, jclass clazz, jint mode, jlong count, jint type, jlong indices, jint drawcount, jlong basevertex) {


//@line:14791

		ext_glMultiDrawElementsBaseVertex((GLenum)mode, (const GLsizei*)count, (GLenum)type, (const GLvoid**)indices, (GLsizei)drawcount, (const GLint*)basevertex);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProvokingVertex(JNIEnv* env, jclass clazz, jint mode) {


//@line:14795

		ext_glProvokingVertex((GLenum)mode);
	

}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glFenceSync(JNIEnv* env, jclass clazz, jint condition, jint flags) {


//@line:14799

		return (jlong)ext_glFenceSync((GLenum)condition, (GLbitfield)flags);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsSync(JNIEnv* env, jclass clazz, jlong sync) {


//@line:14803

		return (jboolean)ext_glIsSync((GLsync)sync);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteSync(JNIEnv* env, jclass clazz, jlong sync) {


//@line:14807

		ext_glDeleteSync((GLsync)sync);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glClientWaitSync(JNIEnv* env, jclass clazz, jlong sync, jint flags, jlong timeout) {


//@line:14811

		return (jint)ext_glClientWaitSync((GLsync)sync, (GLbitfield)flags, (GLuint64)timeout);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWaitSync(JNIEnv* env, jclass clazz, jlong sync, jint flags, jlong timeout) {


//@line:14815

		ext_glWaitSync((GLsync)sync, (GLbitfield)flags, (GLuint64)timeout);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInteger64v__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14819

		ext_glGetInteger64v((GLenum)pname, (GLint64*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInteger64v__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:14823

		ext_glGetInteger64v((GLenum)pname, (GLint64*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSynciv__JIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jlong sync, jint pname, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_values, jint valuesByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:14827

		ext_glGetSynciv((GLsync)sync, (GLenum)pname, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLint*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSynciv__JIIJJ(JNIEnv* env, jclass clazz, jlong sync, jint pname, jint bufSize, jlong length, jlong values) {


//@line:14831

		ext_glGetSynciv((GLsync)sync, (GLenum)pname, (GLsizei)bufSize, (GLsizei*)length, (GLint*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage2DMultisample(JNIEnv* env, jclass clazz, jint target, jint samples, jint internalformat, jint width, jint height, jboolean fixedsamplelocations) {


//@line:14835

		ext_glTexImage2DMultisample((GLenum)target, (GLsizei)samples, (GLint)internalformat, (GLsizei)width, (GLsizei)height, (GLboolean)fixedsamplelocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage3DMultisample(JNIEnv* env, jclass clazz, jint target, jint samples, jint internalformat, jint width, jint height, jint depth, jboolean fixedsamplelocations) {


//@line:14839

		ext_glTexImage3DMultisample((GLenum)target, (GLsizei)samples, (GLint)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLboolean)fixedsamplelocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultisamplefv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jint index, jobject obj_val, jint valByteOffset) {
	unsigned char* val = (unsigned char*)(obj_val?env->GetDirectBufferAddress(obj_val):0);


//@line:14843

		ext_glGetMultisamplefv((GLenum)pname, (GLuint)index, (GLfloat*)(val + valByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultisamplefv__IIJ(JNIEnv* env, jclass clazz, jint pname, jint index, jlong val) {


//@line:14847

		ext_glGetMultisamplefv((GLenum)pname, (GLuint)index, (GLfloat*)val);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSampleMaski(JNIEnv* env, jclass clazz, jint index, jint mask) {


//@line:14851

		ext_glSampleMaski((GLuint)index, (GLbitfield)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendEquationiARB(JNIEnv* env, jclass clazz, jint buf, jint mode) {


//@line:14855

		ext_glBlendEquationiARB((GLuint)buf, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendEquationSeparateiARB(JNIEnv* env, jclass clazz, jint buf, jint modeRGB, jint modeAlpha) {


//@line:14859

		ext_glBlendEquationSeparateiARB((GLuint)buf, (GLenum)modeRGB, (GLenum)modeAlpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendFunciARB(JNIEnv* env, jclass clazz, jint buf, jint src, jint dst) {


//@line:14863

		ext_glBlendFunciARB((GLuint)buf, (GLenum)src, (GLenum)dst);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendFuncSeparateiARB(JNIEnv* env, jclass clazz, jint buf, jint srcRGB, jint dstRGB, jint srcAlpha, jint dstAlpha) {


//@line:14867

		ext_glBlendFuncSeparateiARB((GLuint)buf, (GLenum)srcRGB, (GLenum)dstRGB, (GLenum)srcAlpha, (GLenum)dstAlpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMinSampleShadingARB(JNIEnv* env, jclass clazz, jfloat value) {


//@line:14871

		ext_glMinSampleShadingARB((GLfloat)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedStringARB__IILjava_nio_Buffer_2IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint namelen, jobject obj_name, jint nameByteOffset, jint stringlen, jobject obj_string, jint stringByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);
	unsigned char* string = (unsigned char*)(obj_string?env->GetDirectBufferAddress(obj_string):0);


//@line:14875

		ext_glNamedStringARB((GLenum)type, (GLint)namelen, (const GLchar*)(name + nameByteOffset), (GLint)stringlen, (const GLchar*)(string + stringByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedStringARB__IIJIJ(JNIEnv* env, jclass clazz, jint type, jint namelen, jlong name, jint stringlen, jlong string) {


//@line:14879

		ext_glNamedStringARB((GLenum)type, (GLint)namelen, (const GLchar*)name, (GLint)stringlen, (const GLchar*)string);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteNamedStringARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint namelen, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:14883

		ext_glDeleteNamedStringARB((GLint)namelen, (const GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteNamedStringARB__IJ(JNIEnv* env, jclass clazz, jint namelen, jlong name) {


//@line:14887

		ext_glDeleteNamedStringARB((GLint)namelen, (const GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompileShaderIncludeARB__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint shader, jint count, jobject obj_path, jint pathByteOffset, jobject obj_length, jint lengthByteOffset) {
	unsigned char* path = (unsigned char*)(obj_path?env->GetDirectBufferAddress(obj_path):0);
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);


//@line:14891

		ext_glCompileShaderIncludeARB((GLuint)shader, (GLsizei)count, (const GLchar**)(path + pathByteOffset), (const GLint*)(length + lengthByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompileShaderIncludeARB__IIJJ(JNIEnv* env, jclass clazz, jint shader, jint count, jlong path, jlong length) {


//@line:14895

		ext_glCompileShaderIncludeARB((GLuint)shader, (GLsizei)count, (const GLchar**)path, (const GLint*)length);
	

}

static inline jboolean wrapped_Java_com_badlogic_jglfw_gl_GL_glIsNamedStringARB__ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint namelen, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:14899

		return (jboolean)ext_glIsNamedStringARB((GLint)namelen, (const GLchar*)(name + nameByteOffset));
	
}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsNamedStringARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint namelen, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jboolean JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glIsNamedStringARB__ILjava_nio_Buffer_2I(env, clazz, namelen, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsNamedStringARB__IJ(JNIEnv* env, jclass clazz, jint namelen, jlong name) {


//@line:14903

		return (jboolean)ext_glIsNamedStringARB((GLint)namelen, (const GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedStringARB__ILjava_nio_Buffer_2IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint namelen, jobject obj_name, jint nameByteOffset, jint bufSize, jobject obj_stringlen, jint stringlenByteOffset, jobject obj_string, jint stringByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);
	unsigned char* stringlen = (unsigned char*)(obj_stringlen?env->GetDirectBufferAddress(obj_stringlen):0);
	unsigned char* string = (unsigned char*)(obj_string?env->GetDirectBufferAddress(obj_string):0);


//@line:14907

		ext_glGetNamedStringARB((GLint)namelen, (const GLchar*)(name + nameByteOffset), (GLsizei)bufSize, (GLint*)(stringlen + stringlenByteOffset), (GLchar*)(string + stringByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedStringARB__IJIJJ(JNIEnv* env, jclass clazz, jint namelen, jlong name, jint bufSize, jlong stringlen, jlong string) {


//@line:14911

		ext_glGetNamedStringARB((GLint)namelen, (const GLchar*)name, (GLsizei)bufSize, (GLint*)stringlen, (GLchar*)string);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedStringivARB__ILjava_nio_Buffer_2IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint namelen, jobject obj_name, jint nameByteOffset, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:14915

		ext_glGetNamedStringivARB((GLint)namelen, (const GLchar*)(name + nameByteOffset), (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedStringivARB__IJIJ(JNIEnv* env, jclass clazz, jint namelen, jlong name, jint pname, jlong params) {


//@line:14919

		ext_glGetNamedStringivARB((GLint)namelen, (const GLchar*)name, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindFragDataLocationIndexed__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint colorNumber, jint index, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:14923

		ext_glBindFragDataLocationIndexed((GLuint)program, (GLuint)colorNumber, (GLuint)index, (const GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindFragDataLocationIndexed__IIIJ(JNIEnv* env, jclass clazz, jint program, jint colorNumber, jint index, jlong name) {


//@line:14927

		ext_glBindFragDataLocationIndexed((GLuint)program, (GLuint)colorNumber, (GLuint)index, (const GLchar*)name);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetFragDataIndex__ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint program, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:14931

		return (jint)ext_glGetFragDataIndex((GLuint)program, (const GLchar*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragDataIndex__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetFragDataIndex__ILjava_nio_Buffer_2I(env, clazz, program, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragDataIndex__IJ(JNIEnv* env, jclass clazz, jint program, jlong name) {


//@line:14935

		return (jint)ext_glGetFragDataIndex((GLuint)program, (const GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenSamplers__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint count, jobject obj_samplers, jint samplersByteOffset) {
	unsigned char* samplers = (unsigned char*)(obj_samplers?env->GetDirectBufferAddress(obj_samplers):0);


//@line:14939

		ext_glGenSamplers((GLsizei)count, (GLuint*)(samplers + samplersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenSamplers__IJ(JNIEnv* env, jclass clazz, jint count, jlong samplers) {


//@line:14943

		ext_glGenSamplers((GLsizei)count, (GLuint*)samplers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteSamplers__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint count, jobject obj_samplers, jint samplersByteOffset) {
	unsigned char* samplers = (unsigned char*)(obj_samplers?env->GetDirectBufferAddress(obj_samplers):0);


//@line:14947

		ext_glDeleteSamplers((GLsizei)count, (const GLuint*)(samplers + samplersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteSamplers__IJ(JNIEnv* env, jclass clazz, jint count, jlong samplers) {


//@line:14951

		ext_glDeleteSamplers((GLsizei)count, (const GLuint*)samplers);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsSampler(JNIEnv* env, jclass clazz, jint sampler) {


//@line:14955

		return (jboolean)ext_glIsSampler((GLuint)sampler);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindSampler(JNIEnv* env, jclass clazz, jint unit, jint sampler) {


//@line:14959

		ext_glBindSampler((GLuint)unit, (GLuint)sampler);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplerParameteri(JNIEnv* env, jclass clazz, jint sampler, jint pname, jint param) {


//@line:14963

		ext_glSamplerParameteri((GLuint)sampler, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplerParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint sampler, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:14967

		ext_glSamplerParameteriv((GLuint)sampler, (GLenum)pname, (const GLint*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplerParameteriv__IIJ(JNIEnv* env, jclass clazz, jint sampler, jint pname, jlong param) {


//@line:14971

		ext_glSamplerParameteriv((GLuint)sampler, (GLenum)pname, (const GLint*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplerParameterf(JNIEnv* env, jclass clazz, jint sampler, jint pname, jfloat param) {


//@line:14975

		ext_glSamplerParameterf((GLuint)sampler, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplerParameterfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint sampler, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:14979

		ext_glSamplerParameterfv((GLuint)sampler, (GLenum)pname, (const GLfloat*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplerParameterfv__IIJ(JNIEnv* env, jclass clazz, jint sampler, jint pname, jlong param) {


//@line:14983

		ext_glSamplerParameterfv((GLuint)sampler, (GLenum)pname, (const GLfloat*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplerParameterIiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint sampler, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:14987

		ext_glSamplerParameterIiv((GLuint)sampler, (GLenum)pname, (const GLint*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplerParameterIiv__IIJ(JNIEnv* env, jclass clazz, jint sampler, jint pname, jlong param) {


//@line:14991

		ext_glSamplerParameterIiv((GLuint)sampler, (GLenum)pname, (const GLint*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplerParameterIuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint sampler, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:14995

		ext_glSamplerParameterIuiv((GLuint)sampler, (GLenum)pname, (const GLuint*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplerParameterIuiv__IIJ(JNIEnv* env, jclass clazz, jint sampler, jint pname, jlong param) {


//@line:14999

		ext_glSamplerParameterIuiv((GLuint)sampler, (GLenum)pname, (const GLuint*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSamplerParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint sampler, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:15003

		ext_glGetSamplerParameteriv((GLuint)sampler, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSamplerParameteriv__IIJ(JNIEnv* env, jclass clazz, jint sampler, jint pname, jlong params) {


//@line:15007

		ext_glGetSamplerParameteriv((GLuint)sampler, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSamplerParameterIiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint sampler, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:15011

		ext_glGetSamplerParameterIiv((GLuint)sampler, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSamplerParameterIiv__IIJ(JNIEnv* env, jclass clazz, jint sampler, jint pname, jlong params) {


//@line:15015

		ext_glGetSamplerParameterIiv((GLuint)sampler, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSamplerParameterfv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint sampler, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:15019

		ext_glGetSamplerParameterfv((GLuint)sampler, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSamplerParameterfv__IIJ(JNIEnv* env, jclass clazz, jint sampler, jint pname, jlong params) {


//@line:15023

		ext_glGetSamplerParameterfv((GLuint)sampler, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSamplerParameterIuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint sampler, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:15027

		ext_glGetSamplerParameterIuiv((GLuint)sampler, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSamplerParameterIuiv__IIJ(JNIEnv* env, jclass clazz, jint sampler, jint pname, jlong params) {


//@line:15031

		ext_glGetSamplerParameterIuiv((GLuint)sampler, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glQueryCounter(JNIEnv* env, jclass clazz, jint id, jint target) {


//@line:15035

		ext_glQueryCounter((GLuint)id, (GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjecti64v__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:15039

		ext_glGetQueryObjecti64v((GLuint)id, (GLenum)pname, (GLint64*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjecti64v__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:15043

		ext_glGetQueryObjecti64v((GLuint)id, (GLenum)pname, (GLint64*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectui64v__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:15047

		ext_glGetQueryObjectui64v((GLuint)id, (GLenum)pname, (GLuint64*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectui64v__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:15051

		ext_glGetQueryObjectui64v((GLuint)id, (GLenum)pname, (GLuint64*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexP2ui(JNIEnv* env, jclass clazz, jint type, jint value) {


//@line:15055

		ext_glVertexP2ui((GLenum)type, (GLuint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexP2uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15059

		ext_glVertexP2uiv((GLenum)type, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexP2uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong value) {


//@line:15063

		ext_glVertexP2uiv((GLenum)type, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexP3ui(JNIEnv* env, jclass clazz, jint type, jint value) {


//@line:15067

		ext_glVertexP3ui((GLenum)type, (GLuint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexP3uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15071

		ext_glVertexP3uiv((GLenum)type, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexP3uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong value) {


//@line:15075

		ext_glVertexP3uiv((GLenum)type, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexP4ui(JNIEnv* env, jclass clazz, jint type, jint value) {


//@line:15079

		ext_glVertexP4ui((GLenum)type, (GLuint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexP4uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15083

		ext_glVertexP4uiv((GLenum)type, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexP4uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong value) {


//@line:15087

		ext_glVertexP4uiv((GLenum)type, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP1ui(JNIEnv* env, jclass clazz, jint type, jint coords) {


//@line:15091

		ext_glTexCoordP1ui((GLenum)type, (GLuint)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP1uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:15095

		ext_glTexCoordP1uiv((GLenum)type, (const GLuint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP1uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong coords) {


//@line:15099

		ext_glTexCoordP1uiv((GLenum)type, (const GLuint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP2ui(JNIEnv* env, jclass clazz, jint type, jint coords) {


//@line:15103

		ext_glTexCoordP2ui((GLenum)type, (GLuint)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP2uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:15107

		ext_glTexCoordP2uiv((GLenum)type, (const GLuint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP2uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong coords) {


//@line:15111

		ext_glTexCoordP2uiv((GLenum)type, (const GLuint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP3ui(JNIEnv* env, jclass clazz, jint type, jint coords) {


//@line:15115

		ext_glTexCoordP3ui((GLenum)type, (GLuint)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP3uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:15119

		ext_glTexCoordP3uiv((GLenum)type, (const GLuint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP3uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong coords) {


//@line:15123

		ext_glTexCoordP3uiv((GLenum)type, (const GLuint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP4ui(JNIEnv* env, jclass clazz, jint type, jint coords) {


//@line:15127

		ext_glTexCoordP4ui((GLenum)type, (GLuint)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP4uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:15131

		ext_glTexCoordP4uiv((GLenum)type, (const GLuint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordP4uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong coords) {


//@line:15135

		ext_glTexCoordP4uiv((GLenum)type, (const GLuint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP1ui(JNIEnv* env, jclass clazz, jint texture, jint type, jint coords) {


//@line:15139

		ext_glMultiTexCoordP1ui((GLenum)texture, (GLenum)type, (GLuint)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP1uiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint type, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:15143

		ext_glMultiTexCoordP1uiv((GLenum)texture, (GLenum)type, (const GLuint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP1uiv__IIJ(JNIEnv* env, jclass clazz, jint texture, jint type, jlong coords) {


//@line:15147

		ext_glMultiTexCoordP1uiv((GLenum)texture, (GLenum)type, (const GLuint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP2ui(JNIEnv* env, jclass clazz, jint texture, jint type, jint coords) {


//@line:15151

		ext_glMultiTexCoordP2ui((GLenum)texture, (GLenum)type, (GLuint)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP2uiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint type, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:15155

		ext_glMultiTexCoordP2uiv((GLenum)texture, (GLenum)type, (const GLuint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP2uiv__IIJ(JNIEnv* env, jclass clazz, jint texture, jint type, jlong coords) {


//@line:15159

		ext_glMultiTexCoordP2uiv((GLenum)texture, (GLenum)type, (const GLuint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP3ui(JNIEnv* env, jclass clazz, jint texture, jint type, jint coords) {


//@line:15163

		ext_glMultiTexCoordP3ui((GLenum)texture, (GLenum)type, (GLuint)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP3uiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint type, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:15167

		ext_glMultiTexCoordP3uiv((GLenum)texture, (GLenum)type, (const GLuint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP3uiv__IIJ(JNIEnv* env, jclass clazz, jint texture, jint type, jlong coords) {


//@line:15171

		ext_glMultiTexCoordP3uiv((GLenum)texture, (GLenum)type, (const GLuint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP4ui(JNIEnv* env, jclass clazz, jint texture, jint type, jint coords) {


//@line:15175

		ext_glMultiTexCoordP4ui((GLenum)texture, (GLenum)type, (GLuint)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP4uiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint type, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:15179

		ext_glMultiTexCoordP4uiv((GLenum)texture, (GLenum)type, (const GLuint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordP4uiv__IIJ(JNIEnv* env, jclass clazz, jint texture, jint type, jlong coords) {


//@line:15183

		ext_glMultiTexCoordP4uiv((GLenum)texture, (GLenum)type, (const GLuint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalP3ui(JNIEnv* env, jclass clazz, jint type, jint coords) {


//@line:15187

		ext_glNormalP3ui((GLenum)type, (GLuint)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalP3uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:15191

		ext_glNormalP3uiv((GLenum)type, (const GLuint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalP3uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong coords) {


//@line:15195

		ext_glNormalP3uiv((GLenum)type, (const GLuint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorP3ui(JNIEnv* env, jclass clazz, jint type, jint color) {


//@line:15199

		ext_glColorP3ui((GLenum)type, (GLuint)color);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorP3uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_color, jint colorByteOffset) {
	unsigned char* color = (unsigned char*)(obj_color?env->GetDirectBufferAddress(obj_color):0);


//@line:15203

		ext_glColorP3uiv((GLenum)type, (const GLuint*)(color + colorByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorP3uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong color) {


//@line:15207

		ext_glColorP3uiv((GLenum)type, (const GLuint*)color);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorP4ui(JNIEnv* env, jclass clazz, jint type, jint color) {


//@line:15211

		ext_glColorP4ui((GLenum)type, (GLuint)color);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorP4uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_color, jint colorByteOffset) {
	unsigned char* color = (unsigned char*)(obj_color?env->GetDirectBufferAddress(obj_color):0);


//@line:15215

		ext_glColorP4uiv((GLenum)type, (const GLuint*)(color + colorByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorP4uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong color) {


//@line:15219

		ext_glColorP4uiv((GLenum)type, (const GLuint*)color);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColorP3ui(JNIEnv* env, jclass clazz, jint type, jint color) {


//@line:15223

		ext_glSecondaryColorP3ui((GLenum)type, (GLuint)color);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColorP3uiv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_color, jint colorByteOffset) {
	unsigned char* color = (unsigned char*)(obj_color?env->GetDirectBufferAddress(obj_color):0);


//@line:15227

		ext_glSecondaryColorP3uiv((GLenum)type, (const GLuint*)(color + colorByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColorP3uiv__IJ(JNIEnv* env, jclass clazz, jint type, jlong color) {


//@line:15231

		ext_glSecondaryColorP3uiv((GLenum)type, (const GLuint*)color);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP1ui(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jint value) {


//@line:15235

		ext_glVertexAttribP1ui((GLuint)index, (GLenum)type, (GLboolean)normalized, (GLuint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP1uiv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15239

		ext_glVertexAttribP1uiv((GLuint)index, (GLenum)type, (GLboolean)normalized, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP1uiv__IIZJ(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jlong value) {


//@line:15243

		ext_glVertexAttribP1uiv((GLuint)index, (GLenum)type, (GLboolean)normalized, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP2ui(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jint value) {


//@line:15247

		ext_glVertexAttribP2ui((GLuint)index, (GLenum)type, (GLboolean)normalized, (GLuint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP2uiv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15251

		ext_glVertexAttribP2uiv((GLuint)index, (GLenum)type, (GLboolean)normalized, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP2uiv__IIZJ(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jlong value) {


//@line:15255

		ext_glVertexAttribP2uiv((GLuint)index, (GLenum)type, (GLboolean)normalized, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP3ui(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jint value) {


//@line:15259

		ext_glVertexAttribP3ui((GLuint)index, (GLenum)type, (GLboolean)normalized, (GLuint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP3uiv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15263

		ext_glVertexAttribP3uiv((GLuint)index, (GLenum)type, (GLboolean)normalized, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP3uiv__IIZJ(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jlong value) {


//@line:15267

		ext_glVertexAttribP3uiv((GLuint)index, (GLenum)type, (GLboolean)normalized, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP4ui(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jint value) {


//@line:15271

		ext_glVertexAttribP4ui((GLuint)index, (GLenum)type, (GLboolean)normalized, (GLuint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP4uiv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15275

		ext_glVertexAttribP4uiv((GLuint)index, (GLenum)type, (GLboolean)normalized, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribP4uiv__IIZJ(JNIEnv* env, jclass clazz, jint index, jint type, jboolean normalized, jlong value) {


//@line:15279

		ext_glVertexAttribP4uiv((GLuint)index, (GLenum)type, (GLboolean)normalized, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawArraysIndirect__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jobject obj_indirect, jint indirectByteOffset) {
	unsigned char* indirect = (unsigned char*)(obj_indirect?env->GetDirectBufferAddress(obj_indirect):0);


//@line:15283

		ext_glDrawArraysIndirect((GLenum)mode, (const GLvoid*)(indirect + indirectByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawArraysIndirect__IJ(JNIEnv* env, jclass clazz, jint mode, jlong indirect) {


//@line:15287

		ext_glDrawArraysIndirect((GLenum)mode, (const GLvoid*)indirect);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsIndirect__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jint type, jobject obj_indirect, jint indirectByteOffset) {
	unsigned char* indirect = (unsigned char*)(obj_indirect?env->GetDirectBufferAddress(obj_indirect):0);


//@line:15291

		ext_glDrawElementsIndirect((GLenum)mode, (GLenum)type, (const GLvoid*)(indirect + indirectByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsIndirect__IIJ(JNIEnv* env, jclass clazz, jint mode, jint type, jlong indirect) {


//@line:15295

		ext_glDrawElementsIndirect((GLenum)mode, (GLenum)type, (const GLvoid*)indirect);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1d(JNIEnv* env, jclass clazz, jint location, jdouble x) {


//@line:15299

		ext_glUniform1d((GLint)location, (GLdouble)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2d(JNIEnv* env, jclass clazz, jint location, jdouble x, jdouble y) {


//@line:15303

		ext_glUniform2d((GLint)location, (GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3d(JNIEnv* env, jclass clazz, jint location, jdouble x, jdouble y, jdouble z) {


//@line:15307

		ext_glUniform3d((GLint)location, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4d(JNIEnv* env, jclass clazz, jint location, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:15311

		ext_glUniform4d((GLint)location, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1dv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15315

		ext_glUniform1dv((GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1dv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:15319

		ext_glUniform1dv((GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2dv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15323

		ext_glUniform2dv((GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2dv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:15327

		ext_glUniform2dv((GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3dv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15331

		ext_glUniform3dv((GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3dv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:15335

		ext_glUniform3dv((GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4dv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15339

		ext_glUniform4dv((GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4dv__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:15343

		ext_glUniform4dv((GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2dv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15347

		ext_glUniformMatrix2dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2dv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:15351

		ext_glUniformMatrix2dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3dv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15355

		ext_glUniformMatrix3dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3dv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:15359

		ext_glUniformMatrix3dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4dv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15363

		ext_glUniformMatrix4dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4dv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:15367

		ext_glUniformMatrix4dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2x3dv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15371

		ext_glUniformMatrix2x3dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2x3dv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:15375

		ext_glUniformMatrix2x3dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2x4dv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15379

		ext_glUniformMatrix2x4dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix2x4dv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:15383

		ext_glUniformMatrix2x4dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3x2dv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15387

		ext_glUniformMatrix3x2dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3x2dv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:15391

		ext_glUniformMatrix3x2dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3x4dv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15395

		ext_glUniformMatrix3x4dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix3x4dv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:15399

		ext_glUniformMatrix3x4dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4x2dv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15403

		ext_glUniformMatrix4x2dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4x2dv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:15407

		ext_glUniformMatrix4x2dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4x3dv__IIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15411

		ext_glUniformMatrix4x3dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformMatrix4x3dv__IIZJ(JNIEnv* env, jclass clazz, jint location, jint count, jboolean transpose, jlong value) {


//@line:15415

		ext_glUniformMatrix4x3dv((GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformdv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:15419

		ext_glGetUniformdv((GLuint)program, (GLint)location, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformdv__IIJ(JNIEnv* env, jclass clazz, jint program, jint location, jlong params) {


//@line:15423

		ext_glGetUniformdv((GLuint)program, (GLint)location, (GLdouble*)params);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetSubroutineUniformLocation__IILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint program, jint shadertype, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:15427

		return (jint)ext_glGetSubroutineUniformLocation((GLuint)program, (GLenum)shadertype, (const GLchar*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSubroutineUniformLocation__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint shadertype, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetSubroutineUniformLocation__IILjava_nio_Buffer_2I(env, clazz, program, shadertype, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSubroutineUniformLocation__IIJ(JNIEnv* env, jclass clazz, jint program, jint shadertype, jlong name) {


//@line:15431

		return (jint)ext_glGetSubroutineUniformLocation((GLuint)program, (GLenum)shadertype, (const GLchar*)name);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetSubroutineIndex__IILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint program, jint shadertype, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:15435

		return (jint)ext_glGetSubroutineIndex((GLuint)program, (GLenum)shadertype, (const GLchar*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSubroutineIndex__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint shadertype, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetSubroutineIndex__IILjava_nio_Buffer_2I(env, clazz, program, shadertype, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSubroutineIndex__IIJ(JNIEnv* env, jclass clazz, jint program, jint shadertype, jlong name) {


//@line:15439

		return (jint)ext_glGetSubroutineIndex((GLuint)program, (GLenum)shadertype, (const GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveSubroutineUniformiv__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint shadertype, jint index, jint pname, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:15443

		ext_glGetActiveSubroutineUniformiv((GLuint)program, (GLenum)shadertype, (GLuint)index, (GLenum)pname, (GLint*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveSubroutineUniformiv__IIIIJ(JNIEnv* env, jclass clazz, jint program, jint shadertype, jint index, jint pname, jlong values) {


//@line:15447

		ext_glGetActiveSubroutineUniformiv((GLuint)program, (GLenum)shadertype, (GLuint)index, (GLenum)pname, (GLint*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveSubroutineUniformName__IIIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint shadertype, jint index, jint bufsize, jobject obj_length, jint lengthByteOffset, jobject obj_name, jint nameByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:15451

		ext_glGetActiveSubroutineUniformName((GLuint)program, (GLenum)shadertype, (GLuint)index, (GLsizei)bufsize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveSubroutineUniformName__IIIIJJ(JNIEnv* env, jclass clazz, jint program, jint shadertype, jint index, jint bufsize, jlong length, jlong name) {


//@line:15455

		ext_glGetActiveSubroutineUniformName((GLuint)program, (GLenum)shadertype, (GLuint)index, (GLsizei)bufsize, (GLsizei*)length, (GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveSubroutineName__IIIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint shadertype, jint index, jint bufsize, jobject obj_length, jint lengthByteOffset, jobject obj_name, jint nameByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:15459

		ext_glGetActiveSubroutineName((GLuint)program, (GLenum)shadertype, (GLuint)index, (GLsizei)bufsize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveSubroutineName__IIIIJJ(JNIEnv* env, jclass clazz, jint program, jint shadertype, jint index, jint bufsize, jlong length, jlong name) {


//@line:15463

		ext_glGetActiveSubroutineName((GLuint)program, (GLenum)shadertype, (GLuint)index, (GLsizei)bufsize, (GLsizei*)length, (GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformSubroutinesuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint shadertype, jint count, jobject obj_indices, jint indicesByteOffset) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:15467

		ext_glUniformSubroutinesuiv((GLenum)shadertype, (GLsizei)count, (const GLuint*)(indices + indicesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformSubroutinesuiv__IIJ(JNIEnv* env, jclass clazz, jint shadertype, jint count, jlong indices) {


//@line:15471

		ext_glUniformSubroutinesuiv((GLenum)shadertype, (GLsizei)count, (const GLuint*)indices);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformSubroutineuiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint shadertype, jint location, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:15475

		ext_glGetUniformSubroutineuiv((GLenum)shadertype, (GLint)location, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformSubroutineuiv__IIJ(JNIEnv* env, jclass clazz, jint shadertype, jint location, jlong params) {


//@line:15479

		ext_glGetUniformSubroutineuiv((GLenum)shadertype, (GLint)location, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramStageiv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint shadertype, jint pname, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:15483

		ext_glGetProgramStageiv((GLuint)program, (GLenum)shadertype, (GLenum)pname, (GLint*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramStageiv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint shadertype, jint pname, jlong values) {


//@line:15487

		ext_glGetProgramStageiv((GLuint)program, (GLenum)shadertype, (GLenum)pname, (GLint*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPatchParameteri(JNIEnv* env, jclass clazz, jint pname, jint value) {


//@line:15491

		ext_glPatchParameteri((GLenum)pname, (GLint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPatchParameterfv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:15495

		ext_glPatchParameterfv((GLenum)pname, (const GLfloat*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPatchParameterfv__IJ(JNIEnv* env, jclass clazz, jint pname, jlong values) {


//@line:15499

		ext_glPatchParameterfv((GLenum)pname, (const GLfloat*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindTransformFeedback(JNIEnv* env, jclass clazz, jint target, jint id) {


//@line:15503

		ext_glBindTransformFeedback((GLenum)target, (GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteTransformFeedbacks__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_ids, jint idsByteOffset) {
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);


//@line:15507

		ext_glDeleteTransformFeedbacks((GLsizei)n, (const GLuint*)(ids + idsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteTransformFeedbacks__IJ(JNIEnv* env, jclass clazz, jint n, jlong ids) {


//@line:15511

		ext_glDeleteTransformFeedbacks((GLsizei)n, (const GLuint*)ids);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenTransformFeedbacks__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_ids, jint idsByteOffset) {
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);


//@line:15515

		ext_glGenTransformFeedbacks((GLsizei)n, (GLuint*)(ids + idsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenTransformFeedbacks__IJ(JNIEnv* env, jclass clazz, jint n, jlong ids) {


//@line:15519

		ext_glGenTransformFeedbacks((GLsizei)n, (GLuint*)ids);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsTransformFeedback(JNIEnv* env, jclass clazz, jint id) {


//@line:15523

		return (jboolean)ext_glIsTransformFeedback((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPauseTransformFeedback(JNIEnv* env, jclass clazz) {


//@line:15527

		ext_glPauseTransformFeedback();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glResumeTransformFeedback(JNIEnv* env, jclass clazz) {


//@line:15531

		ext_glResumeTransformFeedback();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawTransformFeedback(JNIEnv* env, jclass clazz, jint mode, jint id) {


//@line:15535

		ext_glDrawTransformFeedback((GLenum)mode, (GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawTransformFeedbackStream(JNIEnv* env, jclass clazz, jint mode, jint id, jint stream) {


//@line:15539

		ext_glDrawTransformFeedbackStream((GLenum)mode, (GLuint)id, (GLuint)stream);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginQueryIndexed(JNIEnv* env, jclass clazz, jint target, jint index, jint id) {


//@line:15543

		ext_glBeginQueryIndexed((GLenum)target, (GLuint)index, (GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndQueryIndexed(JNIEnv* env, jclass clazz, jint target, jint index) {


//@line:15547

		ext_glEndQueryIndexed((GLenum)target, (GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryIndexediv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:15551

		ext_glGetQueryIndexediv((GLenum)target, (GLuint)index, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryIndexediv__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint pname, jlong params) {


//@line:15555

		ext_glGetQueryIndexediv((GLenum)target, (GLuint)index, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReleaseShaderCompiler(JNIEnv* env, jclass clazz) {


//@line:15559

		ext_glReleaseShaderCompiler();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glShaderBinary__ILjava_nio_Buffer_2IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint count, jobject obj_shaders, jint shadersByteOffset, jint binaryformat, jobject obj_binary, jint binaryByteOffset, jint length) {
	unsigned char* shaders = (unsigned char*)(obj_shaders?env->GetDirectBufferAddress(obj_shaders):0);
	unsigned char* binary = (unsigned char*)(obj_binary?env->GetDirectBufferAddress(obj_binary):0);


//@line:15563

		ext_glShaderBinary((GLsizei)count, (const GLuint*)(shaders + shadersByteOffset), (GLenum)binaryformat, (const GLvoid*)(binary + binaryByteOffset), (GLsizei)length);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glShaderBinary__IJIJI(JNIEnv* env, jclass clazz, jint count, jlong shaders, jint binaryformat, jlong binary, jint length) {


//@line:15567

		ext_glShaderBinary((GLsizei)count, (const GLuint*)shaders, (GLenum)binaryformat, (const GLvoid*)binary, (GLsizei)length);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetShaderPrecisionFormat__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint shadertype, jint precisiontype, jobject obj_range, jint rangeByteOffset, jobject obj_precision, jint precisionByteOffset) {
	unsigned char* range = (unsigned char*)(obj_range?env->GetDirectBufferAddress(obj_range):0);
	unsigned char* precision = (unsigned char*)(obj_precision?env->GetDirectBufferAddress(obj_precision):0);


//@line:15571

		ext_glGetShaderPrecisionFormat((GLenum)shadertype, (GLenum)precisiontype, (GLint*)(range + rangeByteOffset), (GLint*)(precision + precisionByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetShaderPrecisionFormat__IIJJ(JNIEnv* env, jclass clazz, jint shadertype, jint precisiontype, jlong range, jlong precision) {


//@line:15575

		ext_glGetShaderPrecisionFormat((GLenum)shadertype, (GLenum)precisiontype, (GLint*)range, (GLint*)precision);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthRangef(JNIEnv* env, jclass clazz, jfloat n, jfloat f) {


//@line:15579

		ext_glDepthRangef((GLfloat)n, (GLfloat)f);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearDepthf(JNIEnv* env, jclass clazz, jfloat d) {


//@line:15583

		ext_glClearDepthf((GLfloat)d);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramBinary__IILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_binaryFormat, jint binaryFormatByteOffset, jobject obj_binary, jint binaryByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* binaryFormat = (unsigned char*)(obj_binaryFormat?env->GetDirectBufferAddress(obj_binaryFormat):0);
	unsigned char* binary = (unsigned char*)(obj_binary?env->GetDirectBufferAddress(obj_binary):0);


//@line:15587

		ext_glGetProgramBinary((GLuint)program, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLenum*)(binaryFormat + binaryFormatByteOffset), (GLvoid*)(binary + binaryByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramBinary__IIJJJ(JNIEnv* env, jclass clazz, jint program, jint bufSize, jlong length, jlong binaryFormat, jlong binary) {


//@line:15591

		ext_glGetProgramBinary((GLuint)program, (GLsizei)bufSize, (GLsizei*)length, (GLenum*)binaryFormat, (GLvoid*)binary);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramBinary__IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint program, jint binaryFormat, jobject obj_binary, jint binaryByteOffset, jint length) {
	unsigned char* binary = (unsigned char*)(obj_binary?env->GetDirectBufferAddress(obj_binary):0);


//@line:15595

		ext_glProgramBinary((GLuint)program, (GLenum)binaryFormat, (const GLvoid*)(binary + binaryByteOffset), (GLsizei)length);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramBinary__IIJI(JNIEnv* env, jclass clazz, jint program, jint binaryFormat, jlong binary, jint length) {


//@line:15599

		ext_glProgramBinary((GLuint)program, (GLenum)binaryFormat, (const GLvoid*)binary, (GLsizei)length);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameteri(JNIEnv* env, jclass clazz, jint program, jint pname, jint value) {


//@line:15603

		ext_glProgramParameteri((GLuint)program, (GLenum)pname, (GLint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUseProgramStages(JNIEnv* env, jclass clazz, jint pipeline, jint stages, jint program) {


//@line:15607

		ext_glUseProgramStages((GLuint)pipeline, (GLbitfield)stages, (GLuint)program);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glActiveShaderProgram(JNIEnv* env, jclass clazz, jint pipeline, jint program) {


//@line:15611

		ext_glActiveShaderProgram((GLuint)pipeline, (GLuint)program);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glCreateShaderProgramv__IILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint type, jint count, jobject obj_strings, jint stringsByteOffset, unsigned char* strings) {

//@line:15615

		return (jint)ext_glCreateShaderProgramv((GLenum)type, (GLsizei)count, (const GLchar**)(strings + stringsByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glCreateShaderProgramv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint count, jobject obj_strings, jint stringsByteOffset) {
	unsigned char* strings = (unsigned char*)(obj_strings?env->GetDirectBufferAddress(obj_strings):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glCreateShaderProgramv__IILjava_nio_Buffer_2I(env, clazz, type, count, obj_strings, stringsByteOffset, strings);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glCreateShaderProgramv__IIJ(JNIEnv* env, jclass clazz, jint type, jint count, jlong strings) {


//@line:15619

		return (jint)ext_glCreateShaderProgramv((GLenum)type, (GLsizei)count, (const GLchar**)strings);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindProgramPipeline(JNIEnv* env, jclass clazz, jint pipeline) {


//@line:15623

		ext_glBindProgramPipeline((GLuint)pipeline);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteProgramPipelines__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_pipelines, jint pipelinesByteOffset) {
	unsigned char* pipelines = (unsigned char*)(obj_pipelines?env->GetDirectBufferAddress(obj_pipelines):0);


//@line:15627

		ext_glDeleteProgramPipelines((GLsizei)n, (const GLuint*)(pipelines + pipelinesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteProgramPipelines__IJ(JNIEnv* env, jclass clazz, jint n, jlong pipelines) {


//@line:15631

		ext_glDeleteProgramPipelines((GLsizei)n, (const GLuint*)pipelines);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenProgramPipelines__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_pipelines, jint pipelinesByteOffset) {
	unsigned char* pipelines = (unsigned char*)(obj_pipelines?env->GetDirectBufferAddress(obj_pipelines):0);


//@line:15635

		ext_glGenProgramPipelines((GLsizei)n, (GLuint*)(pipelines + pipelinesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenProgramPipelines__IJ(JNIEnv* env, jclass clazz, jint n, jlong pipelines) {


//@line:15639

		ext_glGenProgramPipelines((GLsizei)n, (GLuint*)pipelines);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsProgramPipeline(JNIEnv* env, jclass clazz, jint pipeline) {


//@line:15643

		return (jboolean)ext_glIsProgramPipeline((GLuint)pipeline);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramPipelineiv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pipeline, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:15647

		ext_glGetProgramPipelineiv((GLuint)pipeline, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramPipelineiv__IIJ(JNIEnv* env, jclass clazz, jint pipeline, jint pname, jlong params) {


//@line:15651

		ext_glGetProgramPipelineiv((GLuint)pipeline, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1i(JNIEnv* env, jclass clazz, jint program, jint location, jint v0) {


//@line:15655

		ext_glProgramUniform1i((GLuint)program, (GLint)location, (GLint)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1iv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15659

		ext_glProgramUniform1iv((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1iv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15663

		ext_glProgramUniform1iv((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1f(JNIEnv* env, jclass clazz, jint program, jint location, jfloat v0) {


//@line:15667

		ext_glProgramUniform1f((GLuint)program, (GLint)location, (GLfloat)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1fv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15671

		ext_glProgramUniform1fv((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1fv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15675

		ext_glProgramUniform1fv((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1d(JNIEnv* env, jclass clazz, jint program, jint location, jdouble v0) {


//@line:15679

		ext_glProgramUniform1d((GLuint)program, (GLint)location, (GLdouble)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1dv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15683

		ext_glProgramUniform1dv((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1dv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15687

		ext_glProgramUniform1dv((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1ui(JNIEnv* env, jclass clazz, jint program, jint location, jint v0) {


//@line:15691

		ext_glProgramUniform1ui((GLuint)program, (GLint)location, (GLuint)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1uiv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15695

		ext_glProgramUniform1uiv((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1uiv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15699

		ext_glProgramUniform1uiv((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2i(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1) {


//@line:15703

		ext_glProgramUniform2i((GLuint)program, (GLint)location, (GLint)v0, (GLint)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2iv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15707

		ext_glProgramUniform2iv((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2iv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15711

		ext_glProgramUniform2iv((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2f(JNIEnv* env, jclass clazz, jint program, jint location, jfloat v0, jfloat v1) {


//@line:15715

		ext_glProgramUniform2f((GLuint)program, (GLint)location, (GLfloat)v0, (GLfloat)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2fv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15719

		ext_glProgramUniform2fv((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2fv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15723

		ext_glProgramUniform2fv((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2d(JNIEnv* env, jclass clazz, jint program, jint location, jdouble v0, jdouble v1) {


//@line:15727

		ext_glProgramUniform2d((GLuint)program, (GLint)location, (GLdouble)v0, (GLdouble)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2dv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15731

		ext_glProgramUniform2dv((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2dv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15735

		ext_glProgramUniform2dv((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2ui(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1) {


//@line:15739

		ext_glProgramUniform2ui((GLuint)program, (GLint)location, (GLuint)v0, (GLuint)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2uiv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15743

		ext_glProgramUniform2uiv((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2uiv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15747

		ext_glProgramUniform2uiv((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3i(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1, jint v2) {


//@line:15751

		ext_glProgramUniform3i((GLuint)program, (GLint)location, (GLint)v0, (GLint)v1, (GLint)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3iv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15755

		ext_glProgramUniform3iv((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3iv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15759

		ext_glProgramUniform3iv((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3f(JNIEnv* env, jclass clazz, jint program, jint location, jfloat v0, jfloat v1, jfloat v2) {


//@line:15763

		ext_glProgramUniform3f((GLuint)program, (GLint)location, (GLfloat)v0, (GLfloat)v1, (GLfloat)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3fv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15767

		ext_glProgramUniform3fv((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3fv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15771

		ext_glProgramUniform3fv((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3d(JNIEnv* env, jclass clazz, jint program, jint location, jdouble v0, jdouble v1, jdouble v2) {


//@line:15775

		ext_glProgramUniform3d((GLuint)program, (GLint)location, (GLdouble)v0, (GLdouble)v1, (GLdouble)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3dv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15779

		ext_glProgramUniform3dv((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3dv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15783

		ext_glProgramUniform3dv((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3ui(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1, jint v2) {


//@line:15787

		ext_glProgramUniform3ui((GLuint)program, (GLint)location, (GLuint)v0, (GLuint)v1, (GLuint)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3uiv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15791

		ext_glProgramUniform3uiv((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3uiv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15795

		ext_glProgramUniform3uiv((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4i(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1, jint v2, jint v3) {


//@line:15799

		ext_glProgramUniform4i((GLuint)program, (GLint)location, (GLint)v0, (GLint)v1, (GLint)v2, (GLint)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4iv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15803

		ext_glProgramUniform4iv((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4iv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15807

		ext_glProgramUniform4iv((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4f(JNIEnv* env, jclass clazz, jint program, jint location, jfloat v0, jfloat v1, jfloat v2, jfloat v3) {


//@line:15811

		ext_glProgramUniform4f((GLuint)program, (GLint)location, (GLfloat)v0, (GLfloat)v1, (GLfloat)v2, (GLfloat)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4fv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15815

		ext_glProgramUniform4fv((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4fv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15819

		ext_glProgramUniform4fv((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4d(JNIEnv* env, jclass clazz, jint program, jint location, jdouble v0, jdouble v1, jdouble v2, jdouble v3) {


//@line:15823

		ext_glProgramUniform4d((GLuint)program, (GLint)location, (GLdouble)v0, (GLdouble)v1, (GLdouble)v2, (GLdouble)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4dv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15827

		ext_glProgramUniform4dv((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4dv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15831

		ext_glProgramUniform4dv((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4ui(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1, jint v2, jint v3) {


//@line:15835

		ext_glProgramUniform4ui((GLuint)program, (GLint)location, (GLuint)v0, (GLuint)v1, (GLuint)v2, (GLuint)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4uiv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15839

		ext_glProgramUniform4uiv((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4uiv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:15843

		ext_glProgramUniform4uiv((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2fv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15847

		ext_glProgramUniformMatrix2fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2fv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15851

		ext_glProgramUniformMatrix2fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3fv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15855

		ext_glProgramUniformMatrix3fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3fv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15859

		ext_glProgramUniformMatrix3fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4fv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15863

		ext_glProgramUniformMatrix4fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4fv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15867

		ext_glProgramUniformMatrix4fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2dv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15871

		ext_glProgramUniformMatrix2dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2dv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15875

		ext_glProgramUniformMatrix2dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3dv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15879

		ext_glProgramUniformMatrix3dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3dv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15883

		ext_glProgramUniformMatrix3dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4dv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15887

		ext_glProgramUniformMatrix4dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4dv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15891

		ext_glProgramUniformMatrix4dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x3fv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15895

		ext_glProgramUniformMatrix2x3fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x3fv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15899

		ext_glProgramUniformMatrix2x3fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x2fv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15903

		ext_glProgramUniformMatrix3x2fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x2fv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15907

		ext_glProgramUniformMatrix3x2fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x4fv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15911

		ext_glProgramUniformMatrix2x4fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x4fv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15915

		ext_glProgramUniformMatrix2x4fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x2fv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15919

		ext_glProgramUniformMatrix4x2fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x2fv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15923

		ext_glProgramUniformMatrix4x2fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x4fv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15927

		ext_glProgramUniformMatrix3x4fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x4fv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15931

		ext_glProgramUniformMatrix3x4fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x3fv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15935

		ext_glProgramUniformMatrix4x3fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x3fv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15939

		ext_glProgramUniformMatrix4x3fv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x3dv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15943

		ext_glProgramUniformMatrix2x3dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x3dv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15947

		ext_glProgramUniformMatrix2x3dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x2dv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15951

		ext_glProgramUniformMatrix3x2dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x2dv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15955

		ext_glProgramUniformMatrix3x2dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x4dv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15959

		ext_glProgramUniformMatrix2x4dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x4dv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15963

		ext_glProgramUniformMatrix2x4dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x2dv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15967

		ext_glProgramUniformMatrix4x2dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x2dv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15971

		ext_glProgramUniformMatrix4x2dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x4dv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15975

		ext_glProgramUniformMatrix3x4dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x4dv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15979

		ext_glProgramUniformMatrix3x4dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x3dv__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:15983

		ext_glProgramUniformMatrix4x3dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x3dv__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:15987

		ext_glProgramUniformMatrix4x3dv((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glValidateProgramPipeline(JNIEnv* env, jclass clazz, jint pipeline) {


//@line:15991

		ext_glValidateProgramPipeline((GLuint)pipeline);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramPipelineInfoLog__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pipeline, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_infoLog, jint infoLogByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* infoLog = (unsigned char*)(obj_infoLog?env->GetDirectBufferAddress(obj_infoLog):0);


//@line:15995

		ext_glGetProgramPipelineInfoLog((GLuint)pipeline, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(infoLog + infoLogByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramPipelineInfoLog__IIJJ(JNIEnv* env, jclass clazz, jint pipeline, jint bufSize, jlong length, jlong infoLog) {


//@line:15999

		ext_glGetProgramPipelineInfoLog((GLuint)pipeline, (GLsizei)bufSize, (GLsizei*)length, (GLchar*)infoLog);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1d(JNIEnv* env, jclass clazz, jint index, jdouble x) {


//@line:16003

		ext_glVertexAttribL1d((GLuint)index, (GLdouble)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2d(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y) {


//@line:16007

		ext_glVertexAttribL2d((GLuint)index, (GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3d(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y, jdouble z) {


//@line:16011

		ext_glVertexAttribL3d((GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4d(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:16015

		ext_glVertexAttribL4d((GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16019

		ext_glVertexAttribL1dv((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1dv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:16023

		ext_glVertexAttribL1dv((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16027

		ext_glVertexAttribL2dv((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2dv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:16031

		ext_glVertexAttribL2dv((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16035

		ext_glVertexAttribL3dv((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3dv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:16039

		ext_glVertexAttribL3dv((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4dv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16043

		ext_glVertexAttribL4dv((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4dv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:16047

		ext_glVertexAttribL4dv((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribLPointer__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:16051

		ext_glVertexAttribLPointer((GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribLPointer__IIIIJ(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jint stride, jlong pointer) {


//@line:16055

		ext_glVertexAttribLPointer((GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribLdv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16059

		ext_glGetVertexAttribLdv((GLuint)index, (GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribLdv__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:16063

		ext_glGetVertexAttribLdv((GLuint)index, (GLenum)pname, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glViewportArrayv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint first, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16067

		ext_glViewportArrayv((GLuint)first, (GLsizei)count, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glViewportArrayv__IIJ(JNIEnv* env, jclass clazz, jint first, jint count, jlong v) {


//@line:16071

		ext_glViewportArrayv((GLuint)first, (GLsizei)count, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glViewportIndexedf(JNIEnv* env, jclass clazz, jint index, jfloat x, jfloat y, jfloat w, jfloat h) {


//@line:16075

		ext_glViewportIndexedf((GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)w, (GLfloat)h);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glViewportIndexedfv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16079

		ext_glViewportIndexedfv((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glViewportIndexedfv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:16083

		ext_glViewportIndexedfv((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glScissorArrayv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint first, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16087

		ext_glScissorArrayv((GLuint)first, (GLsizei)count, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glScissorArrayv__IIJ(JNIEnv* env, jclass clazz, jint first, jint count, jlong v) {


//@line:16091

		ext_glScissorArrayv((GLuint)first, (GLsizei)count, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glScissorIndexed(JNIEnv* env, jclass clazz, jint index, jint left, jint bottom, jint width, jint height) {


//@line:16095

		ext_glScissorIndexed((GLuint)index, (GLint)left, (GLint)bottom, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glScissorIndexedv__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16099

		ext_glScissorIndexedv((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glScissorIndexedv__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:16103

		ext_glScissorIndexedv((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthRangeArrayv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint first, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16107

		ext_glDepthRangeArrayv((GLuint)first, (GLsizei)count, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthRangeArrayv__IIJ(JNIEnv* env, jclass clazz, jint first, jint count, jlong v) {


//@line:16111

		ext_glDepthRangeArrayv((GLuint)first, (GLsizei)count, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthRangeIndexed(JNIEnv* env, jclass clazz, jint index, jdouble n, jdouble f) {


//@line:16115

		ext_glDepthRangeIndexed((GLuint)index, (GLdouble)n, (GLdouble)f);
	

}

static inline jlong wrapped_Java_com_badlogic_jglfw_gl_GL_glCreateSyncFromCLeventARB__Ljava_nio_Buffer_2ILjava_nio_Buffer_2II
(JNIEnv* env, jclass clazz, jobject obj_context, jint contextByteOffset, jobject obj_event, jint eventByteOffset, jint flags, unsigned char* context, unsigned char* event) {

//@line:16119

		return (jlong)ext_glCreateSyncFromCLeventARB((struct _cl_context*)(context + contextByteOffset), (struct _cl_event*)(event + eventByteOffset), (GLbitfield)flags);
	
}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glCreateSyncFromCLeventARB__Ljava_nio_Buffer_2ILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jobject obj_context, jint contextByteOffset, jobject obj_event, jint eventByteOffset, jint flags) {
	unsigned char* context = (unsigned char*)(obj_context?env->GetDirectBufferAddress(obj_context):0);
	unsigned char* event = (unsigned char*)(obj_event?env->GetDirectBufferAddress(obj_event):0);

	jlong JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glCreateSyncFromCLeventARB__Ljava_nio_Buffer_2ILjava_nio_Buffer_2II(env, clazz, obj_context, contextByteOffset, obj_event, eventByteOffset, flags, context, event);


	return JNI_returnValue;
}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glCreateSyncFromCLeventARB__JJI(JNIEnv* env, jclass clazz, jlong context, jlong event, jint flags) {


//@line:16123

		return (jlong)ext_glCreateSyncFromCLeventARB((struct _cl_context*)context, (struct _cl_event*)event, (GLbitfield)flags);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLogARB__IILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint count, jint bufsize, jobject obj_sources, jint sourcesByteOffset, jobject obj_types, jint typesByteOffset, jobject obj_ids, jint idsByteOffset, jobject obj_severities, jint severitiesByteOffset, jobject obj_lengths, jint lengthsByteOffset, jobject obj_messageLog, jint messageLogByteOffset, unsigned char* sources, unsigned char* types, unsigned char* ids, unsigned char* severities, unsigned char* lengths, unsigned char* messageLog) {

//@line:16127

		return (jint)ext_glGetDebugMessageLogARB((GLuint)count, (GLsizei)bufsize, (GLenum*)(sources + sourcesByteOffset), (GLenum*)(types + typesByteOffset), (GLuint*)(ids + idsByteOffset), (GLenum*)(severities + severitiesByteOffset), (GLsizei*)(lengths + lengthsByteOffset), (GLchar*)(messageLog + messageLogByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLogARB__IILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint count, jint bufsize, jobject obj_sources, jint sourcesByteOffset, jobject obj_types, jint typesByteOffset, jobject obj_ids, jint idsByteOffset, jobject obj_severities, jint severitiesByteOffset, jobject obj_lengths, jint lengthsByteOffset, jobject obj_messageLog, jint messageLogByteOffset) {
	unsigned char* sources = (unsigned char*)(obj_sources?env->GetDirectBufferAddress(obj_sources):0);
	unsigned char* types = (unsigned char*)(obj_types?env->GetDirectBufferAddress(obj_types):0);
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);
	unsigned char* severities = (unsigned char*)(obj_severities?env->GetDirectBufferAddress(obj_severities):0);
	unsigned char* lengths = (unsigned char*)(obj_lengths?env->GetDirectBufferAddress(obj_lengths):0);
	unsigned char* messageLog = (unsigned char*)(obj_messageLog?env->GetDirectBufferAddress(obj_messageLog):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLogARB__IILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(env, clazz, count, bufsize, obj_sources, sourcesByteOffset, obj_types, typesByteOffset, obj_ids, idsByteOffset, obj_severities, severitiesByteOffset, obj_lengths, lengthsByteOffset, obj_messageLog, messageLogByteOffset, sources, types, ids, severities, lengths, messageLog);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLogARB__IIJJJJJJ(JNIEnv* env, jclass clazz, jint count, jint bufsize, jlong sources, jlong types, jlong ids, jlong severities, jlong lengths, jlong messageLog) {


//@line:16131

		return (jint)ext_glGetDebugMessageLogARB((GLuint)count, (GLsizei)bufsize, (GLenum*)sources, (GLenum*)types, (GLuint*)ids, (GLenum*)severities, (GLsizei*)lengths, (GLchar*)messageLog);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetGraphicsResetStatusARB(JNIEnv* env, jclass clazz) {


//@line:16135

		return (jint)ext_glGetGraphicsResetStatusARB();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnMapdvARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint query, jint bufSize, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16139

		ext_glGetnMapdvARB((GLenum)target, (GLenum)query, (GLsizei)bufSize, (GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnMapdvARB__IIIJ(JNIEnv* env, jclass clazz, jint target, jint query, jint bufSize, jlong v) {


//@line:16143

		ext_glGetnMapdvARB((GLenum)target, (GLenum)query, (GLsizei)bufSize, (GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnMapfvARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint query, jint bufSize, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16147

		ext_glGetnMapfvARB((GLenum)target, (GLenum)query, (GLsizei)bufSize, (GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnMapfvARB__IIIJ(JNIEnv* env, jclass clazz, jint target, jint query, jint bufSize, jlong v) {


//@line:16151

		ext_glGetnMapfvARB((GLenum)target, (GLenum)query, (GLsizei)bufSize, (GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnMapivARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint query, jint bufSize, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:16155

		ext_glGetnMapivARB((GLenum)target, (GLenum)query, (GLsizei)bufSize, (GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnMapivARB__IIIJ(JNIEnv* env, jclass clazz, jint target, jint query, jint bufSize, jlong v) {


//@line:16159

		ext_glGetnMapivARB((GLenum)target, (GLenum)query, (GLsizei)bufSize, (GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnPixelMapfvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jint bufSize, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:16163

		ext_glGetnPixelMapfvARB((GLenum)map, (GLsizei)bufSize, (GLfloat*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnPixelMapfvARB__IIJ(JNIEnv* env, jclass clazz, jint map, jint bufSize, jlong values) {


//@line:16167

		ext_glGetnPixelMapfvARB((GLenum)map, (GLsizei)bufSize, (GLfloat*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnPixelMapuivARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jint bufSize, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:16171

		ext_glGetnPixelMapuivARB((GLenum)map, (GLsizei)bufSize, (GLuint*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnPixelMapuivARB__IIJ(JNIEnv* env, jclass clazz, jint map, jint bufSize, jlong values) {


//@line:16175

		ext_glGetnPixelMapuivARB((GLenum)map, (GLsizei)bufSize, (GLuint*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnPixelMapusvARB__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jint bufSize, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:16179

		ext_glGetnPixelMapusvARB((GLenum)map, (GLsizei)bufSize, (GLushort*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnPixelMapusvARB__IIJ(JNIEnv* env, jclass clazz, jint map, jint bufSize, jlong values) {


//@line:16183

		ext_glGetnPixelMapusvARB((GLenum)map, (GLsizei)bufSize, (GLushort*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnPolygonStippleARB__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint bufSize, jobject obj_pattern, jint patternByteOffset) {
	unsigned char* pattern = (unsigned char*)(obj_pattern?env->GetDirectBufferAddress(obj_pattern):0);


//@line:16187

		ext_glGetnPolygonStippleARB((GLsizei)bufSize, (GLubyte*)(pattern + patternByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnPolygonStippleARB__IJ(JNIEnv* env, jclass clazz, jint bufSize, jlong pattern) {


//@line:16191

		ext_glGetnPolygonStippleARB((GLsizei)bufSize, (GLubyte*)pattern);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnColorTableARB__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jint bufSize, jobject obj_table, jint tableByteOffset) {
	unsigned char* table = (unsigned char*)(obj_table?env->GetDirectBufferAddress(obj_table):0);


//@line:16195

		ext_glGetnColorTableARB((GLenum)target, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)(table + tableByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnColorTableARB__IIIIJ(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jint bufSize, jlong table) {


//@line:16199

		ext_glGetnColorTableARB((GLenum)target, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)table);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnConvolutionFilterARB__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jint bufSize, jobject obj_image, jint imageByteOffset) {
	unsigned char* image = (unsigned char*)(obj_image?env->GetDirectBufferAddress(obj_image):0);


//@line:16203

		ext_glGetnConvolutionFilterARB((GLenum)target, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)(image + imageByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnConvolutionFilterARB__IIIIJ(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jint bufSize, jlong image) {


//@line:16207

		ext_glGetnConvolutionFilterARB((GLenum)target, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)image);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnSeparableFilterARB__IIIILjava_nio_Buffer_2IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jint rowBufSize, jobject obj_row, jint rowByteOffset, jint columnBufSize, jobject obj_column, jint columnByteOffset, jobject obj_span, jint spanByteOffset) {
	unsigned char* row = (unsigned char*)(obj_row?env->GetDirectBufferAddress(obj_row):0);
	unsigned char* column = (unsigned char*)(obj_column?env->GetDirectBufferAddress(obj_column):0);
	unsigned char* span = (unsigned char*)(obj_span?env->GetDirectBufferAddress(obj_span):0);


//@line:16211

		ext_glGetnSeparableFilterARB((GLenum)target, (GLenum)format, (GLenum)type, (GLsizei)rowBufSize, (GLvoid*)(row + rowByteOffset), (GLsizei)columnBufSize, (GLvoid*)(column + columnByteOffset), (GLvoid*)(span + spanByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnSeparableFilterARB__IIIIJIJJ(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jint rowBufSize, jlong row, jint columnBufSize, jlong column, jlong span) {


//@line:16215

		ext_glGetnSeparableFilterARB((GLenum)target, (GLenum)format, (GLenum)type, (GLsizei)rowBufSize, (GLvoid*)row, (GLsizei)columnBufSize, (GLvoid*)column, (GLvoid*)span);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnHistogramARB__IZIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jint bufSize, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:16219

		ext_glGetnHistogramARB((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnHistogramARB__IZIIIJ(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jint bufSize, jlong values) {


//@line:16223

		ext_glGetnHistogramARB((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnMinmaxARB__IZIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jint bufSize, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:16227

		ext_glGetnMinmaxARB((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnMinmaxARB__IZIIIJ(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jint bufSize, jlong values) {


//@line:16231

		ext_glGetnMinmaxARB((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnTexImageARB__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint format, jint type, jint bufSize, jobject obj_img, jint imgByteOffset) {
	unsigned char* img = (unsigned char*)(obj_img?env->GetDirectBufferAddress(obj_img):0);


//@line:16235

		ext_glGetnTexImageARB((GLenum)target, (GLint)level, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)(img + imgByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnTexImageARB__IIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint format, jint type, jint bufSize, jlong img) {


//@line:16239

		ext_glGetnTexImageARB((GLenum)target, (GLint)level, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)img);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReadnPixelsARB__IIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint x, jint y, jint width, jint height, jint format, jint type, jint bufSize, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:16243

		ext_glReadnPixelsARB((GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReadnPixelsARB__IIIIIIIJ(JNIEnv* env, jclass clazz, jint x, jint y, jint width, jint height, jint format, jint type, jint bufSize, jlong data) {


//@line:16247

		ext_glReadnPixelsARB((GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (GLsizei)bufSize, (GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnCompressedTexImageARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint lod, jint bufSize, jobject obj_img, jint imgByteOffset) {
	unsigned char* img = (unsigned char*)(obj_img?env->GetDirectBufferAddress(obj_img):0);


//@line:16251

		ext_glGetnCompressedTexImageARB((GLenum)target, (GLint)lod, (GLsizei)bufSize, (GLvoid*)(img + imgByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnCompressedTexImageARB__IIIJ(JNIEnv* env, jclass clazz, jint target, jint lod, jint bufSize, jlong img) {


//@line:16255

		ext_glGetnCompressedTexImageARB((GLenum)target, (GLint)lod, (GLsizei)bufSize, (GLvoid*)img);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnUniformfvARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint bufSize, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16259

		ext_glGetnUniformfvARB((GLuint)program, (GLint)location, (GLsizei)bufSize, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnUniformfvARB__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint bufSize, jlong params) {


//@line:16263

		ext_glGetnUniformfvARB((GLuint)program, (GLint)location, (GLsizei)bufSize, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnUniformivARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint bufSize, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16267

		ext_glGetnUniformivARB((GLuint)program, (GLint)location, (GLsizei)bufSize, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnUniformivARB__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint bufSize, jlong params) {


//@line:16271

		ext_glGetnUniformivARB((GLuint)program, (GLint)location, (GLsizei)bufSize, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnUniformuivARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint bufSize, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16275

		ext_glGetnUniformuivARB((GLuint)program, (GLint)location, (GLsizei)bufSize, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnUniformuivARB__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint bufSize, jlong params) {


//@line:16279

		ext_glGetnUniformuivARB((GLuint)program, (GLint)location, (GLsizei)bufSize, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnUniformdvARB__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint bufSize, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16283

		ext_glGetnUniformdvARB((GLuint)program, (GLint)location, (GLsizei)bufSize, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetnUniformdvARB__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint bufSize, jlong params) {


//@line:16287

		ext_glGetnUniformdvARB((GLuint)program, (GLint)location, (GLsizei)bufSize, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawArraysInstancedBaseInstance(JNIEnv* env, jclass clazz, jint mode, jint first, jint count, jint instancecount, jint baseinstance) {


//@line:16291

		ext_glDrawArraysInstancedBaseInstance((GLenum)mode, (GLint)first, (GLsizei)count, (GLsizei)instancecount, (GLuint)baseinstance);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstancedBaseInstance__IIILjava_nio_Buffer_2III(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jobject obj_indices, jint indicesByteOffset, jint instancecount, jint baseinstance) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:16295

		ext_glDrawElementsInstancedBaseInstance((GLenum)mode, (GLsizei)count, (GLenum)type, (const void*)(indices + indicesByteOffset), (GLsizei)instancecount, (GLuint)baseinstance);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstancedBaseInstance__IIIJII(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jlong indices, jint instancecount, jint baseinstance) {


//@line:16299

		ext_glDrawElementsInstancedBaseInstance((GLenum)mode, (GLsizei)count, (GLenum)type, (const void*)indices, (GLsizei)instancecount, (GLuint)baseinstance);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstancedBaseVertexBaseInstance__IIILjava_nio_Buffer_2IIII(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jobject obj_indices, jint indicesByteOffset, jint instancecount, jint basevertex, jint baseinstance) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:16303

		ext_glDrawElementsInstancedBaseVertexBaseInstance((GLenum)mode, (GLsizei)count, (GLenum)type, (const void*)(indices + indicesByteOffset), (GLsizei)instancecount, (GLint)basevertex, (GLuint)baseinstance);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstancedBaseVertexBaseInstance__IIIJIII(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jlong indices, jint instancecount, jint basevertex, jint baseinstance) {


//@line:16307

		ext_glDrawElementsInstancedBaseVertexBaseInstance((GLenum)mode, (GLsizei)count, (GLenum)type, (const void*)indices, (GLsizei)instancecount, (GLint)basevertex, (GLuint)baseinstance);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawTransformFeedbackInstanced(JNIEnv* env, jclass clazz, jint mode, jint id, jint instancecount) {


//@line:16311

		ext_glDrawTransformFeedbackInstanced((GLenum)mode, (GLuint)id, (GLsizei)instancecount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawTransformFeedbackStreamInstanced(JNIEnv* env, jclass clazz, jint mode, jint id, jint stream, jint instancecount) {


//@line:16315

		ext_glDrawTransformFeedbackStreamInstanced((GLenum)mode, (GLuint)id, (GLuint)stream, (GLsizei)instancecount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInternalformativ__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint pname, jint bufSize, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16319

		ext_glGetInternalformativ((GLenum)target, (GLenum)internalformat, (GLenum)pname, (GLsizei)bufSize, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInternalformativ__IIIIJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint pname, jint bufSize, jlong params) {


//@line:16323

		ext_glGetInternalformativ((GLenum)target, (GLenum)internalformat, (GLenum)pname, (GLsizei)bufSize, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveAtomicCounterBufferiv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint bufferIndex, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16327

		ext_glGetActiveAtomicCounterBufferiv((GLuint)program, (GLuint)bufferIndex, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveAtomicCounterBufferiv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint bufferIndex, jint pname, jlong params) {


//@line:16331

		ext_glGetActiveAtomicCounterBufferiv((GLuint)program, (GLuint)bufferIndex, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindImageTexture(JNIEnv* env, jclass clazz, jint unit, jint texture, jint level, jboolean layered, jint layer, jint access, jint format) {


//@line:16335

		ext_glBindImageTexture((GLuint)unit, (GLuint)texture, (GLint)level, (GLboolean)layered, (GLint)layer, (GLenum)access, (GLenum)format);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMemoryBarrier(JNIEnv* env, jclass clazz, jint barriers) {


//@line:16339

		ext_glMemoryBarrier((GLbitfield)barriers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexStorage1D(JNIEnv* env, jclass clazz, jint target, jint levels, jint internalformat, jint width) {


//@line:16343

		ext_glTexStorage1D((GLenum)target, (GLsizei)levels, (GLenum)internalformat, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexStorage2D(JNIEnv* env, jclass clazz, jint target, jint levels, jint internalformat, jint width, jint height) {


//@line:16347

		ext_glTexStorage2D((GLenum)target, (GLsizei)levels, (GLenum)internalformat, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexStorage3D(JNIEnv* env, jclass clazz, jint target, jint levels, jint internalformat, jint width, jint height, jint depth) {


//@line:16351

		ext_glTexStorage3D((GLenum)target, (GLsizei)levels, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureStorage1DEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint levels, jint internalformat, jint width) {


//@line:16355

		ext_glTextureStorage1DEXT((GLuint)texture, (GLenum)target, (GLsizei)levels, (GLenum)internalformat, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureStorage2DEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint levels, jint internalformat, jint width, jint height) {


//@line:16359

		ext_glTextureStorage2DEXT((GLuint)texture, (GLenum)target, (GLsizei)levels, (GLenum)internalformat, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureStorage3DEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint levels, jint internalformat, jint width, jint height, jint depth) {


//@line:16363

		ext_glTextureStorage3DEXT((GLuint)texture, (GLenum)target, (GLsizei)levels, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLog__IILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint count, jint bufsize, jobject obj_sources, jint sourcesByteOffset, jobject obj_types, jint typesByteOffset, jobject obj_ids, jint idsByteOffset, jobject obj_severities, jint severitiesByteOffset, jobject obj_lengths, jint lengthsByteOffset, jobject obj_messageLog, jint messageLogByteOffset, unsigned char* sources, unsigned char* types, unsigned char* ids, unsigned char* severities, unsigned char* lengths, unsigned char* messageLog) {

//@line:16367

		return (jint)ext_glGetDebugMessageLog((GLuint)count, (GLsizei)bufsize, (GLenum*)(sources + sourcesByteOffset), (GLenum*)(types + typesByteOffset), (GLuint*)(ids + idsByteOffset), (GLenum*)(severities + severitiesByteOffset), (GLsizei*)(lengths + lengthsByteOffset), (GLchar*)(messageLog + messageLogByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLog__IILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint count, jint bufsize, jobject obj_sources, jint sourcesByteOffset, jobject obj_types, jint typesByteOffset, jobject obj_ids, jint idsByteOffset, jobject obj_severities, jint severitiesByteOffset, jobject obj_lengths, jint lengthsByteOffset, jobject obj_messageLog, jint messageLogByteOffset) {
	unsigned char* sources = (unsigned char*)(obj_sources?env->GetDirectBufferAddress(obj_sources):0);
	unsigned char* types = (unsigned char*)(obj_types?env->GetDirectBufferAddress(obj_types):0);
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);
	unsigned char* severities = (unsigned char*)(obj_severities?env->GetDirectBufferAddress(obj_severities):0);
	unsigned char* lengths = (unsigned char*)(obj_lengths?env->GetDirectBufferAddress(obj_lengths):0);
	unsigned char* messageLog = (unsigned char*)(obj_messageLog?env->GetDirectBufferAddress(obj_messageLog):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLog__IILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(env, clazz, count, bufsize, obj_sources, sourcesByteOffset, obj_types, typesByteOffset, obj_ids, idsByteOffset, obj_severities, severitiesByteOffset, obj_lengths, lengthsByteOffset, obj_messageLog, messageLogByteOffset, sources, types, ids, severities, lengths, messageLog);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLog__IIJJJJJJ(JNIEnv* env, jclass clazz, jint count, jint bufsize, jlong sources, jlong types, jlong ids, jlong severities, jlong lengths, jlong messageLog) {


//@line:16371

		return (jint)ext_glGetDebugMessageLog((GLuint)count, (GLsizei)bufsize, (GLenum*)sources, (GLenum*)types, (GLuint*)ids, (GLenum*)severities, (GLsizei*)lengths, (GLchar*)messageLog);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPushDebugGroup__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint source, jint id, jint length, jobject obj_message, jint messageByteOffset) {
	unsigned char* message = (unsigned char*)(obj_message?env->GetDirectBufferAddress(obj_message):0);


//@line:16375

		ext_glPushDebugGroup((GLenum)source, (GLuint)id, (GLsizei)length, (const GLchar*)(message + messageByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPushDebugGroup__IIIJ(JNIEnv* env, jclass clazz, jint source, jint id, jint length, jlong message) {


//@line:16379

		ext_glPushDebugGroup((GLenum)source, (GLuint)id, (GLsizei)length, (const GLchar*)message);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPopDebugGroup(JNIEnv* env, jclass clazz) {


//@line:16383

		ext_glPopDebugGroup();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glObjectLabel__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint identifier, jint name, jint length, jobject obj_label, jint labelByteOffset) {
	unsigned char* label = (unsigned char*)(obj_label?env->GetDirectBufferAddress(obj_label):0);


//@line:16387

		ext_glObjectLabel((GLenum)identifier, (GLuint)name, (GLsizei)length, (const GLchar*)(label + labelByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glObjectLabel__IIIJ(JNIEnv* env, jclass clazz, jint identifier, jint name, jint length, jlong label) {


//@line:16391

		ext_glObjectLabel((GLenum)identifier, (GLuint)name, (GLsizei)length, (const GLchar*)label);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectLabel__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint identifier, jint name, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_label, jint labelByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* label = (unsigned char*)(obj_label?env->GetDirectBufferAddress(obj_label):0);


//@line:16395

		ext_glGetObjectLabel((GLenum)identifier, (GLuint)name, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(label + labelByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectLabel__IIIJJ(JNIEnv* env, jclass clazz, jint identifier, jint name, jint bufSize, jlong length, jlong label) {


//@line:16399

		ext_glGetObjectLabel((GLenum)identifier, (GLuint)name, (GLsizei)bufSize, (GLsizei*)length, (GLchar*)label);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glObjectPtrLabel__Ljava_nio_Buffer_2IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_ptr, jint ptrByteOffset, jint length, jobject obj_label, jint labelByteOffset) {
	unsigned char* ptr = (unsigned char*)(obj_ptr?env->GetDirectBufferAddress(obj_ptr):0);
	unsigned char* label = (unsigned char*)(obj_label?env->GetDirectBufferAddress(obj_label):0);


//@line:16403

		ext_glObjectPtrLabel((const void*)(ptr + ptrByteOffset), (GLsizei)length, (const GLchar*)(label + labelByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glObjectPtrLabel__JIJ(JNIEnv* env, jclass clazz, jlong ptr, jint length, jlong label) {


//@line:16407

		ext_glObjectPtrLabel((const void*)ptr, (GLsizei)length, (const GLchar*)label);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectPtrLabel__Ljava_nio_Buffer_2IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_ptr, jint ptrByteOffset, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_label, jint labelByteOffset) {
	unsigned char* ptr = (unsigned char*)(obj_ptr?env->GetDirectBufferAddress(obj_ptr):0);
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* label = (unsigned char*)(obj_label?env->GetDirectBufferAddress(obj_label):0);


//@line:16411

		ext_glGetObjectPtrLabel((const void*)(ptr + ptrByteOffset), (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(label + labelByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectPtrLabel__JIJJ(JNIEnv* env, jclass clazz, jlong ptr, jint bufSize, jlong length, jlong label) {


//@line:16415

		ext_glGetObjectPtrLabel((const void*)ptr, (GLsizei)bufSize, (GLsizei*)length, (GLchar*)label);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferData__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint format, jint type, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:16419

		ext_glClearBufferData((GLenum)target, (GLenum)internalformat, (GLenum)format, (GLenum)type, (const void*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferData__IIIIJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint format, jint type, jlong data) {


//@line:16423

		ext_glClearBufferData((GLenum)target, (GLenum)internalformat, (GLenum)format, (GLenum)type, (const void*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferSubData__IIJJIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jlong offset, jlong size, jint format, jint type, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:16427

		ext_glClearBufferSubData((GLenum)target, (GLenum)internalformat, (GLintptr)offset, (GLsizeiptr)size, (GLenum)format, (GLenum)type, (const void*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearBufferSubData__IIJJIIJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jlong offset, jlong size, jint format, jint type, jlong data) {


//@line:16431

		ext_glClearBufferSubData((GLenum)target, (GLenum)internalformat, (GLintptr)offset, (GLsizeiptr)size, (GLenum)format, (GLenum)type, (const void*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearNamedBufferDataEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jint internalformat, jint format, jint type, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:16435

		ext_glClearNamedBufferDataEXT((GLuint)buffer, (GLenum)internalformat, (GLenum)format, (GLenum)type, (const void*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearNamedBufferDataEXT__IIIIJ(JNIEnv* env, jclass clazz, jint buffer, jint internalformat, jint format, jint type, jlong data) {


//@line:16439

		ext_glClearNamedBufferDataEXT((GLuint)buffer, (GLenum)internalformat, (GLenum)format, (GLenum)type, (const void*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearNamedBufferSubDataEXT__IIIIJJLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jint internalformat, jint format, jint type, jlong offset, jlong size, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:16443

		ext_glClearNamedBufferSubDataEXT((GLuint)buffer, (GLenum)internalformat, (GLenum)format, (GLenum)type, (GLsizeiptr)offset, (GLsizeiptr)size, (const void*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearNamedBufferSubDataEXT__IIIIJJJ(JNIEnv* env, jclass clazz, jint buffer, jint internalformat, jint format, jint type, jlong offset, jlong size, jlong data) {


//@line:16447

		ext_glClearNamedBufferSubDataEXT((GLuint)buffer, (GLenum)internalformat, (GLenum)format, (GLenum)type, (GLsizeiptr)offset, (GLsizeiptr)size, (const void*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDispatchCompute(JNIEnv* env, jclass clazz, jint num_groups_x, jint num_groups_y, jint num_groups_z) {


//@line:16451

		ext_glDispatchCompute((GLuint)num_groups_x, (GLuint)num_groups_y, (GLuint)num_groups_z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDispatchComputeIndirect(JNIEnv* env, jclass clazz, jlong indirect) {


//@line:16455

		ext_glDispatchComputeIndirect((GLintptr)indirect);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyImageSubData(JNIEnv* env, jclass clazz, jint srcName, jint srcTarget, jint srcLevel, jint srcX, jint srcY, jint srcZ, jint dstName, jint dstTarget, jint dstLevel, jint dstX, jint dstY, jint dstZ, jint srcWidth, jint srcHeight, jint srcDepth) {


//@line:16459

		ext_glCopyImageSubData((GLuint)srcName, (GLenum)srcTarget, (GLint)srcLevel, (GLint)srcX, (GLint)srcY, (GLint)srcZ, (GLuint)dstName, (GLenum)dstTarget, (GLint)dstLevel, (GLint)dstX, (GLint)dstY, (GLint)dstZ, (GLsizei)srcWidth, (GLsizei)srcHeight, (GLsizei)srcDepth);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureView(JNIEnv* env, jclass clazz, jint texture, jint target, jint origtexture, jint internalformat, jint minlevel, jint numlevels, jint minlayer, jint numlayers) {


//@line:16463

		ext_glTextureView((GLuint)texture, (GLenum)target, (GLuint)origtexture, (GLenum)internalformat, (GLuint)minlevel, (GLuint)numlevels, (GLuint)minlayer, (GLuint)numlayers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindVertexBuffer(JNIEnv* env, jclass clazz, jint bindingindex, jint buffer, jlong offset, jint stride) {


//@line:16467

		ext_glBindVertexBuffer((GLuint)bindingindex, (GLuint)buffer, (GLintptr)offset, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribFormat(JNIEnv* env, jclass clazz, jint attribindex, jint size, jint type, jboolean normalized, jint relativeoffset) {


//@line:16471

		ext_glVertexAttribFormat((GLuint)attribindex, (GLint)size, (GLenum)type, (GLboolean)normalized, (GLuint)relativeoffset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribIFormat(JNIEnv* env, jclass clazz, jint attribindex, jint size, jint type, jint relativeoffset) {


//@line:16475

		ext_glVertexAttribIFormat((GLuint)attribindex, (GLint)size, (GLenum)type, (GLuint)relativeoffset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribLFormat(JNIEnv* env, jclass clazz, jint attribindex, jint size, jint type, jint relativeoffset) {


//@line:16479

		ext_glVertexAttribLFormat((GLuint)attribindex, (GLint)size, (GLenum)type, (GLuint)relativeoffset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribBinding(JNIEnv* env, jclass clazz, jint attribindex, jint bindingindex) {


//@line:16483

		ext_glVertexAttribBinding((GLuint)attribindex, (GLuint)bindingindex);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexBindingDivisor(JNIEnv* env, jclass clazz, jint bindingindex, jint divisor) {


//@line:16487

		ext_glVertexBindingDivisor((GLuint)bindingindex, (GLuint)divisor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayBindVertexBufferEXT(JNIEnv* env, jclass clazz, jint vaobj, jint bindingindex, jint buffer, jlong offset, jint stride) {


//@line:16491

		ext_glVertexArrayBindVertexBufferEXT((GLuint)vaobj, (GLuint)bindingindex, (GLuint)buffer, (GLintptr)offset, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayVertexAttribFormatEXT(JNIEnv* env, jclass clazz, jint vaobj, jint attribindex, jint size, jint type, jboolean normalized, jint relativeoffset) {


//@line:16495

		ext_glVertexArrayVertexAttribFormatEXT((GLuint)vaobj, (GLuint)attribindex, (GLint)size, (GLenum)type, (GLboolean)normalized, (GLuint)relativeoffset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayVertexAttribIFormatEXT(JNIEnv* env, jclass clazz, jint vaobj, jint attribindex, jint size, jint type, jint relativeoffset) {


//@line:16499

		ext_glVertexArrayVertexAttribIFormatEXT((GLuint)vaobj, (GLuint)attribindex, (GLint)size, (GLenum)type, (GLuint)relativeoffset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayVertexAttribLFormatEXT(JNIEnv* env, jclass clazz, jint vaobj, jint attribindex, jint size, jint type, jint relativeoffset) {


//@line:16503

		ext_glVertexArrayVertexAttribLFormatEXT((GLuint)vaobj, (GLuint)attribindex, (GLint)size, (GLenum)type, (GLuint)relativeoffset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayVertexAttribBindingEXT(JNIEnv* env, jclass clazz, jint vaobj, jint attribindex, jint bindingindex) {


//@line:16507

		ext_glVertexArrayVertexAttribBindingEXT((GLuint)vaobj, (GLuint)attribindex, (GLuint)bindingindex);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayVertexBindingDivisorEXT(JNIEnv* env, jclass clazz, jint vaobj, jint bindingindex, jint divisor) {


//@line:16511

		ext_glVertexArrayVertexBindingDivisorEXT((GLuint)vaobj, (GLuint)bindingindex, (GLuint)divisor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferParameteri(JNIEnv* env, jclass clazz, jint target, jint pname, jint param) {


//@line:16515

		ext_glFramebufferParameteri((GLenum)target, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFramebufferParameteriv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16519

		ext_glGetFramebufferParameteriv((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFramebufferParameteriv__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16523

		ext_glGetFramebufferParameteriv((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedFramebufferParameteriEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint pname, jint param) {


//@line:16527

		ext_glNamedFramebufferParameteriEXT((GLuint)framebuffer, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedFramebufferParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint framebuffer, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16531

		ext_glGetNamedFramebufferParameterivEXT((GLuint)framebuffer, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedFramebufferParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint framebuffer, jint pname, jlong params) {


//@line:16535

		ext_glGetNamedFramebufferParameterivEXT((GLuint)framebuffer, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInternalformati64v__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint pname, jint bufSize, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16539

		ext_glGetInternalformati64v((GLenum)target, (GLenum)internalformat, (GLenum)pname, (GLsizei)bufSize, (GLint64*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInternalformati64v__IIIIJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint pname, jint bufSize, jlong params) {


//@line:16543

		ext_glGetInternalformati64v((GLenum)target, (GLenum)internalformat, (GLenum)pname, (GLsizei)bufSize, (GLint64*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInvalidateTexSubImage(JNIEnv* env, jclass clazz, jint texture, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth) {


//@line:16547

		ext_glInvalidateTexSubImage((GLuint)texture, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInvalidateTexImage(JNIEnv* env, jclass clazz, jint texture, jint level) {


//@line:16551

		ext_glInvalidateTexImage((GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInvalidateBufferSubData(JNIEnv* env, jclass clazz, jint buffer, jlong offset, jlong length) {


//@line:16555

		ext_glInvalidateBufferSubData((GLuint)buffer, (GLintptr)offset, (GLsizeiptr)length);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInvalidateBufferData(JNIEnv* env, jclass clazz, jint buffer) {


//@line:16559

		ext_glInvalidateBufferData((GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInvalidateFramebuffer__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint numAttachments, jobject obj_attachments, jint attachmentsByteOffset) {
	unsigned char* attachments = (unsigned char*)(obj_attachments?env->GetDirectBufferAddress(obj_attachments):0);


//@line:16563

		ext_glInvalidateFramebuffer((GLenum)target, (GLsizei)numAttachments, (const GLenum*)(attachments + attachmentsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInvalidateFramebuffer__IIJ(JNIEnv* env, jclass clazz, jint target, jint numAttachments, jlong attachments) {


//@line:16567

		ext_glInvalidateFramebuffer((GLenum)target, (GLsizei)numAttachments, (const GLenum*)attachments);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInvalidateSubFramebuffer__IILjava_nio_Buffer_2IIIII(JNIEnv* env, jclass clazz, jint target, jint numAttachments, jobject obj_attachments, jint attachmentsByteOffset, jint x, jint y, jint width, jint height) {
	unsigned char* attachments = (unsigned char*)(obj_attachments?env->GetDirectBufferAddress(obj_attachments):0);


//@line:16571

		ext_glInvalidateSubFramebuffer((GLenum)target, (GLsizei)numAttachments, (const GLenum*)(attachments + attachmentsByteOffset), (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInvalidateSubFramebuffer__IIJIIII(JNIEnv* env, jclass clazz, jint target, jint numAttachments, jlong attachments, jint x, jint y, jint width, jint height) {


//@line:16575

		ext_glInvalidateSubFramebuffer((GLenum)target, (GLsizei)numAttachments, (const GLenum*)attachments, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawArraysIndirect__ILjava_nio_Buffer_2III(JNIEnv* env, jclass clazz, jint mode, jobject obj_indirect, jint indirectByteOffset, jint drawcount, jint stride) {
	unsigned char* indirect = (unsigned char*)(obj_indirect?env->GetDirectBufferAddress(obj_indirect):0);


//@line:16579

		ext_glMultiDrawArraysIndirect((GLenum)mode, (const void*)(indirect + indirectByteOffset), (GLsizei)drawcount, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawArraysIndirect__IJII(JNIEnv* env, jclass clazz, jint mode, jlong indirect, jint drawcount, jint stride) {


//@line:16583

		ext_glMultiDrawArraysIndirect((GLenum)mode, (const void*)indirect, (GLsizei)drawcount, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElementsIndirect__IILjava_nio_Buffer_2III(JNIEnv* env, jclass clazz, jint mode, jint type, jobject obj_indirect, jint indirectByteOffset, jint drawcount, jint stride) {
	unsigned char* indirect = (unsigned char*)(obj_indirect?env->GetDirectBufferAddress(obj_indirect):0);


//@line:16587

		ext_glMultiDrawElementsIndirect((GLenum)mode, (GLenum)type, (const void*)(indirect + indirectByteOffset), (GLsizei)drawcount, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElementsIndirect__IIJII(JNIEnv* env, jclass clazz, jint mode, jint type, jlong indirect, jint drawcount, jint stride) {


//@line:16591

		ext_glMultiDrawElementsIndirect((GLenum)mode, (GLenum)type, (const void*)indirect, (GLsizei)drawcount, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramInterfaceiv__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint programInterface, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16595

		ext_glGetProgramInterfaceiv((GLuint)program, (GLenum)programInterface, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramInterfaceiv__IIIJ(JNIEnv* env, jclass clazz, jint program, jint programInterface, jint pname, jlong params) {


//@line:16599

		ext_glGetProgramInterfaceiv((GLuint)program, (GLenum)programInterface, (GLenum)pname, (GLint*)params);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceIndex__IILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint program, jint programInterface, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:16603

		return (jint)ext_glGetProgramResourceIndex((GLuint)program, (GLenum)programInterface, (const GLchar*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceIndex__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint programInterface, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceIndex__IILjava_nio_Buffer_2I(env, clazz, program, programInterface, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceIndex__IIJ(JNIEnv* env, jclass clazz, jint program, jint programInterface, jlong name) {


//@line:16607

		return (jint)ext_glGetProgramResourceIndex((GLuint)program, (GLenum)programInterface, (const GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceName__IIIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint programInterface, jint index, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_name, jint nameByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:16611

		ext_glGetProgramResourceName((GLuint)program, (GLenum)programInterface, (GLuint)index, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceName__IIIIJJ(JNIEnv* env, jclass clazz, jint program, jint programInterface, jint index, jint bufSize, jlong length, jlong name) {


//@line:16615

		ext_glGetProgramResourceName((GLuint)program, (GLenum)programInterface, (GLuint)index, (GLsizei)bufSize, (GLsizei*)length, (GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceiv__IIIILjava_nio_Buffer_2IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint programInterface, jint index, jint propCount, jobject obj_props, jint propsByteOffset, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_params, jint paramsByteOffset) {
	unsigned char* props = (unsigned char*)(obj_props?env->GetDirectBufferAddress(obj_props):0);
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16619

		ext_glGetProgramResourceiv((GLuint)program, (GLenum)programInterface, (GLuint)index, (GLsizei)propCount, (const GLenum*)(props + propsByteOffset), (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceiv__IIIIJIJJ(JNIEnv* env, jclass clazz, jint program, jint programInterface, jint index, jint propCount, jlong props, jint bufSize, jlong length, jlong params) {


//@line:16623

		ext_glGetProgramResourceiv((GLuint)program, (GLenum)programInterface, (GLuint)index, (GLsizei)propCount, (const GLenum*)props, (GLsizei)bufSize, (GLsizei*)length, (GLint*)params);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceLocation__IILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint program, jint programInterface, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:16627

		return (jint)ext_glGetProgramResourceLocation((GLuint)program, (GLenum)programInterface, (const GLchar*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceLocation__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint programInterface, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceLocation__IILjava_nio_Buffer_2I(env, clazz, program, programInterface, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceLocation__IIJ(JNIEnv* env, jclass clazz, jint program, jint programInterface, jlong name) {


//@line:16631

		return (jint)ext_glGetProgramResourceLocation((GLuint)program, (GLenum)programInterface, (const GLchar*)name);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceLocationIndex__IILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint program, jint programInterface, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:16635

		return (jint)ext_glGetProgramResourceLocationIndex((GLuint)program, (GLenum)programInterface, (const GLchar*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceLocationIndex__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint programInterface, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceLocationIndex__IILjava_nio_Buffer_2I(env, clazz, program, programInterface, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramResourceLocationIndex__IIJ(JNIEnv* env, jclass clazz, jint program, jint programInterface, jlong name) {


//@line:16639

		return (jint)ext_glGetProgramResourceLocationIndex((GLuint)program, (GLenum)programInterface, (const GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glShaderStorageBlockBinding(JNIEnv* env, jclass clazz, jint program, jint storageBlockIndex, jint storageBlockBinding) {


//@line:16643

		ext_glShaderStorageBlockBinding((GLuint)program, (GLuint)storageBlockIndex, (GLuint)storageBlockBinding);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexBufferRange(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint buffer, jlong offset, jlong size) {


//@line:16647

		ext_glTexBufferRange((GLenum)target, (GLenum)internalformat, (GLuint)buffer, (GLintptr)offset, (GLsizeiptr)size);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureBufferRangeEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint internalformat, jint buffer, jlong offset, jlong size) {


//@line:16651

		ext_glTextureBufferRangeEXT((GLuint)texture, (GLenum)target, (GLenum)internalformat, (GLuint)buffer, (GLintptr)offset, (GLsizeiptr)size);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexStorage2DMultisample(JNIEnv* env, jclass clazz, jint target, jint samples, jint internalformat, jint width, jint height, jboolean fixedsamplelocations) {


//@line:16655

		ext_glTexStorage2DMultisample((GLenum)target, (GLsizei)samples, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLboolean)fixedsamplelocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexStorage3DMultisample(JNIEnv* env, jclass clazz, jint target, jint samples, jint internalformat, jint width, jint height, jint depth, jboolean fixedsamplelocations) {


//@line:16659

		ext_glTexStorage3DMultisample((GLenum)target, (GLsizei)samples, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLboolean)fixedsamplelocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureStorage2DMultisampleEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint samples, jint internalformat, jint width, jint height, jboolean fixedsamplelocations) {


//@line:16663

		ext_glTextureStorage2DMultisampleEXT((GLuint)texture, (GLenum)target, (GLsizei)samples, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLboolean)fixedsamplelocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureStorage3DMultisampleEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint samples, jint internalformat, jint width, jint height, jint depth, jboolean fixedsamplelocations) {


//@line:16667

		ext_glTextureStorage3DMultisampleEXT((GLuint)texture, (GLenum)target, (GLsizei)samples, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLboolean)fixedsamplelocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendColorEXT(JNIEnv* env, jclass clazz, jfloat red, jfloat green, jfloat blue, jfloat alpha) {


//@line:16671

		ext_glBlendColorEXT((GLfloat)red, (GLfloat)green, (GLfloat)blue, (GLfloat)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPolygonOffsetEXT(JNIEnv* env, jclass clazz, jfloat factor, jfloat bias) {


//@line:16675

		ext_glPolygonOffsetEXT((GLfloat)factor, (GLfloat)bias);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage3DEXT__IIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:16679

		ext_glTexImage3DEXT((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage3DEXT__IIIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint format, jint type, jlong pixels) {


//@line:16683

		ext_glTexImage3DEXT((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage3DEXT__IIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:16687

		ext_glTexSubImage3DEXT((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage3DEXT__IIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint type, jlong pixels) {


//@line:16691

		ext_glTexSubImage3DEXT((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexFilterFuncSGIS__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint filter, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:16695

		ext_glGetTexFilterFuncSGIS((GLenum)target, (GLenum)filter, (GLfloat*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexFilterFuncSGIS__IIJ(JNIEnv* env, jclass clazz, jint target, jint filter, jlong weights) {


//@line:16699

		ext_glGetTexFilterFuncSGIS((GLenum)target, (GLenum)filter, (GLfloat*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexFilterFuncSGIS__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint filter, jint n, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:16703

		ext_glTexFilterFuncSGIS((GLenum)target, (GLenum)filter, (GLsizei)n, (const GLfloat*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexFilterFuncSGIS__IIIJ(JNIEnv* env, jclass clazz, jint target, jint filter, jint n, jlong weights) {


//@line:16707

		ext_glTexFilterFuncSGIS((GLenum)target, (GLenum)filter, (GLsizei)n, (const GLfloat*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage1DEXT__IIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint width, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:16711

		ext_glTexSubImage1DEXT((GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage1DEXT__IIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint width, jint format, jint type, jlong pixels) {


//@line:16715

		ext_glTexSubImage1DEXT((GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage2DEXT__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:16719

		ext_glTexSubImage2DEXT((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage2DEXT__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jlong pixels) {


//@line:16723

		ext_glTexSubImage2DEXT((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTexImage1DEXT(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint x, jint y, jint width, jint border) {


//@line:16727

		ext_glCopyTexImage1DEXT((GLenum)target, (GLint)level, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width, (GLint)border);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTexImage2DEXT(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint x, jint y, jint width, jint height, jint border) {


//@line:16731

		ext_glCopyTexImage2DEXT((GLenum)target, (GLint)level, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height, (GLint)border);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTexSubImage1DEXT(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint x, jint y, jint width) {


//@line:16735

		ext_glCopyTexSubImage1DEXT((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)x, (GLint)y, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTexSubImage2DEXT(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint x, jint y, jint width, jint height) {


//@line:16739

		ext_glCopyTexSubImage2DEXT((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTexSubImage3DEXT(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint x, jint y, jint width, jint height) {


//@line:16743

		ext_glCopyTexSubImage3DEXT((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramEXT__IZIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:16747

		ext_glGetHistogramEXT((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLvoid*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramEXT__IZIIJ(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jlong values) {


//@line:16751

		ext_glGetHistogramEXT((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLvoid*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramParameterfvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16755

		ext_glGetHistogramParameterfvEXT((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramParameterfvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16759

		ext_glGetHistogramParameterfvEXT((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16763

		ext_glGetHistogramParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16767

		ext_glGetHistogramParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmaxEXT__IZIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:16771

		ext_glGetMinmaxEXT((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLvoid*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmaxEXT__IZIIJ(JNIEnv* env, jclass clazz, jint target, jboolean reset, jint format, jint type, jlong values) {


//@line:16775

		ext_glGetMinmaxEXT((GLenum)target, (GLboolean)reset, (GLenum)format, (GLenum)type, (GLvoid*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmaxParameterfvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16779

		ext_glGetMinmaxParameterfvEXT((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmaxParameterfvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16783

		ext_glGetMinmaxParameterfvEXT((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmaxParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16787

		ext_glGetMinmaxParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMinmaxParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16791

		ext_glGetMinmaxParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glHistogramEXT(JNIEnv* env, jclass clazz, jint target, jint width, jint internalformat, jboolean sink) {


//@line:16795

		ext_glHistogramEXT((GLenum)target, (GLsizei)width, (GLenum)internalformat, (GLboolean)sink);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMinmaxEXT(JNIEnv* env, jclass clazz, jint target, jint internalformat, jboolean sink) {


//@line:16799

		ext_glMinmaxEXT((GLenum)target, (GLenum)internalformat, (GLboolean)sink);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glResetHistogramEXT(JNIEnv* env, jclass clazz, jint target) {


//@line:16803

		ext_glResetHistogramEXT((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glResetMinmaxEXT(JNIEnv* env, jclass clazz, jint target) {


//@line:16807

		ext_glResetMinmaxEXT((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionFilter1DEXT__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint format, jint type, jobject obj_image, jint imageByteOffset) {
	unsigned char* image = (unsigned char*)(obj_image?env->GetDirectBufferAddress(obj_image):0);


//@line:16811

		ext_glConvolutionFilter1DEXT((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)(image + imageByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionFilter1DEXT__IIIIIJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint format, jint type, jlong image) {


//@line:16815

		ext_glConvolutionFilter1DEXT((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)image);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionFilter2DEXT__IIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint height, jint format, jint type, jobject obj_image, jint imageByteOffset) {
	unsigned char* image = (unsigned char*)(obj_image?env->GetDirectBufferAddress(obj_image):0);


//@line:16819

		ext_glConvolutionFilter2DEXT((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)(image + imageByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionFilter2DEXT__IIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint height, jint format, jint type, jlong image) {


//@line:16823

		ext_glConvolutionFilter2DEXT((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)image);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterfEXT(JNIEnv* env, jclass clazz, jint target, jint pname, jfloat params) {


//@line:16827

		ext_glConvolutionParameterfEXT((GLenum)target, (GLenum)pname, (GLfloat)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterfvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16831

		ext_glConvolutionParameterfvEXT((GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterfvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16835

		ext_glConvolutionParameterfvEXT((GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameteriEXT(JNIEnv* env, jclass clazz, jint target, jint pname, jint params) {


//@line:16839

		ext_glConvolutionParameteriEXT((GLenum)target, (GLenum)pname, (GLint)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16843

		ext_glConvolutionParameterivEXT((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16847

		ext_glConvolutionParameterivEXT((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyConvolutionFilter1DEXT(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint x, jint y, jint width) {


//@line:16851

		ext_glCopyConvolutionFilter1DEXT((GLenum)target, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyConvolutionFilter2DEXT(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint x, jint y, jint width, jint height) {


//@line:16855

		ext_glCopyConvolutionFilter2DEXT((GLenum)target, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionFilterEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jobject obj_image, jint imageByteOffset) {
	unsigned char* image = (unsigned char*)(obj_image?env->GetDirectBufferAddress(obj_image):0);


//@line:16859

		ext_glGetConvolutionFilterEXT((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)(image + imageByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionFilterEXT__IIIJ(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jlong image) {


//@line:16863

		ext_glGetConvolutionFilterEXT((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)image);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionParameterfvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16867

		ext_glGetConvolutionParameterfvEXT((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionParameterfvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16871

		ext_glGetConvolutionParameterfvEXT((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16875

		ext_glGetConvolutionParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16879

		ext_glGetConvolutionParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSeparableFilterEXT__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jobject obj_row, jint rowByteOffset, jobject obj_column, jint columnByteOffset, jobject obj_span, jint spanByteOffset) {
	unsigned char* row = (unsigned char*)(obj_row?env->GetDirectBufferAddress(obj_row):0);
	unsigned char* column = (unsigned char*)(obj_column?env->GetDirectBufferAddress(obj_column):0);
	unsigned char* span = (unsigned char*)(obj_span?env->GetDirectBufferAddress(obj_span):0);


//@line:16883

		ext_glGetSeparableFilterEXT((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)(row + rowByteOffset), (GLvoid*)(column + columnByteOffset), (GLvoid*)(span + spanByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSeparableFilterEXT__IIIJJJ(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jlong row, jlong column, jlong span) {


//@line:16887

		ext_glGetSeparableFilterEXT((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)row, (GLvoid*)column, (GLvoid*)span);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSeparableFilter2DEXT__IIIIIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint height, jint format, jint type, jobject obj_row, jint rowByteOffset, jobject obj_column, jint columnByteOffset) {
	unsigned char* row = (unsigned char*)(obj_row?env->GetDirectBufferAddress(obj_row):0);
	unsigned char* column = (unsigned char*)(obj_column?env->GetDirectBufferAddress(obj_column):0);


//@line:16891

		ext_glSeparableFilter2DEXT((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)(row + rowByteOffset), (const GLvoid*)(column + columnByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSeparableFilter2DEXT__IIIIIIJJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint height, jint format, jint type, jlong row, jlong column) {


//@line:16895

		ext_glSeparableFilter2DEXT((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)row, (const GLvoid*)column);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableSGI__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint format, jint type, jobject obj_table, jint tableByteOffset) {
	unsigned char* table = (unsigned char*)(obj_table?env->GetDirectBufferAddress(obj_table):0);


//@line:16899

		ext_glColorTableSGI((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)(table + tableByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableSGI__IIIIIJ(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint format, jint type, jlong table) {


//@line:16903

		ext_glColorTableSGI((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)table);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableParameterfvSGI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16907

		ext_glColorTableParameterfvSGI((GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableParameterfvSGI__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16911

		ext_glColorTableParameterfvSGI((GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableParameterivSGI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16915

		ext_glColorTableParameterivSGI((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableParameterivSGI__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16919

		ext_glColorTableParameterivSGI((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyColorTableSGI(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint x, jint y, jint width) {


//@line:16923

		ext_glCopyColorTableSGI((GLenum)target, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableSGI__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jobject obj_table, jint tableByteOffset) {
	unsigned char* table = (unsigned char*)(obj_table?env->GetDirectBufferAddress(obj_table):0);


//@line:16927

		ext_glGetColorTableSGI((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)(table + tableByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableSGI__IIIJ(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jlong table) {


//@line:16931

		ext_glGetColorTableSGI((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)table);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameterfvSGI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16935

		ext_glGetColorTableParameterfvSGI((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameterfvSGI__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16939

		ext_glGetColorTableParameterfvSGI((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameterivSGI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16943

		ext_glGetColorTableParameterivSGI((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameterivSGI__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:16947

		ext_glGetColorTableParameterivSGI((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTexGenSGIX(JNIEnv* env, jclass clazz, jint mode) {


//@line:16951

		ext_glPixelTexGenSGIX((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTexGenParameteriSGIS(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:16955

		ext_glPixelTexGenParameteriSGIS((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTexGenParameterivSGIS__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16959

		ext_glPixelTexGenParameterivSGIS((GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTexGenParameterivSGIS__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:16963

		ext_glPixelTexGenParameterivSGIS((GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTexGenParameterfSGIS(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:16967

		ext_glPixelTexGenParameterfSGIS((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTexGenParameterfvSGIS__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16971

		ext_glPixelTexGenParameterfvSGIS((GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTexGenParameterfvSGIS__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:16975

		ext_glPixelTexGenParameterfvSGIS((GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelTexGenParameterivSGIS__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16979

		ext_glGetPixelTexGenParameterivSGIS((GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelTexGenParameterivSGIS__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:16983

		ext_glGetPixelTexGenParameterivSGIS((GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelTexGenParameterfvSGIS__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:16987

		ext_glGetPixelTexGenParameterfvSGIS((GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelTexGenParameterfvSGIS__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:16991

		ext_glGetPixelTexGenParameterfvSGIS((GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage4DSGIS__IIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint size4d, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:16995

		ext_glTexImage4DSGIS((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLsizei)size4d, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage4DSGIS__IIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint size4d, jint border, jint format, jint type, jlong pixels) {


//@line:16999

		ext_glTexImage4DSGIS((GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLsizei)size4d, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage4DSGIS__IIIIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint woffset, jint width, jint height, jint depth, jint size4d, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:17003

		ext_glTexSubImage4DSGIS((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLint)woffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLsizei)size4d, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexSubImage4DSGIS__IIIIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint woffset, jint width, jint height, jint depth, jint size4d, jint format, jint type, jlong pixels) {


//@line:17007

		ext_glTexSubImage4DSGIS((GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLint)woffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLsizei)size4d, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

static inline jboolean wrapped_Java_com_badlogic_jglfw_gl_GL_glAreTexturesResidentEXT__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset, jobject obj_residences, jint residencesByteOffset, unsigned char* textures, unsigned char* residences) {

//@line:17011

		return (jboolean)ext_glAreTexturesResidentEXT((GLsizei)n, (const GLuint*)(textures + texturesByteOffset), (GLboolean*)(residences + residencesByteOffset));
	
}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glAreTexturesResidentEXT__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset, jobject obj_residences, jint residencesByteOffset) {
	unsigned char* textures = (unsigned char*)(obj_textures?env->GetDirectBufferAddress(obj_textures):0);
	unsigned char* residences = (unsigned char*)(obj_residences?env->GetDirectBufferAddress(obj_residences):0);

	jboolean JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glAreTexturesResidentEXT__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(env, clazz, n, obj_textures, texturesByteOffset, obj_residences, residencesByteOffset, textures, residences);


	return JNI_returnValue;
}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glAreTexturesResidentEXT__IJJ(JNIEnv* env, jclass clazz, jint n, jlong textures, jlong residences) {


//@line:17015

		return (jboolean)ext_glAreTexturesResidentEXT((GLsizei)n, (const GLuint*)textures, (GLboolean*)residences);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindTextureEXT(JNIEnv* env, jclass clazz, jint target, jint texture) {


//@line:17019

		ext_glBindTextureEXT((GLenum)target, (GLuint)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteTexturesEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset) {
	unsigned char* textures = (unsigned char*)(obj_textures?env->GetDirectBufferAddress(obj_textures):0);


//@line:17023

		ext_glDeleteTexturesEXT((GLsizei)n, (const GLuint*)(textures + texturesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteTexturesEXT__IJ(JNIEnv* env, jclass clazz, jint n, jlong textures) {


//@line:17027

		ext_glDeleteTexturesEXT((GLsizei)n, (const GLuint*)textures);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenTexturesEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset) {
	unsigned char* textures = (unsigned char*)(obj_textures?env->GetDirectBufferAddress(obj_textures):0);


//@line:17031

		ext_glGenTexturesEXT((GLsizei)n, (GLuint*)(textures + texturesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenTexturesEXT__IJ(JNIEnv* env, jclass clazz, jint n, jlong textures) {


//@line:17035

		ext_glGenTexturesEXT((GLsizei)n, (GLuint*)textures);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsTextureEXT(JNIEnv* env, jclass clazz, jint texture) {


//@line:17039

		return (jboolean)ext_glIsTextureEXT((GLuint)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPrioritizeTexturesEXT__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset, jobject obj_priorities, jint prioritiesByteOffset) {
	unsigned char* textures = (unsigned char*)(obj_textures?env->GetDirectBufferAddress(obj_textures):0);
	unsigned char* priorities = (unsigned char*)(obj_priorities?env->GetDirectBufferAddress(obj_priorities):0);


//@line:17043

		ext_glPrioritizeTexturesEXT((GLsizei)n, (const GLuint*)(textures + texturesByteOffset), (const GLclampf*)(priorities + prioritiesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPrioritizeTexturesEXT__IJJ(JNIEnv* env, jclass clazz, jint n, jlong textures, jlong priorities) {


//@line:17047

		ext_glPrioritizeTexturesEXT((GLsizei)n, (const GLuint*)textures, (const GLclampf*)priorities);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDetailTexFuncSGIS__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint n, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:17051

		ext_glDetailTexFuncSGIS((GLenum)target, (GLsizei)n, (const GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDetailTexFuncSGIS__IIJ(JNIEnv* env, jclass clazz, jint target, jint n, jlong points) {


//@line:17055

		ext_glDetailTexFuncSGIS((GLenum)target, (GLsizei)n, (const GLfloat*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDetailTexFuncSGIS__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:17059

		ext_glGetDetailTexFuncSGIS((GLenum)target, (GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDetailTexFuncSGIS__IJ(JNIEnv* env, jclass clazz, jint target, jlong points) {


//@line:17063

		ext_glGetDetailTexFuncSGIS((GLenum)target, (GLfloat*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSharpenTexFuncSGIS__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint n, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:17067

		ext_glSharpenTexFuncSGIS((GLenum)target, (GLsizei)n, (const GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSharpenTexFuncSGIS__IIJ(JNIEnv* env, jclass clazz, jint target, jint n, jlong points) {


//@line:17071

		ext_glSharpenTexFuncSGIS((GLenum)target, (GLsizei)n, (const GLfloat*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSharpenTexFuncSGIS__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:17075

		ext_glGetSharpenTexFuncSGIS((GLenum)target, (GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetSharpenTexFuncSGIS__IJ(JNIEnv* env, jclass clazz, jint target, jlong points) {


//@line:17079

		ext_glGetSharpenTexFuncSGIS((GLenum)target, (GLfloat*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSampleMaskSGIS(JNIEnv* env, jclass clazz, jfloat value, jboolean invert) {


//@line:17083

		ext_glSampleMaskSGIS((GLclampf)value, (GLboolean)invert);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplePatternSGIS(JNIEnv* env, jclass clazz, jint pattern) {


//@line:17087

		ext_glSamplePatternSGIS((GLenum)pattern);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glArrayElementEXT(JNIEnv* env, jclass clazz, jint i) {


//@line:17091

		ext_glArrayElementEXT((GLint)i);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorPointerEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jint count, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17095

		ext_glColorPointerEXT((GLint)size, (GLenum)type, (GLsizei)stride, (GLsizei)count, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorPointerEXT__IIIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jint count, jlong pointer) {


//@line:17099

		ext_glColorPointerEXT((GLint)size, (GLenum)type, (GLsizei)stride, (GLsizei)count, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawArraysEXT(JNIEnv* env, jclass clazz, jint mode, jint first, jint count) {


//@line:17103

		ext_glDrawArraysEXT((GLenum)mode, (GLint)first, (GLsizei)count);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEdgeFlagPointerEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stride, jint count, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17107

		ext_glEdgeFlagPointerEXT((GLsizei)stride, (GLsizei)count, (const GLboolean*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEdgeFlagPointerEXT__IIJ(JNIEnv* env, jclass clazz, jint stride, jint count, jlong pointer) {


//@line:17111

		ext_glEdgeFlagPointerEXT((GLsizei)stride, (GLsizei)count, (const GLboolean*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexPointerEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint stride, jint count, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17115

		ext_glIndexPointerEXT((GLenum)type, (GLsizei)stride, (GLsizei)count, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexPointerEXT__IIIJ(JNIEnv* env, jclass clazz, jint type, jint stride, jint count, jlong pointer) {


//@line:17119

		ext_glIndexPointerEXT((GLenum)type, (GLsizei)stride, (GLsizei)count, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalPointerEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint stride, jint count, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17123

		ext_glNormalPointerEXT((GLenum)type, (GLsizei)stride, (GLsizei)count, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalPointerEXT__IIIJ(JNIEnv* env, jclass clazz, jint type, jint stride, jint count, jlong pointer) {


//@line:17127

		ext_glNormalPointerEXT((GLenum)type, (GLsizei)stride, (GLsizei)count, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordPointerEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jint count, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17131

		ext_glTexCoordPointerEXT((GLint)size, (GLenum)type, (GLsizei)stride, (GLsizei)count, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordPointerEXT__IIIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jint count, jlong pointer) {


//@line:17135

		ext_glTexCoordPointerEXT((GLint)size, (GLenum)type, (GLsizei)stride, (GLsizei)count, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexPointerEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jint count, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17139

		ext_glVertexPointerEXT((GLint)size, (GLenum)type, (GLsizei)stride, (GLsizei)count, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexPointerEXT__IIIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jint count, jlong pointer) {


//@line:17143

		ext_glVertexPointerEXT((GLint)size, (GLenum)type, (GLsizei)stride, (GLsizei)count, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendEquationEXT(JNIEnv* env, jclass clazz, jint mode) {


//@line:17147

		ext_glBlendEquationEXT((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSpriteParameterfSGIX(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:17151

		ext_glSpriteParameterfSGIX((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSpriteParameterfvSGIX__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17155

		ext_glSpriteParameterfvSGIX((GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSpriteParameterfvSGIX__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:17159

		ext_glSpriteParameterfvSGIX((GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSpriteParameteriSGIX(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:17163

		ext_glSpriteParameteriSGIX((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSpriteParameterivSGIX__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17167

		ext_glSpriteParameterivSGIX((GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSpriteParameterivSGIX__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:17171

		ext_glSpriteParameterivSGIX((GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfEXT(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:17175

		ext_glPointParameterfEXT((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17179

		ext_glPointParameterfvEXT((GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfvEXT__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:17183

		ext_glPointParameterfvEXT((GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfSGIS(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:17187

		ext_glPointParameterfSGIS((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfvSGIS__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17191

		ext_glPointParameterfvSGIS((GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterfvSGIS__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:17195

		ext_glPointParameterfvSGIS((GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInstrumentsSGIX(JNIEnv* env, jclass clazz) {


//@line:17199

		return (jint)ext_glGetInstrumentsSGIX();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInstrumentsBufferSGIX__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jobject obj_buffer, jint bufferByteOffset) {
	unsigned char* buffer = (unsigned char*)(obj_buffer?env->GetDirectBufferAddress(obj_buffer):0);


//@line:17203

		ext_glInstrumentsBufferSGIX((GLsizei)size, (GLint*)(buffer + bufferByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInstrumentsBufferSGIX__IJ(JNIEnv* env, jclass clazz, jint size, jlong buffer) {


//@line:17207

		ext_glInstrumentsBufferSGIX((GLsizei)size, (GLint*)buffer);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glPollInstrumentsSGIX__Ljava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jobject obj_marker_p, jint marker_pByteOffset, unsigned char* marker_p) {

//@line:17211

		return (jint)ext_glPollInstrumentsSGIX((GLint*)(marker_p + marker_pByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glPollInstrumentsSGIX__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_marker_p, jint marker_pByteOffset) {
	unsigned char* marker_p = (unsigned char*)(obj_marker_p?env->GetDirectBufferAddress(obj_marker_p):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glPollInstrumentsSGIX__Ljava_nio_Buffer_2I(env, clazz, obj_marker_p, marker_pByteOffset, marker_p);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glPollInstrumentsSGIX__J(JNIEnv* env, jclass clazz, jlong marker_p) {


//@line:17215

		return (jint)ext_glPollInstrumentsSGIX((GLint*)marker_p);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReadInstrumentsSGIX(JNIEnv* env, jclass clazz, jint marker) {


//@line:17219

		ext_glReadInstrumentsSGIX((GLint)marker);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStartInstrumentsSGIX(JNIEnv* env, jclass clazz) {


//@line:17223

		ext_glStartInstrumentsSGIX();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStopInstrumentsSGIX(JNIEnv* env, jclass clazz, jint marker) {


//@line:17227

		ext_glStopInstrumentsSGIX((GLint)marker);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFrameZoomSGIX(JNIEnv* env, jclass clazz, jint factor) {


//@line:17231

		ext_glFrameZoomSGIX((GLint)factor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTagSampleBufferSGIX(JNIEnv* env, jclass clazz) {


//@line:17235

		ext_glTagSampleBufferSGIX();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeformationMap3dSGIX__IDDIIDDIIDDIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jdouble u1, jdouble u2, jint ustride, jint uorder, jdouble v1, jdouble v2, jint vstride, jint vorder, jdouble w1, jdouble w2, jint wstride, jint worder, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:17239

		ext_glDeformationMap3dSGIX((GLenum)target, (GLdouble)u1, (GLdouble)u2, (GLint)ustride, (GLint)uorder, (GLdouble)v1, (GLdouble)v2, (GLint)vstride, (GLint)vorder, (GLdouble)w1, (GLdouble)w2, (GLint)wstride, (GLint)worder, (const GLdouble*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeformationMap3dSGIX__IDDIIDDIIDDIIJ(JNIEnv* env, jclass clazz, jint target, jdouble u1, jdouble u2, jint ustride, jint uorder, jdouble v1, jdouble v2, jint vstride, jint vorder, jdouble w1, jdouble w2, jint wstride, jint worder, jlong points) {


//@line:17243

		ext_glDeformationMap3dSGIX((GLenum)target, (GLdouble)u1, (GLdouble)u2, (GLint)ustride, (GLint)uorder, (GLdouble)v1, (GLdouble)v2, (GLint)vstride, (GLint)vorder, (GLdouble)w1, (GLdouble)w2, (GLint)wstride, (GLint)worder, (const GLdouble*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeformationMap3fSGIX__IFFIIFFIIFFIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jfloat u1, jfloat u2, jint ustride, jint uorder, jfloat v1, jfloat v2, jint vstride, jint vorder, jfloat w1, jfloat w2, jint wstride, jint worder, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:17247

		ext_glDeformationMap3fSGIX((GLenum)target, (GLfloat)u1, (GLfloat)u2, (GLint)ustride, (GLint)uorder, (GLfloat)v1, (GLfloat)v2, (GLint)vstride, (GLint)vorder, (GLfloat)w1, (GLfloat)w2, (GLint)wstride, (GLint)worder, (const GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeformationMap3fSGIX__IFFIIFFIIFFIIJ(JNIEnv* env, jclass clazz, jint target, jfloat u1, jfloat u2, jint ustride, jint uorder, jfloat v1, jfloat v2, jint vstride, jint vorder, jfloat w1, jfloat w2, jint wstride, jint worder, jlong points) {


//@line:17251

		ext_glDeformationMap3fSGIX((GLenum)target, (GLfloat)u1, (GLfloat)u2, (GLint)ustride, (GLint)uorder, (GLfloat)v1, (GLfloat)v2, (GLint)vstride, (GLint)vorder, (GLfloat)w1, (GLfloat)w2, (GLint)wstride, (GLint)worder, (const GLfloat*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeformSGIX(JNIEnv* env, jclass clazz, jint mask) {


//@line:17255

		ext_glDeformSGIX((GLbitfield)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadIdentityDeformationMapSGIX(JNIEnv* env, jclass clazz, jint mask) {


//@line:17259

		ext_glLoadIdentityDeformationMapSGIX((GLbitfield)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReferencePlaneSGIX__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_equation, jint equationByteOffset) {
	unsigned char* equation = (unsigned char*)(obj_equation?env->GetDirectBufferAddress(obj_equation):0);


//@line:17263

		ext_glReferencePlaneSGIX((const GLdouble*)(equation + equationByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReferencePlaneSGIX__J(JNIEnv* env, jclass clazz, jlong equation) {


//@line:17267

		ext_glReferencePlaneSGIX((const GLdouble*)equation);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFlushRasterSGIX(JNIEnv* env, jclass clazz) {


//@line:17271

		ext_glFlushRasterSGIX();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogFuncSGIS__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:17275

		ext_glFogFuncSGIS((GLsizei)n, (const GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogFuncSGIS__IJ(JNIEnv* env, jclass clazz, jint n, jlong points) {


//@line:17279

		ext_glFogFuncSGIS((GLsizei)n, (const GLfloat*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFogFuncSGIS__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:17283

		ext_glGetFogFuncSGIS((GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFogFuncSGIS__J(JNIEnv* env, jclass clazz, jlong points) {


//@line:17287

		ext_glGetFogFuncSGIS((GLfloat*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glImageTransformParameteriHP(JNIEnv* env, jclass clazz, jint target, jint pname, jint param) {


//@line:17291

		ext_glImageTransformParameteriHP((GLenum)target, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glImageTransformParameterfHP(JNIEnv* env, jclass clazz, jint target, jint pname, jfloat param) {


//@line:17295

		ext_glImageTransformParameterfHP((GLenum)target, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glImageTransformParameterivHP__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17299

		ext_glImageTransformParameterivHP((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glImageTransformParameterivHP__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:17303

		ext_glImageTransformParameterivHP((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glImageTransformParameterfvHP__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17307

		ext_glImageTransformParameterfvHP((GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glImageTransformParameterfvHP__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:17311

		ext_glImageTransformParameterfvHP((GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetImageTransformParameterivHP__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17315

		ext_glGetImageTransformParameterivHP((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetImageTransformParameterivHP__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:17319

		ext_glGetImageTransformParameterivHP((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetImageTransformParameterfvHP__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17323

		ext_glGetImageTransformParameterfvHP((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetImageTransformParameterfvHP__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:17327

		ext_glGetImageTransformParameterfvHP((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorSubTableEXT__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint start, jint count, jint format, jint type, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:17331

		ext_glColorSubTableEXT((GLenum)target, (GLsizei)start, (GLsizei)count, (GLenum)format, (GLenum)type, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorSubTableEXT__IIIIIJ(JNIEnv* env, jclass clazz, jint target, jint start, jint count, jint format, jint type, jlong data) {


//@line:17335

		ext_glColorSubTableEXT((GLenum)target, (GLsizei)start, (GLsizei)count, (GLenum)format, (GLenum)type, (const GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyColorSubTableEXT(JNIEnv* env, jclass clazz, jint target, jint start, jint x, jint y, jint width) {


//@line:17339

		ext_glCopyColorSubTableEXT((GLenum)target, (GLsizei)start, (GLint)x, (GLint)y, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glHintPGI(JNIEnv* env, jclass clazz, jint target, jint mode) {


//@line:17343

		ext_glHintPGI((GLenum)target, (GLint)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableEXT__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint internalFormat, jint width, jint format, jint type, jobject obj_table, jint tableByteOffset) {
	unsigned char* table = (unsigned char*)(obj_table?env->GetDirectBufferAddress(obj_table):0);


//@line:17347

		ext_glColorTableEXT((GLenum)target, (GLenum)internalFormat, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)(table + tableByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorTableEXT__IIIIIJ(JNIEnv* env, jclass clazz, jint target, jint internalFormat, jint width, jint format, jint type, jlong table) {


//@line:17351

		ext_glColorTableEXT((GLenum)target, (GLenum)internalFormat, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)table);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:17355

		ext_glGetColorTableEXT((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableEXT__IIIJ(JNIEnv* env, jclass clazz, jint target, jint format, jint type, jlong data) {


//@line:17359

		ext_glGetColorTableEXT((GLenum)target, (GLenum)format, (GLenum)type, (GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17363

		ext_glGetColorTableParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:17367

		ext_glGetColorTableParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameterfvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17371

		ext_glGetColorTableParameterfvEXT((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetColorTableParameterfvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:17375

		ext_glGetColorTableParameterfvEXT((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetListParameterfvSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint list, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17379

		ext_glGetListParameterfvSGIX((GLuint)list, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetListParameterfvSGIX__IIJ(JNIEnv* env, jclass clazz, jint list, jint pname, jlong params) {


//@line:17383

		ext_glGetListParameterfvSGIX((GLuint)list, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetListParameterivSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint list, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17387

		ext_glGetListParameterivSGIX((GLuint)list, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetListParameterivSGIX__IIJ(JNIEnv* env, jclass clazz, jint list, jint pname, jlong params) {


//@line:17391

		ext_glGetListParameterivSGIX((GLuint)list, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glListParameterfSGIX(JNIEnv* env, jclass clazz, jint list, jint pname, jfloat param) {


//@line:17395

		ext_glListParameterfSGIX((GLuint)list, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glListParameterfvSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint list, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17399

		ext_glListParameterfvSGIX((GLuint)list, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glListParameterfvSGIX__IIJ(JNIEnv* env, jclass clazz, jint list, jint pname, jlong params) {


//@line:17403

		ext_glListParameterfvSGIX((GLuint)list, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glListParameteriSGIX(JNIEnv* env, jclass clazz, jint list, jint pname, jint param) {


//@line:17407

		ext_glListParameteriSGIX((GLuint)list, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glListParameterivSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint list, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17411

		ext_glListParameterivSGIX((GLuint)list, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glListParameterivSGIX__IIJ(JNIEnv* env, jclass clazz, jint list, jint pname, jlong params) {


//@line:17415

		ext_glListParameterivSGIX((GLuint)list, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexMaterialEXT(JNIEnv* env, jclass clazz, jint face, jint mode) {


//@line:17419

		ext_glIndexMaterialEXT((GLenum)face, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexFuncEXT(JNIEnv* env, jclass clazz, jint func, jfloat ref) {


//@line:17423

		ext_glIndexFuncEXT((GLenum)func, (GLclampf)ref);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLockArraysEXT(JNIEnv* env, jclass clazz, jint first, jint count) {


//@line:17427

		ext_glLockArraysEXT((GLint)first, (GLsizei)count);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUnlockArraysEXT(JNIEnv* env, jclass clazz) {


//@line:17431

		ext_glUnlockArraysEXT();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCullParameterdvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17435

		ext_glCullParameterdvEXT((GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCullParameterdvEXT__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:17439

		ext_glCullParameterdvEXT((GLenum)pname, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCullParameterfvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17443

		ext_glCullParameterfvEXT((GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCullParameterfvEXT__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:17447

		ext_glCullParameterfvEXT((GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentColorMaterialSGIX(JNIEnv* env, jclass clazz, jint face, jint mode) {


//@line:17451

		ext_glFragmentColorMaterialSGIX((GLenum)face, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightfSGIX(JNIEnv* env, jclass clazz, jint light, jint pname, jfloat param) {


//@line:17455

		ext_glFragmentLightfSGIX((GLenum)light, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightfvSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint light, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17459

		ext_glFragmentLightfvSGIX((GLenum)light, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightfvSGIX__IIJ(JNIEnv* env, jclass clazz, jint light, jint pname, jlong params) {


//@line:17463

		ext_glFragmentLightfvSGIX((GLenum)light, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightiSGIX(JNIEnv* env, jclass clazz, jint light, jint pname, jint param) {


//@line:17467

		ext_glFragmentLightiSGIX((GLenum)light, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightivSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint light, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17471

		ext_glFragmentLightivSGIX((GLenum)light, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightivSGIX__IIJ(JNIEnv* env, jclass clazz, jint light, jint pname, jlong params) {


//@line:17475

		ext_glFragmentLightivSGIX((GLenum)light, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightModelfSGIX(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:17479

		ext_glFragmentLightModelfSGIX((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightModelfvSGIX__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17483

		ext_glFragmentLightModelfvSGIX((GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightModelfvSGIX__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:17487

		ext_glFragmentLightModelfvSGIX((GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightModeliSGIX(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:17491

		ext_glFragmentLightModeliSGIX((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightModelivSGIX__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17495

		ext_glFragmentLightModelivSGIX((GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentLightModelivSGIX__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:17499

		ext_glFragmentLightModelivSGIX((GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentMaterialfSGIX(JNIEnv* env, jclass clazz, jint face, jint pname, jfloat param) {


//@line:17503

		ext_glFragmentMaterialfSGIX((GLenum)face, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentMaterialfvSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint face, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17507

		ext_glFragmentMaterialfvSGIX((GLenum)face, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentMaterialfvSGIX__IIJ(JNIEnv* env, jclass clazz, jint face, jint pname, jlong params) {


//@line:17511

		ext_glFragmentMaterialfvSGIX((GLenum)face, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentMaterialiSGIX(JNIEnv* env, jclass clazz, jint face, jint pname, jint param) {


//@line:17515

		ext_glFragmentMaterialiSGIX((GLenum)face, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentMaterialivSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint face, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17519

		ext_glFragmentMaterialivSGIX((GLenum)face, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFragmentMaterialivSGIX__IIJ(JNIEnv* env, jclass clazz, jint face, jint pname, jlong params) {


//@line:17523

		ext_glFragmentMaterialivSGIX((GLenum)face, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragmentLightfvSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint light, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17527

		ext_glGetFragmentLightfvSGIX((GLenum)light, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragmentLightfvSGIX__IIJ(JNIEnv* env, jclass clazz, jint light, jint pname, jlong params) {


//@line:17531

		ext_glGetFragmentLightfvSGIX((GLenum)light, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragmentLightivSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint light, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17535

		ext_glGetFragmentLightivSGIX((GLenum)light, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragmentLightivSGIX__IIJ(JNIEnv* env, jclass clazz, jint light, jint pname, jlong params) {


//@line:17539

		ext_glGetFragmentLightivSGIX((GLenum)light, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragmentMaterialfvSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint face, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17543

		ext_glGetFragmentMaterialfvSGIX((GLenum)face, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragmentMaterialfvSGIX__IIJ(JNIEnv* env, jclass clazz, jint face, jint pname, jlong params) {


//@line:17547

		ext_glGetFragmentMaterialfvSGIX((GLenum)face, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragmentMaterialivSGIX__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint face, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17551

		ext_glGetFragmentMaterialivSGIX((GLenum)face, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragmentMaterialivSGIX__IIJ(JNIEnv* env, jclass clazz, jint face, jint pname, jlong params) {


//@line:17555

		ext_glGetFragmentMaterialivSGIX((GLenum)face, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightEnviSGIX(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:17559

		ext_glLightEnviSGIX((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawRangeElementsEXT__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jint start, jint end, jint count, jint type, jobject obj_indices, jint indicesByteOffset) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:17563

		ext_glDrawRangeElementsEXT((GLenum)mode, (GLuint)start, (GLuint)end, (GLsizei)count, (GLenum)type, (const GLvoid*)(indices + indicesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawRangeElementsEXT__IIIIIJ(JNIEnv* env, jclass clazz, jint mode, jint start, jint end, jint count, jint type, jlong indices) {


//@line:17567

		ext_glDrawRangeElementsEXT((GLenum)mode, (GLuint)start, (GLuint)end, (GLsizei)count, (GLenum)type, (const GLvoid*)indices);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glApplyTextureEXT(JNIEnv* env, jclass clazz, jint mode) {


//@line:17571

		ext_glApplyTextureEXT((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureLightEXT(JNIEnv* env, jclass clazz, jint pname) {


//@line:17575

		ext_glTextureLightEXT((GLenum)pname);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureMaterialEXT(JNIEnv* env, jclass clazz, jint face, jint mode) {


//@line:17579

		ext_glTextureMaterialEXT((GLenum)face, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glAsyncMarkerSGIX(JNIEnv* env, jclass clazz, jint marker) {


//@line:17583

		ext_glAsyncMarkerSGIX((GLuint)marker);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glFinishAsyncSGIX__Ljava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jobject obj_markerp, jint markerpByteOffset, unsigned char* markerp) {

//@line:17587

		return (jint)ext_glFinishAsyncSGIX((GLuint*)(markerp + markerpByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glFinishAsyncSGIX__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_markerp, jint markerpByteOffset) {
	unsigned char* markerp = (unsigned char*)(obj_markerp?env->GetDirectBufferAddress(obj_markerp):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glFinishAsyncSGIX__Ljava_nio_Buffer_2I(env, clazz, obj_markerp, markerpByteOffset, markerp);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glFinishAsyncSGIX__J(JNIEnv* env, jclass clazz, jlong markerp) {


//@line:17591

		return (jint)ext_glFinishAsyncSGIX((GLuint*)markerp);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glPollAsyncSGIX__Ljava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jobject obj_markerp, jint markerpByteOffset, unsigned char* markerp) {

//@line:17595

		return (jint)ext_glPollAsyncSGIX((GLuint*)(markerp + markerpByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glPollAsyncSGIX__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_markerp, jint markerpByteOffset) {
	unsigned char* markerp = (unsigned char*)(obj_markerp?env->GetDirectBufferAddress(obj_markerp):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glPollAsyncSGIX__Ljava_nio_Buffer_2I(env, clazz, obj_markerp, markerpByteOffset, markerp);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glPollAsyncSGIX__J(JNIEnv* env, jclass clazz, jlong markerp) {


//@line:17599

		return (jint)ext_glPollAsyncSGIX((GLuint*)markerp);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGenAsyncMarkersSGIX(JNIEnv* env, jclass clazz, jint range) {


//@line:17603

		return (jint)ext_glGenAsyncMarkersSGIX((GLsizei)range);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteAsyncMarkersSGIX(JNIEnv* env, jclass clazz, jint marker, jint range) {


//@line:17607

		ext_glDeleteAsyncMarkersSGIX((GLuint)marker, (GLsizei)range);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsAsyncMarkerSGIX(JNIEnv* env, jclass clazz, jint marker) {


//@line:17611

		return (jboolean)ext_glIsAsyncMarkerSGIX((GLuint)marker);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexPointervINTEL__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17615

		ext_glVertexPointervINTEL((GLint)size, (GLenum)type, (const GLvoid**)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexPointervINTEL__IIJ(JNIEnv* env, jclass clazz, jint size, jint type, jlong pointer) {


//@line:17619

		ext_glVertexPointervINTEL((GLint)size, (GLenum)type, (const GLvoid**)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalPointervINTEL__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17623

		ext_glNormalPointervINTEL((GLenum)type, (const GLvoid**)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalPointervINTEL__IJ(JNIEnv* env, jclass clazz, jint type, jlong pointer) {


//@line:17627

		ext_glNormalPointervINTEL((GLenum)type, (const GLvoid**)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorPointervINTEL__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17631

		ext_glColorPointervINTEL((GLint)size, (GLenum)type, (const GLvoid**)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorPointervINTEL__IIJ(JNIEnv* env, jclass clazz, jint size, jint type, jlong pointer) {


//@line:17635

		ext_glColorPointervINTEL((GLint)size, (GLenum)type, (const GLvoid**)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordPointervINTEL__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17639

		ext_glTexCoordPointervINTEL((GLint)size, (GLenum)type, (const GLvoid**)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordPointervINTEL__IIJ(JNIEnv* env, jclass clazz, jint size, jint type, jlong pointer) {


//@line:17643

		ext_glTexCoordPointervINTEL((GLint)size, (GLenum)type, (const GLvoid**)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTransformParameteriEXT(JNIEnv* env, jclass clazz, jint target, jint pname, jint param) {


//@line:17647

		ext_glPixelTransformParameteriEXT((GLenum)target, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTransformParameterfEXT(JNIEnv* env, jclass clazz, jint target, jint pname, jfloat param) {


//@line:17651

		ext_glPixelTransformParameterfEXT((GLenum)target, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTransformParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17655

		ext_glPixelTransformParameterivEXT((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTransformParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:17659

		ext_glPixelTransformParameterivEXT((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTransformParameterfvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17663

		ext_glPixelTransformParameterfvEXT((GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTransformParameterfvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:17667

		ext_glPixelTransformParameterfvEXT((GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelTransformParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17671

		ext_glGetPixelTransformParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelTransformParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:17675

		ext_glGetPixelTransformParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelTransformParameterfvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:17679

		ext_glGetPixelTransformParameterfvEXT((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelTransformParameterfvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:17683

		ext_glGetPixelTransformParameterfvEXT((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3bEXT(JNIEnv* env, jclass clazz, jbyte red, jbyte green, jbyte blue) {


//@line:17687

		ext_glSecondaryColor3bEXT((GLbyte)red, (GLbyte)green, (GLbyte)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3bvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17691

		ext_glSecondaryColor3bvEXT((const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3bvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17695

		ext_glSecondaryColor3bvEXT((const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3dEXT(JNIEnv* env, jclass clazz, jdouble red, jdouble green, jdouble blue) {


//@line:17699

		ext_glSecondaryColor3dEXT((GLdouble)red, (GLdouble)green, (GLdouble)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3dvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17703

		ext_glSecondaryColor3dvEXT((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3dvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17707

		ext_glSecondaryColor3dvEXT((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3fEXT(JNIEnv* env, jclass clazz, jfloat red, jfloat green, jfloat blue) {


//@line:17711

		ext_glSecondaryColor3fEXT((GLfloat)red, (GLfloat)green, (GLfloat)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3fvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17715

		ext_glSecondaryColor3fvEXT((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3fvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17719

		ext_glSecondaryColor3fvEXT((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3iEXT(JNIEnv* env, jclass clazz, jint red, jint green, jint blue) {


//@line:17723

		ext_glSecondaryColor3iEXT((GLint)red, (GLint)green, (GLint)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3ivEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17727

		ext_glSecondaryColor3ivEXT((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3ivEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17731

		ext_glSecondaryColor3ivEXT((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3sEXT(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue) {


//@line:17735

		ext_glSecondaryColor3sEXT((GLshort)red, (GLshort)green, (GLshort)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3svEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17739

		ext_glSecondaryColor3svEXT((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3svEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17743

		ext_glSecondaryColor3svEXT((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3ubEXT(JNIEnv* env, jclass clazz, jbyte red, jbyte green, jbyte blue) {


//@line:17747

		ext_glSecondaryColor3ubEXT((GLubyte)red, (GLubyte)green, (GLubyte)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3ubvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17751

		ext_glSecondaryColor3ubvEXT((const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3ubvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17755

		ext_glSecondaryColor3ubvEXT((const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3uiEXT(JNIEnv* env, jclass clazz, jint red, jint green, jint blue) {


//@line:17759

		ext_glSecondaryColor3uiEXT((GLuint)red, (GLuint)green, (GLuint)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3uivEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17763

		ext_glSecondaryColor3uivEXT((const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3uivEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17767

		ext_glSecondaryColor3uivEXT((const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3usEXT(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue) {


//@line:17771

		ext_glSecondaryColor3usEXT((GLushort)red, (GLushort)green, (GLushort)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3usvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17775

		ext_glSecondaryColor3usvEXT((const GLushort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3usvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17779

		ext_glSecondaryColor3usvEXT((const GLushort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColorPointerEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17783

		ext_glSecondaryColorPointerEXT((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColorPointerEXT__IIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong pointer) {


//@line:17787

		ext_glSecondaryColorPointerEXT((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureNormalEXT(JNIEnv* env, jclass clazz, jint mode) {


//@line:17791

		ext_glTextureNormalEXT((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawArraysEXT__ILjava_nio_Buffer_2ILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jobject obj_first, jint firstByteOffset, jobject obj_count, jint countByteOffset, jint primcount) {
	unsigned char* first = (unsigned char*)(obj_first?env->GetDirectBufferAddress(obj_first):0);
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);


//@line:17795

		ext_glMultiDrawArraysEXT((GLenum)mode, (const GLint*)(first + firstByteOffset), (const GLsizei*)(count + countByteOffset), (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawArraysEXT__IJJI(JNIEnv* env, jclass clazz, jint mode, jlong first, jlong count, jint primcount) {


//@line:17799

		ext_glMultiDrawArraysEXT((GLenum)mode, (const GLint*)first, (const GLsizei*)count, (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElementsEXT__ILjava_nio_Buffer_2IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jobject obj_count, jint countByteOffset, jint type, jobject obj_indices, jint indicesByteOffset, jint primcount) {
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:17803

		ext_glMultiDrawElementsEXT((GLenum)mode, (const GLsizei*)(count + countByteOffset), (GLenum)type, (const GLvoid**)(indices + indicesByteOffset), (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElementsEXT__IJIJI(JNIEnv* env, jclass clazz, jint mode, jlong count, jint type, jlong indices, jint primcount) {


//@line:17807

		ext_glMultiDrawElementsEXT((GLenum)mode, (const GLsizei*)count, (GLenum)type, (const GLvoid**)indices, (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordfEXT(JNIEnv* env, jclass clazz, jfloat coord) {


//@line:17811

		ext_glFogCoordfEXT((GLfloat)coord);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordfvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coord, jint coordByteOffset) {
	unsigned char* coord = (unsigned char*)(obj_coord?env->GetDirectBufferAddress(obj_coord):0);


//@line:17815

		ext_glFogCoordfvEXT((const GLfloat*)(coord + coordByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordfvEXT__J(JNIEnv* env, jclass clazz, jlong coord) {


//@line:17819

		ext_glFogCoordfvEXT((const GLfloat*)coord);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoorddEXT(JNIEnv* env, jclass clazz, jdouble coord) {


//@line:17823

		ext_glFogCoorddEXT((GLdouble)coord);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoorddvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coord, jint coordByteOffset) {
	unsigned char* coord = (unsigned char*)(obj_coord?env->GetDirectBufferAddress(obj_coord):0);


//@line:17827

		ext_glFogCoorddvEXT((const GLdouble*)(coord + coordByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoorddvEXT__J(JNIEnv* env, jclass clazz, jlong coord) {


//@line:17831

		ext_glFogCoorddvEXT((const GLdouble*)coord);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordPointerEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17835

		ext_glFogCoordPointerEXT((GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordPointerEXT__IIJ(JNIEnv* env, jclass clazz, jint type, jint stride, jlong pointer) {


//@line:17839

		ext_glFogCoordPointerEXT((GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3bEXT(JNIEnv* env, jclass clazz, jbyte tx, jbyte ty, jbyte tz) {


//@line:17843

		ext_glTangent3bEXT((GLbyte)tx, (GLbyte)ty, (GLbyte)tz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3bvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17847

		ext_glTangent3bvEXT((const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3bvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17851

		ext_glTangent3bvEXT((const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3dEXT(JNIEnv* env, jclass clazz, jdouble tx, jdouble ty, jdouble tz) {


//@line:17855

		ext_glTangent3dEXT((GLdouble)tx, (GLdouble)ty, (GLdouble)tz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3dvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17859

		ext_glTangent3dvEXT((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3dvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17863

		ext_glTangent3dvEXT((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3fEXT(JNIEnv* env, jclass clazz, jfloat tx, jfloat ty, jfloat tz) {


//@line:17867

		ext_glTangent3fEXT((GLfloat)tx, (GLfloat)ty, (GLfloat)tz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3fvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17871

		ext_glTangent3fvEXT((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3fvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17875

		ext_glTangent3fvEXT((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3iEXT(JNIEnv* env, jclass clazz, jint tx, jint ty, jint tz) {


//@line:17879

		ext_glTangent3iEXT((GLint)tx, (GLint)ty, (GLint)tz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3ivEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17883

		ext_glTangent3ivEXT((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3ivEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17887

		ext_glTangent3ivEXT((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3sEXT(JNIEnv* env, jclass clazz, jshort tx, jshort ty, jshort tz) {


//@line:17891

		ext_glTangent3sEXT((GLshort)tx, (GLshort)ty, (GLshort)tz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3svEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17895

		ext_glTangent3svEXT((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangent3svEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17899

		ext_glTangent3svEXT((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3bEXT(JNIEnv* env, jclass clazz, jbyte bx, jbyte by, jbyte bz) {


//@line:17903

		ext_glBinormal3bEXT((GLbyte)bx, (GLbyte)by, (GLbyte)bz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3bvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17907

		ext_glBinormal3bvEXT((const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3bvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17911

		ext_glBinormal3bvEXT((const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3dEXT(JNIEnv* env, jclass clazz, jdouble bx, jdouble by, jdouble bz) {


//@line:17915

		ext_glBinormal3dEXT((GLdouble)bx, (GLdouble)by, (GLdouble)bz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3dvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17919

		ext_glBinormal3dvEXT((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3dvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17923

		ext_glBinormal3dvEXT((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3fEXT(JNIEnv* env, jclass clazz, jfloat bx, jfloat by, jfloat bz) {


//@line:17927

		ext_glBinormal3fEXT((GLfloat)bx, (GLfloat)by, (GLfloat)bz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3fvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17931

		ext_glBinormal3fvEXT((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3fvEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17935

		ext_glBinormal3fvEXT((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3iEXT(JNIEnv* env, jclass clazz, jint bx, jint by, jint bz) {


//@line:17939

		ext_glBinormal3iEXT((GLint)bx, (GLint)by, (GLint)bz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3ivEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17943

		ext_glBinormal3ivEXT((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3ivEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17947

		ext_glBinormal3ivEXT((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3sEXT(JNIEnv* env, jclass clazz, jshort bx, jshort by, jshort bz) {


//@line:17951

		ext_glBinormal3sEXT((GLshort)bx, (GLshort)by, (GLshort)bz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3svEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:17955

		ext_glBinormal3svEXT((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormal3svEXT__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:17959

		ext_glBinormal3svEXT((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangentPointerEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17963

		ext_glTangentPointerEXT((GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTangentPointerEXT__IIJ(JNIEnv* env, jclass clazz, jint type, jint stride, jlong pointer) {


//@line:17967

		ext_glTangentPointerEXT((GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormalPointerEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:17971

		ext_glBinormalPointerEXT((GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBinormalPointerEXT__IIJ(JNIEnv* env, jclass clazz, jint type, jint stride, jlong pointer) {


//@line:17975

		ext_glBinormalPointerEXT((GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFinishTextureSUNX(JNIEnv* env, jclass clazz) {


//@line:17979

		ext_glFinishTextureSUNX();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGlobalAlphaFactorbSUN(JNIEnv* env, jclass clazz, jbyte factor) {


//@line:17983

		ext_glGlobalAlphaFactorbSUN((GLbyte)factor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGlobalAlphaFactorsSUN(JNIEnv* env, jclass clazz, jshort factor) {


//@line:17987

		ext_glGlobalAlphaFactorsSUN((GLshort)factor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGlobalAlphaFactoriSUN(JNIEnv* env, jclass clazz, jint factor) {


//@line:17991

		ext_glGlobalAlphaFactoriSUN((GLint)factor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGlobalAlphaFactorfSUN(JNIEnv* env, jclass clazz, jfloat factor) {


//@line:17995

		ext_glGlobalAlphaFactorfSUN((GLfloat)factor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGlobalAlphaFactordSUN(JNIEnv* env, jclass clazz, jdouble factor) {


//@line:17999

		ext_glGlobalAlphaFactordSUN((GLdouble)factor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGlobalAlphaFactorubSUN(JNIEnv* env, jclass clazz, jbyte factor) {


//@line:18003

		ext_glGlobalAlphaFactorubSUN((GLubyte)factor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGlobalAlphaFactorusSUN(JNIEnv* env, jclass clazz, jshort factor) {


//@line:18007

		ext_glGlobalAlphaFactorusSUN((GLushort)factor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGlobalAlphaFactoruiSUN(JNIEnv* env, jclass clazz, jint factor) {


//@line:18011

		ext_glGlobalAlphaFactoruiSUN((GLuint)factor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiSUN(JNIEnv* env, jclass clazz, jint code) {


//@line:18015

		ext_glReplacementCodeuiSUN((GLuint)code);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeusSUN(JNIEnv* env, jclass clazz, jshort code) {


//@line:18019

		ext_glReplacementCodeusSUN((GLushort)code);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeubSUN(JNIEnv* env, jclass clazz, jbyte code) {


//@line:18023

		ext_glReplacementCodeubSUN((GLubyte)code);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuivSUN__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_code, jint codeByteOffset) {
	unsigned char* code = (unsigned char*)(obj_code?env->GetDirectBufferAddress(obj_code):0);


//@line:18027

		ext_glReplacementCodeuivSUN((const GLuint*)(code + codeByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuivSUN__J(JNIEnv* env, jclass clazz, jlong code) {


//@line:18031

		ext_glReplacementCodeuivSUN((const GLuint*)code);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeusvSUN__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_code, jint codeByteOffset) {
	unsigned char* code = (unsigned char*)(obj_code?env->GetDirectBufferAddress(obj_code):0);


//@line:18035

		ext_glReplacementCodeusvSUN((const GLushort*)(code + codeByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeusvSUN__J(JNIEnv* env, jclass clazz, jlong code) {


//@line:18039

		ext_glReplacementCodeusvSUN((const GLushort*)code);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeubvSUN__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_code, jint codeByteOffset) {
	unsigned char* code = (unsigned char*)(obj_code?env->GetDirectBufferAddress(obj_code):0);


//@line:18043

		ext_glReplacementCodeubvSUN((const GLubyte*)(code + codeByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeubvSUN__J(JNIEnv* env, jclass clazz, jlong code) {


//@line:18047

		ext_glReplacementCodeubvSUN((const GLubyte*)code);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodePointerSUN__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18051

		ext_glReplacementCodePointerSUN((GLenum)type, (GLsizei)stride, (const GLvoid**)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodePointerSUN__IIJ(JNIEnv* env, jclass clazz, jint type, jint stride, jlong pointer) {


//@line:18055

		ext_glReplacementCodePointerSUN((GLenum)type, (GLsizei)stride, (const GLvoid**)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4ubVertex2fSUN(JNIEnv* env, jclass clazz, jbyte r, jbyte g, jbyte b, jbyte a, jfloat x, jfloat y) {


//@line:18059

		ext_glColor4ubVertex2fSUN((GLubyte)r, (GLubyte)g, (GLubyte)b, (GLubyte)a, (GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4ubVertex2fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_c, jint cByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18063

		ext_glColor4ubVertex2fvSUN((const GLubyte*)(c + cByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4ubVertex2fvSUN__JJ(JNIEnv* env, jclass clazz, jlong c, jlong v) {


//@line:18067

		ext_glColor4ubVertex2fvSUN((const GLubyte*)c, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4ubVertex3fSUN(JNIEnv* env, jclass clazz, jbyte r, jbyte g, jbyte b, jbyte a, jfloat x, jfloat y, jfloat z) {


//@line:18071

		ext_glColor4ubVertex3fSUN((GLubyte)r, (GLubyte)g, (GLubyte)b, (GLubyte)a, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4ubVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_c, jint cByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18075

		ext_glColor4ubVertex3fvSUN((const GLubyte*)(c + cByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4ubVertex3fvSUN__JJ(JNIEnv* env, jclass clazz, jlong c, jlong v) {


//@line:18079

		ext_glColor4ubVertex3fvSUN((const GLubyte*)c, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3fVertex3fSUN(JNIEnv* env, jclass clazz, jfloat r, jfloat g, jfloat b, jfloat x, jfloat y, jfloat z) {


//@line:18083

		ext_glColor3fVertex3fSUN((GLfloat)r, (GLfloat)g, (GLfloat)b, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_c, jint cByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18087

		ext_glColor3fVertex3fvSUN((const GLfloat*)(c + cByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3fVertex3fvSUN__JJ(JNIEnv* env, jclass clazz, jlong c, jlong v) {


//@line:18091

		ext_glColor3fVertex3fvSUN((const GLfloat*)c, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3fVertex3fSUN(JNIEnv* env, jclass clazz, jfloat nx, jfloat ny, jfloat nz, jfloat x, jfloat y, jfloat z) {


//@line:18095

		ext_glNormal3fVertex3fSUN((GLfloat)nx, (GLfloat)ny, (GLfloat)nz, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_n, jint nByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* n = (unsigned char*)(obj_n?env->GetDirectBufferAddress(obj_n):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18099

		ext_glNormal3fVertex3fvSUN((const GLfloat*)(n + nByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3fVertex3fvSUN__JJ(JNIEnv* env, jclass clazz, jlong n, jlong v) {


//@line:18103

		ext_glNormal3fVertex3fvSUN((const GLfloat*)n, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4fNormal3fVertex3fSUN(JNIEnv* env, jclass clazz, jfloat r, jfloat g, jfloat b, jfloat a, jfloat nx, jfloat ny, jfloat nz, jfloat x, jfloat y, jfloat z) {


//@line:18107

		ext_glColor4fNormal3fVertex3fSUN((GLfloat)r, (GLfloat)g, (GLfloat)b, (GLfloat)a, (GLfloat)nx, (GLfloat)ny, (GLfloat)nz, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4fNormal3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_c, jint cByteOffset, jobject obj_n, jint nByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* n = (unsigned char*)(obj_n?env->GetDirectBufferAddress(obj_n):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18111

		ext_glColor4fNormal3fVertex3fvSUN((const GLfloat*)(c + cByteOffset), (const GLfloat*)(n + nByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4fNormal3fVertex3fvSUN__JJJ(JNIEnv* env, jclass clazz, jlong c, jlong n, jlong v) {


//@line:18115

		ext_glColor4fNormal3fVertex3fvSUN((const GLfloat*)c, (const GLfloat*)n, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fVertex3fSUN(JNIEnv* env, jclass clazz, jfloat s, jfloat t, jfloat x, jfloat y, jfloat z) {


//@line:18119

		ext_glTexCoord2fVertex3fSUN((GLfloat)s, (GLfloat)t, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_tc, jint tcByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* tc = (unsigned char*)(obj_tc?env->GetDirectBufferAddress(obj_tc):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18123

		ext_glTexCoord2fVertex3fvSUN((const GLfloat*)(tc + tcByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fVertex3fvSUN__JJ(JNIEnv* env, jclass clazz, jlong tc, jlong v) {


//@line:18127

		ext_glTexCoord2fVertex3fvSUN((const GLfloat*)tc, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4fVertex4fSUN(JNIEnv* env, jclass clazz, jfloat s, jfloat t, jfloat p, jfloat q, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:18131

		ext_glTexCoord4fVertex4fSUN((GLfloat)s, (GLfloat)t, (GLfloat)p, (GLfloat)q, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4fVertex4fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_tc, jint tcByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* tc = (unsigned char*)(obj_tc?env->GetDirectBufferAddress(obj_tc):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18135

		ext_glTexCoord4fVertex4fvSUN((const GLfloat*)(tc + tcByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4fVertex4fvSUN__JJ(JNIEnv* env, jclass clazz, jlong tc, jlong v) {


//@line:18139

		ext_glTexCoord4fVertex4fvSUN((const GLfloat*)tc, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fColor4ubVertex3fSUN(JNIEnv* env, jclass clazz, jfloat s, jfloat t, jbyte r, jbyte g, jbyte b, jbyte a, jfloat x, jfloat y, jfloat z) {


//@line:18143

		ext_glTexCoord2fColor4ubVertex3fSUN((GLfloat)s, (GLfloat)t, (GLubyte)r, (GLubyte)g, (GLubyte)b, (GLubyte)a, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fColor4ubVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_tc, jint tcByteOffset, jobject obj_c, jint cByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* tc = (unsigned char*)(obj_tc?env->GetDirectBufferAddress(obj_tc):0);
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18147

		ext_glTexCoord2fColor4ubVertex3fvSUN((const GLfloat*)(tc + tcByteOffset), (const GLubyte*)(c + cByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fColor4ubVertex3fvSUN__JJJ(JNIEnv* env, jclass clazz, jlong tc, jlong c, jlong v) {


//@line:18151

		ext_glTexCoord2fColor4ubVertex3fvSUN((const GLfloat*)tc, (const GLubyte*)c, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fColor3fVertex3fSUN(JNIEnv* env, jclass clazz, jfloat s, jfloat t, jfloat r, jfloat g, jfloat b, jfloat x, jfloat y, jfloat z) {


//@line:18155

		ext_glTexCoord2fColor3fVertex3fSUN((GLfloat)s, (GLfloat)t, (GLfloat)r, (GLfloat)g, (GLfloat)b, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fColor3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_tc, jint tcByteOffset, jobject obj_c, jint cByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* tc = (unsigned char*)(obj_tc?env->GetDirectBufferAddress(obj_tc):0);
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18159

		ext_glTexCoord2fColor3fVertex3fvSUN((const GLfloat*)(tc + tcByteOffset), (const GLfloat*)(c + cByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fColor3fVertex3fvSUN__JJJ(JNIEnv* env, jclass clazz, jlong tc, jlong c, jlong v) {


//@line:18163

		ext_glTexCoord2fColor3fVertex3fvSUN((const GLfloat*)tc, (const GLfloat*)c, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fNormal3fVertex3fSUN(JNIEnv* env, jclass clazz, jfloat s, jfloat t, jfloat nx, jfloat ny, jfloat nz, jfloat x, jfloat y, jfloat z) {


//@line:18167

		ext_glTexCoord2fNormal3fVertex3fSUN((GLfloat)s, (GLfloat)t, (GLfloat)nx, (GLfloat)ny, (GLfloat)nz, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fNormal3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_tc, jint tcByteOffset, jobject obj_n, jint nByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* tc = (unsigned char*)(obj_tc?env->GetDirectBufferAddress(obj_tc):0);
	unsigned char* n = (unsigned char*)(obj_n?env->GetDirectBufferAddress(obj_n):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18171

		ext_glTexCoord2fNormal3fVertex3fvSUN((const GLfloat*)(tc + tcByteOffset), (const GLfloat*)(n + nByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fNormal3fVertex3fvSUN__JJJ(JNIEnv* env, jclass clazz, jlong tc, jlong n, jlong v) {


//@line:18175

		ext_glTexCoord2fNormal3fVertex3fvSUN((const GLfloat*)tc, (const GLfloat*)n, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fColor4fNormal3fVertex3fSUN(JNIEnv* env, jclass clazz, jfloat s, jfloat t, jfloat r, jfloat g, jfloat b, jfloat a, jfloat nx, jfloat ny, jfloat nz, jfloat x, jfloat y, jfloat z) {


//@line:18179

		ext_glTexCoord2fColor4fNormal3fVertex3fSUN((GLfloat)s, (GLfloat)t, (GLfloat)r, (GLfloat)g, (GLfloat)b, (GLfloat)a, (GLfloat)nx, (GLfloat)ny, (GLfloat)nz, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fColor4fNormal3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_tc, jint tcByteOffset, jobject obj_c, jint cByteOffset, jobject obj_n, jint nByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* tc = (unsigned char*)(obj_tc?env->GetDirectBufferAddress(obj_tc):0);
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* n = (unsigned char*)(obj_n?env->GetDirectBufferAddress(obj_n):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18183

		ext_glTexCoord2fColor4fNormal3fVertex3fvSUN((const GLfloat*)(tc + tcByteOffset), (const GLfloat*)(c + cByteOffset), (const GLfloat*)(n + nByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2fColor4fNormal3fVertex3fvSUN__JJJJ(JNIEnv* env, jclass clazz, jlong tc, jlong c, jlong n, jlong v) {


//@line:18187

		ext_glTexCoord2fColor4fNormal3fVertex3fvSUN((const GLfloat*)tc, (const GLfloat*)c, (const GLfloat*)n, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4fColor4fNormal3fVertex4fSUN(JNIEnv* env, jclass clazz, jfloat s, jfloat t, jfloat p, jfloat q, jfloat r, jfloat g, jfloat b, jfloat a, jfloat nx, jfloat ny, jfloat nz, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:18191

		ext_glTexCoord4fColor4fNormal3fVertex4fSUN((GLfloat)s, (GLfloat)t, (GLfloat)p, (GLfloat)q, (GLfloat)r, (GLfloat)g, (GLfloat)b, (GLfloat)a, (GLfloat)nx, (GLfloat)ny, (GLfloat)nz, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4fColor4fNormal3fVertex4fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_tc, jint tcByteOffset, jobject obj_c, jint cByteOffset, jobject obj_n, jint nByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* tc = (unsigned char*)(obj_tc?env->GetDirectBufferAddress(obj_tc):0);
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* n = (unsigned char*)(obj_n?env->GetDirectBufferAddress(obj_n):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18195

		ext_glTexCoord4fColor4fNormal3fVertex4fvSUN((const GLfloat*)(tc + tcByteOffset), (const GLfloat*)(c + cByteOffset), (const GLfloat*)(n + nByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4fColor4fNormal3fVertex4fvSUN__JJJJ(JNIEnv* env, jclass clazz, jlong tc, jlong c, jlong n, jlong v) {


//@line:18199

		ext_glTexCoord4fColor4fNormal3fVertex4fvSUN((const GLfloat*)tc, (const GLfloat*)c, (const GLfloat*)n, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiVertex3fSUN(JNIEnv* env, jclass clazz, jint rc, jfloat x, jfloat y, jfloat z) {


//@line:18203

		ext_glReplacementCodeuiVertex3fSUN((GLuint)rc, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_rc, jint rcByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* rc = (unsigned char*)(obj_rc?env->GetDirectBufferAddress(obj_rc):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18207

		ext_glReplacementCodeuiVertex3fvSUN((const GLuint*)(rc + rcByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiVertex3fvSUN__JJ(JNIEnv* env, jclass clazz, jlong rc, jlong v) {


//@line:18211

		ext_glReplacementCodeuiVertex3fvSUN((const GLuint*)rc, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiColor4ubVertex3fSUN(JNIEnv* env, jclass clazz, jint rc, jbyte r, jbyte g, jbyte b, jbyte a, jfloat x, jfloat y, jfloat z) {


//@line:18215

		ext_glReplacementCodeuiColor4ubVertex3fSUN((GLuint)rc, (GLubyte)r, (GLubyte)g, (GLubyte)b, (GLubyte)a, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiColor4ubVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_rc, jint rcByteOffset, jobject obj_c, jint cByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* rc = (unsigned char*)(obj_rc?env->GetDirectBufferAddress(obj_rc):0);
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18219

		ext_glReplacementCodeuiColor4ubVertex3fvSUN((const GLuint*)(rc + rcByteOffset), (const GLubyte*)(c + cByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiColor4ubVertex3fvSUN__JJJ(JNIEnv* env, jclass clazz, jlong rc, jlong c, jlong v) {


//@line:18223

		ext_glReplacementCodeuiColor4ubVertex3fvSUN((const GLuint*)rc, (const GLubyte*)c, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiColor3fVertex3fSUN(JNIEnv* env, jclass clazz, jint rc, jfloat r, jfloat g, jfloat b, jfloat x, jfloat y, jfloat z) {


//@line:18227

		ext_glReplacementCodeuiColor3fVertex3fSUN((GLuint)rc, (GLfloat)r, (GLfloat)g, (GLfloat)b, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiColor3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_rc, jint rcByteOffset, jobject obj_c, jint cByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* rc = (unsigned char*)(obj_rc?env->GetDirectBufferAddress(obj_rc):0);
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18231

		ext_glReplacementCodeuiColor3fVertex3fvSUN((const GLuint*)(rc + rcByteOffset), (const GLfloat*)(c + cByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiColor3fVertex3fvSUN__JJJ(JNIEnv* env, jclass clazz, jlong rc, jlong c, jlong v) {


//@line:18235

		ext_glReplacementCodeuiColor3fVertex3fvSUN((const GLuint*)rc, (const GLfloat*)c, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiNormal3fVertex3fSUN(JNIEnv* env, jclass clazz, jint rc, jfloat nx, jfloat ny, jfloat nz, jfloat x, jfloat y, jfloat z) {


//@line:18239

		ext_glReplacementCodeuiNormal3fVertex3fSUN((GLuint)rc, (GLfloat)nx, (GLfloat)ny, (GLfloat)nz, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiNormal3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_rc, jint rcByteOffset, jobject obj_n, jint nByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* rc = (unsigned char*)(obj_rc?env->GetDirectBufferAddress(obj_rc):0);
	unsigned char* n = (unsigned char*)(obj_n?env->GetDirectBufferAddress(obj_n):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18243

		ext_glReplacementCodeuiNormal3fVertex3fvSUN((const GLuint*)(rc + rcByteOffset), (const GLfloat*)(n + nByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiNormal3fVertex3fvSUN__JJJ(JNIEnv* env, jclass clazz, jlong rc, jlong n, jlong v) {


//@line:18247

		ext_glReplacementCodeuiNormal3fVertex3fvSUN((const GLuint*)rc, (const GLfloat*)n, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiColor4fNormal3fVertex3fSUN(JNIEnv* env, jclass clazz, jint rc, jfloat r, jfloat g, jfloat b, jfloat a, jfloat nx, jfloat ny, jfloat nz, jfloat x, jfloat y, jfloat z) {


//@line:18251

		ext_glReplacementCodeuiColor4fNormal3fVertex3fSUN((GLuint)rc, (GLfloat)r, (GLfloat)g, (GLfloat)b, (GLfloat)a, (GLfloat)nx, (GLfloat)ny, (GLfloat)nz, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiColor4fNormal3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_rc, jint rcByteOffset, jobject obj_c, jint cByteOffset, jobject obj_n, jint nByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* rc = (unsigned char*)(obj_rc?env->GetDirectBufferAddress(obj_rc):0);
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* n = (unsigned char*)(obj_n?env->GetDirectBufferAddress(obj_n):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18255

		ext_glReplacementCodeuiColor4fNormal3fVertex3fvSUN((const GLuint*)(rc + rcByteOffset), (const GLfloat*)(c + cByteOffset), (const GLfloat*)(n + nByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiColor4fNormal3fVertex3fvSUN__JJJJ(JNIEnv* env, jclass clazz, jlong rc, jlong c, jlong n, jlong v) {


//@line:18259

		ext_glReplacementCodeuiColor4fNormal3fVertex3fvSUN((const GLuint*)rc, (const GLfloat*)c, (const GLfloat*)n, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiTexCoord2fVertex3fSUN(JNIEnv* env, jclass clazz, jint rc, jfloat s, jfloat t, jfloat x, jfloat y, jfloat z) {


//@line:18263

		ext_glReplacementCodeuiTexCoord2fVertex3fSUN((GLuint)rc, (GLfloat)s, (GLfloat)t, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiTexCoord2fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_rc, jint rcByteOffset, jobject obj_tc, jint tcByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* rc = (unsigned char*)(obj_rc?env->GetDirectBufferAddress(obj_rc):0);
	unsigned char* tc = (unsigned char*)(obj_tc?env->GetDirectBufferAddress(obj_tc):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18267

		ext_glReplacementCodeuiTexCoord2fVertex3fvSUN((const GLuint*)(rc + rcByteOffset), (const GLfloat*)(tc + tcByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiTexCoord2fVertex3fvSUN__JJJ(JNIEnv* env, jclass clazz, jlong rc, jlong tc, jlong v) {


//@line:18271

		ext_glReplacementCodeuiTexCoord2fVertex3fvSUN((const GLuint*)rc, (const GLfloat*)tc, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(JNIEnv* env, jclass clazz, jint rc, jfloat s, jfloat t, jfloat nx, jfloat ny, jfloat nz, jfloat x, jfloat y, jfloat z) {


//@line:18275

		ext_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN((GLuint)rc, (GLfloat)s, (GLfloat)t, (GLfloat)nx, (GLfloat)ny, (GLfloat)nz, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_rc, jint rcByteOffset, jobject obj_tc, jint tcByteOffset, jobject obj_n, jint nByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* rc = (unsigned char*)(obj_rc?env->GetDirectBufferAddress(obj_rc):0);
	unsigned char* tc = (unsigned char*)(obj_tc?env->GetDirectBufferAddress(obj_tc):0);
	unsigned char* n = (unsigned char*)(obj_n?env->GetDirectBufferAddress(obj_n):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18279

		ext_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN((const GLuint*)(rc + rcByteOffset), (const GLfloat*)(tc + tcByteOffset), (const GLfloat*)(n + nByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN__JJJJ(JNIEnv* env, jclass clazz, jlong rc, jlong tc, jlong n, jlong v) {


//@line:18283

		ext_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN((const GLuint*)rc, (const GLfloat*)tc, (const GLfloat*)n, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(JNIEnv* env, jclass clazz, jint rc, jfloat s, jfloat t, jfloat r, jfloat g, jfloat b, jfloat a, jfloat nx, jfloat ny, jfloat nz, jfloat x, jfloat y, jfloat z) {


//@line:18287

		ext_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN((GLuint)rc, (GLfloat)s, (GLfloat)t, (GLfloat)r, (GLfloat)g, (GLfloat)b, (GLfloat)a, (GLfloat)nx, (GLfloat)ny, (GLfloat)nz, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_rc, jint rcByteOffset, jobject obj_tc, jint tcByteOffset, jobject obj_c, jint cByteOffset, jobject obj_n, jint nByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* rc = (unsigned char*)(obj_rc?env->GetDirectBufferAddress(obj_rc):0);
	unsigned char* tc = (unsigned char*)(obj_tc?env->GetDirectBufferAddress(obj_tc):0);
	unsigned char* c = (unsigned char*)(obj_c?env->GetDirectBufferAddress(obj_c):0);
	unsigned char* n = (unsigned char*)(obj_n?env->GetDirectBufferAddress(obj_n):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18291

		ext_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN((const GLuint*)(rc + rcByteOffset), (const GLfloat*)(tc + tcByteOffset), (const GLfloat*)(c + cByteOffset), (const GLfloat*)(n + nByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN__JJJJJ(JNIEnv* env, jclass clazz, jlong rc, jlong tc, jlong c, jlong n, jlong v) {


//@line:18295

		ext_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN((const GLuint*)rc, (const GLfloat*)tc, (const GLfloat*)c, (const GLfloat*)n, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendFuncSeparateEXT(JNIEnv* env, jclass clazz, jint sfactorRGB, jint dfactorRGB, jint sfactorAlpha, jint dfactorAlpha) {


//@line:18299

		ext_glBlendFuncSeparateEXT((GLenum)sfactorRGB, (GLenum)dfactorRGB, (GLenum)sfactorAlpha, (GLenum)dfactorAlpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendFuncSeparateINGR(JNIEnv* env, jclass clazz, jint sfactorRGB, jint dfactorRGB, jint sfactorAlpha, jint dfactorAlpha) {


//@line:18303

		ext_glBlendFuncSeparateINGR((GLenum)sfactorRGB, (GLenum)dfactorRGB, (GLenum)sfactorAlpha, (GLenum)dfactorAlpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexWeightfEXT(JNIEnv* env, jclass clazz, jfloat weight) {


//@line:18307

		ext_glVertexWeightfEXT((GLfloat)weight);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexWeightfvEXT__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_weight, jint weightByteOffset) {
	unsigned char* weight = (unsigned char*)(obj_weight?env->GetDirectBufferAddress(obj_weight):0);


//@line:18311

		ext_glVertexWeightfvEXT((const GLfloat*)(weight + weightByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexWeightfvEXT__J(JNIEnv* env, jclass clazz, jlong weight) {


//@line:18315

		ext_glVertexWeightfvEXT((const GLfloat*)weight);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexWeightPointerEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18319

		ext_glVertexWeightPointerEXT((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexWeightPointerEXT__IIIJ(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong pointer) {


//@line:18323

		ext_glVertexWeightPointerEXT((GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFlushVertexArrayRangeNV(JNIEnv* env, jclass clazz) {


//@line:18327

		ext_glFlushVertexArrayRangeNV();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayRangeNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint length, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18331

		ext_glVertexArrayRangeNV((GLsizei)length, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayRangeNV__IJ(JNIEnv* env, jclass clazz, jint length, jlong pointer) {


//@line:18335

		ext_glVertexArrayRangeNV((GLsizei)length, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCombinerParameterfvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18339

		ext_glCombinerParameterfvNV((GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCombinerParameterfvNV__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:18343

		ext_glCombinerParameterfvNV((GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCombinerParameterfNV(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:18347

		ext_glCombinerParameterfNV((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCombinerParameterivNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18351

		ext_glCombinerParameterivNV((GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCombinerParameterivNV__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:18355

		ext_glCombinerParameterivNV((GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCombinerParameteriNV(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:18359

		ext_glCombinerParameteriNV((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCombinerInputNV(JNIEnv* env, jclass clazz, jint stage, jint portion, jint variable, jint input, jint mapping, jint componentUsage) {


//@line:18363

		ext_glCombinerInputNV((GLenum)stage, (GLenum)portion, (GLenum)variable, (GLenum)input, (GLenum)mapping, (GLenum)componentUsage);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCombinerOutputNV(JNIEnv* env, jclass clazz, jint stage, jint portion, jint abOutput, jint cdOutput, jint sumOutput, jint scale, jint bias, jboolean abDotProduct, jboolean cdDotProduct, jboolean muxSum) {


//@line:18367

		ext_glCombinerOutputNV((GLenum)stage, (GLenum)portion, (GLenum)abOutput, (GLenum)cdOutput, (GLenum)sumOutput, (GLenum)scale, (GLenum)bias, (GLboolean)abDotProduct, (GLboolean)cdDotProduct, (GLboolean)muxSum);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFinalCombinerInputNV(JNIEnv* env, jclass clazz, jint variable, jint input, jint mapping, jint componentUsage) {


//@line:18371

		ext_glFinalCombinerInputNV((GLenum)variable, (GLenum)input, (GLenum)mapping, (GLenum)componentUsage);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCombinerInputParameterfvNV__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stage, jint portion, jint variable, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18375

		ext_glGetCombinerInputParameterfvNV((GLenum)stage, (GLenum)portion, (GLenum)variable, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCombinerInputParameterfvNV__IIIIJ(JNIEnv* env, jclass clazz, jint stage, jint portion, jint variable, jint pname, jlong params) {


//@line:18379

		ext_glGetCombinerInputParameterfvNV((GLenum)stage, (GLenum)portion, (GLenum)variable, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCombinerInputParameterivNV__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stage, jint portion, jint variable, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18383

		ext_glGetCombinerInputParameterivNV((GLenum)stage, (GLenum)portion, (GLenum)variable, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCombinerInputParameterivNV__IIIIJ(JNIEnv* env, jclass clazz, jint stage, jint portion, jint variable, jint pname, jlong params) {


//@line:18387

		ext_glGetCombinerInputParameterivNV((GLenum)stage, (GLenum)portion, (GLenum)variable, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCombinerOutputParameterfvNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stage, jint portion, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18391

		ext_glGetCombinerOutputParameterfvNV((GLenum)stage, (GLenum)portion, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCombinerOutputParameterfvNV__IIIJ(JNIEnv* env, jclass clazz, jint stage, jint portion, jint pname, jlong params) {


//@line:18395

		ext_glGetCombinerOutputParameterfvNV((GLenum)stage, (GLenum)portion, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCombinerOutputParameterivNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stage, jint portion, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18399

		ext_glGetCombinerOutputParameterivNV((GLenum)stage, (GLenum)portion, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCombinerOutputParameterivNV__IIIJ(JNIEnv* env, jclass clazz, jint stage, jint portion, jint pname, jlong params) {


//@line:18403

		ext_glGetCombinerOutputParameterivNV((GLenum)stage, (GLenum)portion, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFinalCombinerInputParameterfvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint variable, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18407

		ext_glGetFinalCombinerInputParameterfvNV((GLenum)variable, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFinalCombinerInputParameterfvNV__IIJ(JNIEnv* env, jclass clazz, jint variable, jint pname, jlong params) {


//@line:18411

		ext_glGetFinalCombinerInputParameterfvNV((GLenum)variable, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFinalCombinerInputParameterivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint variable, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18415

		ext_glGetFinalCombinerInputParameterivNV((GLenum)variable, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFinalCombinerInputParameterivNV__IIJ(JNIEnv* env, jclass clazz, jint variable, jint pname, jlong params) {


//@line:18419

		ext_glGetFinalCombinerInputParameterivNV((GLenum)variable, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glResizeBuffersMESA(JNIEnv* env, jclass clazz) {


//@line:18423

		ext_glResizeBuffersMESA();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2dMESA(JNIEnv* env, jclass clazz, jdouble x, jdouble y) {


//@line:18427

		ext_glWindowPos2dMESA((GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2dvMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18431

		ext_glWindowPos2dvMESA((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2dvMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18435

		ext_glWindowPos2dvMESA((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2fMESA(JNIEnv* env, jclass clazz, jfloat x, jfloat y) {


//@line:18439

		ext_glWindowPos2fMESA((GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2fvMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18443

		ext_glWindowPos2fvMESA((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2fvMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18447

		ext_glWindowPos2fvMESA((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2iMESA(JNIEnv* env, jclass clazz, jint x, jint y) {


//@line:18451

		ext_glWindowPos2iMESA((GLint)x, (GLint)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2ivMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18455

		ext_glWindowPos2ivMESA((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2ivMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18459

		ext_glWindowPos2ivMESA((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2sMESA(JNIEnv* env, jclass clazz, jshort x, jshort y) {


//@line:18463

		ext_glWindowPos2sMESA((GLshort)x, (GLshort)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2svMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18467

		ext_glWindowPos2svMESA((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos2svMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18471

		ext_glWindowPos2svMESA((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3dMESA(JNIEnv* env, jclass clazz, jdouble x, jdouble y, jdouble z) {


//@line:18475

		ext_glWindowPos3dMESA((GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3dvMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18479

		ext_glWindowPos3dvMESA((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3dvMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18483

		ext_glWindowPos3dvMESA((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3fMESA(JNIEnv* env, jclass clazz, jfloat x, jfloat y, jfloat z) {


//@line:18487

		ext_glWindowPos3fMESA((GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3fvMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18491

		ext_glWindowPos3fvMESA((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3fvMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18495

		ext_glWindowPos3fvMESA((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3iMESA(JNIEnv* env, jclass clazz, jint x, jint y, jint z) {


//@line:18499

		ext_glWindowPos3iMESA((GLint)x, (GLint)y, (GLint)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3ivMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18503

		ext_glWindowPos3ivMESA((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3ivMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18507

		ext_glWindowPos3ivMESA((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3sMESA(JNIEnv* env, jclass clazz, jshort x, jshort y, jshort z) {


//@line:18511

		ext_glWindowPos3sMESA((GLshort)x, (GLshort)y, (GLshort)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3svMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18515

		ext_glWindowPos3svMESA((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos3svMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18519

		ext_glWindowPos3svMESA((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4dMESA(JNIEnv* env, jclass clazz, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:18523

		ext_glWindowPos4dMESA((GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4dvMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18527

		ext_glWindowPos4dvMESA((const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4dvMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18531

		ext_glWindowPos4dvMESA((const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4fMESA(JNIEnv* env, jclass clazz, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:18535

		ext_glWindowPos4fMESA((GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4fvMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18539

		ext_glWindowPos4fvMESA((const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4fvMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18543

		ext_glWindowPos4fvMESA((const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4iMESA(JNIEnv* env, jclass clazz, jint x, jint y, jint z, jint w) {


//@line:18547

		ext_glWindowPos4iMESA((GLint)x, (GLint)y, (GLint)z, (GLint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4ivMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18551

		ext_glWindowPos4ivMESA((const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4ivMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18555

		ext_glWindowPos4ivMESA((const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4sMESA(JNIEnv* env, jclass clazz, jshort x, jshort y, jshort z, jshort w) {


//@line:18559

		ext_glWindowPos4sMESA((GLshort)x, (GLshort)y, (GLshort)z, (GLshort)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4svMESA__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18563

		ext_glWindowPos4svMESA((const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWindowPos4svMESA__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:18567

		ext_glWindowPos4svMESA((const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiModeDrawArraysIBM__Ljava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2III(JNIEnv* env, jclass clazz, jobject obj_mode, jint modeByteOffset, jobject obj_first, jint firstByteOffset, jobject obj_count, jint countByteOffset, jint primcount, jint modestride) {
	unsigned char* mode = (unsigned char*)(obj_mode?env->GetDirectBufferAddress(obj_mode):0);
	unsigned char* first = (unsigned char*)(obj_first?env->GetDirectBufferAddress(obj_first):0);
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);


//@line:18571

		ext_glMultiModeDrawArraysIBM((const GLenum*)(mode + modeByteOffset), (const GLint*)(first + firstByteOffset), (const GLsizei*)(count + countByteOffset), (GLsizei)primcount, (GLint)modestride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiModeDrawArraysIBM__JJJII(JNIEnv* env, jclass clazz, jlong mode, jlong first, jlong count, jint primcount, jint modestride) {


//@line:18575

		ext_glMultiModeDrawArraysIBM((const GLenum*)mode, (const GLint*)first, (const GLsizei*)count, (GLsizei)primcount, (GLint)modestride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiModeDrawElementsIBM__Ljava_nio_Buffer_2ILjava_nio_Buffer_2IILjava_nio_Buffer_2III(JNIEnv* env, jclass clazz, jobject obj_mode, jint modeByteOffset, jobject obj_count, jint countByteOffset, jint type, jobject obj_indices, jint indicesByteOffset, jint primcount, jint modestride) {
	unsigned char* mode = (unsigned char*)(obj_mode?env->GetDirectBufferAddress(obj_mode):0);
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:18579

		ext_glMultiModeDrawElementsIBM((const GLenum*)(mode + modeByteOffset), (const GLsizei*)(count + countByteOffset), (GLenum)type, (const GLvoid**)(indices + indicesByteOffset), (GLsizei)primcount, (GLint)modestride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiModeDrawElementsIBM__JJIJII(JNIEnv* env, jclass clazz, jlong mode, jlong count, jint type, jlong indices, jint primcount, jint modestride) {


//@line:18583

		ext_glMultiModeDrawElementsIBM((const GLenum*)mode, (const GLsizei*)count, (GLenum)type, (const GLvoid**)indices, (GLsizei)primcount, (GLint)modestride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorPointerListIBM__IIILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset, jint ptrstride) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18587

		ext_glColorPointerListIBM((GLint)size, (GLenum)type, (GLint)stride, (const GLvoid**)(pointer + pointerByteOffset), (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorPointerListIBM__IIIJI(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong pointer, jint ptrstride) {


//@line:18591

		ext_glColorPointerListIBM((GLint)size, (GLenum)type, (GLint)stride, (const GLvoid**)pointer, (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColorPointerListIBM__IIILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset, jint ptrstride) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18595

		ext_glSecondaryColorPointerListIBM((GLint)size, (GLenum)type, (GLint)stride, (const GLvoid**)(pointer + pointerByteOffset), (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColorPointerListIBM__IIIJI(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong pointer, jint ptrstride) {


//@line:18599

		ext_glSecondaryColorPointerListIBM((GLint)size, (GLenum)type, (GLint)stride, (const GLvoid**)pointer, (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEdgeFlagPointerListIBM__ILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint stride, jobject obj_pointer, jint pointerByteOffset, jint ptrstride) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18603

		ext_glEdgeFlagPointerListIBM((GLint)stride, (const GLboolean**)(pointer + pointerByteOffset), (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEdgeFlagPointerListIBM__IJI(JNIEnv* env, jclass clazz, jint stride, jlong pointer, jint ptrstride) {


//@line:18607

		ext_glEdgeFlagPointerListIBM((GLint)stride, (const GLboolean**)pointer, (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordPointerListIBM__IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset, jint ptrstride) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18611

		ext_glFogCoordPointerListIBM((GLenum)type, (GLint)stride, (const GLvoid**)(pointer + pointerByteOffset), (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordPointerListIBM__IIJI(JNIEnv* env, jclass clazz, jint type, jint stride, jlong pointer, jint ptrstride) {


//@line:18615

		ext_glFogCoordPointerListIBM((GLenum)type, (GLint)stride, (const GLvoid**)pointer, (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexPointerListIBM__IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset, jint ptrstride) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18619

		ext_glIndexPointerListIBM((GLenum)type, (GLint)stride, (const GLvoid**)(pointer + pointerByteOffset), (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexPointerListIBM__IIJI(JNIEnv* env, jclass clazz, jint type, jint stride, jlong pointer, jint ptrstride) {


//@line:18623

		ext_glIndexPointerListIBM((GLenum)type, (GLint)stride, (const GLvoid**)pointer, (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalPointerListIBM__IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset, jint ptrstride) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18627

		ext_glNormalPointerListIBM((GLenum)type, (GLint)stride, (const GLvoid**)(pointer + pointerByteOffset), (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalPointerListIBM__IIJI(JNIEnv* env, jclass clazz, jint type, jint stride, jlong pointer, jint ptrstride) {


//@line:18631

		ext_glNormalPointerListIBM((GLenum)type, (GLint)stride, (const GLvoid**)pointer, (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordPointerListIBM__IIILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset, jint ptrstride) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18635

		ext_glTexCoordPointerListIBM((GLint)size, (GLenum)type, (GLint)stride, (const GLvoid**)(pointer + pointerByteOffset), (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordPointerListIBM__IIIJI(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong pointer, jint ptrstride) {


//@line:18639

		ext_glTexCoordPointerListIBM((GLint)size, (GLenum)type, (GLint)stride, (const GLvoid**)pointer, (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexPointerListIBM__IIILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset, jint ptrstride) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18643

		ext_glVertexPointerListIBM((GLint)size, (GLenum)type, (GLint)stride, (const GLvoid**)(pointer + pointerByteOffset), (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexPointerListIBM__IIIJI(JNIEnv* env, jclass clazz, jint size, jint type, jint stride, jlong pointer, jint ptrstride) {


//@line:18647

		ext_glVertexPointerListIBM((GLint)size, (GLenum)type, (GLint)stride, (const GLvoid**)pointer, (GLint)ptrstride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTbufferMask3DFX(JNIEnv* env, jclass clazz, jint mask) {


//@line:18651

		ext_glTbufferMask3DFX((GLuint)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSampleMaskEXT(JNIEnv* env, jclass clazz, jfloat value, jboolean invert) {


//@line:18655

		ext_glSampleMaskEXT((GLclampf)value, (GLboolean)invert);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSamplePatternEXT(JNIEnv* env, jclass clazz, jint pattern) {


//@line:18659

		ext_glSamplePatternEXT((GLenum)pattern);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureColorMaskSGIS(JNIEnv* env, jclass clazz, jboolean red, jboolean green, jboolean blue, jboolean alpha) {


//@line:18663

		ext_glTextureColorMaskSGIS((GLboolean)red, (GLboolean)green, (GLboolean)blue, (GLboolean)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIglooInterfaceSGIX__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18667

		ext_glIglooInterfaceSGIX((GLenum)pname, (const GLvoid*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIglooInterfaceSGIX__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:18671

		ext_glIglooInterfaceSGIX((GLenum)pname, (const GLvoid*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteFencesNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_fences, jint fencesByteOffset) {
	unsigned char* fences = (unsigned char*)(obj_fences?env->GetDirectBufferAddress(obj_fences):0);


//@line:18675

		ext_glDeleteFencesNV((GLsizei)n, (const GLuint*)(fences + fencesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteFencesNV__IJ(JNIEnv* env, jclass clazz, jint n, jlong fences) {


//@line:18679

		ext_glDeleteFencesNV((GLsizei)n, (const GLuint*)fences);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenFencesNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_fences, jint fencesByteOffset) {
	unsigned char* fences = (unsigned char*)(obj_fences?env->GetDirectBufferAddress(obj_fences):0);


//@line:18683

		ext_glGenFencesNV((GLsizei)n, (GLuint*)(fences + fencesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenFencesNV__IJ(JNIEnv* env, jclass clazz, jint n, jlong fences) {


//@line:18687

		ext_glGenFencesNV((GLsizei)n, (GLuint*)fences);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsFenceNV(JNIEnv* env, jclass clazz, jint fence) {


//@line:18691

		return (jboolean)ext_glIsFenceNV((GLuint)fence);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glTestFenceNV(JNIEnv* env, jclass clazz, jint fence) {


//@line:18695

		return (jboolean)ext_glTestFenceNV((GLuint)fence);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFenceivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint fence, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18699

		ext_glGetFenceivNV((GLuint)fence, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFenceivNV__IIJ(JNIEnv* env, jclass clazz, jint fence, jint pname, jlong params) {


//@line:18703

		ext_glGetFenceivNV((GLuint)fence, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFinishFenceNV(JNIEnv* env, jclass clazz, jint fence) {


//@line:18707

		ext_glFinishFenceNV((GLuint)fence);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSetFenceNV(JNIEnv* env, jclass clazz, jint fence, jint condition) {


//@line:18711

		ext_glSetFenceNV((GLuint)fence, (GLenum)condition);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapControlPointsNV__IIIIIIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint type, jint ustride, jint vstride, jint uorder, jint vorder, jboolean packed, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:18715

		ext_glMapControlPointsNV((GLenum)target, (GLuint)index, (GLenum)type, (GLsizei)ustride, (GLsizei)vstride, (GLint)uorder, (GLint)vorder, (GLboolean)packed, (const GLvoid*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapControlPointsNV__IIIIIIIZJ(JNIEnv* env, jclass clazz, jint target, jint index, jint type, jint ustride, jint vstride, jint uorder, jint vorder, jboolean packed, jlong points) {


//@line:18719

		ext_glMapControlPointsNV((GLenum)target, (GLuint)index, (GLenum)type, (GLsizei)ustride, (GLsizei)vstride, (GLint)uorder, (GLint)vorder, (GLboolean)packed, (const GLvoid*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapParameterivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18723

		ext_glMapParameterivNV((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapParameterivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:18727

		ext_glMapParameterivNV((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapParameterfvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18731

		ext_glMapParameterfvNV((GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapParameterfvNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:18735

		ext_glMapParameterfvNV((GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapControlPointsNV__IIIIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint type, jint ustride, jint vstride, jboolean packed, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:18739

		ext_glGetMapControlPointsNV((GLenum)target, (GLuint)index, (GLenum)type, (GLsizei)ustride, (GLsizei)vstride, (GLboolean)packed, (GLvoid*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapControlPointsNV__IIIIIZJ(JNIEnv* env, jclass clazz, jint target, jint index, jint type, jint ustride, jint vstride, jboolean packed, jlong points) {


//@line:18743

		ext_glGetMapControlPointsNV((GLenum)target, (GLuint)index, (GLenum)type, (GLsizei)ustride, (GLsizei)vstride, (GLboolean)packed, (GLvoid*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapParameterivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18747

		ext_glGetMapParameterivNV((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapParameterivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:18751

		ext_glGetMapParameterivNV((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapParameterfvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18755

		ext_glGetMapParameterfvNV((GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapParameterfvNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:18759

		ext_glGetMapParameterfvNV((GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapAttribParameterivNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18763

		ext_glGetMapAttribParameterivNV((GLenum)target, (GLuint)index, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapAttribParameterivNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint pname, jlong params) {


//@line:18767

		ext_glGetMapAttribParameterivNV((GLenum)target, (GLuint)index, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapAttribParameterfvNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18771

		ext_glGetMapAttribParameterfvNV((GLenum)target, (GLuint)index, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapAttribParameterfvNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint pname, jlong params) {


//@line:18775

		ext_glGetMapAttribParameterfvNV((GLenum)target, (GLuint)index, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalMapsNV(JNIEnv* env, jclass clazz, jint target, jint mode) {


//@line:18779

		ext_glEvalMapsNV((GLenum)target, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCombinerStageParameterfvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stage, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18783

		ext_glCombinerStageParameterfvNV((GLenum)stage, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCombinerStageParameterfvNV__IIJ(JNIEnv* env, jclass clazz, jint stage, jint pname, jlong params) {


//@line:18787

		ext_glCombinerStageParameterfvNV((GLenum)stage, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCombinerStageParameterfvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stage, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18791

		ext_glGetCombinerStageParameterfvNV((GLenum)stage, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCombinerStageParameterfvNV__IIJ(JNIEnv* env, jclass clazz, jint stage, jint pname, jlong params) {


//@line:18795

		ext_glGetCombinerStageParameterfvNV((GLenum)stage, (GLenum)pname, (GLfloat*)params);
	

}

static inline jboolean wrapped_Java_com_badlogic_jglfw_gl_GL_glAreProgramsResidentNV__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint n, jobject obj_programs, jint programsByteOffset, jobject obj_residences, jint residencesByteOffset, unsigned char* programs, unsigned char* residences) {

//@line:18799

		return (jboolean)ext_glAreProgramsResidentNV((GLsizei)n, (const GLuint*)(programs + programsByteOffset), (GLboolean*)(residences + residencesByteOffset));
	
}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glAreProgramsResidentNV__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_programs, jint programsByteOffset, jobject obj_residences, jint residencesByteOffset) {
	unsigned char* programs = (unsigned char*)(obj_programs?env->GetDirectBufferAddress(obj_programs):0);
	unsigned char* residences = (unsigned char*)(obj_residences?env->GetDirectBufferAddress(obj_residences):0);

	jboolean JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glAreProgramsResidentNV__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(env, clazz, n, obj_programs, programsByteOffset, obj_residences, residencesByteOffset, programs, residences);


	return JNI_returnValue;
}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glAreProgramsResidentNV__IJJ(JNIEnv* env, jclass clazz, jint n, jlong programs, jlong residences) {


//@line:18803

		return (jboolean)ext_glAreProgramsResidentNV((GLsizei)n, (const GLuint*)programs, (GLboolean*)residences);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindProgramNV(JNIEnv* env, jclass clazz, jint target, jint id) {


//@line:18807

		ext_glBindProgramNV((GLenum)target, (GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteProgramsNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_programs, jint programsByteOffset) {
	unsigned char* programs = (unsigned char*)(obj_programs?env->GetDirectBufferAddress(obj_programs):0);


//@line:18811

		ext_glDeleteProgramsNV((GLsizei)n, (const GLuint*)(programs + programsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteProgramsNV__IJ(JNIEnv* env, jclass clazz, jint n, jlong programs) {


//@line:18815

		ext_glDeleteProgramsNV((GLsizei)n, (const GLuint*)programs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glExecuteProgramNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint id, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18819

		ext_glExecuteProgramNV((GLenum)target, (GLuint)id, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glExecuteProgramNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint id, jlong params) {


//@line:18823

		ext_glExecuteProgramNV((GLenum)target, (GLuint)id, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenProgramsNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_programs, jint programsByteOffset) {
	unsigned char* programs = (unsigned char*)(obj_programs?env->GetDirectBufferAddress(obj_programs):0);


//@line:18827

		ext_glGenProgramsNV((GLsizei)n, (GLuint*)(programs + programsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenProgramsNV__IJ(JNIEnv* env, jclass clazz, jint n, jlong programs) {


//@line:18831

		ext_glGenProgramsNV((GLsizei)n, (GLuint*)programs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramParameterdvNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18835

		ext_glGetProgramParameterdvNV((GLenum)target, (GLuint)index, (GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramParameterdvNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint pname, jlong params) {


//@line:18839

		ext_glGetProgramParameterdvNV((GLenum)target, (GLuint)index, (GLenum)pname, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramParameterfvNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18843

		ext_glGetProgramParameterfvNV((GLenum)target, (GLuint)index, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramParameterfvNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint pname, jlong params) {


//@line:18847

		ext_glGetProgramParameterfvNV((GLenum)target, (GLuint)index, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18851

		ext_glGetProgramivNV((GLuint)id, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramivNV__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:18855

		ext_glGetProgramivNV((GLuint)id, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramStringNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_program, jint programByteOffset) {
	unsigned char* program = (unsigned char*)(obj_program?env->GetDirectBufferAddress(obj_program):0);


//@line:18859

		ext_glGetProgramStringNV((GLuint)id, (GLenum)pname, (GLubyte*)(program + programByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramStringNV__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong program) {


//@line:18863

		ext_glGetProgramStringNV((GLuint)id, (GLenum)pname, (GLubyte*)program);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTrackMatrixivNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint address, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18867

		ext_glGetTrackMatrixivNV((GLenum)target, (GLuint)address, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTrackMatrixivNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint address, jint pname, jlong params) {


//@line:18871

		ext_glGetTrackMatrixivNV((GLenum)target, (GLuint)address, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribdvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18875

		ext_glGetVertexAttribdvNV((GLuint)index, (GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribdvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:18879

		ext_glGetVertexAttribdvNV((GLuint)index, (GLenum)pname, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribfvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18883

		ext_glGetVertexAttribfvNV((GLuint)index, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribfvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:18887

		ext_glGetVertexAttribfvNV((GLuint)index, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:18891

		ext_glGetVertexAttribivNV((GLuint)index, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribivNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:18895

		ext_glGetVertexAttribivNV((GLuint)index, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribPointervNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18899

		ext_glGetVertexAttribPointervNV((GLuint)index, (GLenum)pname, (GLvoid**)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribPointervNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong pointer) {


//@line:18903

		ext_glGetVertexAttribPointervNV((GLuint)index, (GLenum)pname, (GLvoid**)pointer);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsProgramNV(JNIEnv* env, jclass clazz, jint id) {


//@line:18907

		return (jboolean)ext_glIsProgramNV((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadProgramNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint id, jint len, jobject obj_program, jint programByteOffset) {
	unsigned char* program = (unsigned char*)(obj_program?env->GetDirectBufferAddress(obj_program):0);


//@line:18911

		ext_glLoadProgramNV((GLenum)target, (GLuint)id, (GLsizei)len, (const GLubyte*)(program + programByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadProgramNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint id, jint len, jlong program) {


//@line:18915

		ext_glLoadProgramNV((GLenum)target, (GLuint)id, (GLsizei)len, (const GLubyte*)program);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameter4dNV(JNIEnv* env, jclass clazz, jint target, jint index, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:18919

		ext_glProgramParameter4dNV((GLenum)target, (GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameter4dvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18923

		ext_glProgramParameter4dvNV((GLenum)target, (GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameter4dvNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong v) {


//@line:18927

		ext_glProgramParameter4dvNV((GLenum)target, (GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameter4fNV(JNIEnv* env, jclass clazz, jint target, jint index, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:18931

		ext_glProgramParameter4fNV((GLenum)target, (GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameter4fvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18935

		ext_glProgramParameter4fvNV((GLenum)target, (GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameter4fvNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong v) {


//@line:18939

		ext_glProgramParameter4fvNV((GLenum)target, (GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameters4dvNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18943

		ext_glProgramParameters4dvNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameters4dvNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jlong v) {


//@line:18947

		ext_glProgramParameters4dvNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameters4fvNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18951

		ext_glProgramParameters4fvNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameters4fvNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jlong v) {


//@line:18955

		ext_glProgramParameters4fvNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRequestResidentProgramsNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_programs, jint programsByteOffset) {
	unsigned char* programs = (unsigned char*)(obj_programs?env->GetDirectBufferAddress(obj_programs):0);


//@line:18959

		ext_glRequestResidentProgramsNV((GLsizei)n, (const GLuint*)(programs + programsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRequestResidentProgramsNV__IJ(JNIEnv* env, jclass clazz, jint n, jlong programs) {


//@line:18963

		ext_glRequestResidentProgramsNV((GLsizei)n, (const GLuint*)programs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTrackMatrixNV(JNIEnv* env, jclass clazz, jint target, jint address, jint matrix, jint transform) {


//@line:18967

		ext_glTrackMatrixNV((GLenum)target, (GLuint)address, (GLenum)matrix, (GLenum)transform);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribPointerNV__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint fsize, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:18971

		ext_glVertexAttribPointerNV((GLuint)index, (GLint)fsize, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribPointerNV__IIIIJ(JNIEnv* env, jclass clazz, jint index, jint fsize, jint type, jint stride, jlong pointer) {


//@line:18975

		ext_glVertexAttribPointerNV((GLuint)index, (GLint)fsize, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1dNV(JNIEnv* env, jclass clazz, jint index, jdouble x) {


//@line:18979

		ext_glVertexAttrib1dNV((GLuint)index, (GLdouble)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1dvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18983

		ext_glVertexAttrib1dvNV((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1dvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:18987

		ext_glVertexAttrib1dvNV((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1fNV(JNIEnv* env, jclass clazz, jint index, jfloat x) {


//@line:18991

		ext_glVertexAttrib1fNV((GLuint)index, (GLfloat)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1fvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:18995

		ext_glVertexAttrib1fvNV((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1fvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:18999

		ext_glVertexAttrib1fvNV((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1sNV(JNIEnv* env, jclass clazz, jint index, jshort x) {


//@line:19003

		ext_glVertexAttrib1sNV((GLuint)index, (GLshort)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1svNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19007

		ext_glVertexAttrib1svNV((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1svNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19011

		ext_glVertexAttrib1svNV((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2dNV(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y) {


//@line:19015

		ext_glVertexAttrib2dNV((GLuint)index, (GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2dvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19019

		ext_glVertexAttrib2dvNV((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2dvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19023

		ext_glVertexAttrib2dvNV((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2fNV(JNIEnv* env, jclass clazz, jint index, jfloat x, jfloat y) {


//@line:19027

		ext_glVertexAttrib2fNV((GLuint)index, (GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2fvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19031

		ext_glVertexAttrib2fvNV((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2fvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19035

		ext_glVertexAttrib2fvNV((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2sNV(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y) {


//@line:19039

		ext_glVertexAttrib2sNV((GLuint)index, (GLshort)x, (GLshort)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2svNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19043

		ext_glVertexAttrib2svNV((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2svNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19047

		ext_glVertexAttrib2svNV((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3dNV(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y, jdouble z) {


//@line:19051

		ext_glVertexAttrib3dNV((GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3dvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19055

		ext_glVertexAttrib3dvNV((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3dvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19059

		ext_glVertexAttrib3dvNV((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3fNV(JNIEnv* env, jclass clazz, jint index, jfloat x, jfloat y, jfloat z) {


//@line:19063

		ext_glVertexAttrib3fNV((GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3fvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19067

		ext_glVertexAttrib3fvNV((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3fvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19071

		ext_glVertexAttrib3fvNV((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3sNV(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y, jshort z) {


//@line:19075

		ext_glVertexAttrib3sNV((GLuint)index, (GLshort)x, (GLshort)y, (GLshort)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3svNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19079

		ext_glVertexAttrib3svNV((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3svNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19083

		ext_glVertexAttrib3svNV((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4dNV(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:19087

		ext_glVertexAttrib4dNV((GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4dvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19091

		ext_glVertexAttrib4dvNV((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4dvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19095

		ext_glVertexAttrib4dvNV((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4fNV(JNIEnv* env, jclass clazz, jint index, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:19099

		ext_glVertexAttrib4fNV((GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4fvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19103

		ext_glVertexAttrib4fvNV((GLuint)index, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4fvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19107

		ext_glVertexAttrib4fvNV((GLuint)index, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4sNV(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y, jshort z, jshort w) {


//@line:19111

		ext_glVertexAttrib4sNV((GLuint)index, (GLshort)x, (GLshort)y, (GLshort)z, (GLshort)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4svNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19115

		ext_glVertexAttrib4svNV((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4svNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19119

		ext_glVertexAttrib4svNV((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4ubNV(JNIEnv* env, jclass clazz, jint index, jbyte x, jbyte y, jbyte z, jbyte w) {


//@line:19123

		ext_glVertexAttrib4ubNV((GLuint)index, (GLubyte)x, (GLubyte)y, (GLubyte)z, (GLubyte)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4ubvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19127

		ext_glVertexAttrib4ubvNV((GLuint)index, (const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4ubvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:19131

		ext_glVertexAttrib4ubvNV((GLuint)index, (const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs1dvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19135

		ext_glVertexAttribs1dvNV((GLuint)index, (GLsizei)count, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs1dvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19139

		ext_glVertexAttribs1dvNV((GLuint)index, (GLsizei)count, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs1fvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19143

		ext_glVertexAttribs1fvNV((GLuint)index, (GLsizei)count, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs1fvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19147

		ext_glVertexAttribs1fvNV((GLuint)index, (GLsizei)count, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs1svNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19151

		ext_glVertexAttribs1svNV((GLuint)index, (GLsizei)count, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs1svNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19155

		ext_glVertexAttribs1svNV((GLuint)index, (GLsizei)count, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs2dvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19159

		ext_glVertexAttribs2dvNV((GLuint)index, (GLsizei)count, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs2dvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19163

		ext_glVertexAttribs2dvNV((GLuint)index, (GLsizei)count, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs2fvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19167

		ext_glVertexAttribs2fvNV((GLuint)index, (GLsizei)count, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs2fvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19171

		ext_glVertexAttribs2fvNV((GLuint)index, (GLsizei)count, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs2svNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19175

		ext_glVertexAttribs2svNV((GLuint)index, (GLsizei)count, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs2svNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19179

		ext_glVertexAttribs2svNV((GLuint)index, (GLsizei)count, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs3dvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19183

		ext_glVertexAttribs3dvNV((GLuint)index, (GLsizei)count, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs3dvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19187

		ext_glVertexAttribs3dvNV((GLuint)index, (GLsizei)count, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs3fvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19191

		ext_glVertexAttribs3fvNV((GLuint)index, (GLsizei)count, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs3fvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19195

		ext_glVertexAttribs3fvNV((GLuint)index, (GLsizei)count, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs3svNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19199

		ext_glVertexAttribs3svNV((GLuint)index, (GLsizei)count, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs3svNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19203

		ext_glVertexAttribs3svNV((GLuint)index, (GLsizei)count, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs4dvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19207

		ext_glVertexAttribs4dvNV((GLuint)index, (GLsizei)count, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs4dvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19211

		ext_glVertexAttribs4dvNV((GLuint)index, (GLsizei)count, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs4fvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19215

		ext_glVertexAttribs4fvNV((GLuint)index, (GLsizei)count, (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs4fvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19219

		ext_glVertexAttribs4fvNV((GLuint)index, (GLsizei)count, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs4svNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19223

		ext_glVertexAttribs4svNV((GLuint)index, (GLsizei)count, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs4svNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19227

		ext_glVertexAttribs4svNV((GLuint)index, (GLsizei)count, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs4ubvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint count, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:19231

		ext_glVertexAttribs4ubvNV((GLuint)index, (GLsizei)count, (const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs4ubvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint count, jlong v) {


//@line:19235

		ext_glVertexAttribs4ubvNV((GLuint)index, (GLsizei)count, (const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexBumpParameterivATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:19239

		ext_glTexBumpParameterivATI((GLenum)pname, (const GLint*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexBumpParameterivATI__IJ(JNIEnv* env, jclass clazz, jint pname, jlong param) {


//@line:19243

		ext_glTexBumpParameterivATI((GLenum)pname, (const GLint*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexBumpParameterfvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:19247

		ext_glTexBumpParameterfvATI((GLenum)pname, (const GLfloat*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexBumpParameterfvATI__IJ(JNIEnv* env, jclass clazz, jint pname, jlong param) {


//@line:19251

		ext_glTexBumpParameterfvATI((GLenum)pname, (const GLfloat*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexBumpParameterivATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:19255

		ext_glGetTexBumpParameterivATI((GLenum)pname, (GLint*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexBumpParameterivATI__IJ(JNIEnv* env, jclass clazz, jint pname, jlong param) {


//@line:19259

		ext_glGetTexBumpParameterivATI((GLenum)pname, (GLint*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexBumpParameterfvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:19263

		ext_glGetTexBumpParameterfvATI((GLenum)pname, (GLfloat*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexBumpParameterfvATI__IJ(JNIEnv* env, jclass clazz, jint pname, jlong param) {


//@line:19267

		ext_glGetTexBumpParameterfvATI((GLenum)pname, (GLfloat*)param);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGenFragmentShadersATI(JNIEnv* env, jclass clazz, jint range) {


//@line:19271

		return (jint)ext_glGenFragmentShadersATI((GLuint)range);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindFragmentShaderATI(JNIEnv* env, jclass clazz, jint id) {


//@line:19275

		ext_glBindFragmentShaderATI((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteFragmentShaderATI(JNIEnv* env, jclass clazz, jint id) {


//@line:19279

		ext_glDeleteFragmentShaderATI((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginFragmentShaderATI(JNIEnv* env, jclass clazz) {


//@line:19283

		ext_glBeginFragmentShaderATI();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndFragmentShaderATI(JNIEnv* env, jclass clazz) {


//@line:19287

		ext_glEndFragmentShaderATI();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPassTexCoordATI(JNIEnv* env, jclass clazz, jint dst, jint coord, jint swizzle) {


//@line:19291

		ext_glPassTexCoordATI((GLuint)dst, (GLuint)coord, (GLenum)swizzle);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSampleMapATI(JNIEnv* env, jclass clazz, jint dst, jint interp, jint swizzle) {


//@line:19295

		ext_glSampleMapATI((GLuint)dst, (GLuint)interp, (GLenum)swizzle);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorFragmentOp1ATI(JNIEnv* env, jclass clazz, jint op, jint dst, jint dstMask, jint dstMod, jint arg1, jint arg1Rep, jint arg1Mod) {


//@line:19299

		ext_glColorFragmentOp1ATI((GLenum)op, (GLuint)dst, (GLuint)dstMask, (GLuint)dstMod, (GLuint)arg1, (GLuint)arg1Rep, (GLuint)arg1Mod);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorFragmentOp2ATI(JNIEnv* env, jclass clazz, jint op, jint dst, jint dstMask, jint dstMod, jint arg1, jint arg1Rep, jint arg1Mod, jint arg2, jint arg2Rep, jint arg2Mod) {


//@line:19303

		ext_glColorFragmentOp2ATI((GLenum)op, (GLuint)dst, (GLuint)dstMask, (GLuint)dstMod, (GLuint)arg1, (GLuint)arg1Rep, (GLuint)arg1Mod, (GLuint)arg2, (GLuint)arg2Rep, (GLuint)arg2Mod);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorFragmentOp3ATI(JNIEnv* env, jclass clazz, jint op, jint dst, jint dstMask, jint dstMod, jint arg1, jint arg1Rep, jint arg1Mod, jint arg2, jint arg2Rep, jint arg2Mod, jint arg3, jint arg3Rep, jint arg3Mod) {


//@line:19307

		ext_glColorFragmentOp3ATI((GLenum)op, (GLuint)dst, (GLuint)dstMask, (GLuint)dstMod, (GLuint)arg1, (GLuint)arg1Rep, (GLuint)arg1Mod, (GLuint)arg2, (GLuint)arg2Rep, (GLuint)arg2Mod, (GLuint)arg3, (GLuint)arg3Rep, (GLuint)arg3Mod);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glAlphaFragmentOp1ATI(JNIEnv* env, jclass clazz, jint op, jint dst, jint dstMod, jint arg1, jint arg1Rep, jint arg1Mod) {


//@line:19311

		ext_glAlphaFragmentOp1ATI((GLenum)op, (GLuint)dst, (GLuint)dstMod, (GLuint)arg1, (GLuint)arg1Rep, (GLuint)arg1Mod);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glAlphaFragmentOp2ATI(JNIEnv* env, jclass clazz, jint op, jint dst, jint dstMod, jint arg1, jint arg1Rep, jint arg1Mod, jint arg2, jint arg2Rep, jint arg2Mod) {


//@line:19315

		ext_glAlphaFragmentOp2ATI((GLenum)op, (GLuint)dst, (GLuint)dstMod, (GLuint)arg1, (GLuint)arg1Rep, (GLuint)arg1Mod, (GLuint)arg2, (GLuint)arg2Rep, (GLuint)arg2Mod);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glAlphaFragmentOp3ATI(JNIEnv* env, jclass clazz, jint op, jint dst, jint dstMod, jint arg1, jint arg1Rep, jint arg1Mod, jint arg2, jint arg2Rep, jint arg2Mod, jint arg3, jint arg3Rep, jint arg3Mod) {


//@line:19319

		ext_glAlphaFragmentOp3ATI((GLenum)op, (GLuint)dst, (GLuint)dstMod, (GLuint)arg1, (GLuint)arg1Rep, (GLuint)arg1Mod, (GLuint)arg2, (GLuint)arg2Rep, (GLuint)arg2Mod, (GLuint)arg3, (GLuint)arg3Rep, (GLuint)arg3Mod);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSetFragmentShaderConstantATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint dst, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:19323

		ext_glSetFragmentShaderConstantATI((GLuint)dst, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSetFragmentShaderConstantATI__IJ(JNIEnv* env, jclass clazz, jint dst, jlong value) {


//@line:19327

		ext_glSetFragmentShaderConstantATI((GLuint)dst, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPNTrianglesiATI(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:19331

		ext_glPNTrianglesiATI((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPNTrianglesfATI(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:19335

		ext_glPNTrianglesfATI((GLenum)pname, (GLfloat)param);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glNewObjectBufferATI__ILjava_nio_Buffer_2II
(JNIEnv* env, jclass clazz, jint size, jobject obj_pointer, jint pointerByteOffset, jint usage, unsigned char* pointer) {

//@line:19339

		return (jint)ext_glNewObjectBufferATI((GLsizei)size, (const GLvoid*)(pointer + pointerByteOffset), (GLenum)usage);
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glNewObjectBufferATI__ILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint size, jobject obj_pointer, jint pointerByteOffset, jint usage) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glNewObjectBufferATI__ILjava_nio_Buffer_2II(env, clazz, size, obj_pointer, pointerByteOffset, usage, pointer);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glNewObjectBufferATI__IJI(JNIEnv* env, jclass clazz, jint size, jlong pointer, jint usage) {


//@line:19343

		return (jint)ext_glNewObjectBufferATI((GLsizei)size, (const GLvoid*)pointer, (GLenum)usage);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsObjectBufferATI(JNIEnv* env, jclass clazz, jint buffer) {


//@line:19347

		return (jboolean)ext_glIsObjectBufferATI((GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUpdateObjectBufferATI__IIILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint buffer, jint offset, jint size, jobject obj_pointer, jint pointerByteOffset, jint preserve) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:19351

		ext_glUpdateObjectBufferATI((GLuint)buffer, (GLuint)offset, (GLsizei)size, (const GLvoid*)(pointer + pointerByteOffset), (GLenum)preserve);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUpdateObjectBufferATI__IIIJI(JNIEnv* env, jclass clazz, jint buffer, jint offset, jint size, jlong pointer, jint preserve) {


//@line:19355

		ext_glUpdateObjectBufferATI((GLuint)buffer, (GLuint)offset, (GLsizei)size, (const GLvoid*)pointer, (GLenum)preserve);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectBufferfvATI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:19359

		ext_glGetObjectBufferfvATI((GLuint)buffer, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectBufferfvATI__IIJ(JNIEnv* env, jclass clazz, jint buffer, jint pname, jlong params) {


//@line:19363

		ext_glGetObjectBufferfvATI((GLuint)buffer, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectBufferivATI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:19367

		ext_glGetObjectBufferivATI((GLuint)buffer, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectBufferivATI__IIJ(JNIEnv* env, jclass clazz, jint buffer, jint pname, jlong params) {


//@line:19371

		ext_glGetObjectBufferivATI((GLuint)buffer, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFreeObjectBufferATI(JNIEnv* env, jclass clazz, jint buffer) {


//@line:19375

		ext_glFreeObjectBufferATI((GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glArrayObjectATI(JNIEnv* env, jclass clazz, jint array, jint size, jint type, jint stride, jint buffer, jint offset) {


//@line:19379

		ext_glArrayObjectATI((GLenum)array, (GLint)size, (GLenum)type, (GLsizei)stride, (GLuint)buffer, (GLuint)offset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetArrayObjectfvATI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint array, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:19383

		ext_glGetArrayObjectfvATI((GLenum)array, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetArrayObjectfvATI__IIJ(JNIEnv* env, jclass clazz, jint array, jint pname, jlong params) {


//@line:19387

		ext_glGetArrayObjectfvATI((GLenum)array, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetArrayObjectivATI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint array, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:19391

		ext_glGetArrayObjectivATI((GLenum)array, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetArrayObjectivATI__IIJ(JNIEnv* env, jclass clazz, jint array, jint pname, jlong params) {


//@line:19395

		ext_glGetArrayObjectivATI((GLenum)array, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantArrayObjectATI(JNIEnv* env, jclass clazz, jint id, jint type, jint stride, jint buffer, jint offset) {


//@line:19399

		ext_glVariantArrayObjectATI((GLuint)id, (GLenum)type, (GLsizei)stride, (GLuint)buffer, (GLuint)offset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantArrayObjectfvATI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:19403

		ext_glGetVariantArrayObjectfvATI((GLuint)id, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantArrayObjectfvATI__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:19407

		ext_glGetVariantArrayObjectfvATI((GLuint)id, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantArrayObjectivATI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:19411

		ext_glGetVariantArrayObjectivATI((GLuint)id, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantArrayObjectivATI__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:19415

		ext_glGetVariantArrayObjectivATI((GLuint)id, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginVertexShaderEXT(JNIEnv* env, jclass clazz) {


//@line:19419

		ext_glBeginVertexShaderEXT();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndVertexShaderEXT(JNIEnv* env, jclass clazz) {


//@line:19423

		ext_glEndVertexShaderEXT();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindVertexShaderEXT(JNIEnv* env, jclass clazz, jint id) {


//@line:19427

		ext_glBindVertexShaderEXT((GLuint)id);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGenVertexShadersEXT(JNIEnv* env, jclass clazz, jint range) {


//@line:19431

		return (jint)ext_glGenVertexShadersEXT((GLuint)range);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteVertexShaderEXT(JNIEnv* env, jclass clazz, jint id) {


//@line:19435

		ext_glDeleteVertexShaderEXT((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glShaderOp1EXT(JNIEnv* env, jclass clazz, jint op, jint res, jint arg1) {


//@line:19439

		ext_glShaderOp1EXT((GLenum)op, (GLuint)res, (GLuint)arg1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glShaderOp2EXT(JNIEnv* env, jclass clazz, jint op, jint res, jint arg1, jint arg2) {


//@line:19443

		ext_glShaderOp2EXT((GLenum)op, (GLuint)res, (GLuint)arg1, (GLuint)arg2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glShaderOp3EXT(JNIEnv* env, jclass clazz, jint op, jint res, jint arg1, jint arg2, jint arg3) {


//@line:19447

		ext_glShaderOp3EXT((GLenum)op, (GLuint)res, (GLuint)arg1, (GLuint)arg2, (GLuint)arg3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSwizzleEXT(JNIEnv* env, jclass clazz, jint res, jint in, jint outX, jint outY, jint outZ, jint outW) {


//@line:19451

		ext_glSwizzleEXT((GLuint)res, (GLuint)in, (GLenum)outX, (GLenum)outY, (GLenum)outZ, (GLenum)outW);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWriteMaskEXT(JNIEnv* env, jclass clazz, jint res, jint in, jint outX, jint outY, jint outZ, jint outW) {


//@line:19455

		ext_glWriteMaskEXT((GLuint)res, (GLuint)in, (GLenum)outX, (GLenum)outY, (GLenum)outZ, (GLenum)outW);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInsertComponentEXT(JNIEnv* env, jclass clazz, jint res, jint src, jint num) {


//@line:19459

		ext_glInsertComponentEXT((GLuint)res, (GLuint)src, (GLuint)num);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glExtractComponentEXT(JNIEnv* env, jclass clazz, jint res, jint src, jint num) {


//@line:19463

		ext_glExtractComponentEXT((GLuint)res, (GLuint)src, (GLuint)num);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGenSymbolsEXT(JNIEnv* env, jclass clazz, jint datatype, jint storagetype, jint range, jint components) {


//@line:19467

		return (jint)ext_glGenSymbolsEXT((GLenum)datatype, (GLenum)storagetype, (GLenum)range, (GLuint)components);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSetInvariantEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint type, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19471

		ext_glSetInvariantEXT((GLuint)id, (GLenum)type, (const GLvoid*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSetInvariantEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint type, jlong addr) {


//@line:19475

		ext_glSetInvariantEXT((GLuint)id, (GLenum)type, (const GLvoid*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSetLocalConstantEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint type, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19479

		ext_glSetLocalConstantEXT((GLuint)id, (GLenum)type, (const GLvoid*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSetLocalConstantEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint type, jlong addr) {


//@line:19483

		ext_glSetLocalConstantEXT((GLuint)id, (GLenum)type, (const GLvoid*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantbvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19487

		ext_glVariantbvEXT((GLuint)id, (const GLbyte*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantbvEXT__IJ(JNIEnv* env, jclass clazz, jint id, jlong addr) {


//@line:19491

		ext_glVariantbvEXT((GLuint)id, (const GLbyte*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantsvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19495

		ext_glVariantsvEXT((GLuint)id, (const GLshort*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantsvEXT__IJ(JNIEnv* env, jclass clazz, jint id, jlong addr) {


//@line:19499

		ext_glVariantsvEXT((GLuint)id, (const GLshort*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantivEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19503

		ext_glVariantivEXT((GLuint)id, (const GLint*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantivEXT__IJ(JNIEnv* env, jclass clazz, jint id, jlong addr) {


//@line:19507

		ext_glVariantivEXT((GLuint)id, (const GLint*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantfvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19511

		ext_glVariantfvEXT((GLuint)id, (const GLfloat*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantfvEXT__IJ(JNIEnv* env, jclass clazz, jint id, jlong addr) {


//@line:19515

		ext_glVariantfvEXT((GLuint)id, (const GLfloat*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantdvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19519

		ext_glVariantdvEXT((GLuint)id, (const GLdouble*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantdvEXT__IJ(JNIEnv* env, jclass clazz, jint id, jlong addr) {


//@line:19523

		ext_glVariantdvEXT((GLuint)id, (const GLdouble*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantubvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19527

		ext_glVariantubvEXT((GLuint)id, (const GLubyte*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantubvEXT__IJ(JNIEnv* env, jclass clazz, jint id, jlong addr) {


//@line:19531

		ext_glVariantubvEXT((GLuint)id, (const GLubyte*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantusvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19535

		ext_glVariantusvEXT((GLuint)id, (const GLushort*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantusvEXT__IJ(JNIEnv* env, jclass clazz, jint id, jlong addr) {


//@line:19539

		ext_glVariantusvEXT((GLuint)id, (const GLushort*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantuivEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19543

		ext_glVariantuivEXT((GLuint)id, (const GLuint*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantuivEXT__IJ(JNIEnv* env, jclass clazz, jint id, jlong addr) {


//@line:19547

		ext_glVariantuivEXT((GLuint)id, (const GLuint*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantPointerEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint type, jint stride, jobject obj_addr, jint addrByteOffset) {
	unsigned char* addr = (unsigned char*)(obj_addr?env->GetDirectBufferAddress(obj_addr):0);


//@line:19551

		ext_glVariantPointerEXT((GLuint)id, (GLenum)type, (GLuint)stride, (const GLvoid*)(addr + addrByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVariantPointerEXT__IIIJ(JNIEnv* env, jclass clazz, jint id, jint type, jint stride, jlong addr) {


//@line:19555

		ext_glVariantPointerEXT((GLuint)id, (GLenum)type, (GLuint)stride, (const GLvoid*)addr);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEnableVariantClientStateEXT(JNIEnv* env, jclass clazz, jint id) {


//@line:19559

		ext_glEnableVariantClientStateEXT((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDisableVariantClientStateEXT(JNIEnv* env, jclass clazz, jint id) {


//@line:19563

		ext_glDisableVariantClientStateEXT((GLuint)id);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glBindLightParameterEXT(JNIEnv* env, jclass clazz, jint light, jint value) {


//@line:19567

		return (jint)ext_glBindLightParameterEXT((GLenum)light, (GLenum)value);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glBindMaterialParameterEXT(JNIEnv* env, jclass clazz, jint face, jint value) {


//@line:19571

		return (jint)ext_glBindMaterialParameterEXT((GLenum)face, (GLenum)value);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glBindTexGenParameterEXT(JNIEnv* env, jclass clazz, jint unit, jint coord, jint value) {


//@line:19575

		return (jint)ext_glBindTexGenParameterEXT((GLenum)unit, (GLenum)coord, (GLenum)value);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glBindTextureUnitParameterEXT(JNIEnv* env, jclass clazz, jint unit, jint value) {


//@line:19579

		return (jint)ext_glBindTextureUnitParameterEXT((GLenum)unit, (GLenum)value);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glBindParameterEXT(JNIEnv* env, jclass clazz, jint value) {


//@line:19583

		return (jint)ext_glBindParameterEXT((GLenum)value);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsVariantEnabledEXT(JNIEnv* env, jclass clazz, jint id, jint cap) {


//@line:19587

		return (jboolean)ext_glIsVariantEnabledEXT((GLuint)id, (GLenum)cap);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantBooleanvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint value, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:19591

		ext_glGetVariantBooleanvEXT((GLuint)id, (GLenum)value, (GLboolean*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantBooleanvEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint value, jlong data) {


//@line:19595

		ext_glGetVariantBooleanvEXT((GLuint)id, (GLenum)value, (GLboolean*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantIntegervEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint value, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:19599

		ext_glGetVariantIntegervEXT((GLuint)id, (GLenum)value, (GLint*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantIntegervEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint value, jlong data) {


//@line:19603

		ext_glGetVariantIntegervEXT((GLuint)id, (GLenum)value, (GLint*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantFloatvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint value, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:19607

		ext_glGetVariantFloatvEXT((GLuint)id, (GLenum)value, (GLfloat*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantFloatvEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint value, jlong data) {


//@line:19611

		ext_glGetVariantFloatvEXT((GLuint)id, (GLenum)value, (GLfloat*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantPointervEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint value, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:19615

		ext_glGetVariantPointervEXT((GLuint)id, (GLenum)value, (GLvoid**)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVariantPointervEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint value, jlong data) {


//@line:19619

		ext_glGetVariantPointervEXT((GLuint)id, (GLenum)value, (GLvoid**)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInvariantBooleanvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint value, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:19623

		ext_glGetInvariantBooleanvEXT((GLuint)id, (GLenum)value, (GLboolean*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInvariantBooleanvEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint value, jlong data) {


//@line:19627

		ext_glGetInvariantBooleanvEXT((GLuint)id, (GLenum)value, (GLboolean*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInvariantIntegervEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint value, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:19631

		ext_glGetInvariantIntegervEXT((GLuint)id, (GLenum)value, (GLint*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInvariantIntegervEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint value, jlong data) {


//@line:19635

		ext_glGetInvariantIntegervEXT((GLuint)id, (GLenum)value, (GLint*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInvariantFloatvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint value, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:19639

		ext_glGetInvariantFloatvEXT((GLuint)id, (GLenum)value, (GLfloat*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetInvariantFloatvEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint value, jlong data) {


//@line:19643

		ext_glGetInvariantFloatvEXT((GLuint)id, (GLenum)value, (GLfloat*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLocalConstantBooleanvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint value, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:19647

		ext_glGetLocalConstantBooleanvEXT((GLuint)id, (GLenum)value, (GLboolean*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLocalConstantBooleanvEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint value, jlong data) {


//@line:19651

		ext_glGetLocalConstantBooleanvEXT((GLuint)id, (GLenum)value, (GLboolean*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLocalConstantIntegervEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint value, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:19655

		ext_glGetLocalConstantIntegervEXT((GLuint)id, (GLenum)value, (GLint*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLocalConstantIntegervEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint value, jlong data) {


//@line:19659

		ext_glGetLocalConstantIntegervEXT((GLuint)id, (GLenum)value, (GLint*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLocalConstantFloatvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint value, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:19663

		ext_glGetLocalConstantFloatvEXT((GLuint)id, (GLenum)value, (GLfloat*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLocalConstantFloatvEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint value, jlong data) {


//@line:19667

		ext_glGetLocalConstantFloatvEXT((GLuint)id, (GLenum)value, (GLfloat*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1sATI(JNIEnv* env, jclass clazz, jint stream, jshort x) {


//@line:19671

		ext_glVertexStream1sATI((GLenum)stream, (GLshort)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1svATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19675

		ext_glVertexStream1svATI((GLenum)stream, (const GLshort*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1svATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19679

		ext_glVertexStream1svATI((GLenum)stream, (const GLshort*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1iATI(JNIEnv* env, jclass clazz, jint stream, jint x) {


//@line:19683

		ext_glVertexStream1iATI((GLenum)stream, (GLint)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1ivATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19687

		ext_glVertexStream1ivATI((GLenum)stream, (const GLint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1ivATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19691

		ext_glVertexStream1ivATI((GLenum)stream, (const GLint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1fATI(JNIEnv* env, jclass clazz, jint stream, jfloat x) {


//@line:19695

		ext_glVertexStream1fATI((GLenum)stream, (GLfloat)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1fvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19699

		ext_glVertexStream1fvATI((GLenum)stream, (const GLfloat*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1fvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19703

		ext_glVertexStream1fvATI((GLenum)stream, (const GLfloat*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1dATI(JNIEnv* env, jclass clazz, jint stream, jdouble x) {


//@line:19707

		ext_glVertexStream1dATI((GLenum)stream, (GLdouble)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1dvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19711

		ext_glVertexStream1dvATI((GLenum)stream, (const GLdouble*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream1dvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19715

		ext_glVertexStream1dvATI((GLenum)stream, (const GLdouble*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2sATI(JNIEnv* env, jclass clazz, jint stream, jshort x, jshort y) {


//@line:19719

		ext_glVertexStream2sATI((GLenum)stream, (GLshort)x, (GLshort)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2svATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19723

		ext_glVertexStream2svATI((GLenum)stream, (const GLshort*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2svATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19727

		ext_glVertexStream2svATI((GLenum)stream, (const GLshort*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2iATI(JNIEnv* env, jclass clazz, jint stream, jint x, jint y) {


//@line:19731

		ext_glVertexStream2iATI((GLenum)stream, (GLint)x, (GLint)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2ivATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19735

		ext_glVertexStream2ivATI((GLenum)stream, (const GLint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2ivATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19739

		ext_glVertexStream2ivATI((GLenum)stream, (const GLint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2fATI(JNIEnv* env, jclass clazz, jint stream, jfloat x, jfloat y) {


//@line:19743

		ext_glVertexStream2fATI((GLenum)stream, (GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2fvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19747

		ext_glVertexStream2fvATI((GLenum)stream, (const GLfloat*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2fvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19751

		ext_glVertexStream2fvATI((GLenum)stream, (const GLfloat*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2dATI(JNIEnv* env, jclass clazz, jint stream, jdouble x, jdouble y) {


//@line:19755

		ext_glVertexStream2dATI((GLenum)stream, (GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2dvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19759

		ext_glVertexStream2dvATI((GLenum)stream, (const GLdouble*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream2dvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19763

		ext_glVertexStream2dvATI((GLenum)stream, (const GLdouble*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3sATI(JNIEnv* env, jclass clazz, jint stream, jshort x, jshort y, jshort z) {


//@line:19767

		ext_glVertexStream3sATI((GLenum)stream, (GLshort)x, (GLshort)y, (GLshort)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3svATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19771

		ext_glVertexStream3svATI((GLenum)stream, (const GLshort*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3svATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19775

		ext_glVertexStream3svATI((GLenum)stream, (const GLshort*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3iATI(JNIEnv* env, jclass clazz, jint stream, jint x, jint y, jint z) {


//@line:19779

		ext_glVertexStream3iATI((GLenum)stream, (GLint)x, (GLint)y, (GLint)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3ivATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19783

		ext_glVertexStream3ivATI((GLenum)stream, (const GLint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3ivATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19787

		ext_glVertexStream3ivATI((GLenum)stream, (const GLint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3fATI(JNIEnv* env, jclass clazz, jint stream, jfloat x, jfloat y, jfloat z) {


//@line:19791

		ext_glVertexStream3fATI((GLenum)stream, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3fvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19795

		ext_glVertexStream3fvATI((GLenum)stream, (const GLfloat*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3fvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19799

		ext_glVertexStream3fvATI((GLenum)stream, (const GLfloat*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3dATI(JNIEnv* env, jclass clazz, jint stream, jdouble x, jdouble y, jdouble z) {


//@line:19803

		ext_glVertexStream3dATI((GLenum)stream, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3dvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19807

		ext_glVertexStream3dvATI((GLenum)stream, (const GLdouble*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream3dvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19811

		ext_glVertexStream3dvATI((GLenum)stream, (const GLdouble*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4sATI(JNIEnv* env, jclass clazz, jint stream, jshort x, jshort y, jshort z, jshort w) {


//@line:19815

		ext_glVertexStream4sATI((GLenum)stream, (GLshort)x, (GLshort)y, (GLshort)z, (GLshort)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4svATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19819

		ext_glVertexStream4svATI((GLenum)stream, (const GLshort*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4svATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19823

		ext_glVertexStream4svATI((GLenum)stream, (const GLshort*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4iATI(JNIEnv* env, jclass clazz, jint stream, jint x, jint y, jint z, jint w) {


//@line:19827

		ext_glVertexStream4iATI((GLenum)stream, (GLint)x, (GLint)y, (GLint)z, (GLint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4ivATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19831

		ext_glVertexStream4ivATI((GLenum)stream, (const GLint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4ivATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19835

		ext_glVertexStream4ivATI((GLenum)stream, (const GLint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4fATI(JNIEnv* env, jclass clazz, jint stream, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:19839

		ext_glVertexStream4fATI((GLenum)stream, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4fvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19843

		ext_glVertexStream4fvATI((GLenum)stream, (const GLfloat*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4fvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19847

		ext_glVertexStream4fvATI((GLenum)stream, (const GLfloat*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4dATI(JNIEnv* env, jclass clazz, jint stream, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:19851

		ext_glVertexStream4dATI((GLenum)stream, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4dvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19855

		ext_glVertexStream4dvATI((GLenum)stream, (const GLdouble*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexStream4dvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19859

		ext_glVertexStream4dvATI((GLenum)stream, (const GLdouble*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3bATI(JNIEnv* env, jclass clazz, jint stream, jbyte nx, jbyte ny, jbyte nz) {


//@line:19863

		ext_glNormalStream3bATI((GLenum)stream, (GLbyte)nx, (GLbyte)ny, (GLbyte)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3bvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19867

		ext_glNormalStream3bvATI((GLenum)stream, (const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3bvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19871

		ext_glNormalStream3bvATI((GLenum)stream, (const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3sATI(JNIEnv* env, jclass clazz, jint stream, jshort nx, jshort ny, jshort nz) {


//@line:19875

		ext_glNormalStream3sATI((GLenum)stream, (GLshort)nx, (GLshort)ny, (GLshort)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3svATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19879

		ext_glNormalStream3svATI((GLenum)stream, (const GLshort*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3svATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19883

		ext_glNormalStream3svATI((GLenum)stream, (const GLshort*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3iATI(JNIEnv* env, jclass clazz, jint stream, jint nx, jint ny, jint nz) {


//@line:19887

		ext_glNormalStream3iATI((GLenum)stream, (GLint)nx, (GLint)ny, (GLint)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3ivATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19891

		ext_glNormalStream3ivATI((GLenum)stream, (const GLint*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3ivATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19895

		ext_glNormalStream3ivATI((GLenum)stream, (const GLint*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3fATI(JNIEnv* env, jclass clazz, jint stream, jfloat nx, jfloat ny, jfloat nz) {


//@line:19899

		ext_glNormalStream3fATI((GLenum)stream, (GLfloat)nx, (GLfloat)ny, (GLfloat)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3fvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19903

		ext_glNormalStream3fvATI((GLenum)stream, (const GLfloat*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3fvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19907

		ext_glNormalStream3fvATI((GLenum)stream, (const GLfloat*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3dATI(JNIEnv* env, jclass clazz, jint stream, jdouble nx, jdouble ny, jdouble nz) {


//@line:19911

		ext_glNormalStream3dATI((GLenum)stream, (GLdouble)nx, (GLdouble)ny, (GLdouble)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3dvATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint stream, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:19915

		ext_glNormalStream3dvATI((GLenum)stream, (const GLdouble*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalStream3dvATI__IJ(JNIEnv* env, jclass clazz, jint stream, jlong coords) {


//@line:19919

		ext_glNormalStream3dvATI((GLenum)stream, (const GLdouble*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClientActiveVertexStreamATI(JNIEnv* env, jclass clazz, jint stream) {


//@line:19923

		ext_glClientActiveVertexStreamATI((GLenum)stream);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexBlendEnviATI(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:19927

		ext_glVertexBlendEnviATI((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexBlendEnvfATI(JNIEnv* env, jclass clazz, jint pname, jfloat param) {


//@line:19931

		ext_glVertexBlendEnvfATI((GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glElementPointerATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:19935

		ext_glElementPointerATI((GLenum)type, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glElementPointerATI__IJ(JNIEnv* env, jclass clazz, jint type, jlong pointer) {


//@line:19939

		ext_glElementPointerATI((GLenum)type, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementArrayATI(JNIEnv* env, jclass clazz, jint mode, jint count) {


//@line:19943

		ext_glDrawElementArrayATI((GLenum)mode, (GLsizei)count);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawRangeElementArrayATI(JNIEnv* env, jclass clazz, jint mode, jint start, jint end, jint count) {


//@line:19947

		ext_glDrawRangeElementArrayATI((GLenum)mode, (GLuint)start, (GLuint)end, (GLsizei)count);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawMeshArraysSUN(JNIEnv* env, jclass clazz, jint mode, jint first, jint count, jint width) {


//@line:19951

		ext_glDrawMeshArraysSUN((GLenum)mode, (GLint)first, (GLsizei)count, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenOcclusionQueriesNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_ids, jint idsByteOffset) {
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);


//@line:19955

		ext_glGenOcclusionQueriesNV((GLsizei)n, (GLuint*)(ids + idsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenOcclusionQueriesNV__IJ(JNIEnv* env, jclass clazz, jint n, jlong ids) {


//@line:19959

		ext_glGenOcclusionQueriesNV((GLsizei)n, (GLuint*)ids);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteOcclusionQueriesNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_ids, jint idsByteOffset) {
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);


//@line:19963

		ext_glDeleteOcclusionQueriesNV((GLsizei)n, (const GLuint*)(ids + idsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteOcclusionQueriesNV__IJ(JNIEnv* env, jclass clazz, jint n, jlong ids) {


//@line:19967

		ext_glDeleteOcclusionQueriesNV((GLsizei)n, (const GLuint*)ids);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsOcclusionQueryNV(JNIEnv* env, jclass clazz, jint id) {


//@line:19971

		return (jboolean)ext_glIsOcclusionQueryNV((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginOcclusionQueryNV(JNIEnv* env, jclass clazz, jint id) {


//@line:19975

		ext_glBeginOcclusionQueryNV((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndOcclusionQueryNV(JNIEnv* env, jclass clazz) {


//@line:19979

		ext_glEndOcclusionQueryNV();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetOcclusionQueryivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:19983

		ext_glGetOcclusionQueryivNV((GLuint)id, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetOcclusionQueryivNV__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:19987

		ext_glGetOcclusionQueryivNV((GLuint)id, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetOcclusionQueryuivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:19991

		ext_glGetOcclusionQueryuivNV((GLuint)id, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetOcclusionQueryuivNV__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:19995

		ext_glGetOcclusionQueryuivNV((GLuint)id, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameteriNV(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:19999

		ext_glPointParameteriNV((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterivNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20003

		ext_glPointParameterivNV((GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterivNV__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:20007

		ext_glPointParameterivNV((GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glActiveStencilFaceEXT(JNIEnv* env, jclass clazz, jint face) {


//@line:20011

		ext_glActiveStencilFaceEXT((GLenum)face);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glElementPointerAPPLE__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:20015

		ext_glElementPointerAPPLE((GLenum)type, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glElementPointerAPPLE__IJ(JNIEnv* env, jclass clazz, jint type, jlong pointer) {


//@line:20019

		ext_glElementPointerAPPLE((GLenum)type, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementArrayAPPLE(JNIEnv* env, jclass clazz, jint mode, jint first, jint count) {


//@line:20023

		ext_glDrawElementArrayAPPLE((GLenum)mode, (GLint)first, (GLsizei)count);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawRangeElementArrayAPPLE(JNIEnv* env, jclass clazz, jint mode, jint start, jint end, jint first, jint count) {


//@line:20027

		ext_glDrawRangeElementArrayAPPLE((GLenum)mode, (GLuint)start, (GLuint)end, (GLint)first, (GLsizei)count);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElementArrayAPPLE__ILjava_nio_Buffer_2ILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jobject obj_first, jint firstByteOffset, jobject obj_count, jint countByteOffset, jint primcount) {
	unsigned char* first = (unsigned char*)(obj_first?env->GetDirectBufferAddress(obj_first):0);
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);


//@line:20031

		ext_glMultiDrawElementArrayAPPLE((GLenum)mode, (const GLint*)(first + firstByteOffset), (const GLsizei*)(count + countByteOffset), (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElementArrayAPPLE__IJJI(JNIEnv* env, jclass clazz, jint mode, jlong first, jlong count, jint primcount) {


//@line:20035

		ext_glMultiDrawElementArrayAPPLE((GLenum)mode, (const GLint*)first, (const GLsizei*)count, (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawRangeElementArrayAPPLE__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jint start, jint end, jobject obj_first, jint firstByteOffset, jobject obj_count, jint countByteOffset, jint primcount) {
	unsigned char* first = (unsigned char*)(obj_first?env->GetDirectBufferAddress(obj_first):0);
	unsigned char* count = (unsigned char*)(obj_count?env->GetDirectBufferAddress(obj_count):0);


//@line:20039

		ext_glMultiDrawRangeElementArrayAPPLE((GLenum)mode, (GLuint)start, (GLuint)end, (const GLint*)(first + firstByteOffset), (const GLsizei*)(count + countByteOffset), (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawRangeElementArrayAPPLE__IIIJJI(JNIEnv* env, jclass clazz, jint mode, jint start, jint end, jlong first, jlong count, jint primcount) {


//@line:20043

		ext_glMultiDrawRangeElementArrayAPPLE((GLenum)mode, (GLuint)start, (GLuint)end, (const GLint*)first, (const GLsizei*)count, (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenFencesAPPLE__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_fences, jint fencesByteOffset) {
	unsigned char* fences = (unsigned char*)(obj_fences?env->GetDirectBufferAddress(obj_fences):0);


//@line:20047

		ext_glGenFencesAPPLE((GLsizei)n, (GLuint*)(fences + fencesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenFencesAPPLE__IJ(JNIEnv* env, jclass clazz, jint n, jlong fences) {


//@line:20051

		ext_glGenFencesAPPLE((GLsizei)n, (GLuint*)fences);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteFencesAPPLE__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_fences, jint fencesByteOffset) {
	unsigned char* fences = (unsigned char*)(obj_fences?env->GetDirectBufferAddress(obj_fences):0);


//@line:20055

		ext_glDeleteFencesAPPLE((GLsizei)n, (const GLuint*)(fences + fencesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteFencesAPPLE__IJ(JNIEnv* env, jclass clazz, jint n, jlong fences) {


//@line:20059

		ext_glDeleteFencesAPPLE((GLsizei)n, (const GLuint*)fences);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSetFenceAPPLE(JNIEnv* env, jclass clazz, jint fence) {


//@line:20063

		ext_glSetFenceAPPLE((GLuint)fence);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsFenceAPPLE(JNIEnv* env, jclass clazz, jint fence) {


//@line:20067

		return (jboolean)ext_glIsFenceAPPLE((GLuint)fence);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glTestFenceAPPLE(JNIEnv* env, jclass clazz, jint fence) {


//@line:20071

		return (jboolean)ext_glTestFenceAPPLE((GLuint)fence);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFinishFenceAPPLE(JNIEnv* env, jclass clazz, jint fence) {


//@line:20075

		ext_glFinishFenceAPPLE((GLuint)fence);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glTestObjectAPPLE(JNIEnv* env, jclass clazz, jint object, jint name) {


//@line:20079

		return (jboolean)ext_glTestObjectAPPLE((GLenum)object, (GLuint)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFinishObjectAPPLE(JNIEnv* env, jclass clazz, jint object, jint name) {


//@line:20083

		ext_glFinishObjectAPPLE((GLenum)object, (GLint)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindVertexArrayAPPLE(JNIEnv* env, jclass clazz, jint array) {


//@line:20087

		ext_glBindVertexArrayAPPLE((GLuint)array);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteVertexArraysAPPLE__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_arrays, jint arraysByteOffset) {
	unsigned char* arrays = (unsigned char*)(obj_arrays?env->GetDirectBufferAddress(obj_arrays):0);


//@line:20091

		ext_glDeleteVertexArraysAPPLE((GLsizei)n, (const GLuint*)(arrays + arraysByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteVertexArraysAPPLE__IJ(JNIEnv* env, jclass clazz, jint n, jlong arrays) {


//@line:20095

		ext_glDeleteVertexArraysAPPLE((GLsizei)n, (const GLuint*)arrays);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenVertexArraysAPPLE__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_arrays, jint arraysByteOffset) {
	unsigned char* arrays = (unsigned char*)(obj_arrays?env->GetDirectBufferAddress(obj_arrays):0);


//@line:20099

		ext_glGenVertexArraysAPPLE((GLsizei)n, (GLuint*)(arrays + arraysByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenVertexArraysAPPLE__IJ(JNIEnv* env, jclass clazz, jint n, jlong arrays) {


//@line:20103

		ext_glGenVertexArraysAPPLE((GLsizei)n, (GLuint*)arrays);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsVertexArrayAPPLE(JNIEnv* env, jclass clazz, jint array) {


//@line:20107

		return (jboolean)ext_glIsVertexArrayAPPLE((GLuint)array);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayRangeAPPLE__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint length, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:20111

		ext_glVertexArrayRangeAPPLE((GLsizei)length, (GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayRangeAPPLE__IJ(JNIEnv* env, jclass clazz, jint length, jlong pointer) {


//@line:20115

		ext_glVertexArrayRangeAPPLE((GLsizei)length, (GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFlushVertexArrayRangeAPPLE__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint length, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:20119

		ext_glFlushVertexArrayRangeAPPLE((GLsizei)length, (GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFlushVertexArrayRangeAPPLE__IJ(JNIEnv* env, jclass clazz, jint length, jlong pointer) {


//@line:20123

		ext_glFlushVertexArrayRangeAPPLE((GLsizei)length, (GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayParameteriAPPLE(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:20127

		ext_glVertexArrayParameteriAPPLE((GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawBuffersATI__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_bufs, jint bufsByteOffset) {
	unsigned char* bufs = (unsigned char*)(obj_bufs?env->GetDirectBufferAddress(obj_bufs):0);


//@line:20131

		ext_glDrawBuffersATI((GLsizei)n, (const GLenum*)(bufs + bufsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawBuffersATI__IJ(JNIEnv* env, jclass clazz, jint n, jlong bufs) {


//@line:20135

		ext_glDrawBuffersATI((GLsizei)n, (const GLenum*)bufs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramNamedParameter4fNV__IILjava_nio_Buffer_2IFFFF(JNIEnv* env, jclass clazz, jint id, jint len, jobject obj_name, jint nameByteOffset, jfloat x, jfloat y, jfloat z, jfloat w) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:20139

		ext_glProgramNamedParameter4fNV((GLuint)id, (GLsizei)len, (const GLubyte*)(name + nameByteOffset), (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramNamedParameter4fNV__IIJFFFF(JNIEnv* env, jclass clazz, jint id, jint len, jlong name, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:20143

		ext_glProgramNamedParameter4fNV((GLuint)id, (GLsizei)len, (const GLubyte*)name, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramNamedParameter4fvNV__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint len, jobject obj_name, jint nameByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20147

		ext_glProgramNamedParameter4fvNV((GLuint)id, (GLsizei)len, (const GLubyte*)(name + nameByteOffset), (const GLfloat*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramNamedParameter4fvNV__IIJJ(JNIEnv* env, jclass clazz, jint id, jint len, jlong name, jlong v) {


//@line:20151

		ext_glProgramNamedParameter4fvNV((GLuint)id, (GLsizei)len, (const GLubyte*)name, (const GLfloat*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramNamedParameter4dNV__IILjava_nio_Buffer_2IDDDD(JNIEnv* env, jclass clazz, jint id, jint len, jobject obj_name, jint nameByteOffset, jdouble x, jdouble y, jdouble z, jdouble w) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:20155

		ext_glProgramNamedParameter4dNV((GLuint)id, (GLsizei)len, (const GLubyte*)(name + nameByteOffset), (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramNamedParameter4dNV__IIJDDDD(JNIEnv* env, jclass clazz, jint id, jint len, jlong name, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:20159

		ext_glProgramNamedParameter4dNV((GLuint)id, (GLsizei)len, (const GLubyte*)name, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramNamedParameter4dvNV__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint len, jobject obj_name, jint nameByteOffset, jobject obj_v, jint vByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20163

		ext_glProgramNamedParameter4dvNV((GLuint)id, (GLsizei)len, (const GLubyte*)(name + nameByteOffset), (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramNamedParameter4dvNV__IIJJ(JNIEnv* env, jclass clazz, jint id, jint len, jlong name, jlong v) {


//@line:20167

		ext_glProgramNamedParameter4dvNV((GLuint)id, (GLsizei)len, (const GLubyte*)name, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramNamedParameterfvNV__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint len, jobject obj_name, jint nameByteOffset, jobject obj_params, jint paramsByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20171

		ext_glGetProgramNamedParameterfvNV((GLuint)id, (GLsizei)len, (const GLubyte*)(name + nameByteOffset), (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramNamedParameterfvNV__IIJJ(JNIEnv* env, jclass clazz, jint id, jint len, jlong name, jlong params) {


//@line:20175

		ext_glGetProgramNamedParameterfvNV((GLuint)id, (GLsizei)len, (const GLubyte*)name, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramNamedParameterdvNV__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint len, jobject obj_name, jint nameByteOffset, jobject obj_params, jint paramsByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20179

		ext_glGetProgramNamedParameterdvNV((GLuint)id, (GLsizei)len, (const GLubyte*)(name + nameByteOffset), (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramNamedParameterdvNV__IIJJ(JNIEnv* env, jclass clazz, jint id, jint len, jlong name, jlong params) {


//@line:20183

		ext_glGetProgramNamedParameterdvNV((GLuint)id, (GLsizei)len, (const GLubyte*)name, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2hNV(JNIEnv* env, jclass clazz, jshort x, jshort y) {


//@line:20187

		ext_glVertex2hNV((GLhalfNV)x, (GLhalfNV)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20191

		ext_glVertex2hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20195

		ext_glVertex2hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3hNV(JNIEnv* env, jclass clazz, jshort x, jshort y, jshort z) {


//@line:20199

		ext_glVertex3hNV((GLhalfNV)x, (GLhalfNV)y, (GLhalfNV)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20203

		ext_glVertex3hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20207

		ext_glVertex3hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4hNV(JNIEnv* env, jclass clazz, jshort x, jshort y, jshort z, jshort w) {


//@line:20211

		ext_glVertex4hNV((GLhalfNV)x, (GLhalfNV)y, (GLhalfNV)z, (GLhalfNV)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20215

		ext_glVertex4hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20219

		ext_glVertex4hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3hNV(JNIEnv* env, jclass clazz, jshort nx, jshort ny, jshort nz) {


//@line:20223

		ext_glNormal3hNV((GLhalfNV)nx, (GLhalfNV)ny, (GLhalfNV)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20227

		ext_glNormal3hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20231

		ext_glNormal3hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3hNV(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue) {


//@line:20235

		ext_glColor3hNV((GLhalfNV)red, (GLhalfNV)green, (GLhalfNV)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20239

		ext_glColor3hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20243

		ext_glColor3hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4hNV(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue, jshort alpha) {


//@line:20247

		ext_glColor4hNV((GLhalfNV)red, (GLhalfNV)green, (GLhalfNV)blue, (GLhalfNV)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20251

		ext_glColor4hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20255

		ext_glColor4hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1hNV(JNIEnv* env, jclass clazz, jshort s) {


//@line:20259

		ext_glTexCoord1hNV((GLhalfNV)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20263

		ext_glTexCoord1hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20267

		ext_glTexCoord1hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2hNV(JNIEnv* env, jclass clazz, jshort s, jshort t) {


//@line:20271

		ext_glTexCoord2hNV((GLhalfNV)s, (GLhalfNV)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20275

		ext_glTexCoord2hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20279

		ext_glTexCoord2hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3hNV(JNIEnv* env, jclass clazz, jshort s, jshort t, jshort r) {


//@line:20283

		ext_glTexCoord3hNV((GLhalfNV)s, (GLhalfNV)t, (GLhalfNV)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20287

		ext_glTexCoord3hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20291

		ext_glTexCoord3hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4hNV(JNIEnv* env, jclass clazz, jshort s, jshort t, jshort r, jshort q) {


//@line:20295

		ext_glTexCoord4hNV((GLhalfNV)s, (GLhalfNV)t, (GLhalfNV)r, (GLhalfNV)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20299

		ext_glTexCoord4hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20303

		ext_glTexCoord4hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1hNV(JNIEnv* env, jclass clazz, jint target, jshort s) {


//@line:20307

		ext_glMultiTexCoord1hNV((GLenum)target, (GLhalfNV)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1hvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20311

		ext_glMultiTexCoord1hvNV((GLenum)target, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1hvNV__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:20315

		ext_glMultiTexCoord1hvNV((GLenum)target, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2hNV(JNIEnv* env, jclass clazz, jint target, jshort s, jshort t) {


//@line:20319

		ext_glMultiTexCoord2hNV((GLenum)target, (GLhalfNV)s, (GLhalfNV)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2hvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20323

		ext_glMultiTexCoord2hvNV((GLenum)target, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2hvNV__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:20327

		ext_glMultiTexCoord2hvNV((GLenum)target, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3hNV(JNIEnv* env, jclass clazz, jint target, jshort s, jshort t, jshort r) {


//@line:20331

		ext_glMultiTexCoord3hNV((GLenum)target, (GLhalfNV)s, (GLhalfNV)t, (GLhalfNV)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3hvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20335

		ext_glMultiTexCoord3hvNV((GLenum)target, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3hvNV__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:20339

		ext_glMultiTexCoord3hvNV((GLenum)target, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4hNV(JNIEnv* env, jclass clazz, jint target, jshort s, jshort t, jshort r, jshort q) {


//@line:20343

		ext_glMultiTexCoord4hNV((GLenum)target, (GLhalfNV)s, (GLhalfNV)t, (GLhalfNV)r, (GLhalfNV)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4hvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20347

		ext_glMultiTexCoord4hvNV((GLenum)target, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4hvNV__IJ(JNIEnv* env, jclass clazz, jint target, jlong v) {


//@line:20351

		ext_glMultiTexCoord4hvNV((GLenum)target, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordhNV(JNIEnv* env, jclass clazz, jshort fog) {


//@line:20355

		ext_glFogCoordhNV((GLhalfNV)fog);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordhvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_fog, jint fogByteOffset) {
	unsigned char* fog = (unsigned char*)(obj_fog?env->GetDirectBufferAddress(obj_fog):0);


//@line:20359

		ext_glFogCoordhvNV((const GLhalfNV*)(fog + fogByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordhvNV__J(JNIEnv* env, jclass clazz, jlong fog) {


//@line:20363

		ext_glFogCoordhvNV((const GLhalfNV*)fog);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3hNV(JNIEnv* env, jclass clazz, jshort red, jshort green, jshort blue) {


//@line:20367

		ext_glSecondaryColor3hNV((GLhalfNV)red, (GLhalfNV)green, (GLhalfNV)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3hvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20371

		ext_glSecondaryColor3hvNV((const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColor3hvNV__J(JNIEnv* env, jclass clazz, jlong v) {


//@line:20375

		ext_glSecondaryColor3hvNV((const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexWeighthNV(JNIEnv* env, jclass clazz, jshort weight) {


//@line:20379

		ext_glVertexWeighthNV((GLhalfNV)weight);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexWeighthvNV__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_weight, jint weightByteOffset) {
	unsigned char* weight = (unsigned char*)(obj_weight?env->GetDirectBufferAddress(obj_weight):0);


//@line:20383

		ext_glVertexWeighthvNV((const GLhalfNV*)(weight + weightByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexWeighthvNV__J(JNIEnv* env, jclass clazz, jlong weight) {


//@line:20387

		ext_glVertexWeighthvNV((const GLhalfNV*)weight);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1hNV(JNIEnv* env, jclass clazz, jint index, jshort x) {


//@line:20391

		ext_glVertexAttrib1hNV((GLuint)index, (GLhalfNV)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1hvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20395

		ext_glVertexAttrib1hvNV((GLuint)index, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib1hvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:20399

		ext_glVertexAttrib1hvNV((GLuint)index, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2hNV(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y) {


//@line:20403

		ext_glVertexAttrib2hNV((GLuint)index, (GLhalfNV)x, (GLhalfNV)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2hvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20407

		ext_glVertexAttrib2hvNV((GLuint)index, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib2hvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:20411

		ext_glVertexAttrib2hvNV((GLuint)index, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3hNV(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y, jshort z) {


//@line:20415

		ext_glVertexAttrib3hNV((GLuint)index, (GLhalfNV)x, (GLhalfNV)y, (GLhalfNV)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3hvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20419

		ext_glVertexAttrib3hvNV((GLuint)index, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib3hvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:20423

		ext_glVertexAttrib3hvNV((GLuint)index, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4hNV(JNIEnv* env, jclass clazz, jint index, jshort x, jshort y, jshort z, jshort w) {


//@line:20427

		ext_glVertexAttrib4hNV((GLuint)index, (GLhalfNV)x, (GLhalfNV)y, (GLhalfNV)z, (GLhalfNV)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4hvNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20431

		ext_glVertexAttrib4hvNV((GLuint)index, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttrib4hvNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:20435

		ext_glVertexAttrib4hvNV((GLuint)index, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs1hvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint n, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20439

		ext_glVertexAttribs1hvNV((GLuint)index, (GLsizei)n, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs1hvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint n, jlong v) {


//@line:20443

		ext_glVertexAttribs1hvNV((GLuint)index, (GLsizei)n, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs2hvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint n, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20447

		ext_glVertexAttribs2hvNV((GLuint)index, (GLsizei)n, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs2hvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint n, jlong v) {


//@line:20451

		ext_glVertexAttribs2hvNV((GLuint)index, (GLsizei)n, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs3hvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint n, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20455

		ext_glVertexAttribs3hvNV((GLuint)index, (GLsizei)n, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs3hvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint n, jlong v) {


//@line:20459

		ext_glVertexAttribs3hvNV((GLuint)index, (GLsizei)n, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs4hvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint n, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20463

		ext_glVertexAttribs4hvNV((GLuint)index, (GLsizei)n, (const GLhalfNV*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribs4hvNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint n, jlong v) {


//@line:20467

		ext_glVertexAttribs4hvNV((GLuint)index, (GLsizei)n, (const GLhalfNV*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelDataRangeNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint length, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:20471

		ext_glPixelDataRangeNV((GLenum)target, (GLsizei)length, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelDataRangeNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint length, jlong pointer) {


//@line:20475

		ext_glPixelDataRangeNV((GLenum)target, (GLsizei)length, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFlushPixelDataRangeNV(JNIEnv* env, jclass clazz, jint target) {


//@line:20479

		ext_glFlushPixelDataRangeNV((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPrimitiveRestartNV(JNIEnv* env, jclass clazz) {


//@line:20483

		ext_glPrimitiveRestartNV();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPrimitiveRestartIndexNV(JNIEnv* env, jclass clazz, jint index) {


//@line:20487

		ext_glPrimitiveRestartIndexNV((GLuint)index);
	

}

JNIEXPORT jobject JNICALL Java_com_badlogic_jglfw_gl_GL_glMapObjectBufferATI(JNIEnv* env, jclass clazz, jint buffer, jlong bufferSize) {


//@line:20491

		GLvoid* bufferPtr = (GLvoid*)ext_glMapObjectBufferATI((GLuint)buffer);
		if(!bufferPtr) return 0;
		return env->NewDirectByteBuffer(bufferPtr, bufferSize);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUnmapObjectBufferATI(JNIEnv* env, jclass clazz, jint buffer) {


//@line:20497

		ext_glUnmapObjectBufferATI((GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilOpSeparateATI(JNIEnv* env, jclass clazz, jint face, jint sfail, jint dpfail, jint dppass) {


//@line:20501

		ext_glStencilOpSeparateATI((GLenum)face, (GLenum)sfail, (GLenum)dpfail, (GLenum)dppass);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilFuncSeparateATI(JNIEnv* env, jclass clazz, jint frontfunc, jint backfunc, jint ref, jint mask) {


//@line:20505

		ext_glStencilFuncSeparateATI((GLenum)frontfunc, (GLenum)backfunc, (GLint)ref, (GLuint)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribArrayObjectATI(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jboolean normalized, jint stride, jint buffer, jint offset) {


//@line:20509

		ext_glVertexAttribArrayObjectATI((GLuint)index, (GLint)size, (GLenum)type, (GLboolean)normalized, (GLsizei)stride, (GLuint)buffer, (GLuint)offset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribArrayObjectfvATI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20513

		ext_glGetVertexAttribArrayObjectfvATI((GLuint)index, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribArrayObjectfvATI__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:20517

		ext_glGetVertexAttribArrayObjectfvATI((GLuint)index, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribArrayObjectivATI__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20521

		ext_glGetVertexAttribArrayObjectivATI((GLuint)index, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribArrayObjectivATI__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:20525

		ext_glGetVertexAttribArrayObjectivATI((GLuint)index, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1bOES(JNIEnv* env, jclass clazz, jint texture, jbyte s) {


//@line:20529

		ext_glMultiTexCoord1bOES((GLenum)texture, (GLbyte)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1bvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20533

		ext_glMultiTexCoord1bvOES((GLenum)texture, (const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1bvOES__IJ(JNIEnv* env, jclass clazz, jint texture, jlong coords) {


//@line:20537

		ext_glMultiTexCoord1bvOES((GLenum)texture, (const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2bOES(JNIEnv* env, jclass clazz, jint texture, jbyte s, jbyte t) {


//@line:20541

		ext_glMultiTexCoord2bOES((GLenum)texture, (GLbyte)s, (GLbyte)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2bvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20545

		ext_glMultiTexCoord2bvOES((GLenum)texture, (const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2bvOES__IJ(JNIEnv* env, jclass clazz, jint texture, jlong coords) {


//@line:20549

		ext_glMultiTexCoord2bvOES((GLenum)texture, (const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3bOES(JNIEnv* env, jclass clazz, jint texture, jbyte s, jbyte t, jbyte r) {


//@line:20553

		ext_glMultiTexCoord3bOES((GLenum)texture, (GLbyte)s, (GLbyte)t, (GLbyte)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3bvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20557

		ext_glMultiTexCoord3bvOES((GLenum)texture, (const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3bvOES__IJ(JNIEnv* env, jclass clazz, jint texture, jlong coords) {


//@line:20561

		ext_glMultiTexCoord3bvOES((GLenum)texture, (const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4bOES(JNIEnv* env, jclass clazz, jint texture, jbyte s, jbyte t, jbyte r, jbyte q) {


//@line:20565

		ext_glMultiTexCoord4bOES((GLenum)texture, (GLbyte)s, (GLbyte)t, (GLbyte)r, (GLbyte)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4bvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20569

		ext_glMultiTexCoord4bvOES((GLenum)texture, (const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4bvOES__IJ(JNIEnv* env, jclass clazz, jint texture, jlong coords) {


//@line:20573

		ext_glMultiTexCoord4bvOES((GLenum)texture, (const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1bOES(JNIEnv* env, jclass clazz, jbyte s) {


//@line:20577

		ext_glTexCoord1bOES((GLbyte)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1bvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20581

		ext_glTexCoord1bvOES((const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1bvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:20585

		ext_glTexCoord1bvOES((const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2bOES(JNIEnv* env, jclass clazz, jbyte s, jbyte t) {


//@line:20589

		ext_glTexCoord2bOES((GLbyte)s, (GLbyte)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2bvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20593

		ext_glTexCoord2bvOES((const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2bvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:20597

		ext_glTexCoord2bvOES((const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3bOES(JNIEnv* env, jclass clazz, jbyte s, jbyte t, jbyte r) {


//@line:20601

		ext_glTexCoord3bOES((GLbyte)s, (GLbyte)t, (GLbyte)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3bvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20605

		ext_glTexCoord3bvOES((const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3bvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:20609

		ext_glTexCoord3bvOES((const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4bOES(JNIEnv* env, jclass clazz, jbyte s, jbyte t, jbyte r, jbyte q) {


//@line:20613

		ext_glTexCoord4bOES((GLbyte)s, (GLbyte)t, (GLbyte)r, (GLbyte)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4bvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20617

		ext_glTexCoord4bvOES((const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4bvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:20621

		ext_glTexCoord4bvOES((const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2bOES(JNIEnv* env, jclass clazz, jbyte x) {


//@line:20625

		ext_glVertex2bOES((GLbyte)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2bvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20629

		ext_glVertex2bvOES((const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2bvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:20633

		ext_glVertex2bvOES((const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3bOES(JNIEnv* env, jclass clazz, jbyte x, jbyte y) {


//@line:20637

		ext_glVertex3bOES((GLbyte)x, (GLbyte)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3bvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20641

		ext_glVertex3bvOES((const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3bvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:20645

		ext_glVertex3bvOES((const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4bOES(JNIEnv* env, jclass clazz, jbyte x, jbyte y, jbyte z) {


//@line:20649

		ext_glVertex4bOES((GLbyte)x, (GLbyte)y, (GLbyte)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4bvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20653

		ext_glVertex4bvOES((const GLbyte*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4bvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:20657

		ext_glVertex4bvOES((const GLbyte*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glAccumxOES(JNIEnv* env, jclass clazz, jint op, jint value) {


//@line:20661

		ext_glAccumxOES((GLenum)op, (GLfixed)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glAlphaFuncxOES(JNIEnv* env, jclass clazz, jint func, jint ref) {


//@line:20665

		ext_glAlphaFuncxOES((GLenum)func, (GLfixed)ref);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBitmapxOES__IIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint width, jint height, jint xorig, jint yorig, jint xmove, jint ymove, jobject obj_bitmap, jint bitmapByteOffset) {
	unsigned char* bitmap = (unsigned char*)(obj_bitmap?env->GetDirectBufferAddress(obj_bitmap):0);


//@line:20669

		ext_glBitmapxOES((GLsizei)width, (GLsizei)height, (GLfixed)xorig, (GLfixed)yorig, (GLfixed)xmove, (GLfixed)ymove, (const GLubyte*)(bitmap + bitmapByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBitmapxOES__IIIIIIJ(JNIEnv* env, jclass clazz, jint width, jint height, jint xorig, jint yorig, jint xmove, jint ymove, jlong bitmap) {


//@line:20673

		ext_glBitmapxOES((GLsizei)width, (GLsizei)height, (GLfixed)xorig, (GLfixed)yorig, (GLfixed)xmove, (GLfixed)ymove, (const GLubyte*)bitmap);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendColorxOES(JNIEnv* env, jclass clazz, jint red, jint green, jint blue, jint alpha) {


//@line:20677

		ext_glBlendColorxOES((GLfixed)red, (GLfixed)green, (GLfixed)blue, (GLfixed)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearAccumxOES(JNIEnv* env, jclass clazz, jint red, jint green, jint blue, jint alpha) {


//@line:20681

		ext_glClearAccumxOES((GLfixed)red, (GLfixed)green, (GLfixed)blue, (GLfixed)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearColorxOES(JNIEnv* env, jclass clazz, jint red, jint green, jint blue, jint alpha) {


//@line:20685

		ext_glClearColorxOES((GLfixed)red, (GLfixed)green, (GLfixed)blue, (GLfixed)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearDepthxOES(JNIEnv* env, jclass clazz, jint depth) {


//@line:20689

		ext_glClearDepthxOES((GLfixed)depth);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClipPlanexOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint plane, jobject obj_equation, jint equationByteOffset) {
	unsigned char* equation = (unsigned char*)(obj_equation?env->GetDirectBufferAddress(obj_equation):0);


//@line:20693

		ext_glClipPlanexOES((GLenum)plane, (const GLfixed*)(equation + equationByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClipPlanexOES__IJ(JNIEnv* env, jclass clazz, jint plane, jlong equation) {


//@line:20697

		ext_glClipPlanexOES((GLenum)plane, (const GLfixed*)equation);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3xOES(JNIEnv* env, jclass clazz, jint red, jint green, jint blue) {


//@line:20701

		ext_glColor3xOES((GLfixed)red, (GLfixed)green, (GLfixed)blue);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4xOES(JNIEnv* env, jclass clazz, jint red, jint green, jint blue, jint alpha) {


//@line:20705

		ext_glColor4xOES((GLfixed)red, (GLfixed)green, (GLfixed)blue, (GLfixed)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_components, jint componentsByteOffset) {
	unsigned char* components = (unsigned char*)(obj_components?env->GetDirectBufferAddress(obj_components):0);


//@line:20709

		ext_glColor3xvOES((const GLfixed*)(components + componentsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor3xvOES__J(JNIEnv* env, jclass clazz, jlong components) {


//@line:20713

		ext_glColor3xvOES((const GLfixed*)components);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_components, jint componentsByteOffset) {
	unsigned char* components = (unsigned char*)(obj_components?env->GetDirectBufferAddress(obj_components):0);


//@line:20717

		ext_glColor4xvOES((const GLfixed*)(components + componentsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColor4xvOES__J(JNIEnv* env, jclass clazz, jlong components) {


//@line:20721

		ext_glColor4xvOES((const GLfixed*)components);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterxOES(JNIEnv* env, jclass clazz, jint target, jint pname, jint param) {


//@line:20725

		ext_glConvolutionParameterxOES((GLenum)target, (GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20729

		ext_glConvolutionParameterxvOES((GLenum)target, (GLenum)pname, (const GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glConvolutionParameterxvOES__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:20733

		ext_glConvolutionParameterxvOES((GLenum)target, (GLenum)pname, (const GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthRangexOES(JNIEnv* env, jclass clazz, jint n, jint f) {


//@line:20737

		ext_glDepthRangexOES((GLfixed)n, (GLfixed)f);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord1xOES(JNIEnv* env, jclass clazz, jint u) {


//@line:20741

		ext_glEvalCoord1xOES((GLfixed)u);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord2xOES(JNIEnv* env, jclass clazz, jint u, jint v) {


//@line:20745

		ext_glEvalCoord2xOES((GLfixed)u, (GLfixed)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord1xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20749

		ext_glEvalCoord1xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord1xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:20753

		ext_glEvalCoord1xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord2xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20757

		ext_glEvalCoord2xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEvalCoord2xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:20761

		ext_glEvalCoord2xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFeedbackBufferxOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jint type, jobject obj_buffer, jint bufferByteOffset) {
	unsigned char* buffer = (unsigned char*)(obj_buffer?env->GetDirectBufferAddress(obj_buffer):0);


//@line:20765

		ext_glFeedbackBufferxOES((GLsizei)n, (GLenum)type, (const GLfixed*)(buffer + bufferByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFeedbackBufferxOES__IIJ(JNIEnv* env, jclass clazz, jint n, jint type, jlong buffer) {


//@line:20769

		ext_glFeedbackBufferxOES((GLsizei)n, (GLenum)type, (const GLfixed*)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogxOES(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:20773

		ext_glFogxOES((GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogxvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:20777

		ext_glFogxvOES((GLenum)pname, (const GLfixed*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogxvOES__IJ(JNIEnv* env, jclass clazz, jint pname, jlong param) {


//@line:20781

		ext_glFogxvOES((GLenum)pname, (const GLfixed*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFrustumxOES(JNIEnv* env, jclass clazz, jint l, jint r, jint b, jint t, jint n, jint f) {


//@line:20785

		ext_glFrustumxOES((GLfixed)l, (GLfixed)r, (GLfixed)b, (GLfixed)t, (GLfixed)n, (GLfixed)f);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetClipPlanexOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint plane, jobject obj_equation, jint equationByteOffset) {
	unsigned char* equation = (unsigned char*)(obj_equation?env->GetDirectBufferAddress(obj_equation):0);


//@line:20789

		ext_glGetClipPlanexOES((GLenum)plane, (GLfixed*)(equation + equationByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetClipPlanexOES__IJ(JNIEnv* env, jclass clazz, jint plane, jlong equation) {


//@line:20793

		ext_glGetClipPlanexOES((GLenum)plane, (GLfixed*)equation);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionParameterxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20797

		ext_glGetConvolutionParameterxvOES((GLenum)target, (GLenum)pname, (GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetConvolutionParameterxvOES__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:20801

		ext_glGetConvolutionParameterxvOES((GLenum)target, (GLenum)pname, (GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFixedvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20805

		ext_glGetFixedvOES((GLenum)pname, (GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFixedvOES__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:20809

		ext_glGetFixedvOES((GLenum)pname, (GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramParameterxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20813

		ext_glGetHistogramParameterxvOES((GLenum)target, (GLenum)pname, (GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetHistogramParameterxvOES__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:20817

		ext_glGetHistogramParameterxvOES((GLenum)target, (GLenum)pname, (GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLightxOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint light, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20821

		ext_glGetLightxOES((GLenum)light, (GLenum)pname, (GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetLightxOES__IIJ(JNIEnv* env, jclass clazz, jint light, jint pname, jlong params) {


//@line:20825

		ext_glGetLightxOES((GLenum)light, (GLenum)pname, (GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint query, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:20829

		ext_glGetMapxvOES((GLenum)target, (GLenum)query, (GLfixed*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMapxvOES__IIJ(JNIEnv* env, jclass clazz, jint target, jint query, jlong v) {


//@line:20833

		ext_glGetMapxvOES((GLenum)target, (GLenum)query, (GLfixed*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMaterialxOES(JNIEnv* env, jclass clazz, jint face, jint pname, jint param) {


//@line:20837

		ext_glGetMaterialxOES((GLenum)face, (GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelMapxv__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jint size, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:20841

		ext_glGetPixelMapxv((GLenum)map, (GLint)size, (GLfixed*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPixelMapxv__IIJ(JNIEnv* env, jclass clazz, jint map, jint size, jlong values) {


//@line:20845

		ext_glGetPixelMapxv((GLenum)map, (GLint)size, (GLfixed*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexEnvxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20849

		ext_glGetTexEnvxvOES((GLenum)target, (GLenum)pname, (GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexEnvxvOES__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:20853

		ext_glGetTexEnvxvOES((GLenum)target, (GLenum)pname, (GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexGenxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20857

		ext_glGetTexGenxvOES((GLenum)coord, (GLenum)pname, (GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexGenxvOES__IIJ(JNIEnv* env, jclass clazz, jint coord, jint pname, jlong params) {


//@line:20861

		ext_glGetTexGenxvOES((GLenum)coord, (GLenum)pname, (GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexLevelParameterxvOES__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint level, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20865

		ext_glGetTexLevelParameterxvOES((GLenum)target, (GLint)level, (GLenum)pname, (GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexLevelParameterxvOES__IIIJ(JNIEnv* env, jclass clazz, jint target, jint level, jint pname, jlong params) {


//@line:20869

		ext_glGetTexLevelParameterxvOES((GLenum)target, (GLint)level, (GLenum)pname, (GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20873

		ext_glGetTexParameterxvOES((GLenum)target, (GLenum)pname, (GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterxvOES__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:20877

		ext_glGetTexParameterxvOES((GLenum)target, (GLenum)pname, (GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexxOES(JNIEnv* env, jclass clazz, jint component) {


//@line:20881

		ext_glIndexxOES((GLfixed)component);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexxvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_component, jint componentByteOffset) {
	unsigned char* component = (unsigned char*)(obj_component?env->GetDirectBufferAddress(obj_component):0);


//@line:20885

		ext_glIndexxvOES((const GLfixed*)(component + componentByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexxvOES__J(JNIEnv* env, jclass clazz, jlong component) {


//@line:20889

		ext_glIndexxvOES((const GLfixed*)component);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightModelxOES(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:20893

		ext_glLightModelxOES((GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightModelxvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:20897

		ext_glLightModelxvOES((GLenum)pname, (const GLfixed*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightModelxvOES__IJ(JNIEnv* env, jclass clazz, jint pname, jlong param) {


//@line:20901

		ext_glLightModelxvOES((GLenum)pname, (const GLfixed*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightxOES(JNIEnv* env, jclass clazz, jint light, jint pname, jint param) {


//@line:20905

		ext_glLightxOES((GLenum)light, (GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint light, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:20909

		ext_glLightxvOES((GLenum)light, (GLenum)pname, (const GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLightxvOES__IIJ(JNIEnv* env, jclass clazz, jint light, jint pname, jlong params) {


//@line:20913

		ext_glLightxvOES((GLenum)light, (GLenum)pname, (const GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLineWidthxOES(JNIEnv* env, jclass clazz, jint width) {


//@line:20917

		ext_glLineWidthxOES((GLfixed)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadMatrixxOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:20921

		ext_glLoadMatrixxOES((const GLfixed*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadMatrixxOES__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:20925

		ext_glLoadMatrixxOES((const GLfixed*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadTransposeMatrixxOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:20929

		ext_glLoadTransposeMatrixxOES((const GLfixed*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glLoadTransposeMatrixxOES__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:20933

		ext_glLoadTransposeMatrixxOES((const GLfixed*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMap1xOES(JNIEnv* env, jclass clazz, jint target, jint u1, jint u2, jint stride, jint order, jint points) {


//@line:20937

		ext_glMap1xOES((GLenum)target, (GLfixed)u1, (GLfixed)u2, (GLint)stride, (GLint)order, (GLfixed)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMap2xOES(JNIEnv* env, jclass clazz, jint target, jint u1, jint u2, jint ustride, jint uorder, jint v1, jint v2, jint vstride, jint vorder, jint points) {


//@line:20941

		ext_glMap2xOES((GLenum)target, (GLfixed)u1, (GLfixed)u2, (GLint)ustride, (GLint)uorder, (GLfixed)v1, (GLfixed)v2, (GLint)vstride, (GLint)vorder, (GLfixed)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapGrid1xOES(JNIEnv* env, jclass clazz, jint n, jint u1, jint u2) {


//@line:20945

		ext_glMapGrid1xOES((GLint)n, (GLfixed)u1, (GLfixed)u2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapGrid2xOES(JNIEnv* env, jclass clazz, jint n, jint u1, jint u2, jint v1, jint v2) {


//@line:20949

		ext_glMapGrid2xOES((GLint)n, (GLfixed)u1, (GLfixed)u2, (GLfixed)v1, (GLfixed)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMaterialxOES(JNIEnv* env, jclass clazz, jint face, jint pname, jint param) {


//@line:20953

		ext_glMaterialxOES((GLenum)face, (GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMaterialxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint face, jint pname, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:20957

		ext_glMaterialxvOES((GLenum)face, (GLenum)pname, (const GLfixed*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMaterialxvOES__IIJ(JNIEnv* env, jclass clazz, jint face, jint pname, jlong param) {


//@line:20961

		ext_glMaterialxvOES((GLenum)face, (GLenum)pname, (const GLfixed*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultMatrixxOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:20965

		ext_glMultMatrixxOES((const GLfixed*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultMatrixxOES__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:20969

		ext_glMultMatrixxOES((const GLfixed*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultTransposeMatrixxOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:20973

		ext_glMultTransposeMatrixxOES((const GLfixed*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultTransposeMatrixxOES__J(JNIEnv* env, jclass clazz, jlong m) {


//@line:20977

		ext_glMultTransposeMatrixxOES((const GLfixed*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1xOES(JNIEnv* env, jclass clazz, jint texture, jint s) {


//@line:20981

		ext_glMultiTexCoord1xOES((GLenum)texture, (GLfixed)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2xOES(JNIEnv* env, jclass clazz, jint texture, jint s, jint t) {


//@line:20985

		ext_glMultiTexCoord2xOES((GLenum)texture, (GLfixed)s, (GLfixed)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3xOES(JNIEnv* env, jclass clazz, jint texture, jint s, jint t, jint r) {


//@line:20989

		ext_glMultiTexCoord3xOES((GLenum)texture, (GLfixed)s, (GLfixed)t, (GLfixed)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4xOES(JNIEnv* env, jclass clazz, jint texture, jint s, jint t, jint r, jint q) {


//@line:20993

		ext_glMultiTexCoord4xOES((GLenum)texture, (GLfixed)s, (GLfixed)t, (GLfixed)r, (GLfixed)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1xvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:20997

		ext_glMultiTexCoord1xvOES((GLenum)texture, (const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord1xvOES__IJ(JNIEnv* env, jclass clazz, jint texture, jlong coords) {


//@line:21001

		ext_glMultiTexCoord1xvOES((GLenum)texture, (const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2xvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21005

		ext_glMultiTexCoord2xvOES((GLenum)texture, (const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord2xvOES__IJ(JNIEnv* env, jclass clazz, jint texture, jlong coords) {


//@line:21009

		ext_glMultiTexCoord2xvOES((GLenum)texture, (const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3xvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21013

		ext_glMultiTexCoord3xvOES((GLenum)texture, (const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord3xvOES__IJ(JNIEnv* env, jclass clazz, jint texture, jlong coords) {


//@line:21017

		ext_glMultiTexCoord3xvOES((GLenum)texture, (const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4xvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21021

		ext_glMultiTexCoord4xvOES((GLenum)texture, (const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoord4xvOES__IJ(JNIEnv* env, jclass clazz, jint texture, jlong coords) {


//@line:21025

		ext_glMultiTexCoord4xvOES((GLenum)texture, (const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3xOES(JNIEnv* env, jclass clazz, jint nx, jint ny, jint nz) {


//@line:21029

		ext_glNormal3xOES((GLfixed)nx, (GLfixed)ny, (GLfixed)nz);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21033

		ext_glNormal3xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormal3xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21037

		ext_glNormal3xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glOrthoxOES(JNIEnv* env, jclass clazz, jint l, jint r, jint b, jint t, jint n, jint f) {


//@line:21041

		ext_glOrthoxOES((GLfixed)l, (GLfixed)r, (GLfixed)b, (GLfixed)t, (GLfixed)n, (GLfixed)f);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPassThroughxOES(JNIEnv* env, jclass clazz, jint token) {


//@line:21045

		ext_glPassThroughxOES((GLfixed)token);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelMapx__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint map, jint size, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:21049

		ext_glPixelMapx((GLenum)map, (GLint)size, (const GLfixed*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelMapx__IIJ(JNIEnv* env, jclass clazz, jint map, jint size, jlong values) {


//@line:21053

		ext_glPixelMapx((GLenum)map, (GLint)size, (const GLfixed*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelStorex(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:21057

		ext_glPixelStorex((GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelTransferxOES(JNIEnv* env, jclass clazz, jint pname, jint param) {


//@line:21061

		ext_glPixelTransferxOES((GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPixelZoomxOES(JNIEnv* env, jclass clazz, jint xfactor, jint yfactor) {


//@line:21065

		ext_glPixelZoomxOES((GLfixed)xfactor, (GLfixed)yfactor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterxvOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21069

		ext_glPointParameterxvOES((GLenum)pname, (const GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointParameterxvOES__IJ(JNIEnv* env, jclass clazz, jint pname, jlong params) {


//@line:21073

		ext_glPointParameterxvOES((GLenum)pname, (const GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPointSizexOES(JNIEnv* env, jclass clazz, jint size) {


//@line:21077

		ext_glPointSizexOES((GLfixed)size);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPolygonOffsetxOES(JNIEnv* env, jclass clazz, jint factor, jint units) {


//@line:21081

		ext_glPolygonOffsetxOES((GLfixed)factor, (GLfixed)units);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPrioritizeTexturesxOES__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_textures, jint texturesByteOffset, jobject obj_priorities, jint prioritiesByteOffset) {
	unsigned char* textures = (unsigned char*)(obj_textures?env->GetDirectBufferAddress(obj_textures):0);
	unsigned char* priorities = (unsigned char*)(obj_priorities?env->GetDirectBufferAddress(obj_priorities):0);


//@line:21085

		ext_glPrioritizeTexturesxOES((GLsizei)n, (const GLuint*)(textures + texturesByteOffset), (const GLfixed*)(priorities + prioritiesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPrioritizeTexturesxOES__IJJ(JNIEnv* env, jclass clazz, jint n, jlong textures, jlong priorities) {


//@line:21089

		ext_glPrioritizeTexturesxOES((GLsizei)n, (const GLuint*)textures, (const GLfixed*)priorities);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2xOES(JNIEnv* env, jclass clazz, jint x, jint y) {


//@line:21093

		ext_glRasterPos2xOES((GLfixed)x, (GLfixed)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3xOES(JNIEnv* env, jclass clazz, jint x, jint y, jint z) {


//@line:21097

		ext_glRasterPos3xOES((GLfixed)x, (GLfixed)y, (GLfixed)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4xOES(JNIEnv* env, jclass clazz, jint x, jint y, jint z, jint w) {


//@line:21101

		ext_glRasterPos4xOES((GLfixed)x, (GLfixed)y, (GLfixed)z, (GLfixed)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21105

		ext_glRasterPos2xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos2xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21109

		ext_glRasterPos2xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21113

		ext_glRasterPos3xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos3xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21117

		ext_glRasterPos3xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21121

		ext_glRasterPos4xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRasterPos4xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21125

		ext_glRasterPos4xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectxOES(JNIEnv* env, jclass clazz, jint x1, jint y1, jint x2, jint y2) {


//@line:21129

		ext_glRectxOES((GLfixed)x1, (GLfixed)y1, (GLfixed)x2, (GLfixed)y2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectxvOES__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_v1, jint v1ByteOffset, jobject obj_v2, jint v2ByteOffset) {
	unsigned char* v1 = (unsigned char*)(obj_v1?env->GetDirectBufferAddress(obj_v1):0);
	unsigned char* v2 = (unsigned char*)(obj_v2?env->GetDirectBufferAddress(obj_v2):0);


//@line:21133

		ext_glRectxvOES((const GLfixed*)(v1 + v1ByteOffset), (const GLfixed*)(v2 + v2ByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRectxvOES__JJ(JNIEnv* env, jclass clazz, jlong v1, jlong v2) {


//@line:21137

		ext_glRectxvOES((const GLfixed*)v1, (const GLfixed*)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRotatexOES(JNIEnv* env, jclass clazz, jint angle, jint x, jint y, jint z) {


//@line:21141

		ext_glRotatexOES((GLfixed)angle, (GLfixed)x, (GLfixed)y, (GLfixed)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSampleCoverageOES(JNIEnv* env, jclass clazz, jint value, jboolean invert) {


//@line:21145

		ext_glSampleCoverageOES((GLfixed)value, (GLboolean)invert);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glScalexOES(JNIEnv* env, jclass clazz, jint x, jint y, jint z) {


//@line:21149

		ext_glScalexOES((GLfixed)x, (GLfixed)y, (GLfixed)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1xOES(JNIEnv* env, jclass clazz, jint s) {


//@line:21153

		ext_glTexCoord1xOES((GLfixed)s);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2xOES(JNIEnv* env, jclass clazz, jint s, jint t) {


//@line:21157

		ext_glTexCoord2xOES((GLfixed)s, (GLfixed)t);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3xOES(JNIEnv* env, jclass clazz, jint s, jint t, jint r) {


//@line:21161

		ext_glTexCoord3xOES((GLfixed)s, (GLfixed)t, (GLfixed)r);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4xOES(JNIEnv* env, jclass clazz, jint s, jint t, jint r, jint q) {


//@line:21165

		ext_glTexCoord4xOES((GLfixed)s, (GLfixed)t, (GLfixed)r, (GLfixed)q);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21169

		ext_glTexCoord1xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord1xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21173

		ext_glTexCoord1xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21177

		ext_glTexCoord2xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord2xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21181

		ext_glTexCoord2xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21185

		ext_glTexCoord3xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord3xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21189

		ext_glTexCoord3xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21193

		ext_glTexCoord4xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoord4xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21197

		ext_glTexCoord4xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexEnvxOES(JNIEnv* env, jclass clazz, jint target, jint pname, jint param) {


//@line:21201

		ext_glTexEnvxOES((GLenum)target, (GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexEnvxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21205

		ext_glTexEnvxvOES((GLenum)target, (GLenum)pname, (const GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexEnvxvOES__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:21209

		ext_glTexEnvxvOES((GLenum)target, (GLenum)pname, (const GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGenxOES(JNIEnv* env, jclass clazz, jint coord, jint pname, jint param) {


//@line:21213

		ext_glTexGenxOES((GLenum)coord, (GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGenxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21217

		ext_glTexGenxvOES((GLenum)coord, (GLenum)pname, (const GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexGenxvOES__IIJ(JNIEnv* env, jclass clazz, jint coord, jint pname, jlong params) {


//@line:21221

		ext_glTexGenxvOES((GLenum)coord, (GLenum)pname, (const GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterxOES(JNIEnv* env, jclass clazz, jint target, jint pname, jint param) {


//@line:21225

		ext_glTexParameterxOES((GLenum)target, (GLenum)pname, (GLfixed)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterxvOES__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21229

		ext_glTexParameterxvOES((GLenum)target, (GLenum)pname, (const GLfixed*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterxvOES__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:21233

		ext_glTexParameterxvOES((GLenum)target, (GLenum)pname, (const GLfixed*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTranslatexOES(JNIEnv* env, jclass clazz, jint x, jint y, jint z) {


//@line:21237

		ext_glTranslatexOES((GLfixed)x, (GLfixed)y, (GLfixed)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2xOES(JNIEnv* env, jclass clazz, jint x) {


//@line:21241

		ext_glVertex2xOES((GLfixed)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3xOES(JNIEnv* env, jclass clazz, jint x, jint y) {


//@line:21245

		ext_glVertex3xOES((GLfixed)x, (GLfixed)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4xOES(JNIEnv* env, jclass clazz, jint x, jint y, jint z) {


//@line:21249

		ext_glVertex4xOES((GLfixed)x, (GLfixed)y, (GLfixed)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21253

		ext_glVertex2xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex2xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21257

		ext_glVertex2xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21261

		ext_glVertex3xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex3xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21265

		ext_glVertex3xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4xvOES__Ljava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:21269

		ext_glVertex4xvOES((const GLfixed*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertex4xvOES__J(JNIEnv* env, jclass clazz, jlong coords) {


//@line:21273

		ext_glVertex4xvOES((const GLfixed*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthRangefOES(JNIEnv* env, jclass clazz, jfloat n, jfloat f) {


//@line:21277

		ext_glDepthRangefOES((GLclampf)n, (GLclampf)f);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFrustumfOES(JNIEnv* env, jclass clazz, jfloat l, jfloat r, jfloat b, jfloat t, jfloat n, jfloat f) {


//@line:21281

		ext_glFrustumfOES((GLfloat)l, (GLfloat)r, (GLfloat)b, (GLfloat)t, (GLfloat)n, (GLfloat)f);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glOrthofOES(JNIEnv* env, jclass clazz, jfloat l, jfloat r, jfloat b, jfloat t, jfloat n, jfloat f) {


//@line:21285

		ext_glOrthofOES((GLfloat)l, (GLfloat)r, (GLfloat)b, (GLfloat)t, (GLfloat)n, (GLfloat)f);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClipPlanefOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint plane, jobject obj_equation, jint equationByteOffset) {
	unsigned char* equation = (unsigned char*)(obj_equation?env->GetDirectBufferAddress(obj_equation):0);


//@line:21289

		ext_glClipPlanefOES((GLenum)plane, (const GLfloat*)(equation + equationByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClipPlanefOES__IJ(JNIEnv* env, jclass clazz, jint plane, jlong equation) {


//@line:21293

		ext_glClipPlanefOES((GLenum)plane, (const GLfloat*)equation);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearDepthfOES(JNIEnv* env, jclass clazz, jdouble depth) {


//@line:21297

		ext_glClearDepthfOES((GLclampd)depth);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetClipPlanefOES__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint plane, jobject obj_equation, jint equationByteOffset) {
	unsigned char* equation = (unsigned char*)(obj_equation?env->GetDirectBufferAddress(obj_equation):0);


//@line:21301

		ext_glGetClipPlanefOES((GLenum)plane, (GLfloat*)(equation + equationByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetClipPlanefOES__IJ(JNIEnv* env, jclass clazz, jint plane, jlong equation) {


//@line:21305

		ext_glGetClipPlanefOES((GLenum)plane, (GLfloat*)equation);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glQueryMatrixxOES__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jobject obj_mantissa, jint mantissaByteOffset, jobject obj_exponent, jint exponentByteOffset, unsigned char* mantissa, unsigned char* exponent) {

//@line:21309

		return (jint)ext_glQueryMatrixxOES((const GLfixed*)(mantissa + mantissaByteOffset), (const GLint*)(exponent + exponentByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glQueryMatrixxOES__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_mantissa, jint mantissaByteOffset, jobject obj_exponent, jint exponentByteOffset) {
	unsigned char* mantissa = (unsigned char*)(obj_mantissa?env->GetDirectBufferAddress(obj_mantissa):0);
	unsigned char* exponent = (unsigned char*)(obj_exponent?env->GetDirectBufferAddress(obj_exponent):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glQueryMatrixxOES__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(env, clazz, obj_mantissa, mantissaByteOffset, obj_exponent, exponentByteOffset, mantissa, exponent);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glQueryMatrixxOES__JJ(JNIEnv* env, jclass clazz, jlong mantissa, jlong exponent) {


//@line:21313

		return (jint)ext_glQueryMatrixxOES((const GLfixed*)mantissa, (const GLint*)exponent);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthBoundsEXT(JNIEnv* env, jclass clazz, jdouble zmin, jdouble zmax) {


//@line:21317

		ext_glDepthBoundsEXT((GLclampd)zmin, (GLclampd)zmax);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendEquationSeparateEXT(JNIEnv* env, jclass clazz, jint modeRGB, jint modeAlpha) {


//@line:21321

		ext_glBlendEquationSeparateEXT((GLenum)modeRGB, (GLenum)modeAlpha);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsRenderbufferEXT(JNIEnv* env, jclass clazz, jint renderbuffer) {


//@line:21325

		return (jboolean)ext_glIsRenderbufferEXT((GLuint)renderbuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindRenderbufferEXT(JNIEnv* env, jclass clazz, jint target, jint renderbuffer) {


//@line:21329

		ext_glBindRenderbufferEXT((GLenum)target, (GLuint)renderbuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteRenderbuffersEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_renderbuffers, jint renderbuffersByteOffset) {
	unsigned char* renderbuffers = (unsigned char*)(obj_renderbuffers?env->GetDirectBufferAddress(obj_renderbuffers):0);


//@line:21333

		ext_glDeleteRenderbuffersEXT((GLsizei)n, (const GLuint*)(renderbuffers + renderbuffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteRenderbuffersEXT__IJ(JNIEnv* env, jclass clazz, jint n, jlong renderbuffers) {


//@line:21337

		ext_glDeleteRenderbuffersEXT((GLsizei)n, (const GLuint*)renderbuffers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenRenderbuffersEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_renderbuffers, jint renderbuffersByteOffset) {
	unsigned char* renderbuffers = (unsigned char*)(obj_renderbuffers?env->GetDirectBufferAddress(obj_renderbuffers):0);


//@line:21341

		ext_glGenRenderbuffersEXT((GLsizei)n, (GLuint*)(renderbuffers + renderbuffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenRenderbuffersEXT__IJ(JNIEnv* env, jclass clazz, jint n, jlong renderbuffers) {


//@line:21345

		ext_glGenRenderbuffersEXT((GLsizei)n, (GLuint*)renderbuffers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRenderbufferStorageEXT(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint width, jint height) {


//@line:21349

		ext_glRenderbufferStorageEXT((GLenum)target, (GLenum)internalformat, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetRenderbufferParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21353

		ext_glGetRenderbufferParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetRenderbufferParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:21357

		ext_glGetRenderbufferParameterivEXT((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsFramebufferEXT(JNIEnv* env, jclass clazz, jint framebuffer) {


//@line:21361

		return (jboolean)ext_glIsFramebufferEXT((GLuint)framebuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindFramebufferEXT(JNIEnv* env, jclass clazz, jint target, jint framebuffer) {


//@line:21365

		ext_glBindFramebufferEXT((GLenum)target, (GLuint)framebuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteFramebuffersEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_framebuffers, jint framebuffersByteOffset) {
	unsigned char* framebuffers = (unsigned char*)(obj_framebuffers?env->GetDirectBufferAddress(obj_framebuffers):0);


//@line:21369

		ext_glDeleteFramebuffersEXT((GLsizei)n, (const GLuint*)(framebuffers + framebuffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteFramebuffersEXT__IJ(JNIEnv* env, jclass clazz, jint n, jlong framebuffers) {


//@line:21373

		ext_glDeleteFramebuffersEXT((GLsizei)n, (const GLuint*)framebuffers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenFramebuffersEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_framebuffers, jint framebuffersByteOffset) {
	unsigned char* framebuffers = (unsigned char*)(obj_framebuffers?env->GetDirectBufferAddress(obj_framebuffers):0);


//@line:21377

		ext_glGenFramebuffersEXT((GLsizei)n, (GLuint*)(framebuffers + framebuffersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenFramebuffersEXT__IJ(JNIEnv* env, jclass clazz, jint n, jlong framebuffers) {


//@line:21381

		ext_glGenFramebuffersEXT((GLsizei)n, (GLuint*)framebuffers);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glCheckFramebufferStatusEXT(JNIEnv* env, jclass clazz, jint target) {


//@line:21385

		return (jint)ext_glCheckFramebufferStatusEXT((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTexture1DEXT(JNIEnv* env, jclass clazz, jint target, jint attachment, jint textarget, jint texture, jint level) {


//@line:21389

		ext_glFramebufferTexture1DEXT((GLenum)target, (GLenum)attachment, (GLenum)textarget, (GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTexture2DEXT(JNIEnv* env, jclass clazz, jint target, jint attachment, jint textarget, jint texture, jint level) {


//@line:21393

		ext_glFramebufferTexture2DEXT((GLenum)target, (GLenum)attachment, (GLenum)textarget, (GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTexture3DEXT(JNIEnv* env, jclass clazz, jint target, jint attachment, jint textarget, jint texture, jint level, jint zoffset) {


//@line:21397

		ext_glFramebufferTexture3DEXT((GLenum)target, (GLenum)attachment, (GLenum)textarget, (GLuint)texture, (GLint)level, (GLint)zoffset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferRenderbufferEXT(JNIEnv* env, jclass clazz, jint target, jint attachment, jint renderbuffertarget, jint renderbuffer) {


//@line:21401

		ext_glFramebufferRenderbufferEXT((GLenum)target, (GLenum)attachment, (GLenum)renderbuffertarget, (GLuint)renderbuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFramebufferAttachmentParameterivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint attachment, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21405

		ext_glGetFramebufferAttachmentParameterivEXT((GLenum)target, (GLenum)attachment, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFramebufferAttachmentParameterivEXT__IIIJ(JNIEnv* env, jclass clazz, jint target, jint attachment, jint pname, jlong params) {


//@line:21409

		ext_glGetFramebufferAttachmentParameterivEXT((GLenum)target, (GLenum)attachment, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenerateMipmapEXT(JNIEnv* env, jclass clazz, jint target) {


//@line:21413

		ext_glGenerateMipmapEXT((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStringMarkerGREMEDY__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint len, jobject obj_string, jint stringByteOffset) {
	unsigned char* string = (unsigned char*)(obj_string?env->GetDirectBufferAddress(obj_string):0);


//@line:21417

		ext_glStringMarkerGREMEDY((GLsizei)len, (const GLvoid*)(string + stringByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStringMarkerGREMEDY__IJ(JNIEnv* env, jclass clazz, jint len, jlong string) {


//@line:21421

		ext_glStringMarkerGREMEDY((GLsizei)len, (const GLvoid*)string);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilClearTagEXT(JNIEnv* env, jclass clazz, jint stencilTagBits, jint stencilClearTag) {


//@line:21425

		ext_glStencilClearTagEXT((GLsizei)stencilTagBits, (GLuint)stencilClearTag);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlitFramebufferEXT(JNIEnv* env, jclass clazz, jint srcX0, jint srcY0, jint srcX1, jint srcY1, jint dstX0, jint dstY0, jint dstX1, jint dstY1, jint mask, jint filter) {


//@line:21429

		ext_glBlitFramebufferEXT((GLint)srcX0, (GLint)srcY0, (GLint)srcX1, (GLint)srcY1, (GLint)dstX0, (GLint)dstY0, (GLint)dstX1, (GLint)dstY1, (GLbitfield)mask, (GLenum)filter);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRenderbufferStorageMultisampleEXT(JNIEnv* env, jclass clazz, jint target, jint samples, jint internalformat, jint width, jint height) {


//@line:21433

		ext_glRenderbufferStorageMultisampleEXT((GLenum)target, (GLsizei)samples, (GLenum)internalformat, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjecti64vEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21437

		ext_glGetQueryObjecti64vEXT((GLuint)id, (GLenum)pname, (GLint64EXT*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjecti64vEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:21441

		ext_glGetQueryObjecti64vEXT((GLuint)id, (GLenum)pname, (GLint64EXT*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectui64vEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint id, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21445

		ext_glGetQueryObjectui64vEXT((GLuint)id, (GLenum)pname, (GLuint64EXT*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetQueryObjectui64vEXT__IIJ(JNIEnv* env, jclass clazz, jint id, jint pname, jlong params) {


//@line:21449

		ext_glGetQueryObjectui64vEXT((GLuint)id, (GLenum)pname, (GLuint64EXT*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameters4fvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21453

		ext_glProgramEnvParameters4fvEXT((GLenum)target, (GLuint)index, (GLsizei)count, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameters4fvEXT__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jlong params) {


//@line:21457

		ext_glProgramEnvParameters4fvEXT((GLenum)target, (GLuint)index, (GLsizei)count, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameters4fvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21461

		ext_glProgramLocalParameters4fvEXT((GLenum)target, (GLuint)index, (GLsizei)count, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameters4fvEXT__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jlong params) {


//@line:21465

		ext_glProgramLocalParameters4fvEXT((GLenum)target, (GLuint)index, (GLsizei)count, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBufferParameteriAPPLE(JNIEnv* env, jclass clazz, jint target, jint pname, jint param) {


//@line:21469

		ext_glBufferParameteriAPPLE((GLenum)target, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFlushMappedBufferRangeAPPLE(JNIEnv* env, jclass clazz, jint target, jlong offset, jlong size) {


//@line:21473

		ext_glFlushMappedBufferRangeAPPLE((GLenum)target, (GLintptr)offset, (GLsizeiptr)size);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameterI4iNV(JNIEnv* env, jclass clazz, jint target, jint index, jint x, jint y, jint z, jint w) {


//@line:21477

		ext_glProgramLocalParameterI4iNV((GLenum)target, (GLuint)index, (GLint)x, (GLint)y, (GLint)z, (GLint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameterI4ivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21481

		ext_glProgramLocalParameterI4ivNV((GLenum)target, (GLuint)index, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameterI4ivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:21485

		ext_glProgramLocalParameterI4ivNV((GLenum)target, (GLuint)index, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParametersI4ivNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21489

		ext_glProgramLocalParametersI4ivNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParametersI4ivNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jlong params) {


//@line:21493

		ext_glProgramLocalParametersI4ivNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameterI4uiNV(JNIEnv* env, jclass clazz, jint target, jint index, jint x, jint y, jint z, jint w) {


//@line:21497

		ext_glProgramLocalParameterI4uiNV((GLenum)target, (GLuint)index, (GLuint)x, (GLuint)y, (GLuint)z, (GLuint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameterI4uivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21501

		ext_glProgramLocalParameterI4uivNV((GLenum)target, (GLuint)index, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParameterI4uivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:21505

		ext_glProgramLocalParameterI4uivNV((GLenum)target, (GLuint)index, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParametersI4uivNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21509

		ext_glProgramLocalParametersI4uivNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramLocalParametersI4uivNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jlong params) {


//@line:21513

		ext_glProgramLocalParametersI4uivNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameterI4iNV(JNIEnv* env, jclass clazz, jint target, jint index, jint x, jint y, jint z, jint w) {


//@line:21517

		ext_glProgramEnvParameterI4iNV((GLenum)target, (GLuint)index, (GLint)x, (GLint)y, (GLint)z, (GLint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameterI4ivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21521

		ext_glProgramEnvParameterI4ivNV((GLenum)target, (GLuint)index, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameterI4ivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:21525

		ext_glProgramEnvParameterI4ivNV((GLenum)target, (GLuint)index, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParametersI4ivNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21529

		ext_glProgramEnvParametersI4ivNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParametersI4ivNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jlong params) {


//@line:21533

		ext_glProgramEnvParametersI4ivNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameterI4uiNV(JNIEnv* env, jclass clazz, jint target, jint index, jint x, jint y, jint z, jint w) {


//@line:21537

		ext_glProgramEnvParameterI4uiNV((GLenum)target, (GLuint)index, (GLuint)x, (GLuint)y, (GLuint)z, (GLuint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameterI4uivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21541

		ext_glProgramEnvParameterI4uivNV((GLenum)target, (GLuint)index, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParameterI4uivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:21545

		ext_glProgramEnvParameterI4uivNV((GLenum)target, (GLuint)index, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParametersI4uivNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21549

		ext_glProgramEnvParametersI4uivNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramEnvParametersI4uivNV__IIIJ(JNIEnv* env, jclass clazz, jint target, jint index, jint count, jlong params) {


//@line:21553

		ext_glProgramEnvParametersI4uivNV((GLenum)target, (GLuint)index, (GLsizei)count, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramLocalParameterIivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21557

		ext_glGetProgramLocalParameterIivNV((GLenum)target, (GLuint)index, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramLocalParameterIivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:21561

		ext_glGetProgramLocalParameterIivNV((GLenum)target, (GLuint)index, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramLocalParameterIuivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21565

		ext_glGetProgramLocalParameterIuivNV((GLenum)target, (GLuint)index, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramLocalParameterIuivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:21569

		ext_glGetProgramLocalParameterIuivNV((GLenum)target, (GLuint)index, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramEnvParameterIivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21573

		ext_glGetProgramEnvParameterIivNV((GLenum)target, (GLuint)index, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramEnvParameterIivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:21577

		ext_glGetProgramEnvParameterIivNV((GLenum)target, (GLuint)index, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramEnvParameterIuivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21581

		ext_glGetProgramEnvParameterIuivNV((GLenum)target, (GLuint)index, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramEnvParameterIuivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong params) {


//@line:21585

		ext_glGetProgramEnvParameterIuivNV((GLenum)target, (GLuint)index, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramVertexLimitNV(JNIEnv* env, jclass clazz, jint target, jint limit) {


//@line:21589

		ext_glProgramVertexLimitNV((GLenum)target, (GLint)limit);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTextureEXT(JNIEnv* env, jclass clazz, jint target, jint attachment, jint texture, jint level) {


//@line:21593

		ext_glFramebufferTextureEXT((GLenum)target, (GLenum)attachment, (GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTextureLayerEXT(JNIEnv* env, jclass clazz, jint target, jint attachment, jint texture, jint level, jint layer) {


//@line:21597

		ext_glFramebufferTextureLayerEXT((GLenum)target, (GLenum)attachment, (GLuint)texture, (GLint)level, (GLint)layer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferTextureFaceEXT(JNIEnv* env, jclass clazz, jint target, jint attachment, jint texture, jint level, jint face) {


//@line:21601

		ext_glFramebufferTextureFaceEXT((GLenum)target, (GLenum)attachment, (GLuint)texture, (GLint)level, (GLenum)face);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramParameteriEXT(JNIEnv* env, jclass clazz, jint program, jint pname, jint value) {


//@line:21605

		ext_glProgramParameteriEXT((GLuint)program, (GLenum)pname, (GLint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1iEXT(JNIEnv* env, jclass clazz, jint index, jint x) {


//@line:21609

		ext_glVertexAttribI1iEXT((GLuint)index, (GLint)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2iEXT(JNIEnv* env, jclass clazz, jint index, jint x, jint y) {


//@line:21613

		ext_glVertexAttribI2iEXT((GLuint)index, (GLint)x, (GLint)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3iEXT(JNIEnv* env, jclass clazz, jint index, jint x, jint y, jint z) {


//@line:21617

		ext_glVertexAttribI3iEXT((GLuint)index, (GLint)x, (GLint)y, (GLint)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4iEXT(JNIEnv* env, jclass clazz, jint index, jint x, jint y, jint z, jint w) {


//@line:21621

		ext_glVertexAttribI4iEXT((GLuint)index, (GLint)x, (GLint)y, (GLint)z, (GLint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1uiEXT(JNIEnv* env, jclass clazz, jint index, jint x) {


//@line:21625

		ext_glVertexAttribI1uiEXT((GLuint)index, (GLuint)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2uiEXT(JNIEnv* env, jclass clazz, jint index, jint x, jint y) {


//@line:21629

		ext_glVertexAttribI2uiEXT((GLuint)index, (GLuint)x, (GLuint)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3uiEXT(JNIEnv* env, jclass clazz, jint index, jint x, jint y, jint z) {


//@line:21633

		ext_glVertexAttribI3uiEXT((GLuint)index, (GLuint)x, (GLuint)y, (GLuint)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4uiEXT(JNIEnv* env, jclass clazz, jint index, jint x, jint y, jint z, jint w) {


//@line:21637

		ext_glVertexAttribI4uiEXT((GLuint)index, (GLuint)x, (GLuint)y, (GLuint)z, (GLuint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1ivEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21641

		ext_glVertexAttribI1ivEXT((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1ivEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21645

		ext_glVertexAttribI1ivEXT((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2ivEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21649

		ext_glVertexAttribI2ivEXT((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2ivEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21653

		ext_glVertexAttribI2ivEXT((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3ivEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21657

		ext_glVertexAttribI3ivEXT((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3ivEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21661

		ext_glVertexAttribI3ivEXT((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4ivEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21665

		ext_glVertexAttribI4ivEXT((GLuint)index, (const GLint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4ivEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21669

		ext_glVertexAttribI4ivEXT((GLuint)index, (const GLint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1uivEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21673

		ext_glVertexAttribI1uivEXT((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI1uivEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21677

		ext_glVertexAttribI1uivEXT((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2uivEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21681

		ext_glVertexAttribI2uivEXT((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI2uivEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21685

		ext_glVertexAttribI2uivEXT((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3uivEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21689

		ext_glVertexAttribI3uivEXT((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI3uivEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21693

		ext_glVertexAttribI3uivEXT((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4uivEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21697

		ext_glVertexAttribI4uivEXT((GLuint)index, (const GLuint*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4uivEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21701

		ext_glVertexAttribI4uivEXT((GLuint)index, (const GLuint*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4bvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21705

		ext_glVertexAttribI4bvEXT((GLuint)index, (const GLbyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4bvEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21709

		ext_glVertexAttribI4bvEXT((GLuint)index, (const GLbyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4svEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21713

		ext_glVertexAttribI4svEXT((GLuint)index, (const GLshort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4svEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21717

		ext_glVertexAttribI4svEXT((GLuint)index, (const GLshort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4ubvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21721

		ext_glVertexAttribI4ubvEXT((GLuint)index, (const GLubyte*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4ubvEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21725

		ext_glVertexAttribI4ubvEXT((GLuint)index, (const GLubyte*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4usvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:21729

		ext_glVertexAttribI4usvEXT((GLuint)index, (const GLushort*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribI4usvEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:21733

		ext_glVertexAttribI4usvEXT((GLuint)index, (const GLushort*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribIPointerEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:21737

		ext_glVertexAttribIPointerEXT((GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribIPointerEXT__IIIIJ(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jint stride, jlong pointer) {


//@line:21741

		ext_glVertexAttribIPointerEXT((GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribIivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21745

		ext_glGetVertexAttribIivEXT((GLuint)index, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribIivEXT__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:21749

		ext_glGetVertexAttribIivEXT((GLuint)index, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribIuivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21753

		ext_glGetVertexAttribIuivEXT((GLuint)index, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribIuivEXT__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:21757

		ext_glGetVertexAttribIuivEXT((GLuint)index, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformuivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21761

		ext_glGetUniformuivEXT((GLuint)program, (GLint)location, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformuivEXT__IIJ(JNIEnv* env, jclass clazz, jint program, jint location, jlong params) {


//@line:21765

		ext_glGetUniformuivEXT((GLuint)program, (GLint)location, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindFragDataLocationEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint color, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:21769

		ext_glBindFragDataLocationEXT((GLuint)program, (GLuint)color, (const GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindFragDataLocationEXT__IIJ(JNIEnv* env, jclass clazz, jint program, jint color, jlong name) {


//@line:21773

		ext_glBindFragDataLocationEXT((GLuint)program, (GLuint)color, (const GLchar*)name);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetFragDataLocationEXT__ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint program, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:21777

		return (jint)ext_glGetFragDataLocationEXT((GLuint)program, (const GLchar*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragDataLocationEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetFragDataLocationEXT__ILjava_nio_Buffer_2I(env, clazz, program, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFragDataLocationEXT__IJ(JNIEnv* env, jclass clazz, jint program, jlong name) {


//@line:21781

		return (jint)ext_glGetFragDataLocationEXT((GLuint)program, (const GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1uiEXT(JNIEnv* env, jclass clazz, jint location, jint v0) {


//@line:21785

		ext_glUniform1uiEXT((GLint)location, (GLuint)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2uiEXT(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1) {


//@line:21789

		ext_glUniform2uiEXT((GLint)location, (GLuint)v0, (GLuint)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3uiEXT(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1, jint v2) {


//@line:21793

		ext_glUniform3uiEXT((GLint)location, (GLuint)v0, (GLuint)v1, (GLuint)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4uiEXT(JNIEnv* env, jclass clazz, jint location, jint v0, jint v1, jint v2, jint v3) {


//@line:21797

		ext_glUniform4uiEXT((GLint)location, (GLuint)v0, (GLuint)v1, (GLuint)v2, (GLuint)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1uivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:21801

		ext_glUniform1uivEXT((GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1uivEXT__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:21805

		ext_glUniform1uivEXT((GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2uivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:21809

		ext_glUniform2uivEXT((GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2uivEXT__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:21813

		ext_glUniform2uivEXT((GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3uivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:21817

		ext_glUniform3uivEXT((GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3uivEXT__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:21821

		ext_glUniform3uivEXT((GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4uivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:21825

		ext_glUniform4uivEXT((GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4uivEXT__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:21829

		ext_glUniform4uivEXT((GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawArraysInstancedEXT(JNIEnv* env, jclass clazz, jint mode, jint start, jint count, jint primcount) {


//@line:21833

		ext_glDrawArraysInstancedEXT((GLenum)mode, (GLint)start, (GLsizei)count, (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstancedEXT__IIILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jobject obj_indices, jint indicesByteOffset, jint primcount) {
	unsigned char* indices = (unsigned char*)(obj_indices?env->GetDirectBufferAddress(obj_indices):0);


//@line:21837

		ext_glDrawElementsInstancedEXT((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)(indices + indicesByteOffset), (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawElementsInstancedEXT__IIIJI(JNIEnv* env, jclass clazz, jint mode, jint count, jint type, jlong indices, jint primcount) {


//@line:21841

		ext_glDrawElementsInstancedEXT((GLenum)mode, (GLsizei)count, (GLenum)type, (const GLvoid*)indices, (GLsizei)primcount);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexBufferEXT(JNIEnv* env, jclass clazz, jint target, jint internalformat, jint buffer) {


//@line:21845

		ext_glTexBufferEXT((GLenum)target, (GLenum)internalformat, (GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthRangedNV(JNIEnv* env, jclass clazz, jdouble zNear, jdouble zFar) {


//@line:21849

		ext_glDepthRangedNV((GLdouble)zNear, (GLdouble)zFar);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearDepthdNV(JNIEnv* env, jclass clazz, jdouble depth) {


//@line:21853

		ext_glClearDepthdNV((GLdouble)depth);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDepthBoundsdNV(JNIEnv* env, jclass clazz, jdouble zmin, jdouble zmax) {


//@line:21857

		ext_glDepthBoundsdNV((GLdouble)zmin, (GLdouble)zmax);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glRenderbufferStorageMultisampleCoverageNV(JNIEnv* env, jclass clazz, jint target, jint coverageSamples, jint colorSamples, jint internalformat, jint width, jint height) {


//@line:21861

		ext_glRenderbufferStorageMultisampleCoverageNV((GLenum)target, (GLsizei)coverageSamples, (GLsizei)colorSamples, (GLenum)internalformat, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramBufferParametersfvNV__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint bindingIndex, jint wordIndex, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21865

		ext_glProgramBufferParametersfvNV((GLenum)target, (GLuint)bindingIndex, (GLuint)wordIndex, (GLsizei)count, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramBufferParametersfvNV__IIIIJ(JNIEnv* env, jclass clazz, jint target, jint bindingIndex, jint wordIndex, jint count, jlong params) {


//@line:21869

		ext_glProgramBufferParametersfvNV((GLenum)target, (GLuint)bindingIndex, (GLuint)wordIndex, (GLsizei)count, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramBufferParametersIivNV__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint bindingIndex, jint wordIndex, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21873

		ext_glProgramBufferParametersIivNV((GLenum)target, (GLuint)bindingIndex, (GLuint)wordIndex, (GLsizei)count, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramBufferParametersIivNV__IIIIJ(JNIEnv* env, jclass clazz, jint target, jint bindingIndex, jint wordIndex, jint count, jlong params) {


//@line:21877

		ext_glProgramBufferParametersIivNV((GLenum)target, (GLuint)bindingIndex, (GLuint)wordIndex, (GLsizei)count, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramBufferParametersIuivNV__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint bindingIndex, jint wordIndex, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:21881

		ext_glProgramBufferParametersIuivNV((GLenum)target, (GLuint)bindingIndex, (GLuint)wordIndex, (GLsizei)count, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramBufferParametersIuivNV__IIIIJ(JNIEnv* env, jclass clazz, jint target, jint bindingIndex, jint wordIndex, jint count, jlong params) {


//@line:21885

		ext_glProgramBufferParametersIuivNV((GLenum)target, (GLuint)bindingIndex, (GLuint)wordIndex, (GLsizei)count, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorMaskIndexedEXT(JNIEnv* env, jclass clazz, jint index, jboolean r, jboolean g, jboolean b, jboolean a) {


//@line:21889

		ext_glColorMaskIndexedEXT((GLuint)index, (GLboolean)r, (GLboolean)g, (GLboolean)b, (GLboolean)a);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBooleanIndexedvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:21893

		ext_glGetBooleanIndexedvEXT((GLenum)target, (GLuint)index, (GLboolean*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBooleanIndexedvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong data) {


//@line:21897

		ext_glGetBooleanIndexedvEXT((GLenum)target, (GLuint)index, (GLboolean*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetIntegerIndexedvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:21901

		ext_glGetIntegerIndexedvEXT((GLenum)target, (GLuint)index, (GLint*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetIntegerIndexedvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong data) {


//@line:21905

		ext_glGetIntegerIndexedvEXT((GLenum)target, (GLuint)index, (GLint*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEnableIndexedEXT(JNIEnv* env, jclass clazz, jint target, jint index) {


//@line:21909

		ext_glEnableIndexedEXT((GLenum)target, (GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDisableIndexedEXT(JNIEnv* env, jclass clazz, jint target, jint index) {


//@line:21913

		ext_glDisableIndexedEXT((GLenum)target, (GLuint)index);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsEnabledIndexedEXT(JNIEnv* env, jclass clazz, jint target, jint index) {


//@line:21917

		return (jboolean)ext_glIsEnabledIndexedEXT((GLenum)target, (GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginTransformFeedbackNV(JNIEnv* env, jclass clazz, jint primitiveMode) {


//@line:21921

		ext_glBeginTransformFeedbackNV((GLenum)primitiveMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndTransformFeedbackNV(JNIEnv* env, jclass clazz) {


//@line:21925

		ext_glEndTransformFeedbackNV();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformFeedbackAttribsNV__ILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint count, jobject obj_attribs, jint attribsByteOffset, jint bufferMode) {
	unsigned char* attribs = (unsigned char*)(obj_attribs?env->GetDirectBufferAddress(obj_attribs):0);


//@line:21929

		ext_glTransformFeedbackAttribsNV((GLuint)count, (const GLint*)(attribs + attribsByteOffset), (GLenum)bufferMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformFeedbackAttribsNV__IJI(JNIEnv* env, jclass clazz, jint count, jlong attribs, jint bufferMode) {


//@line:21933

		ext_glTransformFeedbackAttribsNV((GLuint)count, (const GLint*)attribs, (GLenum)bufferMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindBufferRangeNV(JNIEnv* env, jclass clazz, jint target, jint index, jint buffer, jlong offset, jlong size) {


//@line:21937

		ext_glBindBufferRangeNV((GLenum)target, (GLuint)index, (GLuint)buffer, (GLintptr)offset, (GLsizeiptr)size);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindBufferOffsetNV(JNIEnv* env, jclass clazz, jint target, jint index, jint buffer, jlong offset) {


//@line:21941

		ext_glBindBufferOffsetNV((GLenum)target, (GLuint)index, (GLuint)buffer, (GLintptr)offset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindBufferBaseNV(JNIEnv* env, jclass clazz, jint target, jint index, jint buffer) {


//@line:21945

		ext_glBindBufferBaseNV((GLenum)target, (GLuint)index, (GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformFeedbackVaryingsNV__IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint program, jint count, jobject obj_locations, jint locationsByteOffset, jint bufferMode) {
	unsigned char* locations = (unsigned char*)(obj_locations?env->GetDirectBufferAddress(obj_locations):0);


//@line:21949

		ext_glTransformFeedbackVaryingsNV((GLuint)program, (GLsizei)count, (const GLint*)(locations + locationsByteOffset), (GLenum)bufferMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformFeedbackVaryingsNV__IIJI(JNIEnv* env, jclass clazz, jint program, jint count, jlong locations, jint bufferMode) {


//@line:21953

		ext_glTransformFeedbackVaryingsNV((GLuint)program, (GLsizei)count, (const GLint*)locations, (GLenum)bufferMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glActiveVaryingNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:21957

		ext_glActiveVaryingNV((GLuint)program, (const GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glActiveVaryingNV__IJ(JNIEnv* env, jclass clazz, jint program, jlong name) {


//@line:21961

		ext_glActiveVaryingNV((GLuint)program, (const GLchar*)name);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetVaryingLocationNV__ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint program, jobject obj_name, jint nameByteOffset, unsigned char* name) {

//@line:21965

		return (jint)ext_glGetVaryingLocationNV((GLuint)program, (const GLchar*)(name + nameByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVaryingLocationNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jobject obj_name, jint nameByteOffset) {
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetVaryingLocationNV__ILjava_nio_Buffer_2I(env, clazz, program, obj_name, nameByteOffset, name);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVaryingLocationNV__IJ(JNIEnv* env, jclass clazz, jint program, jlong name) {


//@line:21969

		return (jint)ext_glGetVaryingLocationNV((GLuint)program, (const GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveVaryingNV__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint index, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_size, jint sizeByteOffset, jobject obj_type, jint typeByteOffset, jobject obj_name, jint nameByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* size = (unsigned char*)(obj_size?env->GetDirectBufferAddress(obj_size):0);
	unsigned char* type = (unsigned char*)(obj_type?env->GetDirectBufferAddress(obj_type):0);
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:21973

		ext_glGetActiveVaryingNV((GLuint)program, (GLuint)index, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLsizei*)(size + sizeByteOffset), (GLenum*)(type + typeByteOffset), (GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetActiveVaryingNV__IIIJJJJ(JNIEnv* env, jclass clazz, jint program, jint index, jint bufSize, jlong length, jlong size, jlong type, jlong name) {


//@line:21977

		ext_glGetActiveVaryingNV((GLuint)program, (GLuint)index, (GLsizei)bufSize, (GLsizei*)length, (GLsizei*)size, (GLenum*)type, (GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTransformFeedbackVaryingNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint index, jobject obj_location, jint locationByteOffset) {
	unsigned char* location = (unsigned char*)(obj_location?env->GetDirectBufferAddress(obj_location):0);


//@line:21981

		ext_glGetTransformFeedbackVaryingNV((GLuint)program, (GLuint)index, (GLint*)(location + locationByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTransformFeedbackVaryingNV__IIJ(JNIEnv* env, jclass clazz, jint program, jint index, jlong location) {


//@line:21985

		ext_glGetTransformFeedbackVaryingNV((GLuint)program, (GLuint)index, (GLint*)location);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformFeedbackStreamAttribsNV__ILjava_nio_Buffer_2IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint count, jobject obj_attribs, jint attribsByteOffset, jint nbuffers, jobject obj_bufstreams, jint bufstreamsByteOffset, jint bufferMode) {
	unsigned char* attribs = (unsigned char*)(obj_attribs?env->GetDirectBufferAddress(obj_attribs):0);
	unsigned char* bufstreams = (unsigned char*)(obj_bufstreams?env->GetDirectBufferAddress(obj_bufstreams):0);


//@line:21989

		ext_glTransformFeedbackStreamAttribsNV((GLsizei)count, (const GLint*)(attribs + attribsByteOffset), (GLsizei)nbuffers, (const GLint*)(bufstreams + bufstreamsByteOffset), (GLenum)bufferMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformFeedbackStreamAttribsNV__IJIJI(JNIEnv* env, jclass clazz, jint count, jlong attribs, jint nbuffers, jlong bufstreams, jint bufferMode) {


//@line:21993

		ext_glTransformFeedbackStreamAttribsNV((GLsizei)count, (const GLint*)attribs, (GLsizei)nbuffers, (const GLint*)bufstreams, (GLenum)bufferMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformBufferEXT(JNIEnv* env, jclass clazz, jint program, jint location, jint buffer) {


//@line:21997

		ext_glUniformBufferEXT((GLuint)program, (GLint)location, (GLuint)buffer);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformBufferSizeEXT(JNIEnv* env, jclass clazz, jint program, jint location) {


//@line:22001

		return (jint)ext_glGetUniformBufferSizeEXT((GLuint)program, (GLint)location);
	

}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformOffsetEXT(JNIEnv* env, jclass clazz, jint program, jint location) {


//@line:22005

		return (jlong)ext_glGetUniformOffsetEXT((GLuint)program, (GLint)location);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterIivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22009

		ext_glTexParameterIivEXT((GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterIivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:22013

		ext_glTexParameterIivEXT((GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterIuivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22017

		ext_glTexParameterIuivEXT((GLenum)target, (GLenum)pname, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexParameterIuivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:22021

		ext_glTexParameterIuivEXT((GLenum)target, (GLenum)pname, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterIivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22025

		ext_glGetTexParameterIivEXT((GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterIivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:22029

		ext_glGetTexParameterIivEXT((GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterIuivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22033

		ext_glGetTexParameterIuivEXT((GLenum)target, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterIuivEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:22037

		ext_glGetTexParameterIuivEXT((GLenum)target, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearColorIiEXT(JNIEnv* env, jclass clazz, jint red, jint green, jint blue, jint alpha) {


//@line:22041

		ext_glClearColorIiEXT((GLint)red, (GLint)green, (GLint)blue, (GLint)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClearColorIuiEXT(JNIEnv* env, jclass clazz, jint red, jint green, jint blue, jint alpha) {


//@line:22045

		ext_glClearColorIuiEXT((GLuint)red, (GLuint)green, (GLuint)blue, (GLuint)alpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFrameTerminatorGREMEDY(JNIEnv* env, jclass clazz) {


//@line:22049

		ext_glFrameTerminatorGREMEDY();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginConditionalRenderNV(JNIEnv* env, jclass clazz, jint id, jint mode) {


//@line:22053

		ext_glBeginConditionalRenderNV((GLuint)id, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndConditionalRenderNV(JNIEnv* env, jclass clazz) {


//@line:22057

		ext_glEndConditionalRenderNV();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPresentFrameKeyedNV(JNIEnv* env, jclass clazz, jint video_slot, jlong minPresentTime, jint beginPresentTimeId, jint presentDurationId, jint type, jint target0, jint fill0, jint key0, jint target1, jint fill1, jint key1) {


//@line:22061

		ext_glPresentFrameKeyedNV((GLuint)video_slot, (GLuint64EXT)minPresentTime, (GLuint)beginPresentTimeId, (GLuint)presentDurationId, (GLenum)type, (GLenum)target0, (GLuint)fill0, (GLuint)key0, (GLenum)target1, (GLuint)fill1, (GLuint)key1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPresentFrameDualFillNV(JNIEnv* env, jclass clazz, jint video_slot, jlong minPresentTime, jint beginPresentTimeId, jint presentDurationId, jint type, jint target0, jint fill0, jint target1, jint fill1, jint target2, jint fill2, jint target3, jint fill3) {


//@line:22065

		ext_glPresentFrameDualFillNV((GLuint)video_slot, (GLuint64EXT)minPresentTime, (GLuint)beginPresentTimeId, (GLuint)presentDurationId, (GLenum)type, (GLenum)target0, (GLuint)fill0, (GLenum)target1, (GLuint)fill1, (GLenum)target2, (GLuint)fill2, (GLenum)target3, (GLuint)fill3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_slot, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22069

		ext_glGetVideoivNV((GLuint)video_slot, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoivNV__IIJ(JNIEnv* env, jclass clazz, jint video_slot, jint pname, jlong params) {


//@line:22073

		ext_glGetVideoivNV((GLuint)video_slot, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideouivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_slot, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22077

		ext_glGetVideouivNV((GLuint)video_slot, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideouivNV__IIJ(JNIEnv* env, jclass clazz, jint video_slot, jint pname, jlong params) {


//@line:22081

		ext_glGetVideouivNV((GLuint)video_slot, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoi64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_slot, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22085

		ext_glGetVideoi64vNV((GLuint)video_slot, (GLenum)pname, (GLint64EXT*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoi64vNV__IIJ(JNIEnv* env, jclass clazz, jint video_slot, jint pname, jlong params) {


//@line:22089

		ext_glGetVideoi64vNV((GLuint)video_slot, (GLenum)pname, (GLint64EXT*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_slot, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22093

		ext_glGetVideoui64vNV((GLuint)video_slot, (GLenum)pname, (GLuint64EXT*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoui64vNV__IIJ(JNIEnv* env, jclass clazz, jint video_slot, jint pname, jlong params) {


//@line:22097

		ext_glGetVideoui64vNV((GLuint)video_slot, (GLenum)pname, (GLuint64EXT*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginTransformFeedbackEXT(JNIEnv* env, jclass clazz, jint primitiveMode) {


//@line:22101

		ext_glBeginTransformFeedbackEXT((GLenum)primitiveMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndTransformFeedbackEXT(JNIEnv* env, jclass clazz) {


//@line:22105

		ext_glEndTransformFeedbackEXT();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindBufferRangeEXT(JNIEnv* env, jclass clazz, jint target, jint index, jint buffer, jlong offset, jlong size) {


//@line:22109

		ext_glBindBufferRangeEXT((GLenum)target, (GLuint)index, (GLuint)buffer, (GLintptr)offset, (GLsizeiptr)size);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindBufferOffsetEXT(JNIEnv* env, jclass clazz, jint target, jint index, jint buffer, jlong offset) {


//@line:22113

		ext_glBindBufferOffsetEXT((GLenum)target, (GLuint)index, (GLuint)buffer, (GLintptr)offset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindBufferBaseEXT(JNIEnv* env, jclass clazz, jint target, jint index, jint buffer) {


//@line:22117

		ext_glBindBufferBaseEXT((GLenum)target, (GLuint)index, (GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformFeedbackVaryingsEXT__IILjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint program, jint count, jobject obj_varyings, jint varyingsByteOffset, jint bufferMode) {
	unsigned char* varyings = (unsigned char*)(obj_varyings?env->GetDirectBufferAddress(obj_varyings):0);


//@line:22121

		ext_glTransformFeedbackVaryingsEXT((GLuint)program, (GLsizei)count, (const GLchar**)(varyings + varyingsByteOffset), (GLenum)bufferMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformFeedbackVaryingsEXT__IIJI(JNIEnv* env, jclass clazz, jint program, jint count, jlong varyings, jint bufferMode) {


//@line:22125

		ext_glTransformFeedbackVaryingsEXT((GLuint)program, (GLsizei)count, (const GLchar**)varyings, (GLenum)bufferMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTransformFeedbackVaryingEXT__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint index, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_size, jint sizeByteOffset, jobject obj_type, jint typeByteOffset, jobject obj_name, jint nameByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* size = (unsigned char*)(obj_size?env->GetDirectBufferAddress(obj_size):0);
	unsigned char* type = (unsigned char*)(obj_type?env->GetDirectBufferAddress(obj_type):0);
	unsigned char* name = (unsigned char*)(obj_name?env->GetDirectBufferAddress(obj_name):0);


//@line:22129

		ext_glGetTransformFeedbackVaryingEXT((GLuint)program, (GLuint)index, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLsizei*)(size + sizeByteOffset), (GLenum*)(type + typeByteOffset), (GLchar*)(name + nameByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTransformFeedbackVaryingEXT__IIIJJJJ(JNIEnv* env, jclass clazz, jint program, jint index, jint bufSize, jlong length, jlong size, jlong type, jlong name) {


//@line:22133

		ext_glGetTransformFeedbackVaryingEXT((GLuint)program, (GLuint)index, (GLsizei)bufSize, (GLsizei*)length, (GLsizei*)size, (GLenum*)type, (GLchar*)name);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glClientAttribDefaultEXT(JNIEnv* env, jclass clazz, jint mask) {


//@line:22137

		ext_glClientAttribDefaultEXT((GLbitfield)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPushClientAttribDefaultEXT(JNIEnv* env, jclass clazz, jint mask) {


//@line:22141

		ext_glPushClientAttribDefaultEXT((GLbitfield)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixLoadfEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:22145

		ext_glMatrixLoadfEXT((GLenum)mode, (const GLfloat*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixLoadfEXT__IJ(JNIEnv* env, jclass clazz, jint mode, jlong m) {


//@line:22149

		ext_glMatrixLoadfEXT((GLenum)mode, (const GLfloat*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixLoaddEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:22153

		ext_glMatrixLoaddEXT((GLenum)mode, (const GLdouble*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixLoaddEXT__IJ(JNIEnv* env, jclass clazz, jint mode, jlong m) {


//@line:22157

		ext_glMatrixLoaddEXT((GLenum)mode, (const GLdouble*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixMultfEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:22161

		ext_glMatrixMultfEXT((GLenum)mode, (const GLfloat*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixMultfEXT__IJ(JNIEnv* env, jclass clazz, jint mode, jlong m) {


//@line:22165

		ext_glMatrixMultfEXT((GLenum)mode, (const GLfloat*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixMultdEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:22169

		ext_glMatrixMultdEXT((GLenum)mode, (const GLdouble*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixMultdEXT__IJ(JNIEnv* env, jclass clazz, jint mode, jlong m) {


//@line:22173

		ext_glMatrixMultdEXT((GLenum)mode, (const GLdouble*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixLoadIdentityEXT(JNIEnv* env, jclass clazz, jint mode) {


//@line:22177

		ext_glMatrixLoadIdentityEXT((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixRotatefEXT(JNIEnv* env, jclass clazz, jint mode, jfloat angle, jfloat x, jfloat y, jfloat z) {


//@line:22181

		ext_glMatrixRotatefEXT((GLenum)mode, (GLfloat)angle, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixRotatedEXT(JNIEnv* env, jclass clazz, jint mode, jdouble angle, jdouble x, jdouble y, jdouble z) {


//@line:22185

		ext_glMatrixRotatedEXT((GLenum)mode, (GLdouble)angle, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixScalefEXT(JNIEnv* env, jclass clazz, jint mode, jfloat x, jfloat y, jfloat z) {


//@line:22189

		ext_glMatrixScalefEXT((GLenum)mode, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixScaledEXT(JNIEnv* env, jclass clazz, jint mode, jdouble x, jdouble y, jdouble z) {


//@line:22193

		ext_glMatrixScaledEXT((GLenum)mode, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixTranslatefEXT(JNIEnv* env, jclass clazz, jint mode, jfloat x, jfloat y, jfloat z) {


//@line:22197

		ext_glMatrixTranslatefEXT((GLenum)mode, (GLfloat)x, (GLfloat)y, (GLfloat)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixTranslatedEXT(JNIEnv* env, jclass clazz, jint mode, jdouble x, jdouble y, jdouble z) {


//@line:22201

		ext_glMatrixTranslatedEXT((GLenum)mode, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixFrustumEXT(JNIEnv* env, jclass clazz, jint mode, jdouble left, jdouble right, jdouble bottom, jdouble top, jdouble zNear, jdouble zFar) {


//@line:22205

		ext_glMatrixFrustumEXT((GLenum)mode, (GLdouble)left, (GLdouble)right, (GLdouble)bottom, (GLdouble)top, (GLdouble)zNear, (GLdouble)zFar);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixOrthoEXT(JNIEnv* env, jclass clazz, jint mode, jdouble left, jdouble right, jdouble bottom, jdouble top, jdouble zNear, jdouble zFar) {


//@line:22209

		ext_glMatrixOrthoEXT((GLenum)mode, (GLdouble)left, (GLdouble)right, (GLdouble)bottom, (GLdouble)top, (GLdouble)zNear, (GLdouble)zFar);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixPopEXT(JNIEnv* env, jclass clazz, jint mode) {


//@line:22213

		ext_glMatrixPopEXT((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixPushEXT(JNIEnv* env, jclass clazz, jint mode) {


//@line:22217

		ext_glMatrixPushEXT((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixLoadTransposefEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:22221

		ext_glMatrixLoadTransposefEXT((GLenum)mode, (const GLfloat*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixLoadTransposefEXT__IJ(JNIEnv* env, jclass clazz, jint mode, jlong m) {


//@line:22225

		ext_glMatrixLoadTransposefEXT((GLenum)mode, (const GLfloat*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixLoadTransposedEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:22229

		ext_glMatrixLoadTransposedEXT((GLenum)mode, (const GLdouble*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixLoadTransposedEXT__IJ(JNIEnv* env, jclass clazz, jint mode, jlong m) {


//@line:22233

		ext_glMatrixLoadTransposedEXT((GLenum)mode, (const GLdouble*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixMultTransposefEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:22237

		ext_glMatrixMultTransposefEXT((GLenum)mode, (const GLfloat*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixMultTransposefEXT__IJ(JNIEnv* env, jclass clazz, jint mode, jlong m) {


//@line:22241

		ext_glMatrixMultTransposefEXT((GLenum)mode, (const GLfloat*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixMultTransposedEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint mode, jobject obj_m, jint mByteOffset) {
	unsigned char* m = (unsigned char*)(obj_m?env->GetDirectBufferAddress(obj_m):0);


//@line:22245

		ext_glMatrixMultTransposedEXT((GLenum)mode, (const GLdouble*)(m + mByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMatrixMultTransposedEXT__IJ(JNIEnv* env, jclass clazz, jint mode, jlong m) {


//@line:22249

		ext_glMatrixMultTransposedEXT((GLenum)mode, (const GLdouble*)m);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureParameterfEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jfloat param) {


//@line:22253

		ext_glTextureParameterfEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureParameterfvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22257

		ext_glTextureParameterfvEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureParameterfvEXT__IIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jlong params) {


//@line:22261

		ext_glTextureParameterfvEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureParameteriEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jint param) {


//@line:22265

		ext_glTextureParameteriEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureParameterivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22269

		ext_glTextureParameterivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureParameterivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jlong params) {


//@line:22273

		ext_glTextureParameterivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureImage1DEXT__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22277

		ext_glTextureImage1DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureImage1DEXT__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint border, jint format, jint type, jlong pixels) {


//@line:22281

		ext_glTextureImage1DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureImage2DEXT__IIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22285

		ext_glTextureImage2DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureImage2DEXT__IIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint format, jint type, jlong pixels) {


//@line:22289

		ext_glTextureImage2DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureSubImage1DEXT__IIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint width, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22293

		ext_glTextureSubImage1DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureSubImage1DEXT__IIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint width, jint format, jint type, jlong pixels) {


//@line:22297

		ext_glTextureSubImage1DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureSubImage2DEXT__IIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22301

		ext_glTextureSubImage2DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureSubImage2DEXT__IIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jlong pixels) {


//@line:22305

		ext_glTextureSubImage2DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTextureImage1DEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint x, jint y, jint width, jint border) {


//@line:22309

		ext_glCopyTextureImage1DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width, (GLint)border);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTextureImage2DEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint x, jint y, jint width, jint height, jint border) {


//@line:22313

		ext_glCopyTextureImage2DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height, (GLint)border);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTextureSubImage1DEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint x, jint y, jint width) {


//@line:22317

		ext_glCopyTextureSubImage1DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)x, (GLint)y, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTextureSubImage2DEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint yoffset, jint x, jint y, jint width, jint height) {


//@line:22321

		ext_glCopyTextureSubImage2DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureImageEXT__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22325

		ext_glGetTextureImageEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)format, (GLenum)type, (GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureImageEXT__IIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint format, jint type, jlong pixels) {


//@line:22329

		ext_glGetTextureImageEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)format, (GLenum)type, (GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureParameterfvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22333

		ext_glGetTextureParameterfvEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureParameterfvEXT__IIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jlong params) {


//@line:22337

		ext_glGetTextureParameterfvEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureParameterivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22341

		ext_glGetTextureParameterivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureParameterivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jlong params) {


//@line:22345

		ext_glGetTextureParameterivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureLevelParameterfvEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22349

		ext_glGetTextureLevelParameterfvEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureLevelParameterfvEXT__IIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint pname, jlong params) {


//@line:22353

		ext_glGetTextureLevelParameterfvEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureLevelParameterivEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22357

		ext_glGetTextureLevelParameterivEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureLevelParameterivEXT__IIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint pname, jlong params) {


//@line:22361

		ext_glGetTextureLevelParameterivEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureImage3DEXT__IIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22365

		ext_glTextureImage3DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureImage3DEXT__IIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint format, jint type, jlong pixels) {


//@line:22369

		ext_glTextureImage3DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureSubImage3DEXT__IIIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22373

		ext_glTextureSubImage3DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureSubImage3DEXT__IIIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint type, jlong pixels) {


//@line:22377

		ext_glTextureSubImage3DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyTextureSubImage3DEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint x, jint y, jint width, jint height) {


//@line:22381

		ext_glCopyTextureSubImage3DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexParameterfEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jfloat param) {


//@line:22385

		ext_glMultiTexParameterfEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexParameterfvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22389

		ext_glMultiTexParameterfvEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexParameterfvEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22393

		ext_glMultiTexParameterfvEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexParameteriEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jint param) {


//@line:22397

		ext_glMultiTexParameteriEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexParameterivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22401

		ext_glMultiTexParameterivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexParameterivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22405

		ext_glMultiTexParameterivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexImage1DEXT__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22409

		ext_glMultiTexImage1DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexImage1DEXT__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint border, jint format, jint type, jlong pixels) {


//@line:22413

		ext_glMultiTexImage1DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexImage2DEXT__IIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22417

		ext_glMultiTexImage2DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexImage2DEXT__IIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint format, jint type, jlong pixels) {


//@line:22421

		ext_glMultiTexImage2DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexSubImage1DEXT__IIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint width, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22425

		ext_glMultiTexSubImage1DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexSubImage1DEXT__IIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint width, jint format, jint type, jlong pixels) {


//@line:22429

		ext_glMultiTexSubImage1DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexSubImage2DEXT__IIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22433

		ext_glMultiTexSubImage2DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexSubImage2DEXT__IIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jlong pixels) {


//@line:22437

		ext_glMultiTexSubImage2DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyMultiTexImage1DEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint x, jint y, jint width, jint border) {


//@line:22441

		ext_glCopyMultiTexImage1DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width, (GLint)border);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyMultiTexImage2DEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint x, jint y, jint width, jint height, jint border) {


//@line:22445

		ext_glCopyMultiTexImage2DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height, (GLint)border);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyMultiTexSubImage1DEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint x, jint y, jint width) {


//@line:22449

		ext_glCopyMultiTexSubImage1DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)x, (GLint)y, (GLsizei)width);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyMultiTexSubImage2DEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint yoffset, jint x, jint y, jint width, jint height) {


//@line:22453

		ext_glCopyMultiTexSubImage2DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexImageEXT__IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22457

		ext_glGetMultiTexImageEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)format, (GLenum)type, (GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexImageEXT__IIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint format, jint type, jlong pixels) {


//@line:22461

		ext_glGetMultiTexImageEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)format, (GLenum)type, (GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexParameterfvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22465

		ext_glGetMultiTexParameterfvEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexParameterfvEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22469

		ext_glGetMultiTexParameterfvEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexParameterivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22473

		ext_glGetMultiTexParameterivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexParameterivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22477

		ext_glGetMultiTexParameterivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexLevelParameterfvEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22481

		ext_glGetMultiTexLevelParameterfvEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexLevelParameterfvEXT__IIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint pname, jlong params) {


//@line:22485

		ext_glGetMultiTexLevelParameterfvEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexLevelParameterivEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22489

		ext_glGetMultiTexLevelParameterivEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexLevelParameterivEXT__IIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint pname, jlong params) {


//@line:22493

		ext_glGetMultiTexLevelParameterivEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexImage3DEXT__IIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22497

		ext_glMultiTexImage3DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexImage3DEXT__IIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint format, jint type, jlong pixels) {


//@line:22501

		ext_glMultiTexImage3DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexSubImage3DEXT__IIIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint type, jobject obj_pixels, jint pixelsByteOffset) {
	unsigned char* pixels = (unsigned char*)(obj_pixels?env->GetDirectBufferAddress(obj_pixels):0);


//@line:22505

		ext_glMultiTexSubImage3DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLenum)type, (const GLvoid*)(pixels + pixelsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexSubImage3DEXT__IIIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint type, jlong pixels) {


//@line:22509

		ext_glMultiTexSubImage3DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLenum)type, (const GLvoid*)pixels);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyMultiTexSubImage3DEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint x, jint y, jint width, jint height) {


//@line:22513

		ext_glCopyMultiTexSubImage3DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLint)x, (GLint)y, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindMultiTextureEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint texture) {


//@line:22517

		ext_glBindMultiTextureEXT((GLenum)texunit, (GLenum)target, (GLuint)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEnableClientStateIndexedEXT(JNIEnv* env, jclass clazz, jint array, jint index) {


//@line:22521

		ext_glEnableClientStateIndexedEXT((GLenum)array, (GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDisableClientStateIndexedEXT(JNIEnv* env, jclass clazz, jint array, jint index) {


//@line:22525

		ext_glDisableClientStateIndexedEXT((GLenum)array, (GLuint)index);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordPointerEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:22529

		ext_glMultiTexCoordPointerEXT((GLenum)texunit, (GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexCoordPointerEXT__IIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint size, jint type, jint stride, jlong pointer) {


//@line:22533

		ext_glMultiTexCoordPointerEXT((GLenum)texunit, (GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexEnvfEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jfloat param) {


//@line:22537

		ext_glMultiTexEnvfEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexEnvfvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22541

		ext_glMultiTexEnvfvEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexEnvfvEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22545

		ext_glMultiTexEnvfvEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexEnviEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jint param) {


//@line:22549

		ext_glMultiTexEnviEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexEnvivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22553

		ext_glMultiTexEnvivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexEnvivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22557

		ext_glMultiTexEnvivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexGendEXT(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jdouble param) {


//@line:22561

		ext_glMultiTexGendEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (GLdouble)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexGendvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22565

		ext_glMultiTexGendvEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (const GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexGendvEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jlong params) {


//@line:22569

		ext_glMultiTexGendvEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (const GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexGenfEXT(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jfloat param) {


//@line:22573

		ext_glMultiTexGenfEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (GLfloat)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexGenfvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22577

		ext_glMultiTexGenfvEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexGenfvEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jlong params) {


//@line:22581

		ext_glMultiTexGenfvEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexGeniEXT(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jint param) {


//@line:22585

		ext_glMultiTexGeniEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (GLint)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexGenivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22589

		ext_glMultiTexGenivEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexGenivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jlong params) {


//@line:22593

		ext_glMultiTexGenivEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexEnvfvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22597

		ext_glGetMultiTexEnvfvEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexEnvfvEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22601

		ext_glGetMultiTexEnvfvEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexEnvivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22605

		ext_glGetMultiTexEnvivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexEnvivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22609

		ext_glGetMultiTexEnvivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexGendvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22613

		ext_glGetMultiTexGendvEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexGendvEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jlong params) {


//@line:22617

		ext_glGetMultiTexGendvEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexGenfvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22621

		ext_glGetMultiTexGenfvEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexGenfvEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jlong params) {


//@line:22625

		ext_glGetMultiTexGenfvEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexGenivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22629

		ext_glGetMultiTexGenivEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexGenivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint coord, jint pname, jlong params) {


//@line:22633

		ext_glGetMultiTexGenivEXT((GLenum)texunit, (GLenum)coord, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFloatIndexedvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:22637

		ext_glGetFloatIndexedvEXT((GLenum)target, (GLuint)index, (GLfloat*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFloatIndexedvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong data) {


//@line:22641

		ext_glGetFloatIndexedvEXT((GLenum)target, (GLuint)index, (GLfloat*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDoubleIndexedvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:22645

		ext_glGetDoubleIndexedvEXT((GLenum)target, (GLuint)index, (GLdouble*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDoubleIndexedvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong data) {


//@line:22649

		ext_glGetDoubleIndexedvEXT((GLenum)target, (GLuint)index, (GLdouble*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPointerIndexedvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:22653

		ext_glGetPointerIndexedvEXT((GLenum)target, (GLuint)index, (GLvoid**)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPointerIndexedvEXT__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong data) {


//@line:22657

		ext_glGetPointerIndexedvEXT((GLenum)target, (GLuint)index, (GLvoid**)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureImage3DEXT__IIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22661

		ext_glCompressedTextureImage3DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureImage3DEXT__IIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint imageSize, jlong bits) {


//@line:22665

		ext_glCompressedTextureImage3DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureImage2DEXT__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22669

		ext_glCompressedTextureImage2DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureImage2DEXT__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint imageSize, jlong bits) {


//@line:22673

		ext_glCompressedTextureImage2DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureImage1DEXT__IIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint border, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22677

		ext_glCompressedTextureImage1DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureImage1DEXT__IIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint internalformat, jint width, jint border, jint imageSize, jlong bits) {


//@line:22681

		ext_glCompressedTextureImage1DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureSubImage3DEXT__IIIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22685

		ext_glCompressedTextureSubImage3DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureSubImage3DEXT__IIIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint imageSize, jlong bits) {


//@line:22689

		ext_glCompressedTextureSubImage3DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureSubImage2DEXT__IIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22693

		ext_glCompressedTextureSubImage2DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureSubImage2DEXT__IIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jlong bits) {


//@line:22697

		ext_glCompressedTextureSubImage2DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureSubImage1DEXT__IIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint width, jint format, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22701

		ext_glCompressedTextureSubImage1DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedTextureSubImage1DEXT__IIIIIIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint level, jint xoffset, jint width, jint format, jint imageSize, jlong bits) {


//@line:22705

		ext_glCompressedTextureSubImage1DEXT((GLuint)texture, (GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCompressedTextureImageEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint lod, jobject obj_img, jint imgByteOffset) {
	unsigned char* img = (unsigned char*)(obj_img?env->GetDirectBufferAddress(obj_img):0);


//@line:22709

		ext_glGetCompressedTextureImageEXT((GLuint)texture, (GLenum)target, (GLint)lod, (GLvoid*)(img + imgByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCompressedTextureImageEXT__IIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint lod, jlong img) {


//@line:22713

		ext_glGetCompressedTextureImageEXT((GLuint)texture, (GLenum)target, (GLint)lod, (GLvoid*)img);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexImage3DEXT__IIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22717

		ext_glCompressedMultiTexImage3DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexImage3DEXT__IIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint height, jint depth, jint border, jint imageSize, jlong bits) {


//@line:22721

		ext_glCompressedMultiTexImage3DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLint)border, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexImage2DEXT__IIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22725

		ext_glCompressedMultiTexImage2DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexImage2DEXT__IIIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint imageSize, jlong bits) {


//@line:22729

		ext_glCompressedMultiTexImage2DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLsizei)height, (GLint)border, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexImage1DEXT__IIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint border, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22733

		ext_glCompressedMultiTexImage1DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexImage1DEXT__IIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint internalformat, jint width, jint border, jint imageSize, jlong bits) {


//@line:22737

		ext_glCompressedMultiTexImage1DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLenum)internalformat, (GLsizei)width, (GLint)border, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexSubImage3DEXT__IIIIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22741

		ext_glCompressedMultiTexSubImage3DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexSubImage3DEXT__IIIIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint yoffset, jint zoffset, jint width, jint height, jint depth, jint format, jint imageSize, jlong bits) {


//@line:22745

		ext_glCompressedMultiTexSubImage3DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLint)zoffset, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexSubImage2DEXT__IIIIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22749

		ext_glCompressedMultiTexSubImage2DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexSubImage2DEXT__IIIIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jlong bits) {


//@line:22753

		ext_glCompressedMultiTexSubImage2DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLint)yoffset, (GLsizei)width, (GLsizei)height, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexSubImage1DEXT__IIIIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint width, jint format, jint imageSize, jobject obj_bits, jint bitsByteOffset) {
	unsigned char* bits = (unsigned char*)(obj_bits?env->GetDirectBufferAddress(obj_bits):0);


//@line:22757

		ext_glCompressedMultiTexSubImage1DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)(bits + bitsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCompressedMultiTexSubImage1DEXT__IIIIIIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint level, jint xoffset, jint width, jint format, jint imageSize, jlong bits) {


//@line:22761

		ext_glCompressedMultiTexSubImage1DEXT((GLenum)texunit, (GLenum)target, (GLint)level, (GLint)xoffset, (GLsizei)width, (GLenum)format, (GLsizei)imageSize, (const GLvoid*)bits);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCompressedMultiTexImageEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint lod, jobject obj_img, jint imgByteOffset) {
	unsigned char* img = (unsigned char*)(obj_img?env->GetDirectBufferAddress(obj_img):0);


//@line:22765

		ext_glGetCompressedMultiTexImageEXT((GLenum)texunit, (GLenum)target, (GLint)lod, (GLvoid*)(img + imgByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetCompressedMultiTexImageEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint lod, jlong img) {


//@line:22769

		ext_glGetCompressedMultiTexImageEXT((GLenum)texunit, (GLenum)target, (GLint)lod, (GLvoid*)img);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramStringEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint format, jint len, jobject obj_string, jint stringByteOffset) {
	unsigned char* string = (unsigned char*)(obj_string?env->GetDirectBufferAddress(obj_string):0);


//@line:22773

		ext_glNamedProgramStringEXT((GLuint)program, (GLenum)target, (GLenum)format, (GLsizei)len, (const GLvoid*)(string + stringByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramStringEXT__IIIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint format, jint len, jlong string) {


//@line:22777

		ext_glNamedProgramStringEXT((GLuint)program, (GLenum)target, (GLenum)format, (GLsizei)len, (const GLvoid*)string);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameter4dEXT(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:22781

		ext_glNamedProgramLocalParameter4dEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameter4dvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22785

		ext_glNamedProgramLocalParameter4dvEXT((GLuint)program, (GLenum)target, (GLuint)index, (const GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameter4dvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jlong params) {


//@line:22789

		ext_glNamedProgramLocalParameter4dvEXT((GLuint)program, (GLenum)target, (GLuint)index, (const GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameter4fEXT(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jfloat x, jfloat y, jfloat z, jfloat w) {


//@line:22793

		ext_glNamedProgramLocalParameter4fEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLfloat)x, (GLfloat)y, (GLfloat)z, (GLfloat)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameter4fvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22797

		ext_glNamedProgramLocalParameter4fvEXT((GLuint)program, (GLenum)target, (GLuint)index, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameter4fvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jlong params) {


//@line:22801

		ext_glNamedProgramLocalParameter4fvEXT((GLuint)program, (GLenum)target, (GLuint)index, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramLocalParameterdvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22805

		ext_glGetNamedProgramLocalParameterdvEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramLocalParameterdvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jlong params) {


//@line:22809

		ext_glGetNamedProgramLocalParameterdvEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramLocalParameterfvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22813

		ext_glGetNamedProgramLocalParameterfvEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramLocalParameterfvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jlong params) {


//@line:22817

		ext_glGetNamedProgramLocalParameterfvEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22821

		ext_glGetNamedProgramivEXT((GLuint)program, (GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint pname, jlong params) {


//@line:22825

		ext_glGetNamedProgramivEXT((GLuint)program, (GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramStringEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint pname, jobject obj_string, jint stringByteOffset) {
	unsigned char* string = (unsigned char*)(obj_string?env->GetDirectBufferAddress(obj_string):0);


//@line:22829

		ext_glGetNamedProgramStringEXT((GLuint)program, (GLenum)target, (GLenum)pname, (GLvoid*)(string + stringByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramStringEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint pname, jlong string) {


//@line:22833

		ext_glGetNamedProgramStringEXT((GLuint)program, (GLenum)target, (GLenum)pname, (GLvoid*)string);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameters4fvEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22837

		ext_glNamedProgramLocalParameters4fvEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLsizei)count, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameters4fvEXT__IIIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jint count, jlong params) {


//@line:22841

		ext_glNamedProgramLocalParameters4fvEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLsizei)count, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameterI4iEXT(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jint x, jint y, jint z, jint w) {


//@line:22845

		ext_glNamedProgramLocalParameterI4iEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLint)x, (GLint)y, (GLint)z, (GLint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameterI4ivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22849

		ext_glNamedProgramLocalParameterI4ivEXT((GLuint)program, (GLenum)target, (GLuint)index, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameterI4ivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jlong params) {


//@line:22853

		ext_glNamedProgramLocalParameterI4ivEXT((GLuint)program, (GLenum)target, (GLuint)index, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParametersI4ivEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22857

		ext_glNamedProgramLocalParametersI4ivEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLsizei)count, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParametersI4ivEXT__IIIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jint count, jlong params) {


//@line:22861

		ext_glNamedProgramLocalParametersI4ivEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLsizei)count, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameterI4uiEXT(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jint x, jint y, jint z, jint w) {


//@line:22865

		ext_glNamedProgramLocalParameterI4uiEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLuint)x, (GLuint)y, (GLuint)z, (GLuint)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameterI4uivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22869

		ext_glNamedProgramLocalParameterI4uivEXT((GLuint)program, (GLenum)target, (GLuint)index, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParameterI4uivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jlong params) {


//@line:22873

		ext_glNamedProgramLocalParameterI4uivEXT((GLuint)program, (GLenum)target, (GLuint)index, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParametersI4uivEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22877

		ext_glNamedProgramLocalParametersI4uivEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLsizei)count, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedProgramLocalParametersI4uivEXT__IIIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jint count, jlong params) {


//@line:22881

		ext_glNamedProgramLocalParametersI4uivEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLsizei)count, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramLocalParameterIivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22885

		ext_glGetNamedProgramLocalParameterIivEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramLocalParameterIivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jlong params) {


//@line:22889

		ext_glGetNamedProgramLocalParameterIivEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramLocalParameterIuivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22893

		ext_glGetNamedProgramLocalParameterIuivEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedProgramLocalParameterIuivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint target, jint index, jlong params) {


//@line:22897

		ext_glGetNamedProgramLocalParameterIuivEXT((GLuint)program, (GLenum)target, (GLuint)index, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureParameterIivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22901

		ext_glTextureParameterIivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureParameterIivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jlong params) {


//@line:22905

		ext_glTextureParameterIivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureParameterIuivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22909

		ext_glTextureParameterIuivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureParameterIuivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jlong params) {


//@line:22913

		ext_glTextureParameterIuivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureParameterIivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22917

		ext_glGetTextureParameterIivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureParameterIivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jlong params) {


//@line:22921

		ext_glGetTextureParameterIivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureParameterIuivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22925

		ext_glGetTextureParameterIuivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureParameterIuivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texture, jint target, jint pname, jlong params) {


//@line:22929

		ext_glGetTextureParameterIuivEXT((GLuint)texture, (GLenum)target, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexParameterIivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22933

		ext_glMultiTexParameterIivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexParameterIivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22937

		ext_glMultiTexParameterIivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexParameterIuivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22941

		ext_glMultiTexParameterIuivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexParameterIuivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22945

		ext_glMultiTexParameterIuivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexParameterIivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22949

		ext_glGetMultiTexParameterIivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexParameterIivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22953

		ext_glGetMultiTexParameterIivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexParameterIuivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:22957

		ext_glGetMultiTexParameterIuivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultiTexParameterIuivEXT__IIIJ(JNIEnv* env, jclass clazz, jint texunit, jint target, jint pname, jlong params) {


//@line:22961

		ext_glGetMultiTexParameterIuivEXT((GLenum)texunit, (GLenum)target, (GLenum)pname, (GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1fEXT(JNIEnv* env, jclass clazz, jint program, jint location, jfloat v0) {


//@line:22965

		ext_glProgramUniform1fEXT((GLuint)program, (GLint)location, (GLfloat)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2fEXT(JNIEnv* env, jclass clazz, jint program, jint location, jfloat v0, jfloat v1) {


//@line:22969

		ext_glProgramUniform2fEXT((GLuint)program, (GLint)location, (GLfloat)v0, (GLfloat)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3fEXT(JNIEnv* env, jclass clazz, jint program, jint location, jfloat v0, jfloat v1, jfloat v2) {


//@line:22973

		ext_glProgramUniform3fEXT((GLuint)program, (GLint)location, (GLfloat)v0, (GLfloat)v1, (GLfloat)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4fEXT(JNIEnv* env, jclass clazz, jint program, jint location, jfloat v0, jfloat v1, jfloat v2, jfloat v3) {


//@line:22977

		ext_glProgramUniform4fEXT((GLuint)program, (GLint)location, (GLfloat)v0, (GLfloat)v1, (GLfloat)v2, (GLfloat)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1iEXT(JNIEnv* env, jclass clazz, jint program, jint location, jint v0) {


//@line:22981

		ext_glProgramUniform1iEXT((GLuint)program, (GLint)location, (GLint)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2iEXT(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1) {


//@line:22985

		ext_glProgramUniform2iEXT((GLuint)program, (GLint)location, (GLint)v0, (GLint)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3iEXT(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1, jint v2) {


//@line:22989

		ext_glProgramUniform3iEXT((GLuint)program, (GLint)location, (GLint)v0, (GLint)v1, (GLint)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4iEXT(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1, jint v2, jint v3) {


//@line:22993

		ext_glProgramUniform4iEXT((GLuint)program, (GLint)location, (GLint)v0, (GLint)v1, (GLint)v2, (GLint)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1fvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:22997

		ext_glProgramUniform1fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1fvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23001

		ext_glProgramUniform1fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2fvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23005

		ext_glProgramUniform2fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2fvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23009

		ext_glProgramUniform2fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3fvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23013

		ext_glProgramUniform3fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3fvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23017

		ext_glProgramUniform3fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4fvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23021

		ext_glProgramUniform4fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4fvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23025

		ext_glProgramUniform4fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1ivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23029

		ext_glProgramUniform1ivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1ivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23033

		ext_glProgramUniform1ivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2ivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23037

		ext_glProgramUniform2ivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2ivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23041

		ext_glProgramUniform2ivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3ivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23045

		ext_glProgramUniform3ivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3ivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23049

		ext_glProgramUniform3ivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4ivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23053

		ext_glProgramUniform4ivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4ivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23057

		ext_glProgramUniform4ivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2fvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23061

		ext_glProgramUniformMatrix2fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2fvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23065

		ext_glProgramUniformMatrix2fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3fvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23069

		ext_glProgramUniformMatrix3fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3fvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23073

		ext_glProgramUniformMatrix3fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4fvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23077

		ext_glProgramUniformMatrix4fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4fvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23081

		ext_glProgramUniformMatrix4fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x3fvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23085

		ext_glProgramUniformMatrix2x3fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x3fvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23089

		ext_glProgramUniformMatrix2x3fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x2fvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23093

		ext_glProgramUniformMatrix3x2fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x2fvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23097

		ext_glProgramUniformMatrix3x2fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x4fvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23101

		ext_glProgramUniformMatrix2x4fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x4fvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23105

		ext_glProgramUniformMatrix2x4fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x2fvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23109

		ext_glProgramUniformMatrix4x2fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x2fvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23113

		ext_glProgramUniformMatrix4x2fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x4fvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23117

		ext_glProgramUniformMatrix3x4fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x4fvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23121

		ext_glProgramUniformMatrix3x4fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x3fvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23125

		ext_glProgramUniformMatrix4x3fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x3fvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23129

		ext_glProgramUniformMatrix4x3fvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1uiEXT(JNIEnv* env, jclass clazz, jint program, jint location, jint v0) {


//@line:23133

		ext_glProgramUniform1uiEXT((GLuint)program, (GLint)location, (GLuint)v0);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2uiEXT(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1) {


//@line:23137

		ext_glProgramUniform2uiEXT((GLuint)program, (GLint)location, (GLuint)v0, (GLuint)v1);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3uiEXT(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1, jint v2) {


//@line:23141

		ext_glProgramUniform3uiEXT((GLuint)program, (GLint)location, (GLuint)v0, (GLuint)v1, (GLuint)v2);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4uiEXT(JNIEnv* env, jclass clazz, jint program, jint location, jint v0, jint v1, jint v2, jint v3) {


//@line:23145

		ext_glProgramUniform4uiEXT((GLuint)program, (GLint)location, (GLuint)v0, (GLuint)v1, (GLuint)v2, (GLuint)v3);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1uivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23149

		ext_glProgramUniform1uivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1uivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23153

		ext_glProgramUniform1uivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2uivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23157

		ext_glProgramUniform2uivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2uivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23161

		ext_glProgramUniform2uivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3uivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23165

		ext_glProgramUniform3uivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3uivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23169

		ext_glProgramUniform3uivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4uivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23173

		ext_glProgramUniform4uivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4uivEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23177

		ext_glProgramUniform4uivEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedBufferDataEXT__IJLjava_nio_Buffer_2II(JNIEnv* env, jclass clazz, jint buffer, jlong size, jobject obj_data, jint dataByteOffset, jint usage) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:23181

		ext_glNamedBufferDataEXT((GLuint)buffer, (GLsizeiptr)size, (const GLvoid*)(data + dataByteOffset), (GLenum)usage);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedBufferDataEXT__IJJI(JNIEnv* env, jclass clazz, jint buffer, jlong size, jlong data, jint usage) {


//@line:23185

		ext_glNamedBufferDataEXT((GLuint)buffer, (GLsizeiptr)size, (const GLvoid*)data, (GLenum)usage);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedBufferSubDataEXT__IJJLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jlong offset, jlong size, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:23189

		ext_glNamedBufferSubDataEXT((GLuint)buffer, (GLintptr)offset, (GLsizeiptr)size, (const GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedBufferSubDataEXT__IJJJ(JNIEnv* env, jclass clazz, jint buffer, jlong offset, jlong size, jlong data) {


//@line:23193

		ext_glNamedBufferSubDataEXT((GLuint)buffer, (GLintptr)offset, (GLsizeiptr)size, (const GLvoid*)data);
	

}

JNIEXPORT jobject JNICALL Java_com_badlogic_jglfw_gl_GL_glMapNamedBufferEXT(JNIEnv* env, jclass clazz, jint buffer, jint access, jlong bufferSize) {


//@line:23197

		GLvoid* bufferPtr = (GLvoid*)ext_glMapNamedBufferEXT((GLuint)buffer, (GLenum)access);
		if(!bufferPtr) return 0;
		return env->NewDirectByteBuffer(bufferPtr, bufferSize);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glUnmapNamedBufferEXT(JNIEnv* env, jclass clazz, jint buffer) {


//@line:23203

		return (jboolean)ext_glUnmapNamedBufferEXT((GLuint)buffer);
	

}

JNIEXPORT jobject JNICALL Java_com_badlogic_jglfw_gl_GL_glMapNamedBufferRangeEXT(JNIEnv* env, jclass clazz, jint buffer, jint offset, jint length, jint access, jint bufferSize) {


//@line:23207

		GLvoid* bufferPtr = (GLvoid*)ext_glMapNamedBufferRangeEXT((GLuint)buffer, (GLintptr)offset, (GLsizeiptr)length, (GLbitfield)access);
		if(!bufferPtr) return 0;
		return env->NewDirectByteBuffer(bufferPtr, bufferSize);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFlushMappedNamedBufferRangeEXT(JNIEnv* env, jclass clazz, jint buffer, jlong offset, jlong length) {


//@line:23213

		ext_glFlushMappedNamedBufferRangeEXT((GLuint)buffer, (GLintptr)offset, (GLsizeiptr)length);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedCopyBufferSubDataEXT(JNIEnv* env, jclass clazz, jint readBuffer, jint writeBuffer, jlong readOffset, jlong writeOffset, jlong size) {


//@line:23217

		ext_glNamedCopyBufferSubDataEXT((GLuint)readBuffer, (GLuint)writeBuffer, (GLintptr)readOffset, (GLintptr)writeOffset, (GLsizeiptr)size);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedBufferParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23221

		ext_glGetNamedBufferParameterivEXT((GLuint)buffer, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedBufferParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint buffer, jint pname, jlong params) {


//@line:23225

		ext_glGetNamedBufferParameterivEXT((GLuint)buffer, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedBufferPointervEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23229

		ext_glGetNamedBufferPointervEXT((GLuint)buffer, (GLenum)pname, (GLvoid**)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedBufferPointervEXT__IIJ(JNIEnv* env, jclass clazz, jint buffer, jint pname, jlong params) {


//@line:23233

		ext_glGetNamedBufferPointervEXT((GLuint)buffer, (GLenum)pname, (GLvoid**)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedBufferSubDataEXT__IJJLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jlong offset, jlong size, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:23237

		ext_glGetNamedBufferSubDataEXT((GLuint)buffer, (GLintptr)offset, (GLsizeiptr)size, (GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedBufferSubDataEXT__IJJJ(JNIEnv* env, jclass clazz, jint buffer, jlong offset, jlong size, jlong data) {


//@line:23241

		ext_glGetNamedBufferSubDataEXT((GLuint)buffer, (GLintptr)offset, (GLsizeiptr)size, (GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureBufferEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint internalformat, jint buffer) {


//@line:23245

		ext_glTextureBufferEXT((GLuint)texture, (GLenum)target, (GLenum)internalformat, (GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexBufferEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint internalformat, jint buffer) {


//@line:23249

		ext_glMultiTexBufferEXT((GLenum)texunit, (GLenum)target, (GLenum)internalformat, (GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedRenderbufferStorageEXT(JNIEnv* env, jclass clazz, jint renderbuffer, jint internalformat, jint width, jint height) {


//@line:23253

		ext_glNamedRenderbufferStorageEXT((GLuint)renderbuffer, (GLenum)internalformat, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedRenderbufferParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint renderbuffer, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23257

		ext_glGetNamedRenderbufferParameterivEXT((GLuint)renderbuffer, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedRenderbufferParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint renderbuffer, jint pname, jlong params) {


//@line:23261

		ext_glGetNamedRenderbufferParameterivEXT((GLuint)renderbuffer, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glCheckNamedFramebufferStatusEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint target) {


//@line:23265

		return (jint)ext_glCheckNamedFramebufferStatusEXT((GLuint)framebuffer, (GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedFramebufferTexture1DEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint attachment, jint textarget, jint texture, jint level) {


//@line:23269

		ext_glNamedFramebufferTexture1DEXT((GLuint)framebuffer, (GLenum)attachment, (GLenum)textarget, (GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedFramebufferTexture2DEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint attachment, jint textarget, jint texture, jint level) {


//@line:23273

		ext_glNamedFramebufferTexture2DEXT((GLuint)framebuffer, (GLenum)attachment, (GLenum)textarget, (GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedFramebufferTexture3DEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint attachment, jint textarget, jint texture, jint level, jint zoffset) {


//@line:23277

		ext_glNamedFramebufferTexture3DEXT((GLuint)framebuffer, (GLenum)attachment, (GLenum)textarget, (GLuint)texture, (GLint)level, (GLint)zoffset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedFramebufferRenderbufferEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint attachment, jint renderbuffertarget, jint renderbuffer) {


//@line:23281

		ext_glNamedFramebufferRenderbufferEXT((GLuint)framebuffer, (GLenum)attachment, (GLenum)renderbuffertarget, (GLuint)renderbuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedFramebufferAttachmentParameterivEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint framebuffer, jint attachment, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23285

		ext_glGetNamedFramebufferAttachmentParameterivEXT((GLuint)framebuffer, (GLenum)attachment, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedFramebufferAttachmentParameterivEXT__IIIJ(JNIEnv* env, jclass clazz, jint framebuffer, jint attachment, jint pname, jlong params) {


//@line:23289

		ext_glGetNamedFramebufferAttachmentParameterivEXT((GLuint)framebuffer, (GLenum)attachment, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenerateTextureMipmapEXT(JNIEnv* env, jclass clazz, jint texture, jint target) {


//@line:23293

		ext_glGenerateTextureMipmapEXT((GLuint)texture, (GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenerateMultiTexMipmapEXT(JNIEnv* env, jclass clazz, jint texunit, jint target) {


//@line:23297

		ext_glGenerateMultiTexMipmapEXT((GLenum)texunit, (GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferDrawBufferEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint mode) {


//@line:23301

		ext_glFramebufferDrawBufferEXT((GLuint)framebuffer, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferDrawBuffersEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint framebuffer, jint n, jobject obj_bufs, jint bufsByteOffset) {
	unsigned char* bufs = (unsigned char*)(obj_bufs?env->GetDirectBufferAddress(obj_bufs):0);


//@line:23305

		ext_glFramebufferDrawBuffersEXT((GLuint)framebuffer, (GLsizei)n, (const GLenum*)(bufs + bufsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferDrawBuffersEXT__IIJ(JNIEnv* env, jclass clazz, jint framebuffer, jint n, jlong bufs) {


//@line:23309

		ext_glFramebufferDrawBuffersEXT((GLuint)framebuffer, (GLsizei)n, (const GLenum*)bufs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFramebufferReadBufferEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint mode) {


//@line:23313

		ext_glFramebufferReadBufferEXT((GLuint)framebuffer, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFramebufferParameterivEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint framebuffer, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23317

		ext_glGetFramebufferParameterivEXT((GLuint)framebuffer, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetFramebufferParameterivEXT__IIJ(JNIEnv* env, jclass clazz, jint framebuffer, jint pname, jlong params) {


//@line:23321

		ext_glGetFramebufferParameterivEXT((GLuint)framebuffer, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedRenderbufferStorageMultisampleEXT(JNIEnv* env, jclass clazz, jint renderbuffer, jint samples, jint internalformat, jint width, jint height) {


//@line:23325

		ext_glNamedRenderbufferStorageMultisampleEXT((GLuint)renderbuffer, (GLsizei)samples, (GLenum)internalformat, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedRenderbufferStorageMultisampleCoverageEXT(JNIEnv* env, jclass clazz, jint renderbuffer, jint coverageSamples, jint colorSamples, jint internalformat, jint width, jint height) {


//@line:23329

		ext_glNamedRenderbufferStorageMultisampleCoverageEXT((GLuint)renderbuffer, (GLsizei)coverageSamples, (GLsizei)colorSamples, (GLenum)internalformat, (GLsizei)width, (GLsizei)height);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedFramebufferTextureEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint attachment, jint texture, jint level) {


//@line:23333

		ext_glNamedFramebufferTextureEXT((GLuint)framebuffer, (GLenum)attachment, (GLuint)texture, (GLint)level);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedFramebufferTextureLayerEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint attachment, jint texture, jint level, jint layer) {


//@line:23337

		ext_glNamedFramebufferTextureLayerEXT((GLuint)framebuffer, (GLenum)attachment, (GLuint)texture, (GLint)level, (GLint)layer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNamedFramebufferTextureFaceEXT(JNIEnv* env, jclass clazz, jint framebuffer, jint attachment, jint texture, jint level, jint face) {


//@line:23341

		ext_glNamedFramebufferTextureFaceEXT((GLuint)framebuffer, (GLenum)attachment, (GLuint)texture, (GLint)level, (GLenum)face);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureRenderbufferEXT(JNIEnv* env, jclass clazz, jint texture, jint target, jint renderbuffer) {


//@line:23345

		ext_glTextureRenderbufferEXT((GLuint)texture, (GLenum)target, (GLuint)renderbuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiTexRenderbufferEXT(JNIEnv* env, jclass clazz, jint texunit, jint target, jint renderbuffer) {


//@line:23349

		ext_glMultiTexRenderbufferEXT((GLenum)texunit, (GLenum)target, (GLuint)renderbuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1dEXT(JNIEnv* env, jclass clazz, jint program, jint location, jdouble x) {


//@line:23353

		ext_glProgramUniform1dEXT((GLuint)program, (GLint)location, (GLdouble)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2dEXT(JNIEnv* env, jclass clazz, jint program, jint location, jdouble x, jdouble y) {


//@line:23357

		ext_glProgramUniform2dEXT((GLuint)program, (GLint)location, (GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3dEXT(JNIEnv* env, jclass clazz, jint program, jint location, jdouble x, jdouble y, jdouble z) {


//@line:23361

		ext_glProgramUniform3dEXT((GLuint)program, (GLint)location, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4dEXT(JNIEnv* env, jclass clazz, jint program, jint location, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:23365

		ext_glProgramUniform4dEXT((GLuint)program, (GLint)location, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1dvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23369

		ext_glProgramUniform1dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1dvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23373

		ext_glProgramUniform1dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2dvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23377

		ext_glProgramUniform2dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2dvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23381

		ext_glProgramUniform2dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3dvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23385

		ext_glProgramUniform3dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3dvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23389

		ext_glProgramUniform3dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4dvEXT__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23393

		ext_glProgramUniform4dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4dvEXT__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23397

		ext_glProgramUniform4dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2dvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23401

		ext_glProgramUniformMatrix2dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2dvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23405

		ext_glProgramUniformMatrix2dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3dvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23409

		ext_glProgramUniformMatrix3dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3dvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23413

		ext_glProgramUniformMatrix3dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4dvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23417

		ext_glProgramUniformMatrix4dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4dvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23421

		ext_glProgramUniformMatrix4dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x3dvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23425

		ext_glProgramUniformMatrix2x3dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x3dvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23429

		ext_glProgramUniformMatrix2x3dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x4dvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23433

		ext_glProgramUniformMatrix2x4dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix2x4dvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23437

		ext_glProgramUniformMatrix2x4dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x2dvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23441

		ext_glProgramUniformMatrix3x2dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x2dvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23445

		ext_glProgramUniformMatrix3x2dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x4dvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23449

		ext_glProgramUniformMatrix3x4dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix3x4dvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23453

		ext_glProgramUniformMatrix3x4dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x2dvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23457

		ext_glProgramUniformMatrix4x2dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x2dvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23461

		ext_glProgramUniformMatrix4x2dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x3dvEXT__IIIZLjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23465

		ext_glProgramUniformMatrix4x3dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformMatrix4x3dvEXT__IIIZJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jboolean transpose, jlong value) {


//@line:23469

		ext_glProgramUniformMatrix4x3dvEXT((GLuint)program, (GLint)location, (GLsizei)count, (GLboolean)transpose, (const GLdouble*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultisamplefvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jint index, jobject obj_val, jint valByteOffset) {
	unsigned char* val = (unsigned char*)(obj_val?env->GetDirectBufferAddress(obj_val):0);


//@line:23473

		ext_glGetMultisamplefvNV((GLenum)pname, (GLuint)index, (GLfloat*)(val + valByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetMultisamplefvNV__IIJ(JNIEnv* env, jclass clazz, jint pname, jint index, jlong val) {


//@line:23477

		ext_glGetMultisamplefvNV((GLenum)pname, (GLuint)index, (GLfloat*)val);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSampleMaskIndexedNV(JNIEnv* env, jclass clazz, jint index, jint mask) {


//@line:23481

		ext_glSampleMaskIndexedNV((GLuint)index, (GLbitfield)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexRenderbufferNV(JNIEnv* env, jclass clazz, jint target, jint renderbuffer) {


//@line:23485

		ext_glTexRenderbufferNV((GLenum)target, (GLuint)renderbuffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindTransformFeedbackNV(JNIEnv* env, jclass clazz, jint target, jint id) {


//@line:23489

		ext_glBindTransformFeedbackNV((GLenum)target, (GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteTransformFeedbacksNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_ids, jint idsByteOffset) {
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);


//@line:23493

		ext_glDeleteTransformFeedbacksNV((GLsizei)n, (const GLuint*)(ids + idsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteTransformFeedbacksNV__IJ(JNIEnv* env, jclass clazz, jint n, jlong ids) {


//@line:23497

		ext_glDeleteTransformFeedbacksNV((GLsizei)n, (const GLuint*)ids);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenTransformFeedbacksNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_ids, jint idsByteOffset) {
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);


//@line:23501

		ext_glGenTransformFeedbacksNV((GLsizei)n, (GLuint*)(ids + idsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenTransformFeedbacksNV__IJ(JNIEnv* env, jclass clazz, jint n, jlong ids) {


//@line:23505

		ext_glGenTransformFeedbacksNV((GLsizei)n, (GLuint*)ids);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsTransformFeedbackNV(JNIEnv* env, jclass clazz, jint id) {


//@line:23509

		return (jboolean)ext_glIsTransformFeedbackNV((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPauseTransformFeedbackNV(JNIEnv* env, jclass clazz) {


//@line:23513

		ext_glPauseTransformFeedbackNV();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glResumeTransformFeedbackNV(JNIEnv* env, jclass clazz) {


//@line:23517

		ext_glResumeTransformFeedbackNV();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawTransformFeedbackNV(JNIEnv* env, jclass clazz, jint mode, jint id) {


//@line:23521

		ext_glDrawTransformFeedbackNV((GLenum)mode, (GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorGroupsAMD__Ljava_nio_Buffer_2IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_numGroups, jint numGroupsByteOffset, jint groupsSize, jobject obj_groups, jint groupsByteOffset) {
	unsigned char* numGroups = (unsigned char*)(obj_numGroups?env->GetDirectBufferAddress(obj_numGroups):0);
	unsigned char* groups = (unsigned char*)(obj_groups?env->GetDirectBufferAddress(obj_groups):0);


//@line:23525

		ext_glGetPerfMonitorGroupsAMD((GLint*)(numGroups + numGroupsByteOffset), (GLsizei)groupsSize, (GLuint*)(groups + groupsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorGroupsAMD__JIJ(JNIEnv* env, jclass clazz, jlong numGroups, jint groupsSize, jlong groups) {


//@line:23529

		ext_glGetPerfMonitorGroupsAMD((GLint*)numGroups, (GLsizei)groupsSize, (GLuint*)groups);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorCountersAMD__ILjava_nio_Buffer_2ILjava_nio_Buffer_2IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint group, jobject obj_numCounters, jint numCountersByteOffset, jobject obj_maxActiveCounters, jint maxActiveCountersByteOffset, jint counterSize, jobject obj_counters, jint countersByteOffset) {
	unsigned char* numCounters = (unsigned char*)(obj_numCounters?env->GetDirectBufferAddress(obj_numCounters):0);
	unsigned char* maxActiveCounters = (unsigned char*)(obj_maxActiveCounters?env->GetDirectBufferAddress(obj_maxActiveCounters):0);
	unsigned char* counters = (unsigned char*)(obj_counters?env->GetDirectBufferAddress(obj_counters):0);


//@line:23533

		ext_glGetPerfMonitorCountersAMD((GLuint)group, (GLint*)(numCounters + numCountersByteOffset), (GLint*)(maxActiveCounters + maxActiveCountersByteOffset), (GLsizei)counterSize, (GLuint*)(counters + countersByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorCountersAMD__IJJIJ(JNIEnv* env, jclass clazz, jint group, jlong numCounters, jlong maxActiveCounters, jint counterSize, jlong counters) {


//@line:23537

		ext_glGetPerfMonitorCountersAMD((GLuint)group, (GLint*)numCounters, (GLint*)maxActiveCounters, (GLsizei)counterSize, (GLuint*)counters);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorGroupStringAMD__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint group, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_groupString, jint groupStringByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* groupString = (unsigned char*)(obj_groupString?env->GetDirectBufferAddress(obj_groupString):0);


//@line:23541

		ext_glGetPerfMonitorGroupStringAMD((GLuint)group, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(groupString + groupStringByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorGroupStringAMD__IIJJ(JNIEnv* env, jclass clazz, jint group, jint bufSize, jlong length, jlong groupString) {


//@line:23545

		ext_glGetPerfMonitorGroupStringAMD((GLuint)group, (GLsizei)bufSize, (GLsizei*)length, (GLchar*)groupString);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorCounterStringAMD__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint group, jint counter, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_counterString, jint counterStringByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* counterString = (unsigned char*)(obj_counterString?env->GetDirectBufferAddress(obj_counterString):0);


//@line:23549

		ext_glGetPerfMonitorCounterStringAMD((GLuint)group, (GLuint)counter, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLchar*)(counterString + counterStringByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorCounterStringAMD__IIIJJ(JNIEnv* env, jclass clazz, jint group, jint counter, jint bufSize, jlong length, jlong counterString) {


//@line:23553

		ext_glGetPerfMonitorCounterStringAMD((GLuint)group, (GLuint)counter, (GLsizei)bufSize, (GLsizei*)length, (GLchar*)counterString);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorCounterInfoAMD__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint group, jint counter, jint pname, jobject obj_data, jint dataByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);


//@line:23557

		ext_glGetPerfMonitorCounterInfoAMD((GLuint)group, (GLuint)counter, (GLenum)pname, (GLvoid*)(data + dataByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorCounterInfoAMD__IIIJ(JNIEnv* env, jclass clazz, jint group, jint counter, jint pname, jlong data) {


//@line:23561

		ext_glGetPerfMonitorCounterInfoAMD((GLuint)group, (GLuint)counter, (GLenum)pname, (GLvoid*)data);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenPerfMonitorsAMD__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_monitors, jint monitorsByteOffset) {
	unsigned char* monitors = (unsigned char*)(obj_monitors?env->GetDirectBufferAddress(obj_monitors):0);


//@line:23565

		ext_glGenPerfMonitorsAMD((GLsizei)n, (GLuint*)(monitors + monitorsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenPerfMonitorsAMD__IJ(JNIEnv* env, jclass clazz, jint n, jlong monitors) {


//@line:23569

		ext_glGenPerfMonitorsAMD((GLsizei)n, (GLuint*)monitors);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeletePerfMonitorsAMD__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint n, jobject obj_monitors, jint monitorsByteOffset) {
	unsigned char* monitors = (unsigned char*)(obj_monitors?env->GetDirectBufferAddress(obj_monitors):0);


//@line:23573

		ext_glDeletePerfMonitorsAMD((GLsizei)n, (GLuint*)(monitors + monitorsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeletePerfMonitorsAMD__IJ(JNIEnv* env, jclass clazz, jint n, jlong monitors) {


//@line:23577

		ext_glDeletePerfMonitorsAMD((GLsizei)n, (GLuint*)monitors);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSelectPerfMonitorCountersAMD__IZIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint monitor, jboolean enable, jint group, jint numCounters, jobject obj_counterList, jint counterListByteOffset) {
	unsigned char* counterList = (unsigned char*)(obj_counterList?env->GetDirectBufferAddress(obj_counterList):0);


//@line:23581

		ext_glSelectPerfMonitorCountersAMD((GLuint)monitor, (GLboolean)enable, (GLuint)group, (GLint)numCounters, (GLuint*)(counterList + counterListByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSelectPerfMonitorCountersAMD__IZIIJ(JNIEnv* env, jclass clazz, jint monitor, jboolean enable, jint group, jint numCounters, jlong counterList) {


//@line:23585

		ext_glSelectPerfMonitorCountersAMD((GLuint)monitor, (GLboolean)enable, (GLuint)group, (GLint)numCounters, (GLuint*)counterList);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginPerfMonitorAMD(JNIEnv* env, jclass clazz, jint monitor) {


//@line:23589

		ext_glBeginPerfMonitorAMD((GLuint)monitor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndPerfMonitorAMD(JNIEnv* env, jclass clazz, jint monitor) {


//@line:23593

		ext_glEndPerfMonitorAMD((GLuint)monitor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorCounterDataAMD__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint monitor, jint pname, jint dataSize, jobject obj_data, jint dataByteOffset, jobject obj_bytesWritten, jint bytesWrittenByteOffset) {
	unsigned char* data = (unsigned char*)(obj_data?env->GetDirectBufferAddress(obj_data):0);
	unsigned char* bytesWritten = (unsigned char*)(obj_bytesWritten?env->GetDirectBufferAddress(obj_bytesWritten):0);


//@line:23597

		ext_glGetPerfMonitorCounterDataAMD((GLuint)monitor, (GLenum)pname, (GLsizei)dataSize, (GLuint*)(data + dataByteOffset), (GLint*)(bytesWritten + bytesWrittenByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPerfMonitorCounterDataAMD__IIIJJ(JNIEnv* env, jclass clazz, jint monitor, jint pname, jint dataSize, jlong data, jlong bytesWritten) {


//@line:23601

		ext_glGetPerfMonitorCounterDataAMD((GLuint)monitor, (GLenum)pname, (GLsizei)dataSize, (GLuint*)data, (GLint*)bytesWritten);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTessellationFactorAMD(JNIEnv* env, jclass clazz, jfloat factor) {


//@line:23605

		ext_glTessellationFactorAMD((GLfloat)factor);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTessellationModeAMD(JNIEnv* env, jclass clazz, jint mode) {


//@line:23609

		ext_glTessellationModeAMD((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProvokingVertexEXT(JNIEnv* env, jclass clazz, jint mode) {


//@line:23613

		ext_glProvokingVertexEXT((GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendFuncIndexedAMD(JNIEnv* env, jclass clazz, jint buf, jint src, jint dst) {


//@line:23617

		ext_glBlendFuncIndexedAMD((GLuint)buf, (GLenum)src, (GLenum)dst);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendFuncSeparateIndexedAMD(JNIEnv* env, jclass clazz, jint buf, jint srcRGB, jint dstRGB, jint srcAlpha, jint dstAlpha) {


//@line:23621

		ext_glBlendFuncSeparateIndexedAMD((GLuint)buf, (GLenum)srcRGB, (GLenum)dstRGB, (GLenum)srcAlpha, (GLenum)dstAlpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendEquationIndexedAMD(JNIEnv* env, jclass clazz, jint buf, jint mode) {


//@line:23625

		ext_glBlendEquationIndexedAMD((GLuint)buf, (GLenum)mode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBlendEquationSeparateIndexedAMD(JNIEnv* env, jclass clazz, jint buf, jint modeRGB, jint modeAlpha) {


//@line:23629

		ext_glBlendEquationSeparateIndexedAMD((GLuint)buf, (GLenum)modeRGB, (GLenum)modeAlpha);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureRangeAPPLE__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint length, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:23633

		ext_glTextureRangeAPPLE((GLenum)target, (GLsizei)length, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureRangeAPPLE__IIJ(JNIEnv* env, jclass clazz, jint target, jint length, jlong pointer) {


//@line:23637

		ext_glTextureRangeAPPLE((GLenum)target, (GLsizei)length, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterPointervAPPLE__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23641

		ext_glGetTexParameterPointervAPPLE((GLenum)target, (GLenum)pname, (GLvoid**)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTexParameterPointervAPPLE__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:23645

		ext_glGetTexParameterPointervAPPLE((GLenum)target, (GLenum)pname, (GLvoid**)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEnableVertexAttribAPPLE(JNIEnv* env, jclass clazz, jint index, jint pname) {


//@line:23649

		ext_glEnableVertexAttribAPPLE((GLuint)index, (GLenum)pname);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDisableVertexAttribAPPLE(JNIEnv* env, jclass clazz, jint index, jint pname) {


//@line:23653

		ext_glDisableVertexAttribAPPLE((GLuint)index, (GLenum)pname);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsVertexAttribEnabledAPPLE(JNIEnv* env, jclass clazz, jint index, jint pname) {


//@line:23657

		return (jboolean)ext_glIsVertexAttribEnabledAPPLE((GLuint)index, (GLenum)pname);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapVertexAttrib1dAPPLE__IIDDIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint size, jdouble u1, jdouble u2, jint stride, jint order, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:23661

		ext_glMapVertexAttrib1dAPPLE((GLuint)index, (GLuint)size, (GLdouble)u1, (GLdouble)u2, (GLint)stride, (GLint)order, (const GLdouble*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapVertexAttrib1dAPPLE__IIDDIIJ(JNIEnv* env, jclass clazz, jint index, jint size, jdouble u1, jdouble u2, jint stride, jint order, jlong points) {


//@line:23665

		ext_glMapVertexAttrib1dAPPLE((GLuint)index, (GLuint)size, (GLdouble)u1, (GLdouble)u2, (GLint)stride, (GLint)order, (const GLdouble*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapVertexAttrib1fAPPLE__IIFFIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint size, jfloat u1, jfloat u2, jint stride, jint order, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:23669

		ext_glMapVertexAttrib1fAPPLE((GLuint)index, (GLuint)size, (GLfloat)u1, (GLfloat)u2, (GLint)stride, (GLint)order, (const GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapVertexAttrib1fAPPLE__IIFFIIJ(JNIEnv* env, jclass clazz, jint index, jint size, jfloat u1, jfloat u2, jint stride, jint order, jlong points) {


//@line:23673

		ext_glMapVertexAttrib1fAPPLE((GLuint)index, (GLuint)size, (GLfloat)u1, (GLfloat)u2, (GLint)stride, (GLint)order, (const GLfloat*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapVertexAttrib2dAPPLE__IIDDIIDDIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint size, jdouble u1, jdouble u2, jint ustride, jint uorder, jdouble v1, jdouble v2, jint vstride, jint vorder, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:23677

		ext_glMapVertexAttrib2dAPPLE((GLuint)index, (GLuint)size, (GLdouble)u1, (GLdouble)u2, (GLint)ustride, (GLint)uorder, (GLdouble)v1, (GLdouble)v2, (GLint)vstride, (GLint)vorder, (const GLdouble*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapVertexAttrib2dAPPLE__IIDDIIDDIIJ(JNIEnv* env, jclass clazz, jint index, jint size, jdouble u1, jdouble u2, jint ustride, jint uorder, jdouble v1, jdouble v2, jint vstride, jint vorder, jlong points) {


//@line:23681

		ext_glMapVertexAttrib2dAPPLE((GLuint)index, (GLuint)size, (GLdouble)u1, (GLdouble)u2, (GLint)ustride, (GLint)uorder, (GLdouble)v1, (GLdouble)v2, (GLint)vstride, (GLint)vorder, (const GLdouble*)points);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapVertexAttrib2fAPPLE__IIFFIIFFIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint size, jfloat u1, jfloat u2, jint ustride, jint uorder, jfloat v1, jfloat v2, jint vstride, jint vorder, jobject obj_points, jint pointsByteOffset) {
	unsigned char* points = (unsigned char*)(obj_points?env->GetDirectBufferAddress(obj_points):0);


//@line:23685

		ext_glMapVertexAttrib2fAPPLE((GLuint)index, (GLuint)size, (GLfloat)u1, (GLfloat)u2, (GLint)ustride, (GLint)uorder, (GLfloat)v1, (GLfloat)v2, (GLint)vstride, (GLint)vorder, (const GLfloat*)(points + pointsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMapVertexAttrib2fAPPLE__IIFFIIFFIIJ(JNIEnv* env, jclass clazz, jint index, jint size, jfloat u1, jfloat u2, jint ustride, jint uorder, jfloat v1, jfloat v2, jint vstride, jint vorder, jlong points) {


//@line:23689

		ext_glMapVertexAttrib2fAPPLE((GLuint)index, (GLuint)size, (GLfloat)u1, (GLfloat)u2, (GLint)ustride, (GLint)uorder, (GLfloat)v1, (GLfloat)v2, (GLint)vstride, (GLint)vorder, (const GLfloat*)points);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glObjectPurgeableAPPLE(JNIEnv* env, jclass clazz, jint objectType, jint name, jint option) {


//@line:23693

		return (jint)ext_glObjectPurgeableAPPLE((GLenum)objectType, (GLuint)name, (GLenum)option);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glObjectUnpurgeableAPPLE(JNIEnv* env, jclass clazz, jint objectType, jint name, jint option) {


//@line:23697

		return (jint)ext_glObjectUnpurgeableAPPLE((GLenum)objectType, (GLuint)name, (GLenum)option);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectParameterivAPPLE__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint objectType, jint name, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23701

		ext_glGetObjectParameterivAPPLE((GLenum)objectType, (GLuint)name, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetObjectParameterivAPPLE__IIIJ(JNIEnv* env, jclass clazz, jint objectType, jint name, jint pname, jlong params) {


//@line:23705

		ext_glGetObjectParameterivAPPLE((GLenum)objectType, (GLuint)name, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginVideoCaptureNV(JNIEnv* env, jclass clazz, jint video_capture_slot) {


//@line:23709

		ext_glBeginVideoCaptureNV((GLuint)video_capture_slot);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindVideoCaptureStreamBufferNV(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint frame_region, jlong offset) {


//@line:23713

		ext_glBindVideoCaptureStreamBufferNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)frame_region, (GLintptrARB)offset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindVideoCaptureStreamTextureNV(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint frame_region, jint target, jint texture) {


//@line:23717

		ext_glBindVideoCaptureStreamTextureNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)frame_region, (GLenum)target, (GLuint)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndVideoCaptureNV(JNIEnv* env, jclass clazz, jint video_capture_slot) {


//@line:23721

		ext_glEndVideoCaptureNV((GLuint)video_capture_slot);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoCaptureivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_capture_slot, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23725

		ext_glGetVideoCaptureivNV((GLuint)video_capture_slot, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoCaptureivNV__IIJ(JNIEnv* env, jclass clazz, jint video_capture_slot, jint pname, jlong params) {


//@line:23729

		ext_glGetVideoCaptureivNV((GLuint)video_capture_slot, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoCaptureStreamivNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23733

		ext_glGetVideoCaptureStreamivNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoCaptureStreamivNV__IIIJ(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jlong params) {


//@line:23737

		ext_glGetVideoCaptureStreamivNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoCaptureStreamfvNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23741

		ext_glGetVideoCaptureStreamfvNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoCaptureStreamfvNV__IIIJ(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jlong params) {


//@line:23745

		ext_glGetVideoCaptureStreamfvNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoCaptureStreamdvNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23749

		ext_glGetVideoCaptureStreamdvNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVideoCaptureStreamdvNV__IIIJ(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jlong params) {


//@line:23753

		ext_glGetVideoCaptureStreamdvNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (GLdouble*)params);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glVideoCaptureNV__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint video_capture_slot, jobject obj_sequence_num, jint sequence_numByteOffset, jobject obj_capture_time, jint capture_timeByteOffset, unsigned char* sequence_num, unsigned char* capture_time) {

//@line:23757

		return (jint)ext_glVideoCaptureNV((GLuint)video_capture_slot, (GLuint*)(sequence_num + sequence_numByteOffset), (GLuint64EXT*)(capture_time + capture_timeByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glVideoCaptureNV__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_capture_slot, jobject obj_sequence_num, jint sequence_numByteOffset, jobject obj_capture_time, jint capture_timeByteOffset) {
	unsigned char* sequence_num = (unsigned char*)(obj_sequence_num?env->GetDirectBufferAddress(obj_sequence_num):0);
	unsigned char* capture_time = (unsigned char*)(obj_capture_time?env->GetDirectBufferAddress(obj_capture_time):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glVideoCaptureNV__ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(env, clazz, video_capture_slot, obj_sequence_num, sequence_numByteOffset, obj_capture_time, capture_timeByteOffset, sequence_num, capture_time);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glVideoCaptureNV__IJJ(JNIEnv* env, jclass clazz, jint video_capture_slot, jlong sequence_num, jlong capture_time) {


//@line:23761

		return (jint)ext_glVideoCaptureNV((GLuint)video_capture_slot, (GLuint*)sequence_num, (GLuint64EXT*)capture_time);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVideoCaptureStreamParameterivNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23765

		ext_glVideoCaptureStreamParameterivNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (const GLint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVideoCaptureStreamParameterivNV__IIIJ(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jlong params) {


//@line:23769

		ext_glVideoCaptureStreamParameterivNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (const GLint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVideoCaptureStreamParameterfvNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23773

		ext_glVideoCaptureStreamParameterfvNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (const GLfloat*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVideoCaptureStreamParameterfvNV__IIIJ(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jlong params) {


//@line:23777

		ext_glVideoCaptureStreamParameterfvNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (const GLfloat*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVideoCaptureStreamParameterdvNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23781

		ext_glVideoCaptureStreamParameterdvNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (const GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVideoCaptureStreamParameterdvNV__IIIJ(JNIEnv* env, jclass clazz, jint video_capture_slot, jint stream, jint pname, jlong params) {


//@line:23785

		ext_glVideoCaptureStreamParameterdvNV((GLuint)video_capture_slot, (GLuint)stream, (GLenum)pname, (const GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyImageSubDataNV(JNIEnv* env, jclass clazz, jint srcName, jint srcTarget, jint srcLevel, jint srcX, jint srcY, jint srcZ, jint dstName, jint dstTarget, jint dstLevel, jint dstX, jint dstY, jint dstZ, jint width, jint height, jint depth) {


//@line:23789

		ext_glCopyImageSubDataNV((GLuint)srcName, (GLenum)srcTarget, (GLint)srcLevel, (GLint)srcX, (GLint)srcY, (GLint)srcZ, (GLuint)dstName, (GLenum)dstTarget, (GLint)dstLevel, (GLint)dstX, (GLint)dstY, (GLint)dstZ, (GLsizei)width, (GLsizei)height, (GLsizei)depth);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUseShaderProgramEXT(JNIEnv* env, jclass clazz, jint type, jint program) {


//@line:23793

		ext_glUseShaderProgramEXT((GLenum)type, (GLuint)program);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glActiveProgramEXT(JNIEnv* env, jclass clazz, jint program) {


//@line:23797

		ext_glActiveProgramEXT((GLuint)program);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glCreateShaderProgramEXT__ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint type, jobject obj_string, jint stringByteOffset, unsigned char* string) {

//@line:23801

		return (jint)ext_glCreateShaderProgramEXT((GLenum)type, (const GLchar*)(string + stringByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glCreateShaderProgramEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint type, jobject obj_string, jint stringByteOffset) {
	unsigned char* string = (unsigned char*)(obj_string?env->GetDirectBufferAddress(obj_string):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glCreateShaderProgramEXT__ILjava_nio_Buffer_2I(env, clazz, type, obj_string, stringByteOffset, string);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glCreateShaderProgramEXT__IJ(JNIEnv* env, jclass clazz, jint type, jlong string) {


//@line:23805

		return (jint)ext_glCreateShaderProgramEXT((GLenum)type, (const GLchar*)string);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMakeBufferResidentNV(JNIEnv* env, jclass clazz, jint target, jint access) {


//@line:23809

		ext_glMakeBufferResidentNV((GLenum)target, (GLenum)access);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMakeBufferNonResidentNV(JNIEnv* env, jclass clazz, jint target) {


//@line:23813

		ext_glMakeBufferNonResidentNV((GLenum)target);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsBufferResidentNV(JNIEnv* env, jclass clazz, jint target) {


//@line:23817

		return (jboolean)ext_glIsBufferResidentNV((GLenum)target);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMakeNamedBufferResidentNV(JNIEnv* env, jclass clazz, jint buffer, jint access) {


//@line:23821

		ext_glMakeNamedBufferResidentNV((GLuint)buffer, (GLenum)access);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMakeNamedBufferNonResidentNV(JNIEnv* env, jclass clazz, jint buffer) {


//@line:23825

		ext_glMakeNamedBufferNonResidentNV((GLuint)buffer);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsNamedBufferResidentNV(JNIEnv* env, jclass clazz, jint buffer) {


//@line:23829

		return (jboolean)ext_glIsNamedBufferResidentNV((GLuint)buffer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferParameterui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23833

		ext_glGetBufferParameterui64vNV((GLenum)target, (GLenum)pname, (GLuint64EXT*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetBufferParameterui64vNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint pname, jlong params) {


//@line:23837

		ext_glGetBufferParameterui64vNV((GLenum)target, (GLenum)pname, (GLuint64EXT*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedBufferParameterui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint buffer, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23841

		ext_glGetNamedBufferParameterui64vNV((GLuint)buffer, (GLenum)pname, (GLuint64EXT*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetNamedBufferParameterui64vNV__IIJ(JNIEnv* env, jclass clazz, jint buffer, jint pname, jlong params) {


//@line:23845

		ext_glGetNamedBufferParameterui64vNV((GLuint)buffer, (GLenum)pname, (GLuint64EXT*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetIntegerui64vNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint value, jobject obj_result, jint resultByteOffset) {
	unsigned char* result = (unsigned char*)(obj_result?env->GetDirectBufferAddress(obj_result):0);


//@line:23849

		ext_glGetIntegerui64vNV((GLenum)value, (GLuint64EXT*)(result + resultByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetIntegerui64vNV__IJ(JNIEnv* env, jclass clazz, jint value, jlong result) {


//@line:23853

		ext_glGetIntegerui64vNV((GLenum)value, (GLuint64EXT*)result);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformui64NV(JNIEnv* env, jclass clazz, jint location, jlong value) {


//@line:23857

		ext_glUniformui64NV((GLint)location, (GLuint64EXT)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23861

		ext_glUniformui64vNV((GLint)location, (GLsizei)count, (const GLuint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformui64vNV__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:23865

		ext_glUniformui64vNV((GLint)location, (GLsizei)count, (const GLuint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:23869

		ext_glGetUniformui64vNV((GLuint)program, (GLint)location, (GLuint64EXT*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformui64vNV__IIJ(JNIEnv* env, jclass clazz, jint program, jint location, jlong params) {


//@line:23873

		ext_glGetUniformui64vNV((GLuint)program, (GLint)location, (GLuint64EXT*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformui64NV(JNIEnv* env, jclass clazz, jint program, jint location, jlong value) {


//@line:23877

		ext_glProgramUniformui64NV((GLuint)program, (GLint)location, (GLuint64EXT)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformui64vNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:23881

		ext_glProgramUniformui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformui64vNV__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:23885

		ext_glProgramUniformui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBufferAddressRangeNV(JNIEnv* env, jclass clazz, jint pname, jint index, jlong address, jlong length) {


//@line:23889

		ext_glBufferAddressRangeNV((GLenum)pname, (GLuint)index, (GLuint64EXT)address, (GLsizeiptr)length);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexFormatNV(JNIEnv* env, jclass clazz, jint size, jint type, jint stride) {


//@line:23893

		ext_glVertexFormatNV((GLint)size, (GLenum)type, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glNormalFormatNV(JNIEnv* env, jclass clazz, jint type, jint stride) {


//@line:23897

		ext_glNormalFormatNV((GLenum)type, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glColorFormatNV(JNIEnv* env, jclass clazz, jint size, jint type, jint stride) {


//@line:23901

		ext_glColorFormatNV((GLint)size, (GLenum)type, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glIndexFormatNV(JNIEnv* env, jclass clazz, jint type, jint stride) {


//@line:23905

		ext_glIndexFormatNV((GLenum)type, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexCoordFormatNV(JNIEnv* env, jclass clazz, jint size, jint type, jint stride) {


//@line:23909

		ext_glTexCoordFormatNV((GLint)size, (GLenum)type, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEdgeFlagFormatNV(JNIEnv* env, jclass clazz, jint stride) {


//@line:23913

		ext_glEdgeFlagFormatNV((GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSecondaryColorFormatNV(JNIEnv* env, jclass clazz, jint size, jint type, jint stride) {


//@line:23917

		ext_glSecondaryColorFormatNV((GLint)size, (GLenum)type, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glFogCoordFormatNV(JNIEnv* env, jclass clazz, jint type, jint stride) {


//@line:23921

		ext_glFogCoordFormatNV((GLenum)type, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribFormatNV(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jboolean normalized, jint stride) {


//@line:23925

		ext_glVertexAttribFormatNV((GLuint)index, (GLint)size, (GLenum)type, (GLboolean)normalized, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribIFormatNV(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jint stride) {


//@line:23929

		ext_glVertexAttribIFormatNV((GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureBarrierNV(JNIEnv* env, jclass clazz) {


//@line:23933

		ext_glTextureBarrierNV();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBindImageTextureEXT(JNIEnv* env, jclass clazz, jint index, jint texture, jint level, jboolean layered, jint layer, jint access, jint format) {


//@line:23937

		ext_glBindImageTextureEXT((GLuint)index, (GLuint)texture, (GLint)level, (GLboolean)layered, (GLint)layer, (GLenum)access, (GLint)format);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMemoryBarrierEXT(JNIEnv* env, jclass clazz, jint barriers) {


//@line:23941

		ext_glMemoryBarrierEXT((GLbitfield)barriers);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1dEXT(JNIEnv* env, jclass clazz, jint index, jdouble x) {


//@line:23945

		ext_glVertexAttribL1dEXT((GLuint)index, (GLdouble)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2dEXT(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y) {


//@line:23949

		ext_glVertexAttribL2dEXT((GLuint)index, (GLdouble)x, (GLdouble)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3dEXT(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y, jdouble z) {


//@line:23953

		ext_glVertexAttribL3dEXT((GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4dEXT(JNIEnv* env, jclass clazz, jint index, jdouble x, jdouble y, jdouble z, jdouble w) {


//@line:23957

		ext_glVertexAttribL4dEXT((GLuint)index, (GLdouble)x, (GLdouble)y, (GLdouble)z, (GLdouble)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1dvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:23961

		ext_glVertexAttribL1dvEXT((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1dvEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:23965

		ext_glVertexAttribL1dvEXT((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2dvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:23969

		ext_glVertexAttribL2dvEXT((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2dvEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:23973

		ext_glVertexAttribL2dvEXT((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3dvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:23977

		ext_glVertexAttribL3dvEXT((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3dvEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:23981

		ext_glVertexAttribL3dvEXT((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4dvEXT__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:23985

		ext_glVertexAttribL4dvEXT((GLuint)index, (const GLdouble*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4dvEXT__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:23989

		ext_glVertexAttribL4dvEXT((GLuint)index, (const GLdouble*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribLPointerEXT__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jint stride, jobject obj_pointer, jint pointerByteOffset) {
	unsigned char* pointer = (unsigned char*)(obj_pointer?env->GetDirectBufferAddress(obj_pointer):0);


//@line:23993

		ext_glVertexAttribLPointerEXT((GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)(pointer + pointerByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribLPointerEXT__IIIIJ(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jint stride, jlong pointer) {


//@line:23997

		ext_glVertexAttribLPointerEXT((GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride, (const GLvoid*)pointer);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribLdvEXT__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:24001

		ext_glGetVertexAttribLdvEXT((GLuint)index, (GLenum)pname, (GLdouble*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribLdvEXT__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:24005

		ext_glGetVertexAttribLdvEXT((GLuint)index, (GLenum)pname, (GLdouble*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexArrayVertexAttribLOffsetEXT(JNIEnv* env, jclass clazz, jint vaobj, jint buffer, jint index, jint size, jint type, jint stride, jlong offset) {


//@line:24009

		ext_glVertexArrayVertexAttribLOffsetEXT((GLuint)vaobj, (GLuint)buffer, (GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride, (GLintptr)offset);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramSubroutineParametersuivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint count, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:24013

		ext_glProgramSubroutineParametersuivNV((GLenum)target, (GLsizei)count, (const GLuint*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramSubroutineParametersuivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint count, jlong params) {


//@line:24017

		ext_glProgramSubroutineParametersuivNV((GLenum)target, (GLsizei)count, (const GLuint*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramSubroutineParameteruivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint target, jint index, jobject obj_param, jint paramByteOffset) {
	unsigned char* param = (unsigned char*)(obj_param?env->GetDirectBufferAddress(obj_param):0);


//@line:24021

		ext_glGetProgramSubroutineParameteruivNV((GLenum)target, (GLuint)index, (GLuint*)(param + paramByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetProgramSubroutineParameteruivNV__IIJ(JNIEnv* env, jclass clazz, jint target, jint index, jlong param) {


//@line:24025

		ext_glGetProgramSubroutineParameteruivNV((GLenum)target, (GLuint)index, (GLuint*)param);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1i64NV(JNIEnv* env, jclass clazz, jint location, jlong x) {


//@line:24029

		ext_glUniform1i64NV((GLint)location, (GLint64EXT)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2i64NV(JNIEnv* env, jclass clazz, jint location, jlong x, jlong y) {


//@line:24033

		ext_glUniform2i64NV((GLint)location, (GLint64EXT)x, (GLint64EXT)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3i64NV(JNIEnv* env, jclass clazz, jint location, jlong x, jlong y, jlong z) {


//@line:24037

		ext_glUniform3i64NV((GLint)location, (GLint64EXT)x, (GLint64EXT)y, (GLint64EXT)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4i64NV(JNIEnv* env, jclass clazz, jint location, jlong x, jlong y, jlong z, jlong w) {


//@line:24041

		ext_glUniform4i64NV((GLint)location, (GLint64EXT)x, (GLint64EXT)y, (GLint64EXT)z, (GLint64EXT)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1i64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24045

		ext_glUniform1i64vNV((GLint)location, (GLsizei)count, (const GLint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1i64vNV__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:24049

		ext_glUniform1i64vNV((GLint)location, (GLsizei)count, (const GLint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2i64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24053

		ext_glUniform2i64vNV((GLint)location, (GLsizei)count, (const GLint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2i64vNV__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:24057

		ext_glUniform2i64vNV((GLint)location, (GLsizei)count, (const GLint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3i64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24061

		ext_glUniform3i64vNV((GLint)location, (GLsizei)count, (const GLint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3i64vNV__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:24065

		ext_glUniform3i64vNV((GLint)location, (GLsizei)count, (const GLint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4i64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24069

		ext_glUniform4i64vNV((GLint)location, (GLsizei)count, (const GLint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4i64vNV__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:24073

		ext_glUniform4i64vNV((GLint)location, (GLsizei)count, (const GLint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1ui64NV(JNIEnv* env, jclass clazz, jint location, jlong x) {


//@line:24077

		ext_glUniform1ui64NV((GLint)location, (GLuint64EXT)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2ui64NV(JNIEnv* env, jclass clazz, jint location, jlong x, jlong y) {


//@line:24081

		ext_glUniform2ui64NV((GLint)location, (GLuint64EXT)x, (GLuint64EXT)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3ui64NV(JNIEnv* env, jclass clazz, jint location, jlong x, jlong y, jlong z) {


//@line:24085

		ext_glUniform3ui64NV((GLint)location, (GLuint64EXT)x, (GLuint64EXT)y, (GLuint64EXT)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4ui64NV(JNIEnv* env, jclass clazz, jint location, jlong x, jlong y, jlong z, jlong w) {


//@line:24089

		ext_glUniform4ui64NV((GLint)location, (GLuint64EXT)x, (GLuint64EXT)y, (GLuint64EXT)z, (GLuint64EXT)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1ui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24093

		ext_glUniform1ui64vNV((GLint)location, (GLsizei)count, (const GLuint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform1ui64vNV__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:24097

		ext_glUniform1ui64vNV((GLint)location, (GLsizei)count, (const GLuint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2ui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24101

		ext_glUniform2ui64vNV((GLint)location, (GLsizei)count, (const GLuint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform2ui64vNV__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:24105

		ext_glUniform2ui64vNV((GLint)location, (GLsizei)count, (const GLuint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3ui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24109

		ext_glUniform3ui64vNV((GLint)location, (GLsizei)count, (const GLuint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform3ui64vNV__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:24113

		ext_glUniform3ui64vNV((GLint)location, (GLsizei)count, (const GLuint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4ui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24117

		ext_glUniform4ui64vNV((GLint)location, (GLsizei)count, (const GLuint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniform4ui64vNV__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:24121

		ext_glUniform4ui64vNV((GLint)location, (GLsizei)count, (const GLuint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformi64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:24125

		ext_glGetUniformi64vNV((GLuint)program, (GLint)location, (GLint64EXT*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetUniformi64vNV__IIJ(JNIEnv* env, jclass clazz, jint program, jint location, jlong params) {


//@line:24129

		ext_glGetUniformi64vNV((GLuint)program, (GLint)location, (GLint64EXT*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1i64NV(JNIEnv* env, jclass clazz, jint program, jint location, jlong x) {


//@line:24133

		ext_glProgramUniform1i64NV((GLuint)program, (GLint)location, (GLint64EXT)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2i64NV(JNIEnv* env, jclass clazz, jint program, jint location, jlong x, jlong y) {


//@line:24137

		ext_glProgramUniform2i64NV((GLuint)program, (GLint)location, (GLint64EXT)x, (GLint64EXT)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3i64NV(JNIEnv* env, jclass clazz, jint program, jint location, jlong x, jlong y, jlong z) {


//@line:24141

		ext_glProgramUniform3i64NV((GLuint)program, (GLint)location, (GLint64EXT)x, (GLint64EXT)y, (GLint64EXT)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4i64NV(JNIEnv* env, jclass clazz, jint program, jint location, jlong x, jlong y, jlong z, jlong w) {


//@line:24145

		ext_glProgramUniform4i64NV((GLuint)program, (GLint)location, (GLint64EXT)x, (GLint64EXT)y, (GLint64EXT)z, (GLint64EXT)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1i64vNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24149

		ext_glProgramUniform1i64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1i64vNV__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:24153

		ext_glProgramUniform1i64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2i64vNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24157

		ext_glProgramUniform2i64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2i64vNV__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:24161

		ext_glProgramUniform2i64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3i64vNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24165

		ext_glProgramUniform3i64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3i64vNV__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:24169

		ext_glProgramUniform3i64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4i64vNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24173

		ext_glProgramUniform4i64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4i64vNV__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:24177

		ext_glProgramUniform4i64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1ui64NV(JNIEnv* env, jclass clazz, jint program, jint location, jlong x) {


//@line:24181

		ext_glProgramUniform1ui64NV((GLuint)program, (GLint)location, (GLuint64EXT)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2ui64NV(JNIEnv* env, jclass clazz, jint program, jint location, jlong x, jlong y) {


//@line:24185

		ext_glProgramUniform2ui64NV((GLuint)program, (GLint)location, (GLuint64EXT)x, (GLuint64EXT)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3ui64NV(JNIEnv* env, jclass clazz, jint program, jint location, jlong x, jlong y, jlong z) {


//@line:24189

		ext_glProgramUniform3ui64NV((GLuint)program, (GLint)location, (GLuint64EXT)x, (GLuint64EXT)y, (GLuint64EXT)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4ui64NV(JNIEnv* env, jclass clazz, jint program, jint location, jlong x, jlong y, jlong z, jlong w) {


//@line:24193

		ext_glProgramUniform4ui64NV((GLuint)program, (GLint)location, (GLuint64EXT)x, (GLuint64EXT)y, (GLuint64EXT)z, (GLuint64EXT)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1ui64vNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24197

		ext_glProgramUniform1ui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform1ui64vNV__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:24201

		ext_glProgramUniform1ui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2ui64vNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24205

		ext_glProgramUniform2ui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform2ui64vNV__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:24209

		ext_glProgramUniform2ui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3ui64vNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24213

		ext_glProgramUniform3ui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform3ui64vNV__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:24217

		ext_glProgramUniform3ui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4ui64vNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24221

		ext_glProgramUniform4ui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64EXT*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniform4ui64vNV__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong value) {


//@line:24225

		ext_glProgramUniform4ui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64EXT*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1i64NV(JNIEnv* env, jclass clazz, jint index, jlong x) {


//@line:24229

		ext_glVertexAttribL1i64NV((GLuint)index, (GLint64EXT)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2i64NV(JNIEnv* env, jclass clazz, jint index, jlong x, jlong y) {


//@line:24233

		ext_glVertexAttribL2i64NV((GLuint)index, (GLint64EXT)x, (GLint64EXT)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3i64NV(JNIEnv* env, jclass clazz, jint index, jlong x, jlong y, jlong z) {


//@line:24237

		ext_glVertexAttribL3i64NV((GLuint)index, (GLint64EXT)x, (GLint64EXT)y, (GLint64EXT)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4i64NV(JNIEnv* env, jclass clazz, jint index, jlong x, jlong y, jlong z, jlong w) {


//@line:24241

		ext_glVertexAttribL4i64NV((GLuint)index, (GLint64EXT)x, (GLint64EXT)y, (GLint64EXT)z, (GLint64EXT)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1i64vNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:24245

		ext_glVertexAttribL1i64vNV((GLuint)index, (const GLint64EXT*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1i64vNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:24249

		ext_glVertexAttribL1i64vNV((GLuint)index, (const GLint64EXT*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2i64vNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:24253

		ext_glVertexAttribL2i64vNV((GLuint)index, (const GLint64EXT*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2i64vNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:24257

		ext_glVertexAttribL2i64vNV((GLuint)index, (const GLint64EXT*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3i64vNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:24261

		ext_glVertexAttribL3i64vNV((GLuint)index, (const GLint64EXT*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3i64vNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:24265

		ext_glVertexAttribL3i64vNV((GLuint)index, (const GLint64EXT*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4i64vNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:24269

		ext_glVertexAttribL4i64vNV((GLuint)index, (const GLint64EXT*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4i64vNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:24273

		ext_glVertexAttribL4i64vNV((GLuint)index, (const GLint64EXT*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1ui64NV(JNIEnv* env, jclass clazz, jint index, jlong x) {


//@line:24277

		ext_glVertexAttribL1ui64NV((GLuint)index, (GLuint64EXT)x);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2ui64NV(JNIEnv* env, jclass clazz, jint index, jlong x, jlong y) {


//@line:24281

		ext_glVertexAttribL2ui64NV((GLuint)index, (GLuint64EXT)x, (GLuint64EXT)y);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3ui64NV(JNIEnv* env, jclass clazz, jint index, jlong x, jlong y, jlong z) {


//@line:24285

		ext_glVertexAttribL3ui64NV((GLuint)index, (GLuint64EXT)x, (GLuint64EXT)y, (GLuint64EXT)z);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4ui64NV(JNIEnv* env, jclass clazz, jint index, jlong x, jlong y, jlong z, jlong w) {


//@line:24289

		ext_glVertexAttribL4ui64NV((GLuint)index, (GLuint64EXT)x, (GLuint64EXT)y, (GLuint64EXT)z, (GLuint64EXT)w);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1ui64vNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:24293

		ext_glVertexAttribL1ui64vNV((GLuint)index, (const GLuint64EXT*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL1ui64vNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:24297

		ext_glVertexAttribL1ui64vNV((GLuint)index, (const GLuint64EXT*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2ui64vNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:24301

		ext_glVertexAttribL2ui64vNV((GLuint)index, (const GLuint64EXT*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL2ui64vNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:24305

		ext_glVertexAttribL2ui64vNV((GLuint)index, (const GLuint64EXT*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3ui64vNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:24309

		ext_glVertexAttribL3ui64vNV((GLuint)index, (const GLuint64EXT*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL3ui64vNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:24313

		ext_glVertexAttribL3ui64vNV((GLuint)index, (const GLuint64EXT*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4ui64vNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jobject obj_v, jint vByteOffset) {
	unsigned char* v = (unsigned char*)(obj_v?env->GetDirectBufferAddress(obj_v):0);


//@line:24317

		ext_glVertexAttribL4ui64vNV((GLuint)index, (const GLuint64EXT*)(v + vByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribL4ui64vNV__IJ(JNIEnv* env, jclass clazz, jint index, jlong v) {


//@line:24321

		ext_glVertexAttribL4ui64vNV((GLuint)index, (const GLuint64EXT*)v);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribLi64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:24325

		ext_glGetVertexAttribLi64vNV((GLuint)index, (GLenum)pname, (GLint64EXT*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribLi64vNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:24329

		ext_glGetVertexAttribLi64vNV((GLuint)index, (GLenum)pname, (GLint64EXT*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribLui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint index, jint pname, jobject obj_params, jint paramsByteOffset) {
	unsigned char* params = (unsigned char*)(obj_params?env->GetDirectBufferAddress(obj_params):0);


//@line:24333

		ext_glGetVertexAttribLui64vNV((GLuint)index, (GLenum)pname, (GLuint64EXT*)(params + paramsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetVertexAttribLui64vNV__IIJ(JNIEnv* env, jclass clazz, jint index, jint pname, jlong params) {


//@line:24337

		ext_glGetVertexAttribLui64vNV((GLuint)index, (GLenum)pname, (GLuint64EXT*)params);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVertexAttribLFormatNV(JNIEnv* env, jclass clazz, jint index, jint size, jint type, jint stride) {


//@line:24341

		ext_glVertexAttribLFormatNV((GLuint)index, (GLint)size, (GLenum)type, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenNamesAMD__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint identifier, jint num, jobject obj_names, jint namesByteOffset) {
	unsigned char* names = (unsigned char*)(obj_names?env->GetDirectBufferAddress(obj_names):0);


//@line:24345

		ext_glGenNamesAMD((GLenum)identifier, (GLuint)num, (GLuint*)(names + namesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGenNamesAMD__IIJ(JNIEnv* env, jclass clazz, jint identifier, jint num, jlong names) {


//@line:24349

		ext_glGenNamesAMD((GLenum)identifier, (GLuint)num, (GLuint*)names);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteNamesAMD__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint identifier, jint num, jobject obj_names, jint namesByteOffset) {
	unsigned char* names = (unsigned char*)(obj_names?env->GetDirectBufferAddress(obj_names):0);


//@line:24353

		ext_glDeleteNamesAMD((GLenum)identifier, (GLuint)num, (const GLuint*)(names + namesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeleteNamesAMD__IIJ(JNIEnv* env, jclass clazz, jint identifier, jint num, jlong names) {


//@line:24357

		ext_glDeleteNamesAMD((GLenum)identifier, (GLuint)num, (const GLuint*)names);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsNameAMD(JNIEnv* env, jclass clazz, jint identifier, jint name) {


//@line:24361

		return (jboolean)ext_glIsNameAMD((GLenum)identifier, (GLuint)name);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLogAMD__IILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint count, jint bufsize, jobject obj_categories, jint categoriesByteOffset, jobject obj_severities, jint severitiesByteOffset, jobject obj_ids, jint idsByteOffset, jobject obj_lengths, jint lengthsByteOffset, jobject obj_message, jint messageByteOffset, unsigned char* categories, unsigned char* severities, unsigned char* ids, unsigned char* lengths, unsigned char* message) {

//@line:24365

		return (jint)ext_glGetDebugMessageLogAMD((GLuint)count, (GLsizei)bufsize, (GLenum*)(categories + categoriesByteOffset), (GLuint*)(severities + severitiesByteOffset), (GLuint*)(ids + idsByteOffset), (GLsizei*)(lengths + lengthsByteOffset), (GLchar*)(message + messageByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLogAMD__IILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint count, jint bufsize, jobject obj_categories, jint categoriesByteOffset, jobject obj_severities, jint severitiesByteOffset, jobject obj_ids, jint idsByteOffset, jobject obj_lengths, jint lengthsByteOffset, jobject obj_message, jint messageByteOffset) {
	unsigned char* categories = (unsigned char*)(obj_categories?env->GetDirectBufferAddress(obj_categories):0);
	unsigned char* severities = (unsigned char*)(obj_severities?env->GetDirectBufferAddress(obj_severities):0);
	unsigned char* ids = (unsigned char*)(obj_ids?env->GetDirectBufferAddress(obj_ids):0);
	unsigned char* lengths = (unsigned char*)(obj_lengths?env->GetDirectBufferAddress(obj_lengths):0);
	unsigned char* message = (unsigned char*)(obj_message?env->GetDirectBufferAddress(obj_message):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLogAMD__IILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(env, clazz, count, bufsize, obj_categories, categoriesByteOffset, obj_severities, severitiesByteOffset, obj_ids, idsByteOffset, obj_lengths, lengthsByteOffset, obj_message, messageByteOffset, categories, severities, ids, lengths, message);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGetDebugMessageLogAMD__IIJJJJJ(JNIEnv* env, jclass clazz, jint count, jint bufsize, jlong categories, jlong severities, jlong ids, jlong lengths, jlong message) {


//@line:24369

		return (jint)ext_glGetDebugMessageLogAMD((GLuint)count, (GLsizei)bufsize, (GLenum*)categories, (GLuint*)severities, (GLuint*)ids, (GLsizei*)lengths, (GLchar*)message);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUInitNV__Ljava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_vdpDevice, jint vdpDeviceByteOffset, jobject obj_getProcAddress, jint getProcAddressByteOffset) {
	unsigned char* vdpDevice = (unsigned char*)(obj_vdpDevice?env->GetDirectBufferAddress(obj_vdpDevice):0);
	unsigned char* getProcAddress = (unsigned char*)(obj_getProcAddress?env->GetDirectBufferAddress(obj_getProcAddress):0);


//@line:24373

		ext_glVDPAUInitNV((const GLvoid*)(vdpDevice + vdpDeviceByteOffset), (const GLvoid*)(getProcAddress + getProcAddressByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUInitNV__JJ(JNIEnv* env, jclass clazz, jlong vdpDevice, jlong getProcAddress) {


//@line:24377

		ext_glVDPAUInitNV((const GLvoid*)vdpDevice, (const GLvoid*)getProcAddress);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUFiniNV(JNIEnv* env, jclass clazz) {


//@line:24381

		ext_glVDPAUFiniNV();
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glVDPAURegisterVideoSurfaceNV__Ljava_nio_Buffer_2IIILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jobject obj_vdpSurface, jint vdpSurfaceByteOffset, jint target, jint numTextureNames, jobject obj_textureNames, jint textureNamesByteOffset, unsigned char* vdpSurface, unsigned char* textureNames) {

//@line:24385

		return (jint)ext_glVDPAURegisterVideoSurfaceNV((const GLvoid*)(vdpSurface + vdpSurfaceByteOffset), (GLenum)target, (GLsizei)numTextureNames, (const GLuint*)(textureNames + textureNamesByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAURegisterVideoSurfaceNV__Ljava_nio_Buffer_2IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_vdpSurface, jint vdpSurfaceByteOffset, jint target, jint numTextureNames, jobject obj_textureNames, jint textureNamesByteOffset) {
	unsigned char* vdpSurface = (unsigned char*)(obj_vdpSurface?env->GetDirectBufferAddress(obj_vdpSurface):0);
	unsigned char* textureNames = (unsigned char*)(obj_textureNames?env->GetDirectBufferAddress(obj_textureNames):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glVDPAURegisterVideoSurfaceNV__Ljava_nio_Buffer_2IIILjava_nio_Buffer_2I(env, clazz, obj_vdpSurface, vdpSurfaceByteOffset, target, numTextureNames, obj_textureNames, textureNamesByteOffset, vdpSurface, textureNames);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAURegisterVideoSurfaceNV__JIIJ(JNIEnv* env, jclass clazz, jlong vdpSurface, jint target, jint numTextureNames, jlong textureNames) {


//@line:24389

		return (jint)ext_glVDPAURegisterVideoSurfaceNV((const GLvoid*)vdpSurface, (GLenum)target, (GLsizei)numTextureNames, (const GLuint*)textureNames);
	

}

static inline jint wrapped_Java_com_badlogic_jglfw_gl_GL_glVDPAURegisterOutputSurfaceNV__Ljava_nio_Buffer_2IIILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jobject obj_vdpSurface, jint vdpSurfaceByteOffset, jint target, jint numTextureNames, jobject obj_textureNames, jint textureNamesByteOffset, unsigned char* vdpSurface, unsigned char* textureNames) {

//@line:24393

		return (jint)ext_glVDPAURegisterOutputSurfaceNV((GLvoid*)(vdpSurface + vdpSurfaceByteOffset), (GLenum)target, (GLsizei)numTextureNames, (const GLuint*)(textureNames + textureNamesByteOffset));
	
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAURegisterOutputSurfaceNV__Ljava_nio_Buffer_2IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jobject obj_vdpSurface, jint vdpSurfaceByteOffset, jint target, jint numTextureNames, jobject obj_textureNames, jint textureNamesByteOffset) {
	unsigned char* vdpSurface = (unsigned char*)(obj_vdpSurface?env->GetDirectBufferAddress(obj_vdpSurface):0);
	unsigned char* textureNames = (unsigned char*)(obj_textureNames?env->GetDirectBufferAddress(obj_textureNames):0);

	jint JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glVDPAURegisterOutputSurfaceNV__Ljava_nio_Buffer_2IIILjava_nio_Buffer_2I(env, clazz, obj_vdpSurface, vdpSurfaceByteOffset, target, numTextureNames, obj_textureNames, textureNamesByteOffset, vdpSurface, textureNames);


	return JNI_returnValue;
}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAURegisterOutputSurfaceNV__JIIJ(JNIEnv* env, jclass clazz, jlong vdpSurface, jint target, jint numTextureNames, jlong textureNames) {


//@line:24397

		return (jint)ext_glVDPAURegisterOutputSurfaceNV((GLvoid*)vdpSurface, (GLenum)target, (GLsizei)numTextureNames, (const GLuint*)textureNames);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUIsSurfaceNV(JNIEnv* env, jclass clazz, jint surface) {


//@line:24401

		ext_glVDPAUIsSurfaceNV((GLvdpauSurfaceNV)surface);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUUnregisterSurfaceNV(JNIEnv* env, jclass clazz, jint surface) {


//@line:24405

		ext_glVDPAUUnregisterSurfaceNV((GLvdpauSurfaceNV)surface);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUGetSurfaceivNV__IIILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint surface, jint pname, jint bufSize, jobject obj_length, jint lengthByteOffset, jobject obj_values, jint valuesByteOffset) {
	unsigned char* length = (unsigned char*)(obj_length?env->GetDirectBufferAddress(obj_length):0);
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:24409

		ext_glVDPAUGetSurfaceivNV((GLvdpauSurfaceNV)surface, (GLenum)pname, (GLsizei)bufSize, (GLsizei*)(length + lengthByteOffset), (GLint*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUGetSurfaceivNV__IIIJJ(JNIEnv* env, jclass clazz, jint surface, jint pname, jint bufSize, jlong length, jlong values) {


//@line:24413

		ext_glVDPAUGetSurfaceivNV((GLvdpauSurfaceNV)surface, (GLenum)pname, (GLsizei)bufSize, (GLsizei*)length, (GLint*)values);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUSurfaceAccessNV(JNIEnv* env, jclass clazz, jint surface, jint access) {


//@line:24417

		ext_glVDPAUSurfaceAccessNV((GLvdpauSurfaceNV)surface, (GLenum)access);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUMapSurfacesNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint numSurfaces, jobject obj_surfaces, jint surfacesByteOffset) {
	unsigned char* surfaces = (unsigned char*)(obj_surfaces?env->GetDirectBufferAddress(obj_surfaces):0);


//@line:24421

		ext_glVDPAUMapSurfacesNV((GLsizei)numSurfaces, (const GLvdpauSurfaceNV*)(surfaces + surfacesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUMapSurfacesNV__IJ(JNIEnv* env, jclass clazz, jint numSurfaces, jlong surfaces) {


//@line:24425

		ext_glVDPAUMapSurfacesNV((GLsizei)numSurfaces, (const GLvdpauSurfaceNV*)surfaces);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUUnmapSurfacesNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint numSurface, jobject obj_surfaces, jint surfacesByteOffset) {
	unsigned char* surfaces = (unsigned char*)(obj_surfaces?env->GetDirectBufferAddress(obj_surfaces):0);


//@line:24429

		ext_glVDPAUUnmapSurfacesNV((GLsizei)numSurface, (const GLvdpauSurfaceNV*)(surfaces + surfacesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glVDPAUUnmapSurfacesNV__IJ(JNIEnv* env, jclass clazz, jint numSurface, jlong surfaces) {


//@line:24433

		ext_glVDPAUUnmapSurfacesNV((GLsizei)numSurface, (const GLvdpauSurfaceNV*)surfaces);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage2DMultisampleCoverageNV(JNIEnv* env, jclass clazz, jint target, jint coverageSamples, jint colorSamples, jint internalFormat, jint width, jint height, jboolean fixedSampleLocations) {


//@line:24437

		ext_glTexImage2DMultisampleCoverageNV((GLenum)target, (GLsizei)coverageSamples, (GLsizei)colorSamples, (GLint)internalFormat, (GLsizei)width, (GLsizei)height, (GLboolean)fixedSampleLocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexImage3DMultisampleCoverageNV(JNIEnv* env, jclass clazz, jint target, jint coverageSamples, jint colorSamples, jint internalFormat, jint width, jint height, jint depth, jboolean fixedSampleLocations) {


//@line:24441

		ext_glTexImage3DMultisampleCoverageNV((GLenum)target, (GLsizei)coverageSamples, (GLsizei)colorSamples, (GLint)internalFormat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLboolean)fixedSampleLocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureImage2DMultisampleNV(JNIEnv* env, jclass clazz, jint texture, jint target, jint samples, jint internalFormat, jint width, jint height, jboolean fixedSampleLocations) {


//@line:24445

		ext_glTextureImage2DMultisampleNV((GLuint)texture, (GLenum)target, (GLsizei)samples, (GLint)internalFormat, (GLsizei)width, (GLsizei)height, (GLboolean)fixedSampleLocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureImage3DMultisampleNV(JNIEnv* env, jclass clazz, jint texture, jint target, jint samples, jint internalFormat, jint width, jint height, jint depth, jboolean fixedSampleLocations) {


//@line:24449

		ext_glTextureImage3DMultisampleNV((GLuint)texture, (GLenum)target, (GLsizei)samples, (GLint)internalFormat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLboolean)fixedSampleLocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureImage2DMultisampleCoverageNV(JNIEnv* env, jclass clazz, jint texture, jint target, jint coverageSamples, jint colorSamples, jint internalFormat, jint width, jint height, jboolean fixedSampleLocations) {


//@line:24453

		ext_glTextureImage2DMultisampleCoverageNV((GLuint)texture, (GLenum)target, (GLsizei)coverageSamples, (GLsizei)colorSamples, (GLint)internalFormat, (GLsizei)width, (GLsizei)height, (GLboolean)fixedSampleLocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureImage3DMultisampleCoverageNV(JNIEnv* env, jclass clazz, jint texture, jint target, jint coverageSamples, jint colorSamples, jint internalFormat, jint width, jint height, jint depth, jboolean fixedSampleLocations) {


//@line:24457

		ext_glTextureImage3DMultisampleCoverageNV((GLuint)texture, (GLenum)target, (GLsizei)coverageSamples, (GLsizei)colorSamples, (GLint)internalFormat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLboolean)fixedSampleLocations);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSetMultisamplefvAMD__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pname, jint index, jobject obj_val, jint valByteOffset) {
	unsigned char* val = (unsigned char*)(obj_val?env->GetDirectBufferAddress(obj_val):0);


//@line:24461

		ext_glSetMultisamplefvAMD((GLenum)pname, (GLuint)index, (const GLfloat*)(val + valByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSetMultisamplefvAMD__IIJ(JNIEnv* env, jclass clazz, jint pname, jint index, jlong val) {


//@line:24465

		ext_glSetMultisamplefvAMD((GLenum)pname, (GLuint)index, (const GLfloat*)val);
	

}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glImportSyncEXT(JNIEnv* env, jclass clazz, jint external_sync_type, jlong external_sync, jint flags) {


//@line:24469

		return (jlong)ext_glImportSyncEXT((GLenum)external_sync_type, (GLintptr)external_sync, (GLbitfield)flags);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawArraysIndirectAMD__ILjava_nio_Buffer_2III(JNIEnv* env, jclass clazz, jint mode, jobject obj_indirect, jint indirectByteOffset, jint primcount, jint stride) {
	unsigned char* indirect = (unsigned char*)(obj_indirect?env->GetDirectBufferAddress(obj_indirect):0);


//@line:24473

		ext_glMultiDrawArraysIndirectAMD((GLenum)mode, (const GLvoid*)(indirect + indirectByteOffset), (GLsizei)primcount, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawArraysIndirectAMD__IJII(JNIEnv* env, jclass clazz, jint mode, jlong indirect, jint primcount, jint stride) {


//@line:24477

		ext_glMultiDrawArraysIndirectAMD((GLenum)mode, (const GLvoid*)indirect, (GLsizei)primcount, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElementsIndirectAMD__IILjava_nio_Buffer_2III(JNIEnv* env, jclass clazz, jint mode, jint type, jobject obj_indirect, jint indirectByteOffset, jint primcount, jint stride) {
	unsigned char* indirect = (unsigned char*)(obj_indirect?env->GetDirectBufferAddress(obj_indirect):0);


//@line:24481

		ext_glMultiDrawElementsIndirectAMD((GLenum)mode, (GLenum)type, (const GLvoid*)(indirect + indirectByteOffset), (GLsizei)primcount, (GLsizei)stride);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMultiDrawElementsIndirectAMD__IIJII(JNIEnv* env, jclass clazz, jint mode, jint type, jlong indirect, jint primcount, jint stride) {


//@line:24485

		ext_glMultiDrawElementsIndirectAMD((GLenum)mode, (GLenum)type, (const GLvoid*)indirect, (GLsizei)primcount, (GLsizei)stride);
	

}

JNIEXPORT jint JNICALL Java_com_badlogic_jglfw_gl_GL_glGenPathsNV(JNIEnv* env, jclass clazz, jint range) {


//@line:24489

		return (jint)ext_glGenPathsNV((GLsizei)range);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDeletePathsNV(JNIEnv* env, jclass clazz, jint path, jint range) {


//@line:24493

		ext_glDeletePathsNV((GLuint)path, (GLsizei)range);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsPathNV(JNIEnv* env, jclass clazz, jint path) {


//@line:24497

		return (jboolean)ext_glIsPathNV((GLuint)path);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathCommandsNV__IILjava_nio_Buffer_2IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint numCommands, jobject obj_commands, jint commandsByteOffset, jint numCoords, jint coordType, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* commands = (unsigned char*)(obj_commands?env->GetDirectBufferAddress(obj_commands):0);
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:24501

		ext_glPathCommandsNV((GLuint)path, (GLsizei)numCommands, (const GLubyte*)(commands + commandsByteOffset), (GLsizei)numCoords, (GLenum)coordType, (const GLvoid*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathCommandsNV__IIJIIJ(JNIEnv* env, jclass clazz, jint path, jint numCommands, jlong commands, jint numCoords, jint coordType, jlong coords) {


//@line:24505

		ext_glPathCommandsNV((GLuint)path, (GLsizei)numCommands, (const GLubyte*)commands, (GLsizei)numCoords, (GLenum)coordType, (const GLvoid*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathCoordsNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint numCoords, jint coordType, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:24509

		ext_glPathCoordsNV((GLuint)path, (GLsizei)numCoords, (GLenum)coordType, (const GLvoid*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathCoordsNV__IIIJ(JNIEnv* env, jclass clazz, jint path, jint numCoords, jint coordType, jlong coords) {


//@line:24513

		ext_glPathCoordsNV((GLuint)path, (GLsizei)numCoords, (GLenum)coordType, (const GLvoid*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathSubCommandsNV__IIIILjava_nio_Buffer_2IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint commandStart, jint commandsToDelete, jint numCommands, jobject obj_commands, jint commandsByteOffset, jint numCoords, jint coordType, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* commands = (unsigned char*)(obj_commands?env->GetDirectBufferAddress(obj_commands):0);
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:24517

		ext_glPathSubCommandsNV((GLuint)path, (GLsizei)commandStart, (GLsizei)commandsToDelete, (GLsizei)numCommands, (const GLubyte*)(commands + commandsByteOffset), (GLsizei)numCoords, (GLenum)coordType, (const GLvoid*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathSubCommandsNV__IIIIJIIJ(JNIEnv* env, jclass clazz, jint path, jint commandStart, jint commandsToDelete, jint numCommands, jlong commands, jint numCoords, jint coordType, jlong coords) {


//@line:24521

		ext_glPathSubCommandsNV((GLuint)path, (GLsizei)commandStart, (GLsizei)commandsToDelete, (GLsizei)numCommands, (const GLubyte*)commands, (GLsizei)numCoords, (GLenum)coordType, (const GLvoid*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathSubCoordsNV__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint coordStart, jint numCoords, jint coordType, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:24525

		ext_glPathSubCoordsNV((GLuint)path, (GLsizei)coordStart, (GLsizei)numCoords, (GLenum)coordType, (const GLvoid*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathSubCoordsNV__IIIIJ(JNIEnv* env, jclass clazz, jint path, jint coordStart, jint numCoords, jint coordType, jlong coords) {


//@line:24529

		ext_glPathSubCoordsNV((GLuint)path, (GLsizei)coordStart, (GLsizei)numCoords, (GLenum)coordType, (const GLvoid*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathStringNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint format, jint length, jobject obj_pathString, jint pathStringByteOffset) {
	unsigned char* pathString = (unsigned char*)(obj_pathString?env->GetDirectBufferAddress(obj_pathString):0);


//@line:24533

		ext_glPathStringNV((GLuint)path, (GLenum)format, (GLsizei)length, (const GLvoid*)(pathString + pathStringByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathStringNV__IIIJ(JNIEnv* env, jclass clazz, jint path, jint format, jint length, jlong pathString) {


//@line:24537

		ext_glPathStringNV((GLuint)path, (GLenum)format, (GLsizei)length, (const GLvoid*)pathString);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathGlyphsNV__IILjava_nio_Buffer_2IIIILjava_nio_Buffer_2IIIF(JNIEnv* env, jclass clazz, jint firstPathName, jint fontTarget, jobject obj_fontName, jint fontNameByteOffset, jint fontStyle, jint numGlyphs, jint type, jobject obj_charcodes, jint charcodesByteOffset, jint handleMissingGlyphs, jint pathParameterTemplate, jfloat emScale) {
	unsigned char* fontName = (unsigned char*)(obj_fontName?env->GetDirectBufferAddress(obj_fontName):0);
	unsigned char* charcodes = (unsigned char*)(obj_charcodes?env->GetDirectBufferAddress(obj_charcodes):0);


//@line:24541

		ext_glPathGlyphsNV((GLuint)firstPathName, (GLenum)fontTarget, (const GLvoid*)(fontName + fontNameByteOffset), (GLbitfield)fontStyle, (GLsizei)numGlyphs, (GLenum)type, (const GLvoid*)(charcodes + charcodesByteOffset), (GLenum)handleMissingGlyphs, (GLuint)pathParameterTemplate, (GLfloat)emScale);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathGlyphsNV__IIJIIIJIIF(JNIEnv* env, jclass clazz, jint firstPathName, jint fontTarget, jlong fontName, jint fontStyle, jint numGlyphs, jint type, jlong charcodes, jint handleMissingGlyphs, jint pathParameterTemplate, jfloat emScale) {


//@line:24545

		ext_glPathGlyphsNV((GLuint)firstPathName, (GLenum)fontTarget, (const GLvoid*)fontName, (GLbitfield)fontStyle, (GLsizei)numGlyphs, (GLenum)type, (const GLvoid*)charcodes, (GLenum)handleMissingGlyphs, (GLuint)pathParameterTemplate, (GLfloat)emScale);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathGlyphRangeNV__IILjava_nio_Buffer_2IIIIIIF(JNIEnv* env, jclass clazz, jint firstPathName, jint fontTarget, jobject obj_fontName, jint fontNameByteOffset, jint fontStyle, jint firstGlyph, jint numGlyphs, jint handleMissingGlyphs, jint pathParameterTemplate, jfloat emScale) {
	unsigned char* fontName = (unsigned char*)(obj_fontName?env->GetDirectBufferAddress(obj_fontName):0);


//@line:24549

		ext_glPathGlyphRangeNV((GLuint)firstPathName, (GLenum)fontTarget, (const GLvoid*)(fontName + fontNameByteOffset), (GLbitfield)fontStyle, (GLuint)firstGlyph, (GLsizei)numGlyphs, (GLenum)handleMissingGlyphs, (GLuint)pathParameterTemplate, (GLfloat)emScale);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathGlyphRangeNV__IIJIIIIIF(JNIEnv* env, jclass clazz, jint firstPathName, jint fontTarget, jlong fontName, jint fontStyle, jint firstGlyph, jint numGlyphs, jint handleMissingGlyphs, jint pathParameterTemplate, jfloat emScale) {


//@line:24553

		ext_glPathGlyphRangeNV((GLuint)firstPathName, (GLenum)fontTarget, (const GLvoid*)fontName, (GLbitfield)fontStyle, (GLuint)firstGlyph, (GLsizei)numGlyphs, (GLenum)handleMissingGlyphs, (GLuint)pathParameterTemplate, (GLfloat)emScale);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightPathsNV__IILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint resultPath, jint numPaths, jobject obj_paths, jint pathsByteOffset, jobject obj_weights, jint weightsByteOffset) {
	unsigned char* paths = (unsigned char*)(obj_paths?env->GetDirectBufferAddress(obj_paths):0);
	unsigned char* weights = (unsigned char*)(obj_weights?env->GetDirectBufferAddress(obj_weights):0);


//@line:24557

		ext_glWeightPathsNV((GLuint)resultPath, (GLsizei)numPaths, (const GLuint*)(paths + pathsByteOffset), (const GLfloat*)(weights + weightsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glWeightPathsNV__IIJJ(JNIEnv* env, jclass clazz, jint resultPath, jint numPaths, jlong paths, jlong weights) {


//@line:24561

		ext_glWeightPathsNV((GLuint)resultPath, (GLsizei)numPaths, (const GLuint*)paths, (const GLfloat*)weights);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCopyPathNV(JNIEnv* env, jclass clazz, jint resultPath, jint srcPath) {


//@line:24565

		ext_glCopyPathNV((GLuint)resultPath, (GLuint)srcPath);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glInterpolatePathsNV(JNIEnv* env, jclass clazz, jint resultPath, jint pathA, jint pathB, jfloat weight) {


//@line:24569

		ext_glInterpolatePathsNV((GLuint)resultPath, (GLuint)pathA, (GLuint)pathB, (GLfloat)weight);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformPathNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint resultPath, jint srcPath, jint transformType, jobject obj_transformValues, jint transformValuesByteOffset) {
	unsigned char* transformValues = (unsigned char*)(obj_transformValues?env->GetDirectBufferAddress(obj_transformValues):0);


//@line:24573

		ext_glTransformPathNV((GLuint)resultPath, (GLuint)srcPath, (GLenum)transformType, (const GLfloat*)(transformValues + transformValuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTransformPathNV__IIIJ(JNIEnv* env, jclass clazz, jint resultPath, jint srcPath, jint transformType, jlong transformValues) {


//@line:24577

		ext_glTransformPathNV((GLuint)resultPath, (GLuint)srcPath, (GLenum)transformType, (const GLfloat*)transformValues);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathParameterivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint pname, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24581

		ext_glPathParameterivNV((GLuint)path, (GLenum)pname, (const GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathParameterivNV__IIJ(JNIEnv* env, jclass clazz, jint path, jint pname, jlong value) {


//@line:24585

		ext_glPathParameterivNV((GLuint)path, (GLenum)pname, (const GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathParameteriNV(JNIEnv* env, jclass clazz, jint path, jint pname, jint value) {


//@line:24589

		ext_glPathParameteriNV((GLuint)path, (GLenum)pname, (GLint)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathParameterfvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint pname, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24593

		ext_glPathParameterfvNV((GLuint)path, (GLenum)pname, (const GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathParameterfvNV__IIJ(JNIEnv* env, jclass clazz, jint path, jint pname, jlong value) {


//@line:24597

		ext_glPathParameterfvNV((GLuint)path, (GLenum)pname, (const GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathParameterfNV(JNIEnv* env, jclass clazz, jint path, jint pname, jfloat value) {


//@line:24601

		ext_glPathParameterfNV((GLuint)path, (GLenum)pname, (GLfloat)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathDashArrayNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint dashCount, jobject obj_dashArray, jint dashArrayByteOffset) {
	unsigned char* dashArray = (unsigned char*)(obj_dashArray?env->GetDirectBufferAddress(obj_dashArray):0);


//@line:24605

		ext_glPathDashArrayNV((GLuint)path, (GLsizei)dashCount, (const GLfloat*)(dashArray + dashArrayByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathDashArrayNV__IIJ(JNIEnv* env, jclass clazz, jint path, jint dashCount, jlong dashArray) {


//@line:24609

		ext_glPathDashArrayNV((GLuint)path, (GLsizei)dashCount, (const GLfloat*)dashArray);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathStencilFuncNV(JNIEnv* env, jclass clazz, jint func, jint ref, jint mask) {


//@line:24613

		ext_glPathStencilFuncNV((GLenum)func, (GLint)ref, (GLuint)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathStencilDepthOffsetNV(JNIEnv* env, jclass clazz, jfloat factor, jfloat units) {


//@line:24617

		ext_glPathStencilDepthOffsetNV((GLfloat)factor, (GLfloat)units);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilFillPathNV(JNIEnv* env, jclass clazz, jint path, jint fillMode, jint mask) {


//@line:24621

		ext_glStencilFillPathNV((GLuint)path, (GLenum)fillMode, (GLuint)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilStrokePathNV(JNIEnv* env, jclass clazz, jint path, jint reference, jint mask) {


//@line:24625

		ext_glStencilStrokePathNV((GLuint)path, (GLint)reference, (GLuint)mask);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilFillPathInstancedNV__IILjava_nio_Buffer_2IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint numPaths, jint pathNameType, jobject obj_paths, jint pathsByteOffset, jint pathBase, jint fillMode, jint mask, jint transformType, jobject obj_transformValues, jint transformValuesByteOffset) {
	unsigned char* paths = (unsigned char*)(obj_paths?env->GetDirectBufferAddress(obj_paths):0);
	unsigned char* transformValues = (unsigned char*)(obj_transformValues?env->GetDirectBufferAddress(obj_transformValues):0);


//@line:24629

		ext_glStencilFillPathInstancedNV((GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)(paths + pathsByteOffset), (GLuint)pathBase, (GLenum)fillMode, (GLuint)mask, (GLenum)transformType, (const GLfloat*)(transformValues + transformValuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilFillPathInstancedNV__IIJIIIIJ(JNIEnv* env, jclass clazz, jint numPaths, jint pathNameType, jlong paths, jint pathBase, jint fillMode, jint mask, jint transformType, jlong transformValues) {


//@line:24633

		ext_glStencilFillPathInstancedNV((GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)paths, (GLuint)pathBase, (GLenum)fillMode, (GLuint)mask, (GLenum)transformType, (const GLfloat*)transformValues);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilStrokePathInstancedNV__IILjava_nio_Buffer_2IIIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint numPaths, jint pathNameType, jobject obj_paths, jint pathsByteOffset, jint pathBase, jint reference, jint mask, jint transformType, jobject obj_transformValues, jint transformValuesByteOffset) {
	unsigned char* paths = (unsigned char*)(obj_paths?env->GetDirectBufferAddress(obj_paths):0);
	unsigned char* transformValues = (unsigned char*)(obj_transformValues?env->GetDirectBufferAddress(obj_transformValues):0);


//@line:24637

		ext_glStencilStrokePathInstancedNV((GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)(paths + pathsByteOffset), (GLuint)pathBase, (GLint)reference, (GLuint)mask, (GLenum)transformType, (const GLfloat*)(transformValues + transformValuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilStrokePathInstancedNV__IIJIIIIJ(JNIEnv* env, jclass clazz, jint numPaths, jint pathNameType, jlong paths, jint pathBase, jint reference, jint mask, jint transformType, jlong transformValues) {


//@line:24641

		ext_glStencilStrokePathInstancedNV((GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)paths, (GLuint)pathBase, (GLint)reference, (GLuint)mask, (GLenum)transformType, (const GLfloat*)transformValues);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathCoverDepthFuncNV(JNIEnv* env, jclass clazz, jint func) {


//@line:24645

		ext_glPathCoverDepthFuncNV((GLenum)func);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathColorGenNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint color, jint genMode, jint colorFormat, jobject obj_coeffs, jint coeffsByteOffset) {
	unsigned char* coeffs = (unsigned char*)(obj_coeffs?env->GetDirectBufferAddress(obj_coeffs):0);


//@line:24649

		ext_glPathColorGenNV((GLenum)color, (GLenum)genMode, (GLenum)colorFormat, (const GLfloat*)(coeffs + coeffsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathColorGenNV__IIIJ(JNIEnv* env, jclass clazz, jint color, jint genMode, jint colorFormat, jlong coeffs) {


//@line:24653

		ext_glPathColorGenNV((GLenum)color, (GLenum)genMode, (GLenum)colorFormat, (const GLfloat*)coeffs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathTexGenNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texCoordSet, jint genMode, jint components, jobject obj_coeffs, jint coeffsByteOffset) {
	unsigned char* coeffs = (unsigned char*)(obj_coeffs?env->GetDirectBufferAddress(obj_coeffs):0);


//@line:24657

		ext_glPathTexGenNV((GLenum)texCoordSet, (GLenum)genMode, (GLint)components, (const GLfloat*)(coeffs + coeffsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathTexGenNV__IIIJ(JNIEnv* env, jclass clazz, jint texCoordSet, jint genMode, jint components, jlong coeffs) {


//@line:24661

		ext_glPathTexGenNV((GLenum)texCoordSet, (GLenum)genMode, (GLint)components, (const GLfloat*)coeffs);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glPathFogGenNV(JNIEnv* env, jclass clazz, jint genMode) {


//@line:24665

		ext_glPathFogGenNV((GLenum)genMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCoverFillPathNV(JNIEnv* env, jclass clazz, jint path, jint coverMode) {


//@line:24669

		ext_glCoverFillPathNV((GLuint)path, (GLenum)coverMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCoverStrokePathNV(JNIEnv* env, jclass clazz, jint path, jint coverMode) {


//@line:24673

		ext_glCoverStrokePathNV((GLuint)path, (GLenum)coverMode);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCoverFillPathInstancedNV__IILjava_nio_Buffer_2IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint numPaths, jint pathNameType, jobject obj_paths, jint pathsByteOffset, jint pathBase, jint coverMode, jint transformType, jobject obj_transformValues, jint transformValuesByteOffset) {
	unsigned char* paths = (unsigned char*)(obj_paths?env->GetDirectBufferAddress(obj_paths):0);
	unsigned char* transformValues = (unsigned char*)(obj_transformValues?env->GetDirectBufferAddress(obj_transformValues):0);


//@line:24677

		ext_glCoverFillPathInstancedNV((GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)(paths + pathsByteOffset), (GLuint)pathBase, (GLenum)coverMode, (GLenum)transformType, (const GLfloat*)(transformValues + transformValuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCoverFillPathInstancedNV__IIJIIIJ(JNIEnv* env, jclass clazz, jint numPaths, jint pathNameType, jlong paths, jint pathBase, jint coverMode, jint transformType, jlong transformValues) {


//@line:24681

		ext_glCoverFillPathInstancedNV((GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)paths, (GLuint)pathBase, (GLenum)coverMode, (GLenum)transformType, (const GLfloat*)transformValues);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCoverStrokePathInstancedNV__IILjava_nio_Buffer_2IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint numPaths, jint pathNameType, jobject obj_paths, jint pathsByteOffset, jint pathBase, jint coverMode, jint transformType, jobject obj_transformValues, jint transformValuesByteOffset) {
	unsigned char* paths = (unsigned char*)(obj_paths?env->GetDirectBufferAddress(obj_paths):0);
	unsigned char* transformValues = (unsigned char*)(obj_transformValues?env->GetDirectBufferAddress(obj_transformValues):0);


//@line:24685

		ext_glCoverStrokePathInstancedNV((GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)(paths + pathsByteOffset), (GLuint)pathBase, (GLenum)coverMode, (GLenum)transformType, (const GLfloat*)(transformValues + transformValuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glCoverStrokePathInstancedNV__IIJIIIJ(JNIEnv* env, jclass clazz, jint numPaths, jint pathNameType, jlong paths, jint pathBase, jint coverMode, jint transformType, jlong transformValues) {


//@line:24689

		ext_glCoverStrokePathInstancedNV((GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)paths, (GLuint)pathBase, (GLenum)coverMode, (GLenum)transformType, (const GLfloat*)transformValues);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathParameterivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint pname, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24693

		ext_glGetPathParameterivNV((GLuint)path, (GLenum)pname, (GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathParameterivNV__IIJ(JNIEnv* env, jclass clazz, jint path, jint pname, jlong value) {


//@line:24697

		ext_glGetPathParameterivNV((GLuint)path, (GLenum)pname, (GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathParameterfvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint pname, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24701

		ext_glGetPathParameterfvNV((GLuint)path, (GLenum)pname, (GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathParameterfvNV__IIJ(JNIEnv* env, jclass clazz, jint path, jint pname, jlong value) {


//@line:24705

		ext_glGetPathParameterfvNV((GLuint)path, (GLenum)pname, (GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathCommandsNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jobject obj_commands, jint commandsByteOffset) {
	unsigned char* commands = (unsigned char*)(obj_commands?env->GetDirectBufferAddress(obj_commands):0);


//@line:24709

		ext_glGetPathCommandsNV((GLuint)path, (GLubyte*)(commands + commandsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathCommandsNV__IJ(JNIEnv* env, jclass clazz, jint path, jlong commands) {


//@line:24713

		ext_glGetPathCommandsNV((GLuint)path, (GLubyte*)commands);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathCoordsNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jobject obj_coords, jint coordsByteOffset) {
	unsigned char* coords = (unsigned char*)(obj_coords?env->GetDirectBufferAddress(obj_coords):0);


//@line:24717

		ext_glGetPathCoordsNV((GLuint)path, (GLfloat*)(coords + coordsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathCoordsNV__IJ(JNIEnv* env, jclass clazz, jint path, jlong coords) {


//@line:24721

		ext_glGetPathCoordsNV((GLuint)path, (GLfloat*)coords);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathDashArrayNV__ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jobject obj_dashArray, jint dashArrayByteOffset) {
	unsigned char* dashArray = (unsigned char*)(obj_dashArray?env->GetDirectBufferAddress(obj_dashArray):0);


//@line:24725

		ext_glGetPathDashArrayNV((GLuint)path, (GLfloat*)(dashArray + dashArrayByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathDashArrayNV__IJ(JNIEnv* env, jclass clazz, jint path, jlong dashArray) {


//@line:24729

		ext_glGetPathDashArrayNV((GLuint)path, (GLfloat*)dashArray);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathMetricsNV__IIILjava_nio_Buffer_2IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint metricQueryMask, jint numPaths, jint pathNameType, jobject obj_paths, jint pathsByteOffset, jint pathBase, jint stride, jobject obj_metrics, jint metricsByteOffset) {
	unsigned char* paths = (unsigned char*)(obj_paths?env->GetDirectBufferAddress(obj_paths):0);
	unsigned char* metrics = (unsigned char*)(obj_metrics?env->GetDirectBufferAddress(obj_metrics):0);


//@line:24733

		ext_glGetPathMetricsNV((GLbitfield)metricQueryMask, (GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)(paths + pathsByteOffset), (GLuint)pathBase, (GLsizei)stride, (GLfloat*)(metrics + metricsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathMetricsNV__IIIJIIJ(JNIEnv* env, jclass clazz, jint metricQueryMask, jint numPaths, jint pathNameType, jlong paths, jint pathBase, jint stride, jlong metrics) {


//@line:24737

		ext_glGetPathMetricsNV((GLbitfield)metricQueryMask, (GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)paths, (GLuint)pathBase, (GLsizei)stride, (GLfloat*)metrics);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathMetricRangeNV__IIIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint metricQueryMask, jint firstPathName, jint numPaths, jint stride, jobject obj_metrics, jint metricsByteOffset) {
	unsigned char* metrics = (unsigned char*)(obj_metrics?env->GetDirectBufferAddress(obj_metrics):0);


//@line:24741

		ext_glGetPathMetricRangeNV((GLbitfield)metricQueryMask, (GLuint)firstPathName, (GLsizei)numPaths, (GLsizei)stride, (GLfloat*)(metrics + metricsByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathMetricRangeNV__IIIIJ(JNIEnv* env, jclass clazz, jint metricQueryMask, jint firstPathName, jint numPaths, jint stride, jlong metrics) {


//@line:24745

		ext_glGetPathMetricRangeNV((GLbitfield)metricQueryMask, (GLuint)firstPathName, (GLsizei)numPaths, (GLsizei)stride, (GLfloat*)metrics);
	

}

static inline void wrapped_Java_com_badlogic_jglfw_gl_GL_glGetPathSpacingNV__IIILjava_nio_Buffer_2IIFFILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint pathListMode, jint numPaths, jint pathNameType, jobject obj_paths, jint pathsByteOffset, jint pathBase, jfloat advanceScale, jfloat kerningScale, jint transformType, jobject obj_returnedSpacing, jint returnedSpacingByteOffset, unsigned char* paths, unsigned char* returnedSpacing) {

//@line:24749

		ext_glGetPathSpacingNV((GLenum)pathListMode, (GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)(paths + pathsByteOffset), (GLuint)pathBase, (GLfloat)advanceScale, (GLfloat)kerningScale, (GLenum)transformType, (GLfloat*)(returnedSpacing + returnedSpacingByteOffset));
	
}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathSpacingNV__IIILjava_nio_Buffer_2IIFFILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint pathListMode, jint numPaths, jint pathNameType, jobject obj_paths, jint pathsByteOffset, jint pathBase, jfloat advanceScale, jfloat kerningScale, jint transformType, jobject obj_returnedSpacing, jint returnedSpacingByteOffset) {
	unsigned char* paths = (unsigned char*)(obj_paths?env->GetDirectBufferAddress(obj_paths):0);
	unsigned char* returnedSpacing = (unsigned char*)(obj_returnedSpacing?env->GetDirectBufferAddress(obj_returnedSpacing):0);

	wrapped_Java_com_badlogic_jglfw_gl_GL_glGetPathSpacingNV__IIILjava_nio_Buffer_2IIFFILjava_nio_Buffer_2I(env, clazz, pathListMode, numPaths, pathNameType, obj_paths, pathsByteOffset, pathBase, advanceScale, kerningScale, transformType, obj_returnedSpacing, returnedSpacingByteOffset, paths, returnedSpacing);


	return;
}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathSpacingNV__IIIJIFFIJ(JNIEnv* env, jclass clazz, jint pathListMode, jint numPaths, jint pathNameType, jlong paths, jint pathBase, jfloat advanceScale, jfloat kerningScale, jint transformType, jlong returnedSpacing) {


//@line:24753

		ext_glGetPathSpacingNV((GLenum)pathListMode, (GLsizei)numPaths, (GLenum)pathNameType, (const GLvoid*)paths, (GLuint)pathBase, (GLfloat)advanceScale, (GLfloat)kerningScale, (GLenum)transformType, (GLfloat*)returnedSpacing);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathColorGenivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint color, jint pname, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24757

		ext_glGetPathColorGenivNV((GLenum)color, (GLenum)pname, (GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathColorGenivNV__IIJ(JNIEnv* env, jclass clazz, jint color, jint pname, jlong value) {


//@line:24761

		ext_glGetPathColorGenivNV((GLenum)color, (GLenum)pname, (GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathColorGenfvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint color, jint pname, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24765

		ext_glGetPathColorGenfvNV((GLenum)color, (GLenum)pname, (GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathColorGenfvNV__IIJ(JNIEnv* env, jclass clazz, jint color, jint pname, jlong value) {


//@line:24769

		ext_glGetPathColorGenfvNV((GLenum)color, (GLenum)pname, (GLfloat*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathTexGenivNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texCoordSet, jint pname, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24773

		ext_glGetPathTexGenivNV((GLenum)texCoordSet, (GLenum)pname, (GLint*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathTexGenivNV__IIJ(JNIEnv* env, jclass clazz, jint texCoordSet, jint pname, jlong value) {


//@line:24777

		ext_glGetPathTexGenivNV((GLenum)texCoordSet, (GLenum)pname, (GLint*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathTexGenfvNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint texCoordSet, jint pname, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24781

		ext_glGetPathTexGenfvNV((GLenum)texCoordSet, (GLenum)pname, (GLfloat*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathTexGenfvNV__IIJ(JNIEnv* env, jclass clazz, jint texCoordSet, jint pname, jlong value) {


//@line:24785

		ext_glGetPathTexGenfvNV((GLenum)texCoordSet, (GLenum)pname, (GLfloat*)value);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsPointInFillPathNV(JNIEnv* env, jclass clazz, jint path, jint mask, jfloat x, jfloat y) {


//@line:24789

		return (jboolean)ext_glIsPointInFillPathNV((GLuint)path, (GLuint)mask, (GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsPointInStrokePathNV(JNIEnv* env, jclass clazz, jint path, jfloat x, jfloat y) {


//@line:24793

		return (jboolean)ext_glIsPointInStrokePathNV((GLuint)path, (GLfloat)x, (GLfloat)y);
	

}

JNIEXPORT jfloat JNICALL Java_com_badlogic_jglfw_gl_GL_glGetPathLengthNV(JNIEnv* env, jclass clazz, jint path, jint startSegment, jint numSegments) {


//@line:24797

		return (jfloat)ext_glGetPathLengthNV((GLuint)path, (GLsizei)startSegment, (GLsizei)numSegments);
	

}

static inline jboolean wrapped_Java_com_badlogic_jglfw_gl_GL_glPointAlongPathNV__IIIFLjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I
(JNIEnv* env, jclass clazz, jint path, jint startSegment, jint numSegments, jfloat distance, jobject obj_x, jint xByteOffset, jobject obj_y, jint yByteOffset, jobject obj_tangentX, jint tangentXByteOffset, jobject obj_tangentY, jint tangentYByteOffset, unsigned char* x, unsigned char* y, unsigned char* tangentX, unsigned char* tangentY) {

//@line:24801

		return (jboolean)ext_glPointAlongPathNV((GLuint)path, (GLsizei)startSegment, (GLsizei)numSegments, (GLfloat)distance, (GLfloat*)(x + xByteOffset), (GLfloat*)(y + yByteOffset), (GLfloat*)(tangentX + tangentXByteOffset), (GLfloat*)(tangentY + tangentYByteOffset));
	
}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glPointAlongPathNV__IIIFLjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint path, jint startSegment, jint numSegments, jfloat distance, jobject obj_x, jint xByteOffset, jobject obj_y, jint yByteOffset, jobject obj_tangentX, jint tangentXByteOffset, jobject obj_tangentY, jint tangentYByteOffset) {
	unsigned char* x = (unsigned char*)(obj_x?env->GetDirectBufferAddress(obj_x):0);
	unsigned char* y = (unsigned char*)(obj_y?env->GetDirectBufferAddress(obj_y):0);
	unsigned char* tangentX = (unsigned char*)(obj_tangentX?env->GetDirectBufferAddress(obj_tangentX):0);
	unsigned char* tangentY = (unsigned char*)(obj_tangentY?env->GetDirectBufferAddress(obj_tangentY):0);

	jboolean JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glPointAlongPathNV__IIIFLjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2ILjava_nio_Buffer_2I(env, clazz, path, startSegment, numSegments, distance, obj_x, xByteOffset, obj_y, yByteOffset, obj_tangentX, tangentXByteOffset, obj_tangentY, tangentYByteOffset, x, y, tangentX, tangentY);


	return JNI_returnValue;
}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glPointAlongPathNV__IIIFJJJJ(JNIEnv* env, jclass clazz, jint path, jint startSegment, jint numSegments, jfloat distance, jlong x, jlong y, jlong tangentX, jlong tangentY) {


//@line:24805

		return (jboolean)ext_glPointAlongPathNV((GLuint)path, (GLsizei)startSegment, (GLsizei)numSegments, (GLfloat)distance, (GLfloat*)x, (GLfloat*)y, (GLfloat*)tangentX, (GLfloat*)tangentY);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glStencilOpValueAMD(JNIEnv* env, jclass clazz, jint face, jint value) {


//@line:24809

		ext_glStencilOpValueAMD((GLenum)face, (GLuint)value);
	

}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureHandleNV(JNIEnv* env, jclass clazz, jint texture) {


//@line:24813

		return (jlong)ext_glGetTextureHandleNV((GLuint)texture);
	

}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glGetTextureSamplerHandleNV(JNIEnv* env, jclass clazz, jint texture, jint sampler) {


//@line:24817

		return (jlong)ext_glGetTextureSamplerHandleNV((GLuint)texture, (GLuint)sampler);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMakeTextureHandleResidentNV(JNIEnv* env, jclass clazz, jlong handle) {


//@line:24821

		ext_glMakeTextureHandleResidentNV((GLuint64)handle);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMakeTextureHandleNonResidentNV(JNIEnv* env, jclass clazz, jlong handle) {


//@line:24825

		ext_glMakeTextureHandleNonResidentNV((GLuint64)handle);
	

}

JNIEXPORT jlong JNICALL Java_com_badlogic_jglfw_gl_GL_glGetImageHandleNV(JNIEnv* env, jclass clazz, jint texture, jint level, jboolean layered, jint layer, jint format) {


//@line:24829

		return (jlong)ext_glGetImageHandleNV((GLuint)texture, (GLint)level, (GLboolean)layered, (GLint)layer, (GLenum)format);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMakeImageHandleResidentNV(JNIEnv* env, jclass clazz, jlong handle, jint access) {


//@line:24833

		ext_glMakeImageHandleResidentNV((GLuint64)handle, (GLenum)access);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glMakeImageHandleNonResidentNV(JNIEnv* env, jclass clazz, jlong handle) {


//@line:24837

		ext_glMakeImageHandleNonResidentNV((GLuint64)handle);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformHandleui64NV(JNIEnv* env, jclass clazz, jint location, jlong value) {


//@line:24841

		ext_glUniformHandleui64NV((GLint)location, (GLuint64)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformHandleui64vNV__IILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint location, jint count, jobject obj_value, jint valueByteOffset) {
	unsigned char* value = (unsigned char*)(obj_value?env->GetDirectBufferAddress(obj_value):0);


//@line:24845

		ext_glUniformHandleui64vNV((GLint)location, (GLsizei)count, (const GLuint64*)(value + valueByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUniformHandleui64vNV__IIJ(JNIEnv* env, jclass clazz, jint location, jint count, jlong value) {


//@line:24849

		ext_glUniformHandleui64vNV((GLint)location, (GLsizei)count, (const GLuint64*)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformHandleui64NV(JNIEnv* env, jclass clazz, jint program, jint location, jlong value) {


//@line:24853

		ext_glProgramUniformHandleui64NV((GLuint)program, (GLint)location, (GLuint64)value);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformHandleui64vNV__IIILjava_nio_Buffer_2I(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jobject obj_values, jint valuesByteOffset) {
	unsigned char* values = (unsigned char*)(obj_values?env->GetDirectBufferAddress(obj_values):0);


//@line:24857

		ext_glProgramUniformHandleui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64*)(values + valuesByteOffset));
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glProgramUniformHandleui64vNV__IIIJ(JNIEnv* env, jclass clazz, jint program, jint location, jint count, jlong values) {


//@line:24861

		ext_glProgramUniformHandleui64vNV((GLuint)program, (GLint)location, (GLsizei)count, (const GLuint64*)values);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsTextureHandleResidentNV(JNIEnv* env, jclass clazz, jlong handle) {


//@line:24865

		return (jboolean)ext_glIsTextureHandleResidentNV((GLuint64)handle);
	

}

JNIEXPORT jboolean JNICALL Java_com_badlogic_jglfw_gl_GL_glIsImageHandleResidentNV(JNIEnv* env, jclass clazz, jlong handle) {


//@line:24869

		return (jboolean)ext_glIsImageHandleResidentNV((GLuint64)handle);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glBeginConditionalRenderNVX(JNIEnv* env, jclass clazz, jint id) {


//@line:24873

		ext_glBeginConditionalRenderNVX((GLuint)id);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glEndConditionalRenderNVX(JNIEnv* env, jclass clazz) {


//@line:24877

		ext_glEndConditionalRenderNVX();
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTexStorageSparseAMD(JNIEnv* env, jclass clazz, jint target, jint internalFormat, jint width, jint height, jint depth, jint layers, jint flags) {


//@line:24881

		ext_glTexStorageSparseAMD((GLenum)target, (GLenum)internalFormat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLsizei)layers, (GLbitfield)flags);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glTextureStorageSparseAMD(JNIEnv* env, jclass clazz, jint texture, jint target, jint internalFormat, jint width, jint height, jint depth, jint layers, jint flags) {


//@line:24885

		ext_glTextureStorageSparseAMD((GLuint)texture, (GLenum)target, (GLenum)internalFormat, (GLsizei)width, (GLsizei)height, (GLsizei)depth, (GLsizei)layers, (GLbitfield)flags);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glSyncTextureINTEL(JNIEnv* env, jclass clazz, jint texture) {


//@line:24889

		ext_glSyncTextureINTEL((GLuint)texture);
	

}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glUnmapTexture2DINTEL(JNIEnv* env, jclass clazz, jint texture, jint level) {


//@line:24893

		ext_glUnmapTexture2DINTEL((GLuint)texture, (GLint)level);
	

}

static inline jobject wrapped_Java_com_badlogic_jglfw_gl_GL_glMapTexture2DINTEL
(JNIEnv* env, jclass clazz, jint texture, jint level, jint access, jobject obj_stride, jint strideByteOffset, jobject obj_layout, jint layoutByteOffset, jlong bufferSize, unsigned char* stride, unsigned char* layout) {

//@line:24897

		GLvoid* bufferPtr = (GLvoid*)ext_glMapTexture2DINTEL((GLuint)texture, (GLint)level, (GLbitfield)access, (const GLint*)(stride + strideByteOffset), (const GLenum*)(layout + layoutByteOffset));
		if(!bufferPtr) return 0;
		return env->NewDirectByteBuffer(bufferPtr, bufferSize);
	
}

JNIEXPORT jobject JNICALL Java_com_badlogic_jglfw_gl_GL_glMapTexture2DINTEL(JNIEnv* env, jclass clazz, jint texture, jint level, jint access, jobject obj_stride, jint strideByteOffset, jobject obj_layout, jint layoutByteOffset, jlong bufferSize) {
	unsigned char* stride = (unsigned char*)(obj_stride?env->GetDirectBufferAddress(obj_stride):0);
	unsigned char* layout = (unsigned char*)(obj_layout?env->GetDirectBufferAddress(obj_layout):0);

	jobject JNI_returnValue = wrapped_Java_com_badlogic_jglfw_gl_GL_glMapTexture2DINTEL(env, clazz, texture, level, access, obj_stride, strideByteOffset, obj_layout, layoutByteOffset, bufferSize, stride, layout);


	return JNI_returnValue;
}

JNIEXPORT void JNICALL Java_com_badlogic_jglfw_gl_GL_glDrawTextureNV(JNIEnv* env, jclass clazz, jint texture, jint sampler, jfloat x0, jfloat y0, jfloat x1, jfloat y1, jfloat z, jfloat s0, jfloat t0, jfloat s1, jfloat t1) {


//@line:24903

		ext_glDrawTextureNV((GLuint)texture, (GLuint)sampler, (GLfloat)x0, (GLfloat)y0, (GLfloat)x1, (GLfloat)y1, (GLfloat)z, (GLfloat)s0, (GLfloat)t0, (GLfloat)s1, (GLfloat)t1);
	

}

